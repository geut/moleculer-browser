{"version":3,"file":"moleculer.js","sources":["../../src/moleculer/src/constants.js","../../src/global.js","../../src/process.js","../../src/moleculer/src/packets.js","../../src/moleculer/src/errors.js","../../src/moleculer/src/metrics/constants.js","../../src/events.js","../../src/cpu-usage.js","../../src/os.js","../../src/moleculer/src/utils.js","../../src/moleculer/src/metrics/types/base.js","../../src/moleculer/src/metrics/rates.js","../../src/moleculer/src/metrics/types/gauge.js","../../src/moleculer/src/metrics/types/counter.js","../../src/moleculer/src/metrics/types/histogram.js","../../src/moleculer/src/metrics/types/info.js","../../src/moleculer/src/metrics/types/index.js","../../src/moleculer/src/metrics/reporters/base.js","../../src/moleculer/src/metrics/reporters/console.js","../../src/no-impl.js","../../src/moleculer/src/metrics/reporters/event.js","../../src/moleculer/src/metrics/reporters/index.js","../../src/moleculer/src/metrics/commons.js","../../src/moleculer/src/cpu-usage.js","../../src/moleculer/src/metrics/registry.js","../../src/moleculer/src/metrics/index.js","../../src/moleculer/src/transit.js","../../src/moleculer/src/strategies/base.js","../../src/moleculer/src/strategies/round-robin.js","../../src/moleculer/src/strategies/random.js","../../src/moleculer/src/strategies/latency.js","../../src/moleculer/src/strategies/shard.js","../../src/moleculer/src/strategies/index.js","../../src/moleculer/src/registry/discoverers/base.js","../../src/moleculer/src/registry/discoverers/local.js","../../src/moleculer/src/registry/discoverers/index.js","../../src/moleculer/src/registry/node.js","../../src/moleculer/src/registry/node-catalog.js","../../src/moleculer/src/registry/service-item.js","../../src/moleculer/src/registry/service-catalog.js","../../src/moleculer/src/registry/endpoint-list.js","../../src/moleculer/src/registry/endpoint.js","../../src/moleculer/src/registry/endpoint-event.js","../../src/moleculer/src/registry/event-catalog.js","../../src/moleculer/src/registry/endpoint-action.js","../../src/moleculer/src/registry/action-catalog.js","../../src/moleculer/src/registry/registry.js","../../src/moleculer/src/registry/index.js","../../src/moleculer/src/loggers/base.js","../../src/moleculer/src/loggers/formatted.js","../../src/moleculer/src/loggers/console.js","../../src/moleculer/src/loggers/index.js","../../src/moleculer/src/logger-factory.js","../../src/moleculer/src/validators/base.js","../../src/moleculer/src/validators/fastest.js","../../src/moleculer/src/validators/index.js","../../src/moleculer/src/cachers/base.js","../../src/moleculer/src/lock.js","../../src/moleculer/src/cachers/memory.js","../../src/moleculer/src/cachers/memory-lru.js","../../src/moleculer/src/cachers/index.js","../../src/moleculer/src/transporters/base.js","../../src/moleculer/src/transporters/fake.js","../../src/moleculer/src/transporters/index.js","../../src/moleculer/src/serializers/base.js","../../src/moleculer/src/serializers/json.js","../../src/moleculer/src/serializers/index.js","../../src/moleculer/src/health.js","../../src/moleculer/src/middlewares/action-hook.js","../../src/moleculer/src/middlewares/bulkhead.js","../../src/moleculer/src/middlewares/context-tracker.js","../../src/moleculer/src/middlewares/circuit-breaker.js","../../src/moleculer/src/middlewares/timeout.js","../../src/moleculer/src/middlewares/retry.js","../../src/moleculer/src/middlewares/fallback.js","../../src/moleculer/src/middlewares/error-handler.js","../../src/moleculer/src/middlewares/metrics.js","../../src/moleculer/src/middlewares/tracing.js","../../src/zlib.js","../../src/moleculer/src/middlewares/transmit/compression.js","../../src/moleculer/src/middlewares/debugging/transit-logger.js","../../src/moleculer/src/middlewares/debugging/action-logger.js","../../src/moleculer/src/middlewares/index.js","../../src/moleculer/src/middlewares/debounce.js","../../src/moleculer/src/middlewares/throttle.js","../../src/moleculer/src/middlewares/transmit/encryption.js","../../src/moleculer/src/middleware.js","../../src/moleculer/src/tracing/exporters/base.js","../../src/moleculer/src/tracing/exporters/console.js","../../src/moleculer/src/tracing/exporters/event.js","../../src/moleculer/src/tracing/exporters/event-legacy.js","../../src/fetch.js","../../src/moleculer/src/tracing/exporters/zipkin.js","../../src/moleculer/src/tracing/exporters/newrelic.js","../../src/moleculer/src/tracing/exporters/index.js","../../src/moleculer/src/tracing/rate-limiter.js","../../src/moleculer/src/tracing/now.js","../../src/moleculer/src/tracing/span.js","../../src/moleculer/src/tracing/tracer.js","../../src/moleculer/src/tracing/index.js","../../src/moleculer/src/service.js","../../src/moleculer/src/context.js","../../src/moleculer/src/internals.js","../../src/moleculer/src/service-broker.js","../../src/moleculer/index.js","../../src/index.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = {\n\n\t// Circuit-breaker states\n\tCIRCUIT_CLOSE: \t\t\t\t\"close\",\n\tCIRCUIT_HALF_OPEN: \t\t\t\"half_open\",\n\tCIRCUIT_HALF_OPEN_WAIT: \t\"half_open_wait\",\n\tCIRCUIT_OPEN: \t\t\t\t\"open\"\n\n};\n","export default (typeof global !== 'undefined'\n  ? global : typeof self !== 'undefined'\n    ? self : typeof window !== 'undefined'\n      ? window : {})\n","import EventEmitter from 'eventemitter2'\nimport hrtime from 'browser-process-hrtime'\nimport global from './global'\n\nclass Process extends EventEmitter {\n  constructor () {\n    super()\n\n    this.title = 'browser'\n    this.browser = true\n    this.env = {}\n    this.argv = []\n    this.version = ''\n    this.versions = {\n      http_parser: '0.0',\n      node: '12.18.4',\n      v8: '0.0',\n      uv: '0.0',\n      zlib: '0.0',\n      ares: '0.0',\n      icu: '0.0',\n      modules: '0',\n      openssl: '0.0'\n    }\n    this.hrtime = hrtime\n    this.pid = 0\n    this.exitCode = 0\n    this.connected = true\n    this._startTime = Date.now()\n    this._errorCallback = null\n  }\n\n  exit (code) {\n    this.exitCode = code\n    this.emit('exit', [code])\n    throw new Error('process.exit() called.')\n  }\n\n  setUncaughtExceptionCaptureCallback (cb) {\n    if (this._errorCallback) {\n      window.removeEventListener('error', this._errorCallback)\n    }\n    this._errorCallback = cb\n    if (cb) {\n      window.addEventListener('error', cb)\n    }\n  }\n\n  hasUncaughtExceptionCaptureCallback () {\n    return this._errorCallback !== null\n  }\n\n  cwd () {\n    return '/'\n  }\n\n  uptime () {\n    return Math.floor((Date.now() - this._startTime) / 1000)\n  }\n\n  memoryUsage () {\n    if (!performance && !performance.memory) {\n      return {\n        rss: 0,\n        heapTotal: Number.MAX_SAFE_INTEGER,\n        heapUsed: 0,\n        external: 0\n      }\n    }\n\n    const { memory } = performance\n\n    return {\n      rss: 0,\n      heapTotal: memory.totalJSHeapSize,\n      heapUsed: memory.usedJSHeapSize,\n      external: 0\n    }\n  }\n\n  nextTick (handler, ...args) {\n    queueMicrotask(() => handler(...args))\n  }\n\n  _getActiveHandles () {\n    return []\n  }\n\n  _getActiveRequests () {\n    return []\n  }\n}\n\nconst proc = new Process()\n\n//\n// We monkey patch the current process to use our updated version.\n//\n\nconst currentProcess = (global && global.process) || process\n\nif (currentProcess) {\n  for (const prop in proc) {\n    if (typeof proc[prop] === 'function') {\n      currentProcess[prop] = proc[prop].bind(proc)\n      continue\n    }\n\n    currentProcess[prop] = proc[prop]\n  }\n}\n\nexport default proc\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n// Packet types\nconst PACKET_UNKNOWN\t\t= \"???\";\nconst PACKET_EVENT \t\t\t= \"EVENT\";\nconst PACKET_REQUEST \t\t= \"REQ\";\nconst PACKET_RESPONSE\t\t= \"RES\";\nconst PACKET_DISCOVER \t\t= \"DISCOVER\";\nconst PACKET_INFO \t\t\t= \"INFO\";\nconst PACKET_DISCONNECT \t= \"DISCONNECT\";\nconst PACKET_HEARTBEAT \t\t= \"HEARTBEAT\";\nconst PACKET_PING \t\t\t= \"PING\";\nconst PACKET_PONG \t\t\t= \"PONG\";\n\nconst PACKET_GOSSIP_REQ\t\t= \"GOSSIP_REQ\";\nconst PACKET_GOSSIP_RES\t\t= \"GOSSIP_RES\";\nconst PACKET_GOSSIP_HELLO\t= \"GOSSIP_HELLO\";\n\nconst DATATYPE_UNDEFINED = 0;\nconst DATATYPE_NULL = 1;\nconst DATATYPE_JSON = 2;\nconst DATATYPE_BUFFER = 3;\n\n/**\n * Packet for transporters\n *\n * @class Packet\n */\nclass Packet {\n\t/**\n\t * Creates an instance of Packet.\n\t *\n\t * @param {String} type\n\t * @param {String} target\n\t * @param {any} payload\n\t *\n\t * @memberof Packet\n\t */\n\tconstructor(type, target, payload) {\n\t\tthis.type = type || PACKET_UNKNOWN;\n\t\tthis.target = target;\n\t\tthis.payload = payload || {};\n\t}\n}\n\nmodule.exports = {\n\tPACKET_UNKNOWN,\n\tPACKET_EVENT,\n\tPACKET_REQUEST,\n\tPACKET_RESPONSE,\n\tPACKET_DISCOVER,\n\tPACKET_INFO,\n\tPACKET_DISCONNECT,\n\tPACKET_HEARTBEAT,\n\tPACKET_PING,\n\tPACKET_PONG,\n\tPACKET_GOSSIP_REQ,\n\tPACKET_GOSSIP_RES,\n\tPACKET_GOSSIP_HELLO,\n\n\tDATATYPE_UNDEFINED,\n\tDATATYPE_NULL,\n\tDATATYPE_JSON,\n\tDATATYPE_BUFFER,\n\n\tPacket\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst ExtendableError = require(\"es6-error\");\n\n/**\n * Custom Moleculer Error class\n *\n * @class MoleculerError\n * @extends {ExtendableError}\n */\nclass MoleculerError extends ExtendableError {\n\t/**\n\t * Creates an instance of MoleculerError.\n\t *\n\t * @param {String?} message\n\t * @param {Number?} code\n\t * @param {String?} type\n\t * @param {any} data\n\t *\n\t * @memberof MoleculerError\n\t */\n\tconstructor(message, code, type, data) {\n\t\tsuper(message);\n\t\tthis.code = code || 500;\n\t\tthis.type = type;\n\t\tthis.data = data;\n\t\tthis.retryable = false;\n\t}\n}\n\n/**\n * Custom Moleculer Error class for retryable errors.\n *\n * @class MoleculerRetryableError\n * @extends {MoleculerError}\n */\nclass MoleculerRetryableError extends MoleculerError {\n\t/**\n\t * Creates an instance of MoleculerRetryableError.\n\t *\n\t * @param {String?} message\n\t * @param {Number?} code\n\t * @param {String?} type\n\t * @param {any} data\n\t *\n\t * @memberof MoleculerRetryableError\n\t */\n\tconstructor(message, code, type, data) {\n\t\tsuper(message);\n\t\tthis.code = code || 500;\n\t\tthis.type = type;\n\t\tthis.data = data;\n\t\tthis.retryable = true;\n\t}\n}\n\n/**\n * Moleculer Error class for Broker disconnections which is retryable.\n *\n * @class MoleculerServerError\n * @extends {MoleculerRetryableError}\n */\nclass BrokerDisconnectedError extends MoleculerRetryableError {\n\tconstructor() {\n\t\tsuper(\"The broker's transporter has disconnected. Please try again when a connection is reestablished.\", 502, \"BAD_GATEWAY\");\n\t\t// Stack trace is hidden because it creates a lot of logs and, in this case, won't help users find the issue\n\t\tthis.stack = \"\";\n\t}\n}\n\n/**\n * Moleculer Error class for server error which is retryable.\n *\n * @class MoleculerServerError\n * @extends {MoleculerRetryableError}\n */\nclass MoleculerServerError extends MoleculerRetryableError {\n}\n\n/**\n * Moleculer Error class for client errors which is not retryable.\n *\n * @class MoleculerClientError\n * @extends {MoleculerError}\n */\nclass MoleculerClientError extends MoleculerError {\n\t/**\n\t * Creates an instance of MoleculerClientError.\n\t *\n\t * @param {String?} message\n\t * @param {Number?} code\n\t * @param {String?} type\n\t * @param {any} data\n\t *\n\t * @memberof MoleculerClientError\n\t */\n\tconstructor(message, code, type, data) {\n\t\tsuper(message, code || 400, type, data);\n\t}\n}\n\n\n/**\n * 'Service not found' Error message\n *\n * @class ServiceNotFoundError\n * @extends {MoleculerRetryableError}\n */\nclass ServiceNotFoundError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of ServiceNotFoundError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof ServiceNotFoundError\n\t */\n\tconstructor(data = {}) {\n\t\tlet msg;\n\t\tif (data.nodeID && data.action)\n\t\t\tmsg = `Service '${data.action}' is not found on '${data.nodeID}' node.`;\n\t\telse if (data.action)\n\t\t\tmsg = `Service '${data.action}' is not found.`;\n\n\t\tif (data.service && data.version)\n\t\t\tmsg = `Service '${data.version}.${data.service}' not found.`;\n\t\telse if (data.service)\n\t\t\tmsg = `Service '${data.service}' not found.`;\n\n\t\tsuper(msg, 404, \"SERVICE_NOT_FOUND\", data);\n\t}\n}\n\n/**\n * 'Service not available' Error message\n *\n * @class ServiceNotAvailableError\n * @extends {MoleculerRetryableError}\n */\nclass ServiceNotAvailableError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of ServiceNotAvailableError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof ServiceNotAvailableError\n\t */\n\tconstructor(data) {\n\t\tlet msg;\n\t\tif (data.nodeID)\n\t\t\tmsg = `Service '${data.action}' is not available on '${data.nodeID}' node.`;\n\t\telse\n\t\t\tmsg = `Service '${data.action}' is not available.`;\n\n\t\tsuper(msg, 404, \"SERVICE_NOT_AVAILABLE\", data);\n\t}\n}\n\n/**\n * 'Request timed out' Error message. Retryable.\n *\n * @class RequestTimeoutError\n * @extends {MoleculerRetryableError}\n */\nclass RequestTimeoutError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of RequestTimeoutError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof RequestTimeoutError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Request is timed out when call '${data.action}' action on '${data.nodeID}' node.`, 504, \"REQUEST_TIMEOUT\", data);\n\t}\n}\n\n/**\n * 'Request skipped for timeout' Error message\n *\n * @class RequestSkippedError\n * @extends {MoleculerError}\n */\nclass RequestSkippedError extends MoleculerError {\n\t/**\n\t * Creates an instance of RequestSkippedError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof RequestSkippedError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Calling '${data.action}' is skipped because timeout reached on '${data.nodeID}' node.`, 514, \"REQUEST_SKIPPED\", data);\n\t\tthis.retryable = false;\n\t}\n}\n\n/**\n * 'Request rejected' Error message. Retryable.\n *\n * @class RequestRejectedError\n * @extends {MoleculerRetryableError}\n */\nclass RequestRejectedError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of RequestRejectedError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof RequestRejectedError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Request is rejected when call '${data.action}' action on '${data.nodeID}' node.`, 503, \"REQUEST_REJECTED\", data);\n\t}\n}\n\n/**\n * 'Queue is full' error message. Retryable.\n *\n * @class QueueIsFullError\n * @extends {MoleculerRetryableError}\n */\nclass QueueIsFullError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of QueueIsFullError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof QueueIsFullError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Queue is full. Request '${data.action}' action on '${data.nodeID}' node is rejected.`, 429, \"QUEUE_FULL\", data);\n\t}\n}\n\n/**\n * 'Parameters of action call validation error\n *\n * @class ValidationError\n * @extends {MoleculerClientError}\n */\nclass ValidationError extends MoleculerClientError {\n\t/**\n\t * Creates an instance of ValidationError.\n\t *\n\t * @param {String} message\n\t * @param {String} type\n\t * @param {any} data\n\t *\n\t * @memberof ValidationError\n\t */\n\tconstructor(message, type, data) {\n\t\tsuper(message, 422, type || \"VALIDATION_ERROR\", data);\n\t}\n}\n\n/**\n * 'Max request call level!' Error message\n *\n * @class MaxCallLevelError\n * @extends {MoleculerError}\n */\nclass MaxCallLevelError extends MoleculerError {\n\t/**\n\t * Creates an instance of MaxCallLevelError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof MaxCallLevelError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Request level is reached the limit (${data.level}) on '${data.nodeID}' node.`, 500, \"MAX_CALL_LEVEL\", data);\n\t\tthis.retryable = false;\n\t}\n}\n\n/**\n * Custom Moleculer Error class for Service schema errors\n *\n * @class ServiceSchemaError\n * @extends {Error}\n */\nclass ServiceSchemaError extends MoleculerError {\n\t/**\n\t * Creates an instance of ServiceSchemaError.\n\t *\n\t * @param {String} msg\n\t * @param {Object} data\n\t * @memberof ServiceSchemaError\n\t */\n\tconstructor(msg, data) {\n\t\tsuper(msg, 500, \"SERVICE_SCHEMA_ERROR\", data);\n\t}\n}\n\n/**\n * Custom Moleculer Error class for broker option errors\n *\n * @class BrokerOptionsError\n * @extends {Error}\n */\nclass BrokerOptionsError extends MoleculerError {\n\t/**\n\t * Creates an instance of BrokerOptionsError.\n\t *\n\t * @param {String} msg\n\t * @param {Object} data\n\t * @memberof BrokerOptionsError\n\t */\n\tconstructor(msg, data) {\n\t\tsuper(msg, 500, \"BROKER_OPTIONS_ERROR\", data);\n\t}\n}\n\n/**\n * Custom Moleculer Error class for Graceful stopping\n *\n * @class GracefulStopTimeoutError\n * @extends {Error}\n */\nclass GracefulStopTimeoutError extends MoleculerError {\n\t/**\n\t * Creates an instance of GracefulStopTimeoutError.\n\t *\n\t * @param {Object?} data\n\t * @memberof GracefulStopTimeoutError\n\t */\n\tconstructor(data) {\n\t\tif (data && data.service)  {\n\t\t\tsuper(`Unable to stop '${data.service.name}' service gracefully.`, 500, \"GRACEFUL_STOP_TIMEOUT\", data && data.service ? {\n\t\t\t\tname: data.service.name,\n\t\t\t\tversion: data.service.version\n\t\t\t} : null);\n\t\t} else {\n\t\t\tsuper(\"Unable to stop ServiceBroker gracefully.\", 500, \"GRACEFUL_STOP_TIMEOUT\");\n\t\t}\n\t}\n}\n\n/**\n * Protocol version is mismatch\n *\n * @class ProtocolVersionMismatchError\n * @extends {Error}\n */\nclass ProtocolVersionMismatchError extends MoleculerError {\n\t/**\n\t * Creates an instance of ProtocolVersionMismatchError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof ProtocolVersionMismatchError\n\t */\n\tconstructor(data) {\n\t\tsuper(\"Protocol version mismatch.\", 500, \"PROTOCOL_VERSION_MISMATCH\", data);\n\t}\n}\n\n/**\n * Invalid packet format error\n *\n * @class InvalidPacketDataError\n * @extends {Error}\n */\nclass InvalidPacketDataError extends MoleculerError {\n\t/**\n\t * Creates an instance of InvalidPacketDataError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof InvalidPacketDataError\n\t */\n\tconstructor(data) {\n\t\tsuper(\"Invalid packet data.\", 500, \"INVALID_PACKET_DATA\", data);\n\t}\n}\n\n/**\n * Recreate an error from a transferred payload `err`\n *\n * @param {Error} err\n * @returns {MoleculerError}\n */\nfunction recreateError(err) {\n\tconst Class = module.exports[err.name];\n\tif (Class) {\n\t\tswitch(err.name) {\n\t\t\tcase \"MoleculerError\": return new Class(err.message, err.code, err.type, err.data);\n\t\t\tcase \"MoleculerRetryableError\": return new Class(err.message, err.code, err.type, err.data);\n\t\t\tcase \"MoleculerServerError\": return new Class(err.message, err.code, err.type, err.data);\n\t\t\tcase \"MoleculerClientError\": return new Class(err.message, err.code, err.type, err.data);\n\n\t\t\tcase \"ValidationError\": return new Class(err.message, err.type, err.data);\n\n\t\t\tcase \"ServiceNotFoundError\": return new Class(err.data);\n\t\t\tcase \"ServiceNotAvailableError\": return new Class(err.data);\n\t\t\tcase \"RequestTimeoutError\": return new Class(err.data);\n\t\t\tcase \"RequestSkippedError\": return new Class(err.data);\n\t\t\tcase \"RequestRejectedError\": return new Class(err.data);\n\t\t\tcase \"QueueIsFullError\": return new Class(err.data);\n\t\t\tcase \"MaxCallLevelError\": return new Class(err.data);\n\t\t\tcase \"GracefulStopTimeoutError\": return new Class(err.data);\n\t\t\tcase \"ProtocolVersionMismatchError\": return new Class(err.data);\n\t\t\tcase \"InvalidPacketDataError\": return new Class(err.data);\n\n\t\t\tcase \"ServiceSchemaError\":\n\t\t\tcase \"BrokerOptionsError\": return new Class(err.message, err.data);\n\t\t}\n\t}\n}\n\n\nmodule.exports = {\n\tMoleculerError,\n\tMoleculerRetryableError,\n\tMoleculerServerError,\n\tMoleculerClientError,\n\n\tServiceNotFoundError,\n\tServiceNotAvailableError,\n\n\tValidationError,\n\tRequestTimeoutError,\n\tRequestSkippedError,\n\tRequestRejectedError,\n\tQueueIsFullError,\n\tMaxCallLevelError,\n\n\tServiceSchemaError,\n\tBrokerOptionsError,\n\tGracefulStopTimeoutError,\n\n\tProtocolVersionMismatchError,\n\tInvalidPacketDataError,\n\n\tBrokerDisconnectedError,\n\n\trecreateError\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = {\n\n\t// --- METRIC TYPES ---\n\n\tTYPE_COUNTER:  \t\"counter\",\n\tTYPE_GAUGE:  \t\"gauge\",\n\tTYPE_HISTOGRAM: \"histogram\",\n\tTYPE_INFO:  \t\"info\",\n\n\t// --- METRICREGISTRY METRICS ---\n\n\t// MOLECULER_METRICS_COMMON_COLLECT_TOTAL: \"moleculer.metrics.common.collect.total\",\n\t// MOLECULER_METRICS_COMMON_COLLECT_TIME: \"moleculer.metrics.common.collect.time\",\n\n\t// --- PROCESS METRICS ---\n\n\tPROCESS_ARGUMENTS: \"process.arguments\",\n\n\tPROCESS_PID: \"process.pid\",\n\tPROCESS_PPID: \"process.ppid\",\n\n\tPROCESS_MEMORY_HEAP_SIZE_TOTAL: \"process.memory.heap.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_SIZE_USED: \"process.memory.heap.size.used\", // bytes\n\tPROCESS_MEMORY_RSS: \"process.memory.rss\", // bytes\n\tPROCESS_MEMORY_EXTERNAL: \"process.memory.external\", // bytes\n\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL: \"process.memory.heap.space.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_USED: \"process.memory.heap.space.size.used\", // bytes\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE: \"process.memory.heap.space.size.available\", // bytes\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL: \"process.memory.heap.space.size.physical\", // bytes\n\n\tPROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL: \"process.memory.heap.stat.heap.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL: \"process.memory.heap.stat.executable.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL: \"process.memory.heap.stat.physical.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL: \"process.memory.heap.stat.available.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE: \"process.memory.heap.stat.used.heap.size\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT: \"process.memory.heap.stat.heap.size.limit\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY: \"process.memory.heap.stat.mallocated.memory\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY: \"process.memory.heap.stat.peak.mallocated.memory\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE: \"process.memory.heap.stat.zap.garbage\",\n\n\tPROCESS_UPTIME: \"process.uptime\", // seconds\n\tPROCESS_INTERNAL_ACTIVE_HANDLES: \"process.internal.active.handles\",\n\tPROCESS_INTERNAL_ACTIVE_REQUESTS: \"process.internal.active.requests\",\n\n\tPROCESS_VERSIONS_NODE: \"process.versions.node\",\n\n\t// --- EVENT LOOP METRICS ---\n\n\tPROCESS_EVENTLOOP_LAG_MIN: \"process.eventloop.lag.min\", // msec\n\tPROCESS_EVENTLOOP_LAG_AVG: \"process.eventloop.lag.avg\", // msec\n\tPROCESS_EVENTLOOP_LAG_MAX: \"process.eventloop.lag.max\", // msec\n\tPROCESS_EVENTLOOP_LAG_COUNT: \"process.eventloop.lag.count\",\n\n\t// --- GARBAGE COLLECTOR METRICS ---\n\n\tPROCESS_GC_TIME: \"process.gc.time\", // nanoseconds\n\tPROCESS_GC_TOTAL_TIME: \"process.gc.total.time\", // milliseconds\n\tPROCESS_GC_EXECUTED_TOTAL: \"process.gc.executed.total\",\n\n\t// --- OS METRICS ---\n\n\tOS_MEMORY_FREE: \"os.memory.free\", // bytes\n\tOS_MEMORY_USED: \"os.memory.used\", // bytes\n\tOS_MEMORY_TOTAL: \"os.memory.total\", // bytes\n\tOS_UPTIME: \"os.uptime\", // seconds\n\tOS_TYPE: \"os.type\",\n\tOS_RELEASE: \"os.release\",\n\tOS_HOSTNAME: \"os.hostname\",\n\tOS_ARCH: \"os.arch\",\n\tOS_PLATFORM: \"os.platform\",\n\tOS_USER_UID: \"os.user.uid\",\n\tOS_USER_GID: \"os.user.gid\",\n\tOS_USER_USERNAME: \"os.user.username\",\n\tOS_USER_HOMEDIR: \"os.user.homedir\",\n\n\tOS_DATETIME_UNIX: \"os.datetime.unix\",\n\tOS_DATETIME_ISO: \"os.datetime.iso\",\n\tOS_DATETIME_UTC: \"os.datetime.utc\",\n\tOS_DATETIME_TZ_OFFSET: \"os.datetime.tz.offset\",\n\n\tOS_NETWORK_ADDRESS: \"os.network.address\",\n\tOS_NETWORK_MAC: \"os.network.mac\",\n\n\tOS_CPU_LOAD_1: \"os.cpu.load.1\",\n\tOS_CPU_LOAD_5: \"os.cpu.load.5\",\n\tOS_CPU_LOAD_15: \"os.cpu.load.15\",\n\tOS_CPU_UTILIZATION: \"os.cpu.utilization\",\n\n\tOS_CPU_USER: \"os.cpu.user\", // seconds\n\tOS_CPU_SYSTEM: \"os.cpu.system\", // seconds\n\n\tOS_CPU_TOTAL: \"os.cpu.total\",\n\tOS_CPU_INFO_MODEL: \"os.cpu.info.model\",\n\tOS_CPU_INFO_SPEED: \"os.cpu.info.speed\",\n\tOS_CPU_INFO_TIMES_USER: \"os.cpu.info.times.user\",\n\tOS_CPU_INFO_TIMES_SYS: \"os.cpu.info.times.sys\",\n\n\t// --- MOLECULER NODE METRICS ---\n\n\tMOLECULER_NODE_TYPE: \"moleculer.node.type\",\n\tMOLECULER_NODE_VERSIONS_MOLECULER: \"moleculer.node.versions.moleculer\",\n\tMOLECULER_NODE_VERSIONS_LANG: \"moleculer.node.versions.lang\",\n\tMOLECULER_NODE_VERSIONS_PROTOCOL: \"moleculer.node.versions.protocol\",\n\n\t// --- MOLECULER BROKER METRICS ---\n\n\tMOLECULER_BROKER_NAMESPACE: \"moleculer.broker.namespace\",\n\tMOLECULER_BROKER_STARTED: \"moleculer.broker.started\",\n\tMOLECULER_BROKER_LOCAL_SERVICES_TOTAL: \"moleculer.broker.local.services.total\",\n\tMOLECULER_BROKER_MIDDLEWARES_TOTAL: \"moleculer.broker.middlewares.total\",\n\n\t// --- MOLECULER REGISTRY METRICS ---\n\n\tMOLECULER_REGISTRY_NODES_TOTAL: \"moleculer.registry.nodes.total\",\n\tMOLECULER_REGISTRY_NODES_ONLINE_TOTAL: \"moleculer.registry.nodes.online.total\",\n\tMOLECULER_REGISTRY_SERVICES_TOTAL: \"moleculer.registry.services.total\",\n\tMOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL: \"moleculer.registry.service.endpoints.total\",\n\tMOLECULER_REGISTRY_ACTIONS_TOTAL: \"moleculer.registry.actions.total\",\n\tMOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL: \"moleculer.registry.action.endpoints.total\",\n\tMOLECULER_REGISTRY_EVENTS_TOTAL: \"moleculer.registry.events.total\",\n\tMOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL: \"moleculer.registry.event.endpoints.total\",\n\n\t// --- MOLECULER REQUEST METRICS ---\n\n\tMOLECULER_REQUEST_TOTAL: \"moleculer.request.total\",\n\tMOLECULER_REQUEST_ACTIVE: \"moleculer.request.active\",\n\tMOLECULER_REQUEST_ERROR_TOTAL: \"moleculer.request.error.total\",\n\tMOLECULER_REQUEST_TIME: \"moleculer.request.time\", //msec\n\tMOLECULER_REQUEST_LEVELS: \"moleculer.request.levels\",\n\t//MOLECULER_REQUEST_DIRECTCALL_TOTAL: \"moleculer.request.directcall.total\",\n\t//MOLECULER_REQUEST_MULTICALL_TOTAL: \"moleculer.request.multicall.total\",\n\n\t// --- MOLECULER EVENTS METRICS ---\n\n\tMOLECULER_EVENT_EMIT_TOTAL: \"moleculer.event.emit.total\",\n\tMOLECULER_EVENT_BROADCAST_TOTAL: \"moleculer.event.broadcast.total\",\n\tMOLECULER_EVENT_BROADCASTLOCAL_TOTAL: \"moleculer.event.broadcast-local.total\",\n\tMOLECULER_EVENT_RECEIVED_TOTAL: \"moleculer.event.received.total\",\n\tMOLECULER_EVENT_RECEIVED_ACTIVE: \"moleculer.event.received.active\",\n\tMOLECULER_EVENT_RECEIVED_ERROR_TOTAL: \"moleculer.event.received.error.total\",\n\tMOLECULER_EVENT_RECEIVED_TIME: \"moleculer.event.received.time\", //msec\n\n\t// --- MOLECULER TRANSIT METRICS ---\n\n\tMOLECULER_TRANSIT_PUBLISH_TOTAL: \"moleculer.transit.publish.total\",\n\tMOLECULER_TRANSIT_RECEIVE_TOTAL: \"moleculer.transit.receive.total\",\n\n\tMOLECULER_TRANSIT_REQUESTS_ACTIVE: \"moleculer.transit.requests.active\",\n\tMOLECULER_TRANSIT_STREAMS_SEND_ACTIVE: \"moleculer.transit.streams.send.active\",\n\t//MOLECULER_TRANSIT_STREAMS_RECEIVE_ACTIVE: \"moleculer.transit.streams.receive.active\",\n\tMOLECULER_TRANSIT_READY: \"moleculer.transit.ready\", // true/false\n\tMOLECULER_TRANSIT_CONNECTED: \"moleculer.transit.connected\", // true/false\n\n\tMOLECULER_TRANSIT_PONG_TIME: \"moleculer.transit.pong.time\", // true/false\n\tMOLECULER_TRANSIT_PONG_SYSTIME_DIFF: \"moleculer.transit.pong.systime-diff\", // true/false\n\n\tMOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL: \"moleculer.transit.orphan.response.total\",\n\n\t// --- MOLECULER TRANSPORTER METRICS ---\n\n\tMOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL: \"moleculer.transporter.packets.sent.total\",\n\tMOLECULER_TRANSPORTER_PACKETS_SENT_BYTES: \"moleculer.transporter.packets.sent.bytes\", // bytes\n\tMOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL: \"moleculer.transporter.packets.received.total\",\n\tMOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES: \"moleculer.transporter.packets.received.bytes\", // bytes\n\n\t// --- MOLECULER CIRCUIT BREAKER METRICS ---\n\n\tMOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE: \"moleculer.circuit-breaker.opened.active\",\n\tMOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL: \"moleculer.circuit-breaker.opened.total\",\n\tMOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE: \"moleculer.circuit-breaker.half-opened.active\",\n\n\t// --- MOLECULER FALLBACK METRICS ---\n\n\tMOLECULER_REQUEST_FALLBACK_TOTAL: \"moleculer.request.fallback.total\",\n\n\t// --- MOLECULER BULKHEAD METRICS ---\n\n\tMOLECULER_REQUEST_BULKHEAD_INFLIGHT: \"moleculer.request.bulkhead.inflight\",\n\tMOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE: \"moleculer.request.bulkhead.queue.size\",\n\n\tMOLECULER_EVENT_BULKHEAD_INFLIGHT: \"moleculer.event.bulkhead.inflight\",\n\tMOLECULER_EVENT_BULKHEAD_QUEUE_SIZE: \"moleculer.event.bulkhead.queue.size\",\n\n\t// --- MOLECULER RETRY METRICS ---\n\n\tMOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL: \"moleculer.request.retry.attempts.total\",\n\n\t// --- MOLECULER TIMEOUT METRICS ---\n\n\tMOLECULER_REQUEST_TIMEOUT_TOTAL: \"moleculer.request.timeout.total\",\n\n\t// --- MOLECULER CACHER METRICS ---\n\n\tMOLECULER_CACHER_GET_TOTAL: \"moleculer.cacher.get.total\",\n\tMOLECULER_CACHER_GET_TIME: \"moleculer.cacher.get.time\",\n\tMOLECULER_CACHER_FOUND_TOTAL: \"moleculer.cacher.found.total\",\n\tMOLECULER_CACHER_SET_TOTAL: \"moleculer.cacher.set.total\",\n\tMOLECULER_CACHER_SET_TIME: \"moleculer.cacher.set.time\",\n\tMOLECULER_CACHER_DEL_TOTAL: \"moleculer.cacher.del.total\",\n\tMOLECULER_CACHER_DEL_TIME: \"moleculer.cacher.del.time\",\n\tMOLECULER_CACHER_CLEAN_TOTAL: \"moleculer.cacher.clean.total\",\n\tMOLECULER_CACHER_CLEAN_TIME: \"moleculer.cacher.clean.time\",\n\tMOLECULER_CACHER_EXPIRED_TOTAL: \"moleculer.cacher.expired.total\",\n\n\tMOLECULER_DISCOVERER_REDIS_COLLECT_TOTAL: \"moleculer.discoverer.redis.collect.total\",\n\tMOLECULER_DISCOVERER_REDIS_COLLECT_TIME: \"moleculer.discoverer.redis.collect.time\",\n\n\tMOLECULER_DISCOVERER_ETCD_COLLECT_TOTAL: \"moleculer.discoverer.etcd.collect.total\",\n\tMOLECULER_DISCOVERER_ETCD_COLLECT_TIME: \"moleculer.discoverer.etcd.collect.time\",\n\n\t// --- COMMON UNITS ---\n\t// Inspired by https://docs.datadoghq.com/developers/metrics/#units\n\n\t// Bytes\n\tUNIT_BIT: \"bit\",\n\tUNIT_BYTE: \"byte\",\n\tUNIT_KILOBYTES: \"kilobyte\",\n\tUNIT_MEGABYTE: \"megabyte\",\n\tUNIT_GIGABYTE: \"gigabyte\",\n\tUNIT_TERRABYTE: \"terrabyte\",\n\tUNIT_PETABYTE: \"petabyte\",\n\tUNIT_EXOBYTE: \"exabyte\",\n\n\t// Time\n\tUNIT_NANOSECONDS: \"nanosecond\",\n\tUNIT_MICROSECONDS: \"microsecond\",\n\tUNIT_MILLISECONDS: \"millisecond\",\n\tUNIT_SECONDS: \"second\",\n\tUNIT_MINUTE: \"minute\",\n\tUNIT_HOUR: \"hour\",\n\tUNIT_DAY: \"day\",\n\tUNIT_WEEK: \"week\",\n\tUNIT_MONTH: \"month\",\n\tUNIT_YEAR: \"year\",\n\n\t// Process\n\tUNIT_HANDLE: \"handle\",\n\tUNIT_CPU: \"cpu\",\n\tUNIT_GHZ: \"GHz\",\n\n\t// Network\n\tUNIT_REQUEST: \"request\",\n\tUNIT_CONNECTION: \"connection\",\n\tUNIT_PACKET: \"packet\",\n\tUNIT_MESSAGE: \"message\",\n\tUNIT_STREAM: \"stream\",\n\tUNIT_EVENT: \"event\",\n};\n","import EE from 'eventemitter2'\n\nexport const EventEmitter = EE\n\nexport default EE\n","import { EventEmitter } from 'events'\nimport cpus from 'cpus'\n\nclass RafPerf extends EventEmitter {\n  constructor (options) {\n    super()\n\n    this.options = { ...RafPerf.defaultOptions, ...options }\n\n    this.reset()\n\n    this.tick = this.tick.bind(this)\n    this.onVisibilityChange = this.onVisibilityChange.bind(this)\n  }\n\n  reset () {\n    this.isVisible = true\n    this.running = false\n    this.prevTime = null\n    this.startTime = null\n\n    this.frameDuration = RafPerf.fpsToMs(this.options.fps)\n\n    this.performance = undefined\n    this.perfSamples = []\n\n    if (this.requestID) cancelAnimationFrame(this.requestID)\n  }\n\n  start () {\n    // Check if loop is already running\n    if (this.running) return\n\n    // Set running state and initial time\n    this.running = true\n    this.prevTime = RafPerf.now()\n    this.startTime = this.prevTime\n    this.perfStartTime = this.prevTime\n\n    // Add visibility listener\n    document.addEventListener(\n      'visibilitychange',\n      this.onVisibilityChange,\n      false\n    )\n\n    // Start ticking\n    this.requestID = requestAnimationFrame(this.tick)\n  }\n\n  tick () {\n    // Ensure loop is running\n    if (!this.running || !this.isVisible) return\n\n    const { performances } = this.options\n\n    // Compute delta time since previous time\n    const time = RafPerf.now()\n    const deltaTime = time - this.prevTime\n\n    // Compute delta since previous frame\n    const frameDeltaTime = time - this.startTime\n\n    // Check elapsed time is more than desired frame duration\n    if (deltaTime > this.frameDuration) {\n      if (performances.enabled) {\n        // Push delta time for average computation\n        this.perfSamples.push(frameDeltaTime)\n\n        // Check if enough time has passed to sample or number of samples collected is enough\n        const perfNeedsUpdates =\n          (performances.sampleDuration &&\n            time - this.perfStartTime > performances.sampleDuration) ||\n          this.perfSamples.length > performances.samplesCount\n\n        if (perfNeedsUpdates) {\n          // Check average and update performance ratio\n          const averageDeltaTime =\n            this.perfSamples.reduce((time, sum) => time + sum) /\n            this.perfSamples.length\n          this.performance = this.frameDuration / averageDeltaTime\n          this.emit('perf', this.performance)\n\n          // Reset performances variables\n          this.perfSamples = []\n          this.perfStartTime = time\n        }\n      }\n\n      // Update prev and start time\n      // Compensate for gap between delta time and x number of frames\n      this.prevTime = time - (deltaTime % this.frameDuration)\n      this.startTime = time\n\n      // Call user callback function with delta time\n      this.emit('tick', frameDeltaTime)\n    }\n\n    this.requestID = requestAnimationFrame(this.tick)\n  }\n\n  stop () {\n    document.removeEventListener(\n      'visibilitychange',\n      this.onVisibilityChange,\n      false\n    )\n\n    this.reset()\n  }\n\n  onVisibilityChange () {\n    this.isVisible = !document.hidden\n\n    if (this.isVisible) {\n      this.reset()\n      this.start()\n    }\n  }\n}\n\n// Static\nRafPerf.defaultOptions = {\n  fps: 60,\n  performances: {\n    enabled: true,\n    samplesCount: 200,\n    // If everything runs smoothtly, samplesCount will be used over sampleDuration\n    // 1000 ms / 60 fps * 200 samplesCount = 3333 ms\n    sampleDuration: 4000\n  }\n}\n\nRafPerf.now = () => {\n  return (performance || Date).now()\n}\n\nRafPerf.fpsToMs = value => {\n  return (1 / value) * 1000\n}\n\n// Simulate https://nodejs.org/api/os.html#os_os_loadavg\nconst _osLoadAvg = [\n  // 1 minute\n  {\n    time: Math.floor(Date.now() / 1000),\n    init: false,\n    avg: 0\n  },\n\n  // 5 minutes\n  {\n    time: Math.floor(Date.now() / 1000),\n    avg: 0\n  },\n\n  // 15 minutes\n  {\n    time: Math.floor(Date.now() / 1000),\n    avg: 0\n  }\n]\n\nfunction updateLoadAvg (avg) {\n  const currentTime = Math.floor(Date.now() / 1000)\n  if (!_osLoadAvg[0].init || (currentTime - _osLoadAvg[0].time) > 60) {\n    _osLoadAvg[0].init = true\n    _osLoadAvg[0].time = currentTime\n    _osLoadAvg[0].avg = avg\n  }\n\n  if ((currentTime - _osLoadAvg[1].time) > 60 * 5) {\n    _osLoadAvg[1].time = currentTime\n    _osLoadAvg[1].avg = avg\n  }\n\n  if ((currentTime - _osLoadAvg[2].time) > 60 * 15) {\n    _osLoadAvg[2].time = currentTime\n    _osLoadAvg[2].avg = avg\n  }\n}\n\nfunction loadavg () {\n  return _osLoadAvg.map(value => value.avg)\n}\n\n/**\n * getCpuUsage\n *\n * Simulate cpuUsage of the browser based on the FPS performance.\n *\n * rate 1 (60fps) -> 0% usage\n * rate 0.5 (30fps) -> 50% usage\n * rate 0 (0fps) -> 100% usage\n *\n * @param {Boolean=100} sampleTime\n * @returns {Promise<Result>}\n */\nfunction getCpuUsage (sampleTime = 100) {\n  const engine = new RafPerf({\n    performances: {\n      enabled: true,\n      samplesCount: 3,\n      sampleDuration: sampleTime\n    }\n  })\n\n  return new Promise((resolve, reject) => {\n    engine.once('perf', ratio => {\n      engine.stop()\n\n      if (!ratio) {\n        return reject(new Error('CpuUsage: ratio perf not found.'))\n      }\n\n      const avg = 100 - (ratio * 100)\n      const avgByCpu = avg / cpus().length\n\n      updateLoadAvg(avg)\n\n      resolve({\n        avg,\n        usages: cpus().map(cpu => avgByCpu)\n      })\n    })\n\n    engine.start()\n  })\n}\n\ngetCpuUsage.loadavg = loadavg\n\nexport default getCpuUsage\n","/* global performance */\n\nimport cpuUsage from './cpu-usage'\n\nexport const hostname = () => {\n  if (typeof location !== 'undefined') {\n    return location.hostname\n  } else return ''\n}\n\nexport const release = () => {\n  if (typeof navigator !== 'undefined') {\n    return navigator.appVersion\n  }\n  return ''\n}\n\nexport const userInfo = () => ({\n  uid: 1000,\n  gid: 1000,\n  username: 'moleculer',\n  homedir: '/home/moleculer',\n  shell: '/bin/bash'\n})\nexport const endianness = () => 'LE'\nexport const uptime = () => Date.now()\nexport const type = () => 'Browser'\nexport const networkInterfaces = () => ({})\nexport const getNetworkInterfaces = () => ({})\nexport const arch = () => 'javascript'\nexport const platform = () => 'browser'\nexport const tmpdir = () => '/tmp'\nexport const tmpDir = () => '/tmp'\nexport const EOL = '\\n'\nexport const homedir = () => '/'\nexport { default as cpus } from 'cpus'\nexport const loadavg = cpuUsage.loadavg\nexport const totalmem = () => performance ? performance.memory.totalJSHeapSize : Number.MAX_VALUE\nexport const freemem = () => performance ? performance.memory.totalJSHeapSize - performance.memory.usedJSHeapSize : Number.MAX_VALUE\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst kleur\t\t= require(\"kleur\");\nconst os \t \t= require(\"os\");\nconst path \t \t= require(\"path\");\nconst fs \t \t= require(\"fs\");\nconst ExtendableError = require(\"es6-error\");\n\nconst lut = [];\nfor (let i=0; i<256; i++) { lut[i] = (i<16?\"0\":\"\")+(i).toString(16); }\n\nconst RegexCache = new Map();\n\nconst deprecateList = [];\n\nconst byteMultipliers = {\n\tb:  1,\n\tkb: 1 << 10,\n\tmb: 1 << 20,\n\tgb: 1 << 30,\n\ttb: Math.pow(1024, 4),\n\tpb: Math.pow(1024, 5),\n};\n// eslint-disable-next-line security/detect-unsafe-regex\nconst parseByteStringRe = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\nclass TimeoutError extends ExtendableError {}\n\n/**\n * Circular replacing of unsafe properties in object\n *\n * @param {Object=} options List of options to change circularReplacer behaviour\n * @param {number=} options.maxSafeObjectSize Maximum size of objects for safe object converting\n * @return {function(...[*]=)}\n */\nfunction circularReplacer(options = { maxSafeObjectSize: Infinity }) {\n\tconst seen = new WeakSet();\n\treturn function(key, value) {\n\t\tif (typeof value === \"object\" && value !== null) {\n\t\t\tconst objectType = value.constructor && value.constructor.name || typeof value;\n\n\t\t\tif (options.maxSafeObjectSize && \"length\" in value && value.length > options.maxSafeObjectSize) {\n\t\t\t\treturn `[${objectType} ${value.length}]`;\n\t\t\t}\n\n\t\t\tif (options.maxSafeObjectSize && \"size\" in value && value.size > options.maxSafeObjectSize) {\n\t\t\t\treturn `[${objectType} ${value.size}]`;\n\t\t\t}\n\n\t\t\tif (seen.has(value)) {\n\t\t\t\t//delete this[key];\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tseen.add(value);\n\t\t}\n\t\treturn value;\n\t};\n}\n\nconst units = [\"h\", \"m\", \"s\", \"ms\", \"μs\", \"ns\"];\nconst divisors = [60 * 60 * 1000, 60 * 1000, 1000, 1, 1e-3, 1e-6];\n\nconst utils = {\n\n\tisFunction(fn) {\n\t\treturn typeof fn === \"function\";\n\t},\n\n\tisString(s) {\n\t\treturn typeof s === \"string\" || s instanceof String;\n\t},\n\n\tisObject(o) {\n\t\treturn o !== null && typeof o === \"object\" && !(o instanceof String);\n\t},\n\n\tisPlainObject(o) {\n\t\treturn o !=null ? Object.getPrototypeOf(o) === Object.prototype || Object.getPrototypeOf(o) === null : false;\n\t},\n\n\tflatten(arr) {\n\t\treturn Array.prototype.reduce.call(arr, (a, b) => a.concat(b), []);\n\t},\n\n\thumanize(milli) {\n\t\tif (milli == null) return \"?\";\n\n\t\tfor (let i = 0; i < divisors.length; i++) {\n\t\t\tconst val = milli / divisors[i];\n\t\t\tif (val >= 1.0)\n\t\t\t\treturn \"\" + Math.floor(val) + units[i];\n\t\t}\n\n\t\treturn \"now\";\n\t},\n\n\t// Fast UUID generator: e7 https://jsperf.com/uuid-generator-opt/18\n\tgenerateToken() {\n\t\tconst d0 = Math.random()*0xffffffff|0;\n\t\tconst d1 = Math.random()*0xffffffff|0;\n\t\tconst d2 = Math.random()*0xffffffff|0;\n\t\tconst d3 = Math.random()*0xffffffff|0;\n\t\treturn lut[d0&0xff]+lut[d0>>8&0xff]+lut[d0>>16&0xff]+lut[d0>>24&0xff]+\"-\"+\n\t\t\tlut[d1&0xff]+lut[d1>>8&0xff]+\"-\"+lut[d1>>16&0x0f|0x40]+lut[d1>>24&0xff]+\"-\"+\n\t\t\tlut[d2&0x3f|0x80]+lut[d2>>8&0xff]+\"-\"+lut[d2>>16&0xff]+lut[d2>>24&0xff]+\n\t\t\tlut[d3&0xff]+lut[d3>>8&0xff]+lut[d3>>16&0xff]+lut[d3>>24&0xff];\n\t},\n\n\tremoveFromArray(arr, item) {\n\t\tif (!arr || arr.length == 0) return arr;\n\t\tconst idx = arr.indexOf(item);\n\t\tif (idx !== -1)\n\t\t\tarr.splice(idx, 1);\n\n\t\treturn arr;\n\t},\n\n\t/**\n\t * Get default NodeID (computerName)\n\t *\n\t * @returns\n\t */\n\tgetNodeID() {\n\t\treturn os.hostname().toLowerCase() + \"-\" + process.pid;\n\t},\n\n\t/**\n\t * Get list of local IPs\n\t *\n\t * @returns\n\t */\n\tgetIpList() {\n\t\tconst list = [];\n\t\tconst ilist = [];\n\t\tconst interfaces = os.networkInterfaces();\n\t\tfor (let iface in interfaces) {\n\t\t\tfor (let i in interfaces[iface]) {\n\t\t\t\tconst f = interfaces[iface][i];\n\t\t\t\tif (f.family === \"IPv4\") {\n\t\t\t\t\tif (f.internal) {\n\t\t\t\t\t\tilist.push(f.address);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist.push(f.address);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list.length > 0 ? list : ilist;\n\t},\n\n\t/**\n\t * Check the param is a Promise instance\n\t *\n\t * @param {any} p\n\t * @returns\n\t */\n\tisPromise(p) {\n\t\treturn (p != null && typeof p.then === \"function\");\n\t},\n\n\t/**\n\t * Polyfill a Promise library with missing Bluebird features.\n\t *\n\t * NOT USED & NOT TESTED YET !!!\n\t *\n\t * @param {PromiseClass} P\n\t */\n\tpolyfillPromise(P) {\n\t\tif (!utils.isFunction(P.method)) {\n\t\t\t// Based on https://github.com/petkaantonov/bluebird/blob/master/src/method.js#L8\n\t\t\tP.method = function(fn) {\n\t\t\t\treturn function() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst val = fn.apply(this, arguments);\n\t\t\t\t\t\treturn P.resolve(val);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\treturn P.reject(err);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\tif (!utils.isFunction(P.delay)) {\n\t\t\t// Based on https://github.com/petkaantonov/bluebird/blob/master/src/timers.js#L15\n\t\t\tP.delay = function(ms) {\n\t\t\t\treturn new P(resolve => setTimeout(resolve, +ms));\n\t\t\t};\n\t\t\tP.prototype.delay = function(ms) {\n\t\t\t\treturn this.then(res => P.delay(ms).then(() => res));\n\t\t\t\t//return this.then(res => new P(resolve => setTimeout(() => resolve(res), +ms)));\n\t\t\t};\n\t\t}\n\n\t\tif (!utils.isFunction(P.prototype.timeout)) {\n\t\t\tP.TimeoutError = TimeoutError;\n\n\t\t\tP.prototype.timeout = function(ms, message) {\n\t\t\t\tlet timer;\n\t\t\t\tconst timeout = new P((resolve, reject) => {\n\t\t\t\t\ttimer = setTimeout(() => reject(new P.TimeoutError(message)), +ms);\n\t\t\t\t});\n\n\t\t\t\treturn P.race([\n\t\t\t\t\ttimeout,\n\t\t\t\t\tthis\n\t\t\t\t])\n\t\t\t\t\t.then(value => {\n\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\tif (!utils.isFunction(P.mapSeries)) {\n\n\t\t\tP.mapSeries = function(arr, fn) {\n\t\t\t\tconst promFn = Promise.method(fn);\n\t\t\t\tconst res = [];\n\n\t\t\t\treturn arr.reduce((p, item, i) => {\n\t\t\t\t\treturn p.then(r => {\n\t\t\t\t\t\tres[i] = r;\n\t\t\t\t\t\treturn promFn(item, i);\n\t\t\t\t\t});\n\t\t\t\t}, P.resolve()).then(r => {\n\t\t\t\t\tres[arr.length] = r;\n\t\t\t\t\treturn res.slice(1);\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Clear `require` cache. Used for service hot reloading\n\t *\n\t * @param {String} filename\n\t */\n\tclearRequireCache(filename) {\n\t\t/* istanbul ignore next */\n\t\tObject.keys(require.cache).forEach(function(key) {\n\t\t\tif (key == filename) {\n\t\t\t\tdelete require.cache[key];\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * String matcher to handle dot-separated event/action names.\n\t *\n\t * @param {String} text\n\t * @param {String} pattern\n\t * @returns {Boolean}\n\t */\n\tmatch(text, pattern) {\n\t\t// Simple patterns\n\t\tif (pattern.indexOf(\"?\") == -1) {\n\n\t\t\t// Exact match (eg. \"prefix.event\")\n\t\t\tconst firstStarPosition = pattern.indexOf(\"*\");\n\t\t\tif (firstStarPosition == -1) {\n\t\t\t\treturn pattern === text;\n\t\t\t}\n\n\t\t\t// Eg. \"prefix**\"\n\t\t\tconst len = pattern.length;\n\t\t\tif (len > 2 && pattern.endsWith(\"**\") && firstStarPosition > len - 3) {\n\t\t\t\tpattern = pattern.substring(0, len - 2);\n\t\t\t\treturn text.startsWith(pattern);\n\t\t\t}\n\n\t\t\t// Eg. \"prefix*\"\n\t\t\tif (len > 1 && pattern.endsWith(\"*\") && firstStarPosition > len - 2) {\n\t\t\t\tpattern = pattern.substring(0, len - 1);\n\t\t\t\tif (text.startsWith(pattern)) {\n\t\t\t\t\treturn text.indexOf(\".\", len) == -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Accept simple text, without point character (*)\n\t\t\tif (len == 1 && firstStarPosition == 0) {\n\t\t\t\treturn text.indexOf(\".\") == -1;\n\t\t\t}\n\n\t\t\t// Accept all inputs (**)\n\t\t\tif (len == 2 && firstStarPosition == 0 && pattern.lastIndexOf(\"*\") == 1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Regex (eg. \"prefix.ab?cd.*.foo\")\n\t\tconst origPattern = pattern;\n\t\tlet regex = RegexCache.get(origPattern);\n\t\tif (regex == null) {\n\t\t\tif (pattern.startsWith(\"$\")) {\n\t\t\t\tpattern = \"\\\\\" + pattern;\n\t\t\t}\n\t\t\tpattern = pattern.replace(/\\?/g, \".\");\n\t\t\tpattern = pattern.replace(/\\*\\*/g, \"§§§\");\n\t\t\tpattern = pattern.replace(/\\*/g, \"[^\\\\.]*\");\n\t\t\tpattern = pattern.replace(/§§§/g, \".*\");\n\n\t\t\tpattern = \"^\" + pattern + \"$\";\n\n\t\t\t// eslint-disable-next-line security/detect-non-literal-regexp\n\t\t\tregex = new RegExp(pattern, \"\");\n\t\t\tRegexCache.set(origPattern, regex);\n\t\t}\n\t\treturn regex.test(text);\n\t},\n\n\t/**\n\t * Deprecate a method or property\n\t *\n\t * @param {Object|Function|String} prop\n\t * @param {String} msg\n\t */\n\tdeprecate(prop, msg) {\n\t\tif (arguments.length == 1)\n\t\t\tmsg = prop;\n\n\t\tif (deprecateList.indexOf(prop) === -1) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.warn(kleur.yellow().bold(`DeprecationWarning: ${msg}`));\n\t\t\tdeprecateList.push(prop);\n\t\t}\n\t},\n\n\t/**\n\t * Remove circular references & Functions from the JS object\n\t *\n\t * @param {Object|Array} obj\n\t * @param {Object=} options List of options to change circularReplacer behaviour\n\t * @param {number=} options.maxSafeObjectSize List of options to change circularReplacer behaviour\n\t * @returns {Object|Array}\n\t */\n\tsafetyObject(obj, options) {\n\t\treturn JSON.parse(JSON.stringify(obj, circularReplacer(options)));\n\t},\n\n\t/**\n\t * Sets a variable on an object based on its dot path.\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t * @param {*} value\n\t * @returns {Object}\n\t */\n\tdotSet(obj, path, value) {\n\t\tconst parts = path.split(\".\");\n\t\tconst part = parts.shift();\n\t\tif (parts.length > 0) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(obj, part)) {\n\t\t\t\tobj[part] = {};\n\t\t\t} else if (obj[part] == null) {\n\t\t\t\tobj[part] = {};\n\t\t\t} else {\n\t\t\t\tif (typeof obj[part] !== \"object\") {\n\t\t\t\t\tthrow new Error(\"Value already set and it's not an object\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj[part] = utils.dotSet(obj[part], parts.join(\".\"), value);\n\t\t\treturn obj;\n\t\t}\n\t\tobj[path] = value;\n\t\treturn obj;\n\t},\n\n\t/**\n\t * Make directories recursively\n\t * @param {String} p - directory path\n\t */\n\tmakeDirs(p) {\n\t\tp.split(path.sep)\n\t\t\t.reduce((prevPath, folder) => {\n\t\t\t\tconst currentPath = path.join(prevPath, folder, path.sep);\n\t\t\t\tif (!fs.existsSync(currentPath)) {\n\t\t\t\t\tfs.mkdirSync(currentPath);\n\t\t\t\t}\n\t\t\t\treturn currentPath;\n\t\t\t}, \"\");\n\t},\n\n\t/**\n\t * Parse a byte string to number of bytes. E.g \"1kb\" -> 1024\n\t * Credits: https://github.com/visionmedia/bytes.js\n\t *\n\t * @param {String} v\n\t * @returns {Number}\n\t */\n\tparseByteString(v) {\n\t\tif (typeof v === \"number\" && !isNaN(v)) {\n\t\t\treturn v;\n\t\t}\n\n\t\tif (typeof v !== \"string\") {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Test if the string passed is valid\n\t\tlet results = parseByteStringRe.exec(v);\n\t\tlet floatValue;\n\t\tlet unit = \"b\";\n\n\t\tif (!results) {\n\t\t\t// Nothing could be extracted from the given string\n\t\t\tfloatValue = parseInt(v, 10);\n\t\t\tif (Number.isNaN(floatValue))\n\t\t\t\treturn null;\n\n\t\t\tunit = \"b\";\n\t\t} else {\n\t\t\t// Retrieve the value and the unit\n\t\t\tfloatValue = parseFloat(results[1]);\n\t\t\tunit = results[4].toLowerCase();\n\t\t}\n\n\t\treturn Math.floor(byteMultipliers[unit] * floatValue);\n\t}\n};\n\nmodule.exports = utils;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Abstract Base Metric class.\n *\n * @class BaseMetric\n */\nclass BaseMetric {\n\n\t/**\n\t * Creates an instance of BaseMetric.\n\t *\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof BaseMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tthis.registry = registry;\n\t\tthis.type = opts.type;\n\t\tthis.name = opts.name;\n\t\tthis.description = opts.description;\n\t\tthis.labelNames = opts.labelNames || [];\n\t\tthis.unit = opts.unit;\n\t\tthis.aggregator = opts.aggregator || registry.opts.defaultAggregator;\n\n\t\tthis.lastSnapshot = null;\n\t\tthis.dirty = true;\n\n\t\tthis.values = new Map();\n\t}\n\n\t/**\n\t * Set dirty flag\n\t *\n\t * @memberof BaseMetric\n\t */\n\tsetDirty() {\n\t\tthis.dirty = true;\n\t}\n\n\t/**\n\t * Clear dirty flag\n\t *\n\t * @memberof BaseMetric\n\t */\n\tclearDirty() {\n\t\tthis.dirty = false;\n\t}\n\n\t/**\n\t * Get metric item by labels\n\t *\n\t * @param {Object?} labels\n\t * @returns {Object}\n\t * @memberof BaseMetric\n\t */\n\tget(labels) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\treturn this.values.get(hash);\n\t}\n\n\t/**\n\t * Reset item by labels\n\t *\n\t * @memberof BaseMetric\n\t */\n\treset(/*labels, timestamp*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Reset all items\n\t *\n\t * @memberof BaseMetric\n\t */\n\tresetAll(/*timestamp*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Clear metric values.\n\t *\n\t * @memberof BaseMetric\n\t */\n\tclear() {\n\t\tthis.values = new Map();\n\t\tthis.changed();\n\t}\n\n\t/**\n\t * Create a hash from label values. It will\n\t * be used as a key in Map.\n\t *\n\t * @param {Object} labels\n\t * @returns {String}\n\t * @memberof BaseMetric\n\t */\n\thashingLabels(labels) {\n\t\tif (this.labelNames.length == 0 || labels == null || typeof labels !== \"object\")\n\t\t\treturn \"\";\n\n\t\tconst parts = [];\n\t\tfor (let i = 0; i < this.labelNames.length; i++) {\n\t\t\tconst v = labels[this.labelNames[i]];\n\t\t\tif (typeof v == \"number\")\n\t\t\t\tparts.push(v);\n\t\t\telse if (typeof v === \"string\")\n\t\t\t\tparts.push(\"\\\"\" + v + \"\\\"\");\n\t\t\telse if (typeof v === \"boolean\")\n\t\t\t\tparts.push(\"\" + v);\n\t\t\telse\n\t\t\t\tparts.push(\"\");\n\t\t}\n\t\treturn parts.join(\"|\");\n\t}\n\n\t/**\n\t * Get a snapshot.\n\t *\n\t * @returns {Object}\n\t * @memberof BaseMetric\n\t */\n\tsnapshot() {\n\t\tif (!this.dirty && this.lastSnapshot)\n\t\t\treturn this.lastSnapshot;\n\n\t\tthis.lastSnapshot = this.generateSnapshot();\n\t\tthis.clearDirty();\n\n\t\treturn this.lastSnapshot;\n\t}\n\n\t/**\n\t * Generate a snapshot.\n\t *\n\t * @memberof BaseMetric\n\t */\n\tgenerateSnapshot() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Metric has been changed.\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t */\n\tchanged(value, labels, timestamp) {\n\t\tthis.setDirty();\n\t\tthis.registry.changed(this, value, labels, timestamp);\n\t}\n\n\t/**\n\t * Export to a POJO.\n\t */\n\ttoObject() {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tname: this.name,\n\t\t\tdescription: this.description,\n\t\t\tlabelNames: this.labelNames,\n\t\t\tunit: this.unit,\n\n\t\t\tvalues: this.snapshot()\n\t\t};\n\t}\n}\n\nmodule.exports = BaseMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst INTERVAL = 5;\nconst SECONDS_PER_MINUTE = 60.0;\n\n// https://github.com/dropwizard/metrics/blob/4.0-maintenance/metrics-core/src/main/java/com/codahale/metrics/EWMA.java\n/* istanbul ignore next\nfunction getAlpha(min) {\n\treturn 1 - Math.exp(-INTERVAL / SECONDS_PER_MINUTE / min);\n}\n*/\n\nclass MetricRate {\n\n\tconstructor(metric, item, min) {\n\t\tthis.metric = metric;\n\t\tthis.item = item;\n\t\tthis.min = min;\n\t\t//this.alpha = getAlpha(min);\n\n\t\tthis.rate = 0;\n\n\t\tthis.lastValue = 0;\n\t\tthis.lastTickTime = Date.now();\n\t\tthis.value = null;\n\n\t\tthis.timer = setInterval(() => this.tick(), INTERVAL * 1000).unref();\n\t}\n\n\tupdate(value) {\n\t\tthis.value = value;\n\t}\n\n\ttick() {\n\t\t// Get elapsed seconds\n\t\tconst now = Date.now();\n\t\tconst elapsedSec = (now - this.lastTickTime) / 1000;\n\t\tthis.lastTickTime = now;\n\n\t\t// Get difference between new and old value\n\t\tconst diff = this.value - this.lastValue;\n\t\tthis.lastValue = this.value;\n\n\t\t// Calculate the current requests/minute\n\t\tconst oneMinRate = diff / elapsedSec * SECONDS_PER_MINUTE;\n\n\t\t// Weighted calculation\n\t\tlet rate = this.rate + (oneMinRate - this.rate) * 0.5;\n\t\t// EWMA: const rate = this.rate + (this.alpha * (oneMinRate - this.rate));\n\n\t\t// Rounding\n\t\tif (Math.abs(rate) < 0.05) rate = 0;\n\t\tconst changed = Math.abs(rate - this.rate) > 0.01;\n\n\t\tthis.rate = rate;\n\n\t\tif (changed)\n\t\t\tthis.metric.changed(this.item.value, this.item.labels, now);\n\t}\n\n\treset() {\n\t\tthis.lastValue = 0;\n\t\tthis.value = null;\n\n\t\tthis.rate = 0;\n\t}\n\n}\nmodule.exports = MetricRate;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { pick } = require(\"lodash\");\nconst BaseMetric = require(\"./base\");\nconst METRIC = require(\"../constants\");\nconst MetricRate = require(\"../rates\");\n\n/**\n * Gauge metric class.\n *\n * @class GaugeMetric\n * @extends {BaseMetric}\n */\nclass GaugeMetric extends BaseMetric {\n\n\t/**\n\t * Creates an instance of GaugeMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof GaugeMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_GAUGE;\n\t\tthis.rate = opts.rate;\n\t}\n\n\t/**\n\t * Increment value\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} value\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\tincrement(labels, value, timestamp) {\n\t\tif (value == null)\n\t\t\tvalue = 1;\n\n\t\tconst item = this.get(labels);\n\t\treturn this.set((item ? item.value : 0) + value, labels, timestamp);\n\t}\n\n\t/**\n\t * Decrement value.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} value\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\tdecrement(labels, value, timestamp) {\n\t\tif (value == null)\n\t\t\tvalue = 1;\n\n\t\tconst item = this.get(labels);\n\t\treturn this.set((item ? item.value : 0) - value, labels, timestamp);\n\t}\n\n\t/**\n\t * Set value.\n\t *\n\t * @param {Number?} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\tset(value, labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tlet item = this.values.get(hash);\n\t\tif (item) {\n\t\t\tif (item.value != value) {\n\t\t\t\titem.value = value;\n\t\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\n\t\t\t\tif (item.rate)\n\t\t\t\t\titem.rate.update(value);\n\n\t\t\t\tthis.changed(value, labels, timestamp);\n\t\t\t}\n\t\t} else {\n\t\t\titem = {\n\t\t\t\tvalue,\n\t\t\t\tlabels: pick(labels, this.labelNames),\n\t\t\t\ttimestamp: timestamp == null ? Date.now() : timestamp,\n\t\t\t};\n\t\t\tthis.values.set(hash, item);\n\n\t\t\tif (this.rate) {\n\t\t\t\titem.rate = new MetricRate(this, item, 1);\n\t\t\t\titem.rate.update(value);\n\t\t\t}\n\n\t\t\tthis.changed(value, labels, timestamp);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Reset item by labels.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\treset(labels, timestamp) {\n\t\treturn this.set(0, labels, timestamp);\n\t}\n\n\t/**\n\t * Reset all items.\n\t *\n\t * @param {Number?} timestamp\n\t * @memberof GaugeMetric\n\t */\n\tresetAll(timestamp) {\n\t\tthis.values.forEach(item => {\n\t\t\titem.value = 0;\n\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\t});\n\t\tthis.changed(null, null, timestamp);\n\t}\n\n\t/**\n\t * Generate a snapshot.\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof GaugeMetric\n\t */\n\tgenerateSnapshot() {\n\t\tconst snapshot = Array.from(this.values.keys()).map(key => {\n\t\t\tconst item = this.values.get(key);\n\t\t\tconst res = {\n\t\t\t\tkey,\n\t\t\t\tvalue: item.value,\n\t\t\t\tlabels: item.labels,\n\t\t\t\ttimestamp: item.timestamp\n\t\t\t};\n\n\t\t\tif (item.rate)\n\t\t\t\tres.rate = item.rate.rate;\n\n\t\t\treturn res;\n\t\t});\n\n\t\treturn snapshot;\n\t}\n}\n\nmodule.exports = GaugeMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst GaugeMetric = require(\"./gauge\");\nconst METRIC = require(\"../constants\");\n\n/**\n * Counter metric class.\n *\n * @class CounterMetric\n * @extends {GaugeMetric}\n */\nclass CounterMetric extends GaugeMetric {\n\n\t/**\n\t * Creates an instance of CounterMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof CounterMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_COUNTER;\n\t}\n\n\t/**\n\t * Disabled decrement method.\n\t *\n\t * @memberof CounterMetric\n\t */\n\tdecrement() {\n\t\tthrow new Error(\"Counter can't be decreased.\");\n\t}\n}\n\nmodule.exports = CounterMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseMetric = require(\"./base\");\nconst _ = require(\"lodash\");\nconst METRIC = require(\"../constants\");\nconst MetricRate = require(\"../rates\");\nconst { isPlainObject } = require(\"../../utils\");\nconst sortAscending = (a, b) => a - b;\nconst setProp = (o, k, v) => {\n\to[k] = v;\n\treturn o;\n};\n\n/**\n * Histogram metric class.\n *\n * @class HistogramMetric\n * @extends {BaseMetric}\n */\nclass HistogramMetric extends BaseMetric {\n\n\t/**\n\t * Creates an instance of HistogramMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof HistogramMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_HISTOGRAM;\n\n\t\t// Create buckets\n\t\tif (isPlainObject(opts.linearBuckets)) {\n\t\t\tthis.buckets = HistogramMetric.generateLinearBuckets(opts.linearBuckets.start, opts.linearBuckets.width, opts.linearBuckets.count);\n\t\t} else if (isPlainObject(opts.exponentialBuckets)) {\n\t\t\tthis.buckets = HistogramMetric.generateExponentialBuckets(opts.exponentialBuckets.start, opts.exponentialBuckets.factor, opts.exponentialBuckets.count);\n\t\t} else if (Array.isArray(opts.buckets)) {\n\t\t\tthis.buckets = Array.from(opts.buckets);\n\t\t} else if (opts.buckets === true) {\n\t\t\tthis.buckets = this.registry.opts.defaultBuckets;\n\t\t}\n\t\tif (this.buckets) {\n\t\t\tthis.buckets.sort(sortAscending);\n\t\t}\n\n\t\t// Create quantiles\n\t\tif (Array.isArray(opts.quantiles)) {\n\t\t\tthis.quantiles = Array.from(opts.quantiles);\n\t\t} else if (opts.quantiles === true) {\n\t\t\tthis.quantiles = this.registry.opts.defaultQuantiles;\n\t\t}\n\t\tif (this.quantiles) {\n\t\t\tthis.quantiles.sort(sortAscending);\n\t\t\tthis.maxAgeSeconds = opts.maxAgeSeconds || this.registry.opts.defaultMaxAgeSeconds; // 1 minute\n\t\t\tthis.ageBuckets = opts.ageBuckets || this.registry.opts.defaultAgeBuckets; // 10 secs per bucket\n\t\t}\n\n\t\tthis.rate = opts.rate;\n\t}\n\n\t/**\n\t * Observe a value.\n\t *\n\t * @param {Number} value\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof HistogramMetric\n\t */\n\tobserve(value, labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tlet item = this.values.get(hash);\n\t\tif (!item) {\n\t\t\titem = this.resetItem({\n\t\t\t\tlabels: _.pick(labels, this.labelNames)\n\t\t\t});\n\n\t\t\tif (this.rate)\n\t\t\t\titem.rate = new MetricRate(this, item, 1);\n\n\t\t\tthis.values.set(hash, item);\n\t\t}\n\n\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\titem.sum += value;\n\t\titem.count++;\n\t\titem.lastValue = value;\n\n\t\tif (item.bucketValues) {\n\t\t\tconst len = this.buckets.length;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tif (value <= this.buckets[i]) {\n\t\t\t\t\titem.bucketValues[this.buckets[i]] += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (item.quantileValues) {\n\t\t\titem.quantileValues.add(value);\n\t\t}\n\n\t\tif (item.rate)\n\t\t\titem.rate.update(item.count);\n\n\t\tthis.changed(value, labels, timestamp);\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Create new bucket values based on options.\n\t *\n\t * @returns {Object}\n\t * @memberof HistogramMetric\n\t */\n\tcreateBucketValues() {\n\t\treturn this.buckets.reduce((a, bound) => setProp(a, bound, 0), {});\n\t}\n\n\t/**\n\t * Generate a snapshot\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof HistogramMetric\n\t */\n\tgenerateSnapshot() {\n\t\treturn Array.from(this.values.keys()).map(key => this.generateItemSnapshot(this.values.get(key), key));\n\t}\n\n\t/**\n\t * Generate a snapshot for an item\n\t *\n\t * @param {Object} item\n\t * @param {String} key\n\t * @returns {Object}\n\t * @memberof HistogramMetric\n\t */\n\tgenerateItemSnapshot(item, key) {\n\t\tconst snapshot = {\n\t\t\tkey,\n\t\t\tlabels: item.labels,\n\t\t\tcount: item.count,\n\t\t\tsum: item.sum,\n\t\t\tlastValue: item.lastValue,\n\t\t\ttimestamp: item.timestamp,\n\t\t};\n\n\t\tif (this.buckets)\n\t\t\tsnapshot.buckets = this.buckets.reduce((a, b) => setProp(a, b, item.bucketValues[b]), {});\n\n\t\tif (this.quantiles)\n\t\t\tObject.assign(snapshot, item.quantileValues.snapshot());\n\n\t\tif (item.rate)\n\t\t\tsnapshot.rate = item.rate.rate;\n\n\t\treturn snapshot;\n\t}\n\n\t/**\n\t * Reset value of item.\n\t *\n\t * @param {Object} item\n\t * @param {Number?} timestamp\n\t */\n\tresetItem(item, timestamp) {\n\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\titem.sum = 0;\n\t\titem.count = 0;\n\t\titem.lastValue = null;\n\n\t\tif (this.buckets) {\n\t\t\titem.bucketValues = this.createBucketValues();\n\t\t}\n\n\t\tif (this.quantiles) {\n\t\t\titem.quantileValues = new TimeWindowQuantiles(this, this.quantiles, this.maxAgeSeconds, this.ageBuckets);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Reset item by labels.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof HistogramMetric\n\t */\n\treset(labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tconst item = this.values.get(hash);\n\t\tif (item) {\n\t\t\tthis.resetItem(item, timestamp);\n\t\t\tthis.changed(null, labels, timestamp);\n\t\t}\n\t}\n\n\t/**\n\t * Reset all items.\n\t *\n\t * @param {Number?} timestamp\n\t * @memberof HistogramMetric\n\t */\n\tresetAll(timestamp) {\n\t\tthis.values.forEach(item => this.resetItem(item, timestamp));\n\t\tthis.changed();\n\t}\n\n\t/**\n\t * Generate linear buckets\n\t *\n\t * @static\n\t * @param {Number} start\n\t * @param {Number} width\n\t * @param {Number} count\n\t * @returns {Array<Number>}\n\t * @memberof HistogramMetric\n\t */\n\tstatic generateLinearBuckets(start, width, count) {\n\t\tconst buckets = [];\n\t\tfor (let i = 0; i < count; i++)\n\t\t\tbuckets.push(start + i * width);\n\n\t\treturn buckets;\n\t}\n\n\t/**\n\t * Generate exponential buckets\n\t *\n\t * @static\n\t * @param {Number} start\n\t * @param {Number} factor\n\t * @param {Number} count\n\t * @returns {Array<Number>}\n\t * @memberof HistogramMetric\n\t */\n\tstatic generateExponentialBuckets(start, factor, count) {\n\t\tconst buckets = [];\n\t\tfor (let i = 0; i < count; i++)\n\t\t\tbuckets[i] = start * Math.pow(factor, i);\n\n\t\treturn buckets;\n\t}\n}\n\n/**\n * Timewindow class for quantiles.\n *\n * @class TimeWindowQuantiles\n */\nclass TimeWindowQuantiles {\n\n\t/**\n\t * Creates an instance of TimeWindowQuantiles.\n\t * @param {BaseMetric} metric\n\t * @param {Array<Number>} quantiles\n\t * @param {Number} maxAgeSeconds\n\t * @param {Number} ageBuckets\n\t * @memberof TimeWindowQuantiles\n\t */\n\tconstructor(metric, quantiles, maxAgeSeconds, ageBuckets) {\n\t\tthis.metric = metric;\n\t\tthis.quantiles = Array.from(quantiles);\n\t\tthis.maxAgeSeconds = maxAgeSeconds;\n\t\tthis.ageBuckets = ageBuckets;\n\t\tthis.ringBuckets = [];\n\t\tfor(let i = 0; i < ageBuckets; i++) {\n\t\t\tthis.ringBuckets.push(new Bucket());\n\t\t}\n\t\tthis.dirty = true;\n\n\t\tthis.currentBucket = -1;\n\t\tthis.rotate();\n\n\t\tthis.lastSnapshot = null;\n\t\tthis.setDirty();\n\t}\n\n\t/**\n\t * Set dirty flag.\n\t *\n\t * @memberof TimeWindowQuantiles\n\t */\n\tsetDirty() {\n\t\tthis.dirty = true;\n\t\tthis.metric.setDirty();\n\t}\n\n\t/**\n\t * Clear dirty flag.\n\t *\n\t * @memberof TimeWindowQuantiles\n\t */\n\tclearDirty() {\n\t\tthis.dirty = false;\n\t}\n\n\t/**\n\t * Rotate the ring buckets.\n\t *\n\t * @memberof TimeWindowQuantiles\n\t */\n\trotate() {\n\t\tthis.currentBucket = (this.currentBucket + 1) % this.ageBuckets;\n\t\tthis.ringBuckets[this.currentBucket].clear();\n\t\tthis.setDirty();\n\n\t\tsetTimeout(() => this.rotate(), (this.maxAgeSeconds / this.ageBuckets) * 1000).unref();\n\t}\n\n\t/**\n\t * Add a new value to the current bucket.\n\t *\n\t * @param {Number} value\n\t * @memberof TimeWindowQuantiles\n\t */\n\tadd(value) {\n\t\tthis.setDirty();\n\t\tthis.ringBuckets[this.currentBucket].add(value);\n\t}\n\n\t/**\n\t * Generate a snapshot from buckets and calculate min, max, mean, quantiles, variance & StdDev.\n\t *\n\t * @returns {Object}\n\t * @memberof TimeWindowQuantiles\n\t */\n\tsnapshot() {\n\t\tif (!this.dirty && this.lastSnapshot)\n\t\t\treturn this.lastSnapshot;\n\n\t\tconst samples = this.ringBuckets.reduce((a, b) => a.concat(b.samples), []);\n\t\tsamples.sort(sortAscending);\n\n\t\tconst mean = samples.length ? samples.reduce((a, b) => a + b, 0) / samples.length : null;\n\t\tconst variance = samples.length > 1 ? samples.reduce((a, b) => a + Math.pow(b - mean, 2), 0) / (samples.length - 1) : null;\n\t\tconst stdDev = variance ? Math.sqrt(variance) : null;\n\n\t\tthis.lastSnapshot = {\n\t\t\tmin: samples.length ? samples[0] : null,\n\t\t\tmean,\n\t\t\tvariance,\n\t\t\tstdDev,\n\t\t\tmax: samples.length ? samples[samples.length - 1] : null,\n\t\t\tquantiles: this.quantiles.reduce((a, q) => setProp(a, q, samples[Math.ceil(q * samples.length) - 1]), {})\n\t\t};\n\n\t\tthis.clearDirty();\n\n\t\treturn this.lastSnapshot;\n\t}\n}\n\n/**\n * Bucket class\n *\n * @class Bucket\n */\nclass Bucket {\n\t/**\n\t * Creates an instance of Bucket.\n\t * @memberof Bucket\n\t */\n\tconstructor() {\n\t\tthis.count = 0;\n\t\tthis.samples = [];\n\t}\n\n\t/**\n\t * Add value to the bucket.\n\t *\n\t * @param {Number} value\n\t * @memberof Bucket\n\t */\n\tadd(value) {\n\t\tthis.samples.push(value);\n\t\tthis.count++;\n\t}\n\n\t/**\n\t * Clear bucket.\n\t *\n\t * @memberof Bucket\n\t */\n\tclear() {\n\t\tthis.count = 0;\n\t\tthis.samples.length = 0;\n\t}\n}\n\nHistogramMetric.Bucket = Bucket;\nHistogramMetric.TimeWindowQuantiles = TimeWindowQuantiles;\n\nmodule.exports = HistogramMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { pick } = require(\"lodash\");\nconst BaseMetric = require(\"./base\");\nconst METRIC = require(\"../constants\");\n\n/**\n * Information metric.\n *\n * @class InfoMetric\n * @extends {BaseMetric}\n */\nclass InfoMetric extends BaseMetric {\n\n\t/**\n\t * Creates an instance of InfoMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof InfoMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_INFO;\n\t}\n\n\t/**\n\t * Set value.\n\t *\n\t * @param {*} value\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof InfoMetric\n\t */\n\tset(value, labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tlet item = this.values.get(hash);\n\t\tif (item) {\n\t\t\tif (value != item.value) {\n\t\t\t\titem.value = value;\n\t\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\t\t\tthis.changed(value, labels, timestamp);\n\t\t\t}\n\t\t} else {\n\t\t\titem = {\n\t\t\t\tvalue,\n\t\t\t\tlabels: pick(labels, this.labelNames),\n\t\t\t\ttimestamp: timestamp == null ? Date.now() : timestamp\n\t\t\t};\n\t\t\tthis.values.set(hash, item);\n\t\t\tthis.changed(value, labels, timestamp);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Reset item by labels.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof InfoMetric\n\t */\n\treset(labels, timestamp) {\n\t\treturn this.set(null, labels, timestamp);\n\t}\n\n\t/**\n\t * Reset all items.\n\t *\n\t * @param {Number?} timestamp\n\t * @memberof InfoMetric\n\t */\n\tresetAll(timestamp) {\n\t\tthis.values.forEach(item => {\n\t\t\titem.value = null;\n\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\t});\n\t\tthis.changed();\n\t}\n\n\t/**\n\t * Generate a snapshot.\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof InfoMetric\n\t */\n\tgenerateSnapshot() {\n\t\tconst snapshot = Array.from(this.values.keys()).map(key => {\n\t\t\tconst item = this.values.get(key);\n\t\t\treturn {\n\t\t\t\tkey,\n\t\t\t\tvalue: item.value,\n\t\t\t\tlabels: item.labels,\n\t\t\t\ttimestamp: item.timestamp\n\t\t\t};\n\t\t});\n\n\t\treturn snapshot;\n\t}\n}\n\nmodule.exports = InfoMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { BrokerOptionsError } = require(\"../../errors\");\n\nconst Types = {\n\tBase: require(\"./base\"),\n\tCounter: require(\"./counter\"),\n\tGauge: require(\"./gauge\"),\n\tHistogram: require(\"./histogram\"),\n\tInfo: require(\"./info\"),\n};\n\n/**\n * Get MetricType class by name.\n *\n * @param {String} name\n * @returns\n */\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Types).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Types[n];\n}\n\n/**\n * Resolve metric type by name\n *\n * @param {string} type\n * @returns {BaseMetric}\n * @memberof ServiceBroker\n */\nfunction resolve(type) {\n\tconst TypeClass = getByName(type);\n\tif (!TypeClass)\n\t\tthrow new BrokerOptionsError(`Invalid metric type '${type}'.`, { type });\n\n\treturn TypeClass;\n}\n\nfunction register(name, value) {\n\tTypes[name] = value;\n}\n\nmodule.exports = Object.assign(Types, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { match, isString } = require(\"../../utils\");\n\n/**\n * Metric reporter base class.\n *\n * @class BaseReporter\n */\nclass BaseReporter {\n\n\t/**\n\t * Creates an instance of BaseReporter.\n\t *\n\t * @param {Object} opts\n\t * @memberof BaseReporter\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tincludes: null,\n\t\t\texcludes: null,\n\n\t\t\tmetricNamePrefix: null,\n\t\t\tmetricNameSuffix: null,\n\n\t\t\tmetricNameFormatter: null,\n\t\t\tlabelNameFormatter: null,\n\t\t});\n\n\t\tif (isString(this.opts.includes))\n\t\t\tthis.opts.includes = [this.opts.includes];\n\n\t\tif (isString(this.opts.excludes))\n\t\t\tthis.opts.excludes = [this.opts.excludes];\n\t}\n\n\t/**\n\t * Initialize reporter\n\t *\n\t * @param {MetricRegistry} registry\n\t * @memberof BaseReporter\n\t */\n\tinit(registry) {\n\t\tthis.registry = registry;\n\t\tthis.broker = this.registry.broker;\n\t\tthis.logger = this.registry.logger;\n\t}\n\n\t/**\n\t * Stop reporter\n\t *\n\t * @memberof BaseReporter\n\t */\n\tstop() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Match the metric name. Check the `includes` & `excludes` patterns.\n\t *\n\t * @param {String} name\n\t * @returns {boolean}\n\t * @memberof BaseReporter\n\t */\n\tmatchMetricName(name) {\n\t\tif (Array.isArray(this.opts.includes)) {\n\t\t\tif (!this.opts.includes.some(pattern => match(name, pattern)))\n\t\t\t\treturn false;\n\t\t}\n\n\t\tif (Array.isArray(this.opts.excludes)) {\n\t\t\tif (!this.opts.excludes.every(pattern => !match(name, pattern)))\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Format metric name. Add prefix, suffix and call custom formatter.\n\t *\n\t * @param {String} name\n\t * @returns {String}\n\t * @memberof BaseReporter\n\t */\n\tformatMetricName(name) {\n\t\tname = (this.opts.metricNamePrefix ? this.opts.metricNamePrefix : \"\") + name + (this.opts.metricNameSuffix ? this.opts.metricNameSuffix : \"\");\n\t\tif (this.opts.metricNameFormatter)\n\t\t\treturn this.opts.metricNameFormatter(name);\n\t\treturn name;\n\t}\n\n\t/**\n\t * Format label name. Call custom formatter.\n\t *\n\t * @param {String} name\n\t * @returns {String}\n\t * @memberof BaseReporter\n\t */\n\tformatLabelName(name) {\n\t\tif (this.opts.labelNameFormatter)\n\t\t\treturn this.opts.labelNameFormatter(name);\n\t\treturn name;\n\t}\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof BaseReporter\n\t */\n\tmetricChanged(/*metric, value, labels, timestamp*/) {\n\t\t// Not implemented. Abstract method\n\t}\n}\n\nmodule.exports = BaseReporter;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseReporter = require(\"./base\");\nconst _ = require(\"lodash\");\nconst kleur = require(\"kleur\");\nconst METRIC = require(\"../constants\");\nconst { isFunction } = require(\"../../utils\");\n\n/**\n * Console reporter for Moleculer Metrics\n *\n * @class ConsoleReporter\n * @extends {BaseReporter}\n */\nclass ConsoleReporter extends BaseReporter {\n\n\t/**\n\t * Creates an instance of ConsoleReporter.\n\t * @param {Object} opts\n\t * @memberof ConsoleReporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\tinterval: 5,\n\t\t\tlogger: null,\n\t\t\tcolors: true,\n\t\t\tonlyChanges: true,\n\t\t});\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\n\t\tthis.lastChanges = new Set();\n\t}\n\n\t/**\n\t * Initialize reporter\n\t * @param {MetricRegistry} registry\n\t * @memberof ConsoleReporter\n\t */\n\tinit(registry) {\n\t\tsuper.init(registry);\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.print(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Convert labels to label string\n\t *\n\t * @param {Object} labels\n\t * @returns {String}\n\t * @memberof ConsoleReporter\n\t */\n\tlabelsToStr(labels) {\n\t\tconst keys = Object.keys(labels);\n\t\tif (keys.length == 0)\n\t\t\treturn kleur.gray(\"{}\");\n\n\t\treturn kleur.gray(\"{\") + keys.map(key => `${kleur.gray(this.formatLabelName(key))}: ${kleur.magenta(\"\" + labels[key])}`).join(\", \") + kleur.gray(\"}\");\n\t}\n\n\t/**\n\t * Print metrics to the console.\n\t *\n\t * @memberof ConsoleReporter\n\t */\n\tprint() {\n\t\tlet list = this.registry.list({\n\t\t\tincludes: this.opts.includes,\n\t\t\texcludes: this.opts.excludes,\n\t\t});\n\n\t\tif (this.opts.onlyChanges)\n\t\t\tlist = list.filter(metric => this.lastChanges.has(metric.name));\n\n\t\tif (list.length == 0)\n\t\t\treturn;\n\n\t\tthis.log(kleur.gray(`------------------- [ METRICS START (${list.length}) ] -------------------`));\n\n\t\tlist.forEach(metric => {\n\t\t\tthis.log(kleur.cyan().bold(this.formatMetricName(metric.name)) + \" \" + kleur.gray(\"(\" + metric.type + \")\"));\n\t\t\tif (metric.values.size == 0) {\n\t\t\t\tthis.log(kleur.gray(\"  <no values>\"));\n\t\t\t} else {\n\t\t\t\tconst unit = metric.unit ? kleur.gray(this.registry.pluralizeUnit(metric.unit)) : \"\";\n\t\t\t\tmetric.values.forEach(item => {\n\t\t\t\t\tlet val;\n\t\t\t\t\tconst labelStr = this.labelsToStr(item.labels);\n\t\t\t\t\tswitch(metric.type) {\n\t\t\t\t\t\tcase METRIC.TYPE_COUNTER:\n\t\t\t\t\t\tcase METRIC.TYPE_GAUGE:\n\t\t\t\t\t\tcase METRIC.TYPE_INFO:\n\t\t\t\t\t\t\tval = item.value === \"\" ? kleur.grey(\"<empty string>\") : kleur.green().bold(item.value);\n\t\t\t\t\t\t\tif (item.rate != null) {\n\t\t\t\t\t\t\t\t/*const s = [];\n\t\t\t\t\t\t\t\tObject.keys(item.rates).forEach(b => {\n\t\t\t\t\t\t\t\t\ts.push(`Rate${b}: ${item.rates[b] != null ? item.rates[b].toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tval = kleur.green().bold(`Value: ${val} | ` + s.join(\" | \"));\n\t\t\t\t\t\t\t\t*/\n\n\t\t\t\t\t\t\t\tval = val + kleur.grey(\" | Rate: \") + (item.rate != null ? kleur.green().bold(item.rate.toFixed(2)) : \"-\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase METRIC.TYPE_HISTOGRAM: {\n\t\t\t\t\t\t\tconst s = [];\n\t\t\t\t\t\t\ts.push(`Count: ${item.count}`);\n\n\t\t\t\t\t\t\tif (item.buckets) {\n\t\t\t\t\t\t\t\tObject.keys(item.buckets).forEach(b => {\n\t\t\t\t\t\t\t\t\ts.push(`${b}: ${item.buckets[b] != null ? item.buckets[b] : \"-\"}`);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (item.quantiles) {\n\t\t\t\t\t\t\t\ts.push(`Min: ${item.min != null ? item.min.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`Mean: ${item.mean != null ? item.mean.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`Var: ${item.variance != null ? item.variance.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`StdDev: ${item.stdDev != null ? item.stdDev.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`Max: ${item.max != null ? item.max.toFixed(2) : \"-\"}`);\n\n\t\t\t\t\t\t\t\tObject.keys(item.quantiles).forEach(key => {\n\t\t\t\t\t\t\t\t\ts.push(`${key}: ${item.quantiles[key] != null ? item.quantiles[key].toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (item.rate != null)\n\t\t\t\t\t\t\t\ts.push(`Rate: ${item.rate != null ? item.rate.toFixed(2) : \"-\"}`);\n\n\t\t\t\t\t\t\tval = kleur.green().bold(s.join(\" | \"));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.log(`  ${labelStr}: ${val} ${unit}`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.log(\"\");\n\t\t});\n\n\t\tthis.log(kleur.gray(`-------------------- [ METRICS END (${list.length}) ] --------------------`));\n\n\t\tthis.lastChanges.clear();\n\t}\n\n\t/**\n\t * Print messages\n\t *\n\t * @param  {...any} args\n\t */\n\tlog(...args) {\n\t\tif (isFunction(this.opts.logger)) {\n\t\t\treturn this.opts.logger(...args);\n\t\t} else {\n\t\t\treturn this.logger.info(...args);\n\t\t}\n\t}\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof BaseReporter\n\t */\n\tmetricChanged(metric) {\n\t\tif (!this.matchMetricName(metric.name)) return;\n\n\t\tthis.lastChanges.add(metric.name);\n\t}\n}\n\nmodule.exports = ConsoleReporter;\n","export default false\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseReporter = require(\"./base\");\nconst _ = require(\"lodash\");\n\n/**\n * Event reporter for Moleculer Metrics\n *\n * @class EventReporter\n * @extends {BaseReporter}\n */\nclass EventReporter extends BaseReporter {\n\n\t/**\n\t * Creates an instance of EventReporter.\n\t * @param {Object} opts\n\t * @memberof EventReporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\teventName: \"$metrics.snapshot\",\n\n\t\t\tbroadcast: false,\n\t\t\tgroups: null,\n\n\t\t\tonlyChanges: false,\n\n\t\t\tinterval: 5,\n\t\t});\n\n\t\tthis.lastChanges = new Set();\n\t}\n\n\t/**\n\t * Initialize reporter.\n\t *\n\t * @param {MetricRegistry} registry\n\t * @memberof EventReporter\n\t */\n\tinit(registry) {\n\t\tsuper.init(registry);\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.sendEvent(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Send metrics snapshot via event.\n\t *\n\t * @memberof EventReporter\n\t */\n\tsendEvent() {\n\t\tlet list = this.registry.list({\n\t\t\tincludes: this.opts.includes,\n\t\t\texcludes: this.opts.excludes,\n\t\t});\n\n\t\tif (this.opts.onlyChanges)\n\t\t\tlist = list.filter(metric => this.lastChanges.has(metric.name));\n\n\t\tif (list.length == 0)\n\t\t\treturn;\n\n\t\tif (this.opts.broadcast) {\n\t\t\tthis.logger.debug(`Send metrics.snapshot (${list.length} metrics) broadcast events.`);\n\t\t\tthis.broker.broadcast(this.opts.eventName, list, { groups: this.opts.groups });\n\t\t} else {\n\t\t\tthis.logger.debug(`Send metrics.snapshot (${list.length} metrics) events.`);\n\t\t\tthis.broker.emit(this.opts.eventName, list, { groups: this.opts.groups });\n\t\t}\n\n\t\tthis.lastChanges.clear();\n\t}\n\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof BaseReporter\n\t */\n\tmetricChanged(metric) {\n\t\tif (!this.matchMetricName(metric.name)) return;\n\n\t\tthis.lastChanges.add(metric.name);\n\t}\n}\n\nmodule.exports = EventReporter;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../../utils\");\nconst { BrokerOptionsError } = require(\"../../errors\");\n\nconst Reporters = {\n\tBase: require(\"./base\"),\n\tConsole: require(\"./console\"),\n\tCSV: require(\"./csv\"),\n\tEvent: require(\"./event\"),\n\tDatadog: require(\"./datadog\"),\n\tPrometheus: require(\"./prometheus\"),\n\tStatsD: require(\"./statsd\"),\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Reporters).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Reporters[n];\n}\n\n/**\n * Resolve reporter by name\n *\n * @param {object|string} opt\n * @returns {Reporter}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Reporters.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet ReporterClass = getByName(opt);\n\t\tif (ReporterClass)\n\t\t\treturn new ReporterClass();\n\n\t} else if (isObject(opt)) {\n\t\tlet ReporterClass = getByName(opt.type);\n\t\tif (ReporterClass)\n\t\t\treturn new ReporterClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid metric reporter type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\tthrow new BrokerOptionsError(`Invalid metric reporter type '${opt}'.`, { type: opt });\n}\n\nfunction register(name, value) {\n\tReporters[name] = value;\n}\n\nmodule.exports = Object.assign(Reporters, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst os = require(\"os\");\nconst METRIC = require(\"./constants\");\nconst cpuUsage = require(\"../cpu-usage\");\n\nlet v8, eventLoop;\n\n// Load `v8` module for heap metrics.\ntry {\n\tv8 = require(\"v8\");\n} catch (e) {\n\t// silent\n}\n\n/**\n * Register common OS, process & Moleculer metrics.\n */\nfunction registerCommonMetrics() {\n\tthis.logger.debug(\"Registering common metrics...\");\n\n\t// --- METRICS SELF METRICS ---\n\n\t// this.register({ name: METRIC.MOLECULER_METRICS_COMMON_COLLECT_TOTAL, type: METRIC.TYPE_COUNTER, description: \"Number of metric collections\" });\n\t// this.register({ name: METRIC.MOLECULER_METRICS_COMMON_COLLECT_TIME, type: METRIC.TYPE_GAUGE, description: \"Time of collecting metrics\", unit: METRIC.UNIT_MILLISECONDS });\n\n\t// --- PROCESS METRICS ---\n\n\tconst item = this.register({ name: METRIC.PROCESS_ARGUMENTS, type: METRIC.TYPE_INFO, labelNames: [\"index\"], description: \"Process arguments\" });\n\tprocess.argv.map((arg, index) => item.set(arg, { index }));\n\n\tthis.register({ name: METRIC.PROCESS_PID, type: METRIC.TYPE_INFO, description: \"Process PID\" }).set(process.pid);\n\tthis.register({ name: METRIC.PROCESS_PPID, type: METRIC.TYPE_INFO, description: \"Process parent PID\" }).set(process.ppid);\n\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SIZE_USED, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process used heap size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_RSS, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process RSS size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_EXTERNAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process external memory size\" });\n\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process total heap space size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_USED, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process used heap space size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process available heap space size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process physical heap space size\" });\n\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat executable size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat physical size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat available size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat used size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat size limit\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat mallocated size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Peak of process heap stat mallocated size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE, type: METRIC.TYPE_GAUGE, description: \"Process heap stat zap garbage\" });\n\n\tthis.register({ name: METRIC.PROCESS_UPTIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_SECONDS, description: \"Process uptime\" });\n\tthis.register({ name: METRIC.PROCESS_INTERNAL_ACTIVE_HANDLES, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_HANDLE, description: \"Number of active process handlers\" });\n\tthis.register({ name: METRIC.PROCESS_INTERNAL_ACTIVE_REQUESTS, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_REQUEST, description: \"Number of active process requests\" });\n\n\tthis.register({ name: METRIC.PROCESS_VERSIONS_NODE, type: METRIC.TYPE_INFO, description: \"Node version\" }).set(process.versions.node);\n\n\t// --- OS METRICS ---\n\n\tthis.register({ name: METRIC.OS_MEMORY_FREE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"OS free memory size\" });\n\tthis.register({ name: METRIC.OS_MEMORY_USED, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"OS used memory size\" });\n\tthis.register({ name: METRIC.OS_MEMORY_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"OS total memory size\" });\n\tthis.register({ name: METRIC.OS_UPTIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_SECONDS, description: \"OS uptime\" });\n\tthis.register({ name: METRIC.OS_TYPE, type: METRIC.TYPE_INFO, description: \"OS type\" }).set(os.type());\n\tthis.register({ name: METRIC.OS_RELEASE, type: METRIC.TYPE_INFO, description: \"OS release\" }).set(os.release());\n\tthis.register({ name: METRIC.OS_HOSTNAME, type: METRIC.TYPE_INFO, description: \"Hostname\" }).set(os.hostname());\n\tthis.register({ name: METRIC.OS_ARCH, type: METRIC.TYPE_INFO, description: \"OS architecture\" }).set(os.arch());\n\tthis.register({ name: METRIC.OS_PLATFORM, type: METRIC.TYPE_INFO, description: \"OS platform\" }).set(os.platform());\n\n\tconst userInfo = getUserInfo();\n\tthis.register({ name: METRIC.OS_USER_UID, type: METRIC.TYPE_INFO, description: \"UID\" }).set(userInfo.uid);\n\tthis.register({ name: METRIC.OS_USER_GID, type: METRIC.TYPE_INFO, description: \"GID\" }).set(userInfo.gid);\n\tthis.register({ name: METRIC.OS_USER_USERNAME, type: METRIC.TYPE_INFO, description: \"Username\" }).set(userInfo.username);\n\tthis.register({ name: METRIC.OS_USER_HOMEDIR, type: METRIC.TYPE_INFO, description: \"User's home directory\" }).set(userInfo.homedir);\n\n\tthis.register({ name: METRIC.OS_NETWORK_ADDRESS, type: METRIC.TYPE_INFO, labelNames: [\"interface\", \"family\"], description: \"Network address\" });\n\tthis.register({ name: METRIC.OS_NETWORK_MAC, type: METRIC.TYPE_INFO, labelNames: [\"interface\", \"family\"], description: \"MAC address\" });\n\n\tthis.register({ name: METRIC.OS_DATETIME_UNIX, type: METRIC.TYPE_GAUGE, description: \"Current datetime in Unix format\" });\n\tthis.register({ name: METRIC.OS_DATETIME_ISO, type: METRIC.TYPE_INFO, description: \"Current datetime in ISO string\" });\n\tthis.register({ name: METRIC.OS_DATETIME_UTC, type: METRIC.TYPE_INFO, description: \"Current UTC datetime\" });\n\tthis.register({ name: METRIC.OS_DATETIME_TZ_OFFSET, type: METRIC.TYPE_GAUGE, description: \"Timezone offset\" });\n\n\tthis.register({ name: METRIC.OS_CPU_LOAD_1, type: METRIC.TYPE_GAUGE, description: \"CPU load1\" });\n\tthis.register({ name: METRIC.OS_CPU_LOAD_5, type: METRIC.TYPE_GAUGE, description: \"CPU load5\" });\n\tthis.register({ name: METRIC.OS_CPU_LOAD_15, type: METRIC.TYPE_GAUGE, description: \"CPU load15\" });\n\tthis.register({ name: METRIC.OS_CPU_UTILIZATION, type: METRIC.TYPE_GAUGE, description: \"CPU utilization\" });\n\n\tthis.register({ name: METRIC.OS_CPU_USER, type: METRIC.TYPE_GAUGE, description: \"CPU user time\" });\n\tthis.register({ name: METRIC.OS_CPU_SYSTEM, type: METRIC.TYPE_GAUGE, description: \"CPU system time\" });\n\n\tthis.register({ name: METRIC.OS_CPU_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_CPU, description: \"Number of CPUs\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_MODEL, type: METRIC.TYPE_INFO, labelNames: [\"index\"], description: \"CPU model\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_SPEED, type: METRIC.TYPE_GAUGE, labelNames: [\"index\"], unit: METRIC.UNIT_GHZ, description: \"CPU speed\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_TIMES_USER, type: METRIC.TYPE_GAUGE, labelNames: [\"index\"], description: \"CPU user time\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_TIMES_SYS, type: METRIC.TYPE_GAUGE, labelNames: [\"index\"], description: \"CPU system time\" });\n\n\tstartGCWatcher.call(this);\n\tstartEventLoopStats.call(this);\n\n\tthis.logger.debug(`Registered ${this.store.size} common metrics.`);\n}\n\n/**\n * Start GC watcher listener.\n */\nfunction startGCWatcher() {\n// Load `gc-stats` module for GC metrics.\n\ttry {\n\t\tconst gc = (require(\"gc-stats\"))();\n\n\t\t/* istanbul ignore next */\n\t\tif (gc) {\n\t\t\t// --- GARBAGE COLLECTOR METRICS ---\n\n\t\t\tthis.register({ name: METRIC.PROCESS_GC_TIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_NANOSECONDS, description: \"GC time\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_GC_TOTAL_TIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Total time of GC\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_GC_EXECUTED_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"type\"], unit: null, description: \"Number of executed GC\" });\n\n\t\t\tgc.on(\"stats\", stats => {\n\t\t\t\tthis.set(METRIC.PROCESS_GC_TIME, stats.pause);\n\t\t\t\tthis.increment(METRIC.PROCESS_GC_TOTAL_TIME, null, stats.pause / 1e6);\n\t\t\t\tif (stats.gctype == 1)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"scavenge\" });\n\t\t\t\tif (stats.gctype == 2)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"marksweep\" });\n\t\t\t\tif (stats.gctype == 4)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"incremental\" });\n\t\t\t\tif (stats.gctype == 8)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"weakphantom\" });\n\t\t\t\tif (stats.gctype == 15) {\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"scavenge\" });\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"marksweep\" });\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"incremental\" });\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"weakphantom\" });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} catch (e) {\n\t\t// silent\n\t}\n}\n\nfunction startEventLoopStats() {\n\t// Load `event-loop-stats` metric for Event-loop metrics.\n\ttry {\n\t\teventLoop = require(\"event-loop-stats\");\n\t\tif (eventLoop) {\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_MIN, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Minimum of event loop lag\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_AVG, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Average of event loop lag\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_MAX, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Maximum of event loop lag\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_COUNT, type: METRIC.TYPE_GAUGE, description: \"Number of event loop lag samples.\" });\n\t\t}\n\t} catch (e) {\n\t\t// silent\n\t}\n}\n\n/**\n * Update common metric values.\n *\n * @returns {Promise}\n */\nfunction updateCommonMetrics() {\n\tthis.logger.debug(\"Update common metric values...\");\n\tconst end = this.timer();\n\n\t// --- PROCESS METRICS ---\n\n\tconst procMem = process.memoryUsage();\n\n\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SIZE_TOTAL, procMem.heapTotal);\n\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SIZE_USED, procMem.heapUsed);\n\tthis.set(METRIC.PROCESS_MEMORY_RSS, procMem.rss);\n\tthis.set(METRIC.PROCESS_MEMORY_EXTERNAL, procMem.external);\n\n\tif (v8 && v8.getHeapSpaceStatistics) {\n\t\tconst stat = v8.getHeapSpaceStatistics();\n\t\tstat.forEach(item => {\n\t\t\tconst space = item.space_name;\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL, item.space_size, { space });\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_USED, item.space_used_size, { space });\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE, item.space_available_size, { space });\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL, item.physical_space_size, { space });\n\t\t});\n\t}\n\n\tif (v8 && v8.getHeapStatistics) {\n\t\tconst stat = v8.getHeapStatistics();\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL, stat.total_heap_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL, stat.total_heap_size_executable);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL, stat.total_physical_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL, stat.total_available_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE, stat.used_heap_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT, stat.heap_size_limit);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY, stat.malloced_memory);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY, stat.peak_malloced_memory);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE, stat.does_zap_garbage);\n\t}\n\n\tthis.set(METRIC.PROCESS_UPTIME, process.uptime());\n\tthis.set(METRIC.PROCESS_INTERNAL_ACTIVE_HANDLES, process._getActiveHandles().length);\n\tthis.set(METRIC.PROCESS_INTERNAL_ACTIVE_REQUESTS, process._getActiveRequests().length);\n\n\t// --- OS METRICS ---\n\n\tconst freeMem = os.freemem();\n\tconst totalMem = os.totalmem();\n\tconst usedMem = totalMem - freeMem;\n\tthis.set(METRIC.OS_MEMORY_FREE, freeMem);\n\tthis.set(METRIC.OS_MEMORY_USED, usedMem);\n\tthis.set(METRIC.OS_MEMORY_TOTAL, totalMem);\n\tthis.set(METRIC.OS_UPTIME, os.uptime());\n\tthis.set(METRIC.OS_TYPE, os.type());\n\tthis.set(METRIC.OS_RELEASE, os.release());\n\tthis.set(METRIC.OS_HOSTNAME, os.hostname());\n\tthis.set(METRIC.OS_ARCH, os.arch());\n\tthis.set(METRIC.OS_PLATFORM, os.platform());\n\n\t// --- NETWORK INTERFACES ---\n\n\n\tconst getNetworkInterfaces = () =>{\n\t\tconst list = [];\n\t\tconst ilist = [];\n\t\tconst interfaces = os.networkInterfaces();\n\t\tfor (let iface in interfaces) {\n\t\t\tfor (let i in interfaces[iface]) {\n\t\t\t\tconst f = interfaces[iface][i];\n\t\t\t\tif (f.internal) {\n\t\t\t\t\tilist.push({ f,iface });\n\t\t\t\t} else{\n\t\t\t\t\tlist.push({ f,iface });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list.length > 0 ? list : ilist;\n\t};\n\n\tconst interfaces = getNetworkInterfaces();\n\tfor (let { f,iface } of interfaces) {\n\t\tthis.set(METRIC.OS_NETWORK_ADDRESS, f.address, { interface: iface, family: f.family });\n\t\tthis.set(METRIC.OS_NETWORK_MAC, f.mac, { interface: iface, family: f.family });\n\t}\n\n\tconst d = new Date();\n\tthis.set(METRIC.OS_DATETIME_UNIX, d.valueOf());\n\tthis.set(METRIC.OS_DATETIME_ISO, d.toISOString());\n\tthis.set(METRIC.OS_DATETIME_UTC, d.toUTCString());\n\tthis.set(METRIC.OS_DATETIME_TZ_OFFSET, d.getTimezoneOffset());\n\n\tconst load = os.loadavg();\n\tthis.set(METRIC.OS_CPU_LOAD_1, load[0]);\n\tthis.set(METRIC.OS_CPU_LOAD_5, load[1]);\n\tthis.set(METRIC.OS_CPU_LOAD_15, load[2]);\n\n\tif (eventLoop && eventLoop.sense) {\n\t\tconst stat = eventLoop.sense();\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_MIN, stat.min);\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_AVG, stat.num ? stat.sum / stat.num : 0);\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_MAX, stat.max);\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_COUNT, stat.num);\n\t}\n\n\t// this.increment(METRIC.MOLECULER_METRICS_COMMON_COLLECT_TOTAL);\n\tconst duration = end();\n\n\treturn this.broker.Promise.resolve()\n\t\t.then(() => cpuUsage().then(res => {\n\t\t\tthis.set(METRIC.OS_CPU_UTILIZATION, res.avg);\n\n\t\t\ttry {\n\t\t\t\tconst cpus = os.cpus();\n\t\t\t\tthis.set(METRIC.OS_CPU_TOTAL, cpus.length);\n\t\t\t\tthis.set(METRIC.OS_CPU_USER, cpus.reduce((a,b) => a + b.times.user, 0));\n\t\t\t\tthis.set(METRIC.OS_CPU_SYSTEM, cpus.reduce((a,b) => a + b.times.sys, 0));\n\n\t\t\t\tcpus.forEach((cpu, index) => {\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_MODEL, cpu.model, { index });\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_SPEED, cpu.speed, { index });\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_TIMES_USER, cpu.times.user, { index });\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_TIMES_SYS, cpu.times.sys, { index });\n\t\t\t\t});\n\n\t\t\t} catch(err) {\n\t\t\t\t// silent\n\t\t\t}\n\t\t}))\n\t\t.catch(() => {\n\t\t\t// silent this.logger.warn(\"Unable to collect CPU usage metrics.\", err);\n\t\t})\n\t\t.then(() => {\n\t\t\tthis.logger.debug(`Collected common metric values in ${duration.toFixed(3)} msec.`);\n\t\t});\n}\n\n/**\n * Get OS user info (safe-mode)\n *\n * @returns\n */\nfunction getUserInfo() {\n\ttry {\n\t\treturn os.userInfo();\n\t} catch (e) {\n\t\t/* istanbul ignore next */\n\t\treturn {};\n\t}\n}\n\n/**\n * Measure event loop lag.\n *\n * @returns {Promise<Number>}\n *\nfunction measureEventLoopLag() {\n\treturn new Promise(resolve => {\n\t\tconst start = process.hrtime();\n\t\tsetImmediate(() => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tresolve(delta[0] * 1e9 + delta[1]);\n\t\t});\n\t});\n}*/\n\nmodule.exports = {\n\tregisterCommonMetrics,\n\tupdateCommonMetrics\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * CPU usage measure.\n *\n * Based on: https://github.com/icebob/cpu\n */\nconst os = require(\"os\");\n\n/* istanbul ignore next */\nmodule.exports = function getCpuUsage(sampleTime = 100) {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tconst first = os.cpus().map(cpu => cpu.times);\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tconst second = os.cpus().map(cpu => cpu.times);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst third = os.cpus().map(cpu => cpu.times);\n\n\t\t\t\t\t\t\tconst usages = [];\n\t\t\t\t\t\t\tfor (let i = 0; i < first.length; i++) {\n\t\t\t\t\t\t\t\tconst first_idle = first[i].idle;\n\t\t\t\t\t\t\t\tconst first_total = first[i].idle + first[i].user + first[i].nice + first[i].sys + first[i].irq;\n\t\t\t\t\t\t\t\tconst second_idle = second[i].idle;\n\t\t\t\t\t\t\t\tconst second_total = second[i].idle + second[i].user + second[i].nice + second[i].sys + second[i].irq;\n\t\t\t\t\t\t\t\tconst third_idle = third[i].idle;\n\t\t\t\t\t\t\t\tconst third_total = third[i].idle + third[i].user + third[i].nice + third[i].sys + third[i].irq;\n\t\t\t\t\t\t\t\tconst first_usage = 1 - (second_idle - first_idle) / (second_total - first_total);\n\t\t\t\t\t\t\t\tconst second_usage = 1 - (third_idle - second_idle) / (third_total - second_total);\n\t\t\t\t\t\t\t\tconst per_usage = (first_usage + second_usage) / 2 * 100;\n\t\t\t\t\t\t\t\tusages.push(per_usage);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\tavg: usages.reduce((a, b) => a + b, 0) / usages.length,\n\t\t\t\t\t\t\t\tusages\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, sampleTime);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}, sampleTime);\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { match, isFunction, isPlainObject, isString } = require(\"../utils\");\nconst METRIC = require(\"./constants\");\nconst Types = require(\"./types\");\nconst Reporters = require(\"./reporters\");\nconst { registerCommonMetrics, updateCommonMetrics } = require(\"./commons\");\n\nconst METRIC_NAME_REGEXP \t= /^[a-zA-Z_][a-zA-Z0-9-_:.]*$/;\nconst METRIC_LABEL_REGEXP \t= /^[a-zA-Z_][a-zA-Z0-9-_.]*$/;\n\n/**\n * Metric Registry class\n */\nclass MetricRegistry {\n\n\t/**\n\t * Creates an instance of MetricRegistry.\n\t *\n\t * @param {ServiceBroker} broker\n\t * @param {Object} opts\n\t * @memberof MetricRegistry\n\t */\n\tconstructor(broker, opts) {\n\t\tthis.broker = broker;\n\t\tthis.logger = broker.getLogger(\"metrics\");\n\n\t\tthis.dirty = true;\n\n\t\tif (opts === true || opts === false)\n\t\t\topts = { enabled: opts };\n\n\t\tthis.opts = _.defaultsDeep({}, opts, {\n\t\t\tenabled: true,\n\t\t\tcollectProcessMetrics: process.env.NODE_ENV !== \"test\",\n\t\t\tcollectInterval: 5,\n\n\t\t\treporter: false,\n\n\t\t\tdefaultBuckets: [1, 5, 10, 25, 50, 100, 250, 500, 1000, 2500, 5000, 10000], // in milliseconds\n\t\t\tdefaultQuantiles: [0.5, 0.9, 0.95, 0.99, 0.999], // percentage\n\t\t\tdefaultMaxAgeSeconds: 60,\n\t\t\tdefaultAgeBuckets: 10,\n\t\t\tdefaultAggregator: \"sum\"\n\t\t});\n\n\t\tthis.store = new Map();\n\n\t\tif (this.opts.enabled)\n\t\t\tthis.logger.info(\"Metrics: Enabled\");\n\t}\n\n\t/**\n\t * Initialize Registry.\n\t */\n\tinit() {\n\t\tif (this.opts.enabled) {\n\n\t\t\t// Create Reporter instances\n\t\t\tif (this.opts.reporter) {\n\t\t\t\tconst reporters = Array.isArray(this.opts.reporter) ? this.opts.reporter : [this.opts.reporter];\n\n\t\t\t\tthis.reporter = _.compact(reporters).map(r => {\n\t\t\t\t\tconst reporter = Reporters.resolve(r);\n\t\t\t\t\treporter.init(this);\n\t\t\t\t\treturn reporter;\n\t\t\t\t});\n\n\t\t\t\tconst reporterNames = this.reporter.map(reporter => this.broker.getConstructorName(reporter));\n\t\t\t\tthis.logger.info(`Metric reporter${reporterNames.length > 1 ? \"s\" : \"\"}: ${reporterNames.join(\", \")}`);\n\t\t\t}\n\n\t\t\t// Start colllect timer\n\t\t\tif (this.opts.collectProcessMetrics) {\n\t\t\t\tthis.collectTimer = setInterval(() => {\n\t\t\t\t\tupdateCommonMetrics.call(this);\n\t\t\t\t}, this.opts.collectInterval * 1000);\n\t\t\t\tthis.collectTimer.unref();\n\n\t\t\t\tregisterCommonMetrics.call(this);\n\t\t\t\tupdateCommonMetrics.call(this);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stop Metric Registry\n\t */\n\tstop() {\n\t\tif (this.collectTimer) {\n\t\t\tclearInterval(this.collectTimer);\n\t\t}\n\n\t\tif (this.reporter) {\n\t\t\treturn this.broker.Promise.all(this.reporter.map(r => r.stop()));\n\t\t}\n\t}\n\n\t/**\n\t * Check metric is enabled?\n\t *\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tisEnabled() {\n\t\treturn this.opts.enabled;\n\t}\n\n\t/**\n\t * Register a new metric.\n\t *\n\t * @param {Object} opts\n\t * @returns {BaseMetric}\n\t * @memberof MetricRegistry\n\t */\n\tregister(opts) {\n\t\tif (!isPlainObject(opts))\n\t\t\tthrow new Error(\"Wrong argument. Must be an Object.\");\n\n\t\tif (!opts.type)\n\t\t\tthrow new Error(\"The metric 'type' property is mandatory.\");\n\n\t\tif (!opts.name)\n\t\t\tthrow new Error(\"The metric 'name' property is mandatory.\");\n\n\t\tif (!METRIC_NAME_REGEXP.test(opts.name))\n\t\t\tthrow new Error(\"The metric 'name' is not valid: \" + opts.name);\n\n\t\tif (Array.isArray(opts.labelNames)) {\n\t\t\topts.labelNames.forEach(name => {\n\t\t\t\tif (!METRIC_LABEL_REGEXP.test(name))\n\t\t\t\t\tthrow new Error(`The '${opts.name}' metric label name is not valid: ${name}`);\n\n\t\t\t});\n\t\t}\n\n\t\tconst MetricClass = Types.resolve(opts.type);\n\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = new MetricClass(opts, this);\n\t\tthis.store.set(opts.name, item);\n\t\treturn item;\n\t}\n\n\t/**\n\t * Check a metric by name.\n\t *\n\t * @param {String} name\n\t * @returns {Boolean}\n\t * @memberof MetricRegistry\n\t */\n\thasMetric(name) {\n\t\treturn this.store.has(name);\n\t}\n\n\t/**\n\t * Get metric by name\n\t *\n\t * @param {String} name\n\t * @returns {BaseMetric}\n\t * @memberof MetricRegistry\n\t */\n\tgetMetric(name) {\n\t\tconst item = this.store.get(name);\n\t\tif (!item)\n\t\t\treturn null;\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Increment a metric value.\n\t *\n\t * @param {String} name\n\t * @param {Object?} labels\n\t * @param {number} [value=1]\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tincrement(name, labels, value = 1, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\tif (!isFunction(item.increment))\n\t\t\tthrow new Error(\"Invalid metric type. Incrementing works only with counter & gauge metric types.\");\n\n\t\treturn item.increment(labels, value, timestamp);\n\t}\n\n\t/**\n\t * Decrement a metric value.\n\t *\n\t * @param {String} name\n\t * @param {Object?} labels\n\t * @param {number} [value=1]\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tdecrement(name, labels, value = 1, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\tif (!isFunction(item.decrement))\n\t\t\tthrow new Error(\"Invalid metric type. Decrementing works only with gauge metric type.\");\n\n\t\treturn item.decrement(labels, value, timestamp);\n\t}\n\n\t/**\n\t * Set a metric value.\n\t *\n\t * @param {String} name\n\t * @param {*} value\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tset(name, value, labels, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\tif (!isFunction(item.set))\n\t\t\tthrow new Error(\"Invalid metric type. Value setting works only with counter, gauge & info metric types.\");\n\n\t\treturn item.set(value, labels, timestamp);\n\t}\n\n\t/**\n\t * Observe a metric.\n\t *\n\t * @param {String} name\n\t * @param {Number} value\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tobserve(name, value, labels, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\tif (!isFunction(item.observe))\n\t\t\tthrow new Error(\"Invalid metric type. Observing works only with histogram metric type.\");\n\n\t\treturn item.observe(value, labels, timestamp);\n\t}\n\n\t/**\n\t * Reset metric values.\n\t *\n\t * @param {String} name\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\treset(name, labels, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\titem.reset(labels, timestamp);\n\t}\n\n\t/**\n\t * Reset metric all values.\n\t *\n\t * @param {String} name\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tresetAll(name, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\titem.resetAll(timestamp);\n\t}\n\n\t/**\n\t * Start a timer & observe the elapsed time.\n\t *\n\t * @param {String} name\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns {Function} `end`˙function.\n\t * @memberof MetricRegistry\n\t */\n\ttimer(name, labels, timestamp) {\n\t\tlet item;\n\t\tif (name && this.opts.enabled) {\n\t\t\titem = this.getMetric(name);\n\t\t\tif (!isFunction(item.observe) && !isFunction(item.set)) {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthrow new Error(\"Invalid metric type. Timing works only with histogram or gauge metric types\");\n\t\t\t}\n\t\t}\n\n\t\tconst start = process.hrtime();\n\t\treturn () => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tconst duration = (delta[0] + delta[1] / 1e9) * 1000;\n\n\t\t\tif (item) {\n\t\t\t\tif (item.type == METRIC.TYPE_HISTOGRAM)\n\t\t\t\t\titem.observe(duration, labels, timestamp);\n\t\t\t\telse if (item.type == METRIC.TYPE_GAUGE)\n\t\t\t\t\titem.set(duration, labels, timestamp);\n\t\t\t}\n\n\t\t\treturn duration;\n\t\t};\n\t}\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof MetricRegistry\n\t */\n\tchanged(metric, value, labels, timestamp) {\n\t\tthis.dirty = true;\n\t\tif (Array.isArray(this.reporter))\n\t\t\tthis.reporter.forEach(reporter => reporter.metricChanged(metric, value, labels, timestamp));\n\t}\n\n\t/**\n\t * List all registered metrics with labels & values.\n\t *\n\t * @param {Object?} opts\n\t * @param {String|Array<String>|null} opts.types\n\t * @param {String|Array<String>|null} opts.includes\n\t * @param {String|Array<String>|null} opts.excludes\n\t */\n\tlist(opts) {\n\t\tconst res = [];\n\t\topts = opts || {};\n\n\t\tconst types = opts.types != null ? (isString(opts.types) ? [opts.types] : opts.types) : null;\n\t\tconst includes = opts.includes != null ? (isString(opts.includes) ? [opts.includes] : opts.includes) : null;\n\t\tconst excludes = opts.excludes != null ? (isString(opts.excludes) ? [opts.excludes] : opts.excludes) : null;\n\n\t\tthis.store.forEach(metric => {\n\t\t\tif (types && !types.some(type => metric.type == type))\n\t\t\t\treturn;\n\n\t\t\tif (includes && !includes.some(pattern => match(metric.name, pattern)))\n\t\t\t\treturn;\n\n\t\t\tif (excludes && !excludes.every(pattern => !match(metric.name, pattern)))\n\t\t\t\treturn;\n\n\t\t\tres.push(metric.toObject());\n\t\t});\n\n\t\treturn res;\n\t}\n\n\n\t/**\n\t * Pluralize metric units.\n\t *\n\t * @param {String} unit\n\t * @returns {String}\n\t */\n\tpluralizeUnit(unit) {\n\t\tswitch(unit) {\n\t\t\tcase METRIC.UNIT_GHZ:\n\t\t\t\treturn unit;\n\t\t}\n\t\treturn unit + \"s\";\n\t}\n}\n\nmodule.exports = MetricRegistry;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst METRIC = require(\"./constants\");\n\nconst MetricRegistry = require(\"./registry\");\nconst BaseMetric = require(\"./types/base\");\nconst CounterMetric = require(\"./types/counter\");\nconst GaugeMetric = require(\"./types/gauge\");\nconst HistrogramMetric = require(\"./types/histogram\");\nconst InfoMetric = require(\"./types/info\");\n\nconst Reporters = require(\"./reporters\");\n\nmodule.exports = {\n\tMETRIC: METRIC,\n\n\tMetricRegistry,\n\n\tBaseMetric,\n\tCounterMetric,\n\tGaugeMetric,\n\tHistrogramMetric,\n\tInfoMetric,\n\n\tReporters\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst P \t\t\t\t= require(\"./packets\");\nconst { Packet } \t\t= require(\"./packets\");\nconst E \t\t\t\t= require(\"./errors\");\n\nconst { Transform } \t= require(\"stream\");\nconst { METRIC }\t\t= require(\"./metrics\");\n\n/**\n * Transit class\n *\n * @class Transit\n */\nclass Transit {\n\n\t/**\n\t * Create an instance of Transit.\n\t *\n\t * @param {ServiceBroker} Broker instance\n\t * @param {Transporter} Transporter instance\n\t * @param {Object?} opts\n\t *\n\t * @memberof Transit\n\t */\n\tconstructor(broker, transporter, opts) {\n\t\tthis.broker = broker;\n\t\tthis.Promise = broker.Promise;\n\t\tthis.logger = broker.getLogger(\"transit\");\n\t\tthis.nodeID = broker.nodeID;\n\t\tthis.metrics = broker.metrics;\n\t\tthis.instanceID = broker.instanceID;\n\t\tthis.tx = transporter;\n\t\tthis.opts = opts;\n\t\tthis.discoverer = broker.registry.discoverer;\n\n\t\tthis.pendingRequests = new Map();\n\t\tthis.pendingReqStreams = new Map();\n\t\tthis.pendingResStreams = new Map();\n\n\t\t/* deprecated */\n\t\tthis.stat = {\n\t\t\tpackets: {\n\t\t\t\tsent: {\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tbytes: 0\n\t\t\t\t},\n\t\t\t\treceived: {\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tbytes: 0\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.connected = false;\n\t\tthis.disconnecting = false;\n\t\tthis.isReady = false;\n\n\t\tconst wrappedMessageHandler = (cmd, packet) => this.messageHandler(cmd, packet);\n\n\t\tthis.publish = this.broker.wrapMethod(\"transitPublish\", this.publish, this);\n\t\tthis.messageHandler = this.broker.wrapMethod(\"transitMessageHandler\", this.messageHandler, this);\n\n\n\t\tif (this.tx) {\n\t\t\tthis.tx.init(this, wrappedMessageHandler, this.afterConnect.bind(this));\n\n\t\t\tthis.tx.send = this.broker.wrapMethod(\"transporterSend\", this.tx.send, this.tx);\n\t\t\tthis.tx.receive = this.broker.wrapMethod(\"transporterReceive\", this.tx.receive, this.tx, { reverse: true });\n\t\t}\n\n\t\tthis.__connectResolve = null;\n\n\t\tthis.registerMoleculerMetrics();\n\t}\n\n\t/**\n\t * Register Moleculer Transit Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tif (!this.broker.isMetricsEnabled()) return;\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_READY, type: METRIC.TYPE_GAUGE, description: \"Transit is ready\" }).set(0);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_CONNECTED, type: METRIC.TYPE_GAUGE, description: \"Transit is connected\" }).set(0);\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_PONG_TIME, type: METRIC.TYPE_GAUGE, labelNames: [\"targetNodeID\"], description: \"Ping time\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_PONG_SYSTIME_DIFF, type: METRIC.TYPE_GAUGE, labelNames: [\"targetNodeID\"], description: \"System time difference between nodes\" });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL, type: METRIC.TYPE_COUNTER, description: \"Number of orphan responses\" });\n\t}\n\n\t/**\n\t * It will be called after transporter connected or reconnected.\n\t *\n\t * @param {any} wasReconnect\n\t * @returns {Promise}\n\t *\n\t * @memberof Transit\n\t */\n\tafterConnect(wasReconnect) {\n\t\treturn this.Promise.resolve()\n\n\t\t\t.then(() => {\n\t\t\t\tif (wasReconnect) {\n\t\t\t\t\t// After reconnecting, we should send a broadcast INFO packet because there may new nodes.\n\t\t\t\t\t// In case of disabled balancer, it triggers the `makeBalancedSubscriptions` method.\n\t\t\t\t\treturn this.discoverer.sendLocalNodeInfo();\n\t\t\t\t} else {\n\t\t\t\t\t// After connecting we should subscribe to topics\n\t\t\t\t\treturn this.makeSubscriptions();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t.then(() => this.discoverer.discoverAllNodes())\n\t\t\t.delay(500) // Waiting for incoming INFO packets\n\n\t\t\t.then(() => {\n\t\t\t\tthis.connected = true;\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_CONNECTED, 1);\n\n\t\t\t\tthis.broker.broadcastLocal(\"$transporter.connected\", { wasReconnect: !!wasReconnect });\n\n\t\t\t\tif (this.__connectResolve) {\n\t\t\t\t\tthis.__connectResolve();\n\t\t\t\t\tthis.__connectResolve = null;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\t/**\n\t * Connect with transporter. If failed, try again after 5 sec.\n\t *\n\t * @memberof Transit\n\t */\n\tconnect() {\n\t\tthis.logger.info(\"Connecting to the transporter...\");\n\t\treturn new this.Promise(resolve => {\n\t\t\tthis.__connectResolve = resolve;\n\n\t\t\tconst doConnect = () => {\n\t\t\t\tlet reconnectStarted = false;\n\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tconst errorHandler = (err) => {\n\t\t\t\t\tif (this.disconnecting) return;\n\t\t\t\t\tif (reconnectStarted) return;\n\n\t\t\t\t\tthis.logger.warn(\"Connection is failed.\", err && err.message || \"Unknown error\");\n\t\t\t\t\tthis.logger.debug(err);\n\n\t\t\t\t\tif (this.opts.disableReconnect) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treconnectStarted = true;\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.logger.info(\"Reconnecting...\");\n\t\t\t\t\t\tdoConnect();\n\t\t\t\t\t}, 5 * 1000);\n\t\t\t\t};\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.tx.connect(errorHandler).catch(errorHandler);\n\t\t\t};\n\n\t\t\tdoConnect();\n\n\t\t});\n\t}\n\n\t/**\n\t * Disconnect with transporter\n\t *\n\t * @memberof Transit\n\t */\n\tdisconnect() {\n\t\tthis.connected = false;\n\t\tthis.isReady = false;\n\t\tthis.disconnecting = true;\n\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_CONNECTED, 0);\n\n\t\tthis.broker.broadcastLocal(\"$transporter.disconnected\", { graceFul: true });\n\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\tif (this.tx.connected) {\n\t\t\t\t\treturn this.discoverer.localNodeDisconnected()\n\t\t\t\t\t\t.then(() => this.tx.disconnect());\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => this.disconnecting = false);\n\t}\n\n\t/**\n\t * Local broker is ready (all services loaded).\n\t * Send INFO packet to all other nodes\n\t */\n\tready() {\n\t\tif (this.connected) {\n\t\t\tthis.isReady = true;\n\t\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_READY, 1);\n\t\t\treturn this.discoverer.localNodeReady();\n\t\t}\n\t}\n\n\t/**\n\t * Send DISCONNECT to remote nodes\n\t *\n\t * @returns {Promise}\n\t *\n\t * @memberof Transit\n\t */\n\tsendDisconnectPacket() {\n\t\treturn this.publish(new Packet(P.PACKET_DISCONNECT)).catch(/* istanbul ignore next */ err => this.logger.debug(\"Unable to send DISCONNECT packet.\", err));\n\t}\n\n\t/**\n\t * Subscribe to topics for transportation\n\t *\n\t * @memberof Transit\n\t */\n\tmakeSubscriptions() {\n\t\tthis.subscribing = this.tx.makeSubscriptions([\n\n\t\t\t// Subscribe to broadcast events\n\t\t\t{ cmd: P.PACKET_EVENT, nodeID: this.nodeID },\n\n\t\t\t// Subscribe to requests\n\t\t\t{ cmd: P.PACKET_REQUEST, nodeID: this.nodeID },\n\n\t\t\t// Subscribe to node responses of requests\n\t\t\t{ cmd: P.PACKET_RESPONSE, nodeID: this.nodeID },\n\n\t\t\t// Discover handler\n\t\t\t{ cmd: P.PACKET_DISCOVER },\n\t\t\t{ cmd: P.PACKET_DISCOVER, nodeID: this.nodeID },\n\n\t\t\t// NodeInfo handler\n\t\t\t{ cmd: P.PACKET_INFO }, // Broadcasted INFO. If a new node connected\n\t\t\t{ cmd: P.PACKET_INFO, nodeID: this.nodeID }, // Response INFO to DISCOVER packet\n\n\t\t\t// Disconnect handler\n\t\t\t{ cmd: P.PACKET_DISCONNECT },\n\n\t\t\t// Heartbeat handler\n\t\t\t{ cmd: P.PACKET_HEARTBEAT },\n\n\t\t\t// Ping handler\n\t\t\t{ cmd: P.PACKET_PING }, // Broadcasted\n\t\t\t{ cmd: P.PACKET_PING, nodeID: this.nodeID }, // Targeted\n\n\t\t\t// Pong handler\n\t\t\t{ cmd: P.PACKET_PONG, nodeID: this.nodeID }\n\n\t\t]).then(() => {\n\t\t\tthis.subscribing = null;\n\t\t});\n\n\t\treturn this.subscribing;\n\t}\n\n\t/**\n\t * Message handler for incoming packets\n\t *\n\t * @param {Array} topic\n\t * @param {String} msg\n\t * @returns {Boolean} If packet is processed return with `true`\n\t *\n\t * @memberof Transit\n\t */\n\tmessageHandler(cmd, packet) {\n\t\ttry {\n\t\t\tconst payload = packet.payload;\n\n\t\t\t// Check payload\n\t\t\tif (!payload) {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthrow new E.MoleculerServerError(\"Missing response payload.\", 500, \"MISSING_PAYLOAD\");\n\t\t\t}\n\n\t\t\t// Check protocol version\n\t\t\tif (payload.ver !== this.broker.PROTOCOL_VERSION && !this.opts.disableVersionCheck) {\n\t\t\t\tthrow new E.ProtocolVersionMismatchError({\n\t\t\t\t\tnodeID: payload.sender,\n\t\t\t\t\tactual: this.broker.PROTOCOL_VERSION,\n\t\t\t\t\treceived: payload.ver\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (payload.sender === this.nodeID) {\n\n\t\t\t\t// Detect nodeID conflict\n\t\t\t\tif (cmd === P.PACKET_INFO && payload.instanceID !== this.instanceID) {\n\t\t\t\t\treturn this.broker.fatal(\"ServiceBroker has detected a nodeID conflict, use unique nodeIDs. ServiceBroker stopped.\");\n\t\t\t\t}\n\n\t\t\t\t// Skip own packets (if only built-in balancer disabled)\n\t\t\t\tif (cmd !== P.PACKET_EVENT && cmd !== P.PACKET_REQUEST && cmd !== P.PACKET_RESPONSE)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Request\n\t\t\tif (cmd === P.PACKET_REQUEST) {\n\t\t\t\treturn this.requestHandler(payload);\n\t\t\t}\n\n\t\t\t// Response\n\t\t\telse if (cmd === P.PACKET_RESPONSE) {\n\t\t\t\tthis.responseHandler(payload);\n\t\t\t}\n\n\t\t\t// Event\n\t\t\telse if (cmd === P.PACKET_EVENT) {\n\t\t\t\tthis.eventHandler(payload);\n\t\t\t}\n\n\t\t\t// Discover\n\t\t\telse if (cmd === P.PACKET_DISCOVER) {\n\t\t\t\tthis.discoverer.sendLocalNodeInfo(payload.sender);\n\t\t\t}\n\n\t\t\t// Node info\n\t\t\telse if (cmd === P.PACKET_INFO) {\n\t\t\t\tthis.discoverer.processRemoteNodeInfo(payload.sender, payload);\n\t\t\t}\n\n\t\t\t// Disconnect\n\t\t\telse if (cmd === P.PACKET_DISCONNECT) {\n\t\t\t\tthis.discoverer.remoteNodeDisconnected(payload.sender, false);\n\t\t\t}\n\n\t\t\t// Heartbeat\n\t\t\telse if (cmd === P.PACKET_HEARTBEAT) {\n\t\t\t\tthis.discoverer.heartbeatReceived(payload.sender, payload);\n\t\t\t}\n\n\t\t\t// Ping\n\t\t\telse if (cmd === P.PACKET_PING) {\n\t\t\t\tthis.sendPong(payload);\n\t\t\t}\n\n\t\t\t// Pong\n\t\t\telse if (cmd === P.PACKET_PONG) {\n\t\t\t\tthis.processPong(payload);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\tthis.logger.error(err, cmd, packet);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Handle incoming event\n\t *\n\t * @param {any} payload\n\t * @memberof Transit\n\t */\n\teventHandler(payload) {\n\t\tthis.logger.debug(`Event '${payload.event}' received from '${payload.sender}' node` + (payload.groups ? ` in '${payload.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\tif (!this.broker.started) {\n\t\t\tthis.logger.warn(`Incoming '${payload.event}' event from '${payload.sender}' node is dropped, because broker is stopped.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Create caller context\n\t\tconst ctx = new this.broker.ContextFactory(this.broker);\n\t\tctx.id = payload.id;\n\t\tctx.eventName = payload.event;\n\t\tctx.setParams(payload.data, this.broker.options.contextParamsCloning);\n\t\tctx.eventGroups = payload.groups;\n\t\tctx.eventType = payload.broadcast ? \"broadcast\" : \"emit\";\n\t\tctx.meta = payload.meta || {};\n\t\tctx.level = payload.level;\n\t\tctx.tracing = !!payload.tracing;\n\t\tctx.parentID = payload.parentID;\n\t\tctx.requestID = payload.requestID;\n\t\tctx.caller = payload.caller;\n\t\tctx.nodeID = payload.sender;\n\n\t\tthis.broker.emitLocalServices(ctx);\n\t}\n\n\t/**\n\t * Handle incoming request\n\t *\n\t * @param {Object} payload\n\t *\n\t * @memberof Transit\n\t */\n\trequestHandler(payload) {\n\t\tthis.logger.debug(`<= Request '${payload.action}' received from '${payload.sender}' node.`);\n\n\t\ttry {\n\t\t\tif (!this.broker.started) {\n\t\t\t\tthis.logger.warn(`Incoming '${payload.action}' request from '${payload.sender}' node is dropped because broker is stopped.`);\n\t\t\t\tthrow new E.ServiceNotAvailableError({ action: payload.action, nodeID: this.nodeID });\n\t\t\t}\n\n\t\t\tlet pass;\n\t\t\tif (payload.stream !== undefined) {\n\t\t\t\tpass = this._handleIncomingRequestStream(payload);\n\t\t\t\tif (pass === null) // eslint-disable-line security/detect-possible-timing-attacks\n\t\t\t\t\treturn this.Promise.resolve();\n\t\t\t}\n\n\t\t\tconst endpoint = this.broker._getLocalActionEndpoint(payload.action);\n\n\t\t\t// Recreate caller context\n\t\t\tconst ctx = new this.broker.ContextFactory(this.broker);\n\t\t\tctx.setEndpoint(endpoint);\n\t\t\tctx.id = payload.id;\n\t\t\tctx.setParams(pass ? pass : payload.params, this.broker.options.contextParamsCloning);\n\t\t\tctx.parentID = payload.parentID;\n\t\t\tctx.requestID = payload.requestID;\n\t\t\tctx.caller = payload.caller;\n\t\t\tctx.meta = payload.meta || {};\n\t\t\tctx.level = payload.level;\n\t\t\tctx.tracing = payload.tracing;\n\t\t\tctx.nodeID = payload.sender;\n\n\t\t\tif (payload.timeout != null)\n\t\t\t\tctx.options.timeout = payload.timeout;\n\n\t\t\tconst p = endpoint.action.handler(ctx);\n\t\t\t// Pointer to Context\n\t\t\tp.ctx = ctx;\n\n\t\t\treturn p\n\t\t\t\t.then(res => this.sendResponse(payload.sender, payload.id, ctx.meta, res, null))\n\t\t\t\t.catch(err => this.sendResponse(payload.sender, payload.id, ctx.meta, null, err));\n\n\t\t} catch (err) {\n\t\t\treturn this.sendResponse(payload.sender, payload.id, payload.meta, null, err);\n\t\t}\n\t}\n\n\t/**\n\t * Handle incoming request stream.\n\t *\n\t * @param {Object} payload\n\t * @returns {Stream}\n\t */\n\t_handleIncomingRequestStream(payload) {\n\t\tlet pass = this.pendingReqStreams.get(payload.id);\n\t\tlet isNew = false;\n\n\t\tif (!payload.stream && !pass) {\n\t\t\t// It is not a stream data\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!pass) {\n\t\t\tisNew = true;\n\t\t\tthis.logger.debug(`<= New stream is received from '${payload.sender}'. Seq: ${payload.seq}`);\n\n\t\t\t// Create a new pass stream\n\t\t\tpass = new Transform({\n\t\t\t\tobjectMode: payload.meta && payload.meta[\"$streamObjectMode\"],\n\t\t\t\ttransform: function(chunk, encoding, done) {\n\t\t\t\t\tthis.push(chunk);\n\t\t\t\t\treturn done();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpass.$prevSeq = -1;\n\t\t\tpass.$pool = new Map();\n\n\t\t\tthis.pendingReqStreams.set(payload.id, pass);\n\t\t}\n\n\t\tif (payload.seq > pass.$prevSeq + 1) {\n\t\t\t// Some chunks are late. Store these chunks.\n\t\t\tthis.logger.info(`Put the chunk into pool (size: ${pass.$pool.size}). Seq: ${payload.seq}`);\n\n\t\t\tpass.$pool.set(payload.seq, payload);\n\n\t\t\t// TODO: start timer.\n\t\t\t// TODO: check length of pool.\n\t\t\t// TODO: reset seq\n\n\t\t\treturn isNew ? pass : null;\n\t\t}\n\n\t\t// the next stream chunk received\n\t\tpass.$prevSeq = payload.seq;\n\n\t\tif (pass.$prevSeq > 0) {\n\t\t\tif (!payload.stream) {\n\n\t\t\t\t// Check stream error\n\t\t\t\tif (payload.meta && payload.meta[\"$streamError\"]) {\n\t\t\t\t\tpass.emit(\"error\", this._createErrFromPayload(payload.meta[\"$streamError\"], payload.sender));\n\t\t\t\t}\n\n\t\t\t\tthis.logger.debug(`<= Stream closing is received from '${payload.sender}'. Seq: ${payload.seq}`);\n\n\t\t\t\t// End of stream\n\t\t\t\tpass.end();\n\n\t\t\t\t// Remove pending request stream\n\t\t\t\tthis.pendingReqStreams.delete(payload.id);\n\n\t\t\t\treturn null;\n\n\t\t\t} else {\n\t\t\t\tthis.logger.debug(`<= Stream chunk is received from '${payload.sender}'. Seq: ${payload.seq}`);\n\t\t\t\tpass.write(payload.params.type === \"Buffer\" ? Buffer.from(payload.params.data) : payload.params);\n\t\t\t}\n\t\t}\n\n\t\t// Check newer chunks in the pool\n\t\tif (pass.$pool.size > 0) {\n\t\t\tthis.logger.warn(`Has stored packets. Size: ${pass.$pool.size}`);\n\t\t\tconst nextSeq = pass.$prevSeq + 1;\n\t\t\tconst nextPacket = pass.$pool.get(nextSeq);\n\t\t\tif (nextPacket) {\n\t\t\t\tpass.$pool.delete(nextSeq);\n\t\t\t\tsetImmediate(() => this.requestHandler(nextPacket));\n\t\t\t}\n\t\t}\n\n\t\treturn isNew ? pass : null;\n\t}\n\n\t/**\n\t * Create an Error instance from payload ata\n\t * @param {Object} error\n\t * @param {String} sender\n\t */\n\t_createErrFromPayload(error, sender) {\n\t\tlet err = E.recreateError(error);\n\t\tif (!err) {\n\t\t\terr = new Error(error.message);\n\t\t\terr.name = error.name;\n\t\t\terr.code = error.code;\n\t\t\terr.type = error.type;\n\t\t\terr.data = error.data;\n\t\t}\n\t\terr.retryable = error.retryable;\n\t\terr.nodeID = error.nodeID || sender;\n\n\t\tif (error.stack)\n\t\t\terr.stack = error.stack;\n\n\t\treturn err;\n\t}\n\n\t/**\n\t * Process incoming response of request\n\t *\n\t * @param {Object} packet\n\t *\n\t * @memberof Transit\n\t */\n\tresponseHandler(packet) {\n\t\tconst id = packet.id;\n\t\tconst req = this.pendingRequests.get(id);\n\n\t\t// If not exists (timed out), we skip response processing\n\t\tif (req == null) {\n\t\t\tthis.logger.debug(\"Orphan response is received. Maybe the request is timed out earlier. ID:\", packet.id, \", Sender:\", packet.sender);\n\t\t\tthis.metrics.increment(METRIC.MOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logger.debug(`<= Response '${req.action.name}' is received from '${packet.sender}'.`);\n\n\t\t// Update nodeID in context (if it uses external balancer)\n\t\treq.ctx.nodeID = packet.sender;\n\n\t\t// Merge response meta with original meta\n\t\tObject.assign(req.ctx.meta || {}, packet.meta || {});\n\n\t\t// Handle stream response\n\t\tif (packet.stream != null) {\n\t\t\tif (this._handleIncomingResponseStream(packet, req))\n\t\t\t\treturn;\n\t\t}\n\n\t\t// Remove pending request\n\t\tthis.removePendingRequest(id);\n\n\t\tif (!packet.success) {\n\t\t\treq.reject(this._createErrFromPayload(packet.error, packet.sender));\n\t\t} else {\n\t\t\treq.resolve(packet.data);\n\t\t}\n\t}\n\n\t/**\n\t * Handle incoming response stream.\n\t *\n\t * @param {Object} packet\n\t * @param {Object} req\n\t */\n\t_handleIncomingResponseStream(packet, req) {\n\t\tlet pass = this.pendingResStreams.get(packet.id);\n\t\tif (!pass && !packet.stream)\n\t\t\treturn false;\n\n\t\tif (!pass) {\n\t\t\tthis.logger.debug(`<= New stream is received from '${packet.sender}'. Seq: ${packet.seq}`);\n\n\t\t\tpass = new Transform({\n\t\t\t\tobjectMode: packet.meta && packet.meta[\"$streamObjectMode\"],\n\t\t\t\ttransform: function(chunk, encoding, done) {\n\t\t\t\t\tthis.push(chunk);\n\t\t\t\t\treturn done();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpass.$prevSeq = -1;\n\t\t\tpass.$pool = new Map();\n\n\t\t\tthis.pendingResStreams.set(packet.id, pass);\n\n\t\t\treq.resolve(pass);\n\t\t}\n\n\t\tif (packet.seq > pass.$prevSeq + 1) {\n\t\t\t// Some chunks are late. Store these chunks.\n\t\t\tthis.logger.info(`Put the chunk into pool (size: ${pass.$pool.size}). Seq: ${packet.seq}`);\n\n\t\t\tpass.$pool.set(packet.seq, packet);\n\n\t\t\t// TODO: start timer.\n\t\t\t// TODO: check length of pool.\n\t\t\t// TODO: resetting seq.\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// the next stream chunk received\n\t\tpass.$prevSeq = packet.seq;\n\n\t\tif (pass.$prevSeq > 0) {\n\n\t\t\tif (!packet.stream) {\n\t\t\t\t// Received error?\n\t\t\t\tif (!packet.success)\n\t\t\t\t\tpass.emit(\"error\", this._createErrFromPayload(packet.error, packet.sender));\n\n\t\t\t\tthis.logger.debug(`<= Stream closing is received from '${packet.sender}'. Seq: ${packet.seq}`);\n\n\t\t\t\t// End of stream\n\t\t\t\tpass.end();\n\n\t\t\t\t// Remove pending request\n\t\t\t\tthis.removePendingRequest(packet.id);\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\t\t\t\t// stream chunk\n\t\t\t\tthis.logger.debug(`<= Stream chunk is received from '${packet.sender}'. Seq: ${packet.seq}`);\n\t\t\t\tpass.write(packet.data.type === \"Buffer\" ? Buffer.from(packet.data.data):packet.data);\n\t\t\t}\n\t\t}\n\n\t\t// Check newer chunks in the pool\n\t\tif (pass.$pool.size > 0) {\n\t\t\tthis.logger.warn(`Has stored packets. Size: ${pass.$pool.size}`);\n\t\t\tconst nextSeq = pass.$prevSeq + 1;\n\t\t\tconst nextPacket = pass.$pool.get(nextSeq);\n\t\t\tif (nextPacket) {\n\t\t\t\tpass.$pool.delete(nextSeq);\n\t\t\t\tsetImmediate(() => this.responseHandler(nextPacket));\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Send a request to a remote service. It returns a Promise\n\t * what will be resolved when the response received.\n\t *\n\t * @param {<Context>} ctx Context of request\n\t * @returns {Promise}\n\t *\n\t * @memberof Transit\n\t */\n\trequest(ctx) {\n\t\tif (this.opts.maxQueueSize && this.pendingRequests.size >= this.opts.maxQueueSize)\n\t\t\t/* istanbul ignore next */\n\t\t\treturn this.Promise.reject(new E.QueueIsFullError({\n\t\t\t\taction: ctx.action.name,\n\t\t\t\tnodeID: this.nodeID,\n\t\t\t\tsize: this.pendingRequests.size,\n\t\t\t\tlimit: this.opts.maxQueueSize\n\t\t\t}));\n\n\t\t// Expanded the code that v8 can optimize it.  (TryCatchStatement disable optimizing)\n\t\treturn new this.Promise((resolve, reject) => this._sendRequest(ctx, resolve, reject));\n\t}\n\n\t/**\n\t * Send a remote request\n\t *\n\t * @param {<Context>} ctx      Context of request\n\t * @param {Function} resolve   Resolve of Promise\n\t * @param {Function} reject    Reject of Promise\n\t *\n\t * @memberof Transit\n\t */\n\t_sendRequest(ctx, resolve, reject) {\n\t\tconst isStream = ctx.params && ctx.params.readable === true && typeof ctx.params.on === \"function\" && typeof ctx.params.pipe === \"function\";\n\n\t\tconst request = {\n\t\t\taction: ctx.action,\n\t\t\tnodeID: ctx.nodeID,\n\t\t\tctx,\n\t\t\tresolve,\n\t\t\treject,\n\t\t\tstream: isStream // ???\n\t\t};\n\n\t\tconst payload = {\n\t\t\tid: ctx.id,\n\t\t\taction: ctx.action.name,\n\t\t\tparams: isStream ? null : ctx.params,\n\t\t\tmeta: ctx.meta,\n\t\t\ttimeout: ctx.options.timeout,\n\t\t\tlevel: ctx.level,\n\t\t\ttracing: ctx.tracing,\n\t\t\tparentID: ctx.parentID,\n\t\t\trequestID: ctx.requestID,\n\t\t\tcaller: ctx.caller,\n\t\t\tstream: isStream,\n\t\t};\n\n\t\tif (payload.stream) {\n\t\t\tif (ctx.params.readableObjectMode === true || (ctx.params._readableState && ctx.params._readableState.objectMode === true)) {\n\t\t\t\tpayload.meta = payload.meta || {};\n\t\t\t\tpayload.meta[\"$streamObjectMode\"] = true;\n\t\t\t}\n\t\t\tpayload.seq = 0;\n\t\t}\n\n\t\tconst packet = new Packet(P.PACKET_REQUEST, ctx.nodeID, payload);\n\n\t\tconst nodeName = ctx.nodeID ? `'${ctx.nodeID}'` : \"someone\";\n\t\tthis.logger.debug(`=> Send '${ctx.action.name}' request to ${nodeName} node.`);\n\n\t\tconst publishCatch = /* istanbul ignore next */ err => this.logger.error(`Unable to send '${ctx.action.name}' request to ${nodeName} node.`, err);\n\n\t\t// Add to pendings\n\t\tthis.pendingRequests.set(ctx.id, request);\n\n\t\t// Publish request\n\t\treturn this.publish(packet)\n\t\t\t.then(() => {\n\t\t\t\tif (isStream) {\n\t\t\t\t\t// Skip to send ctx.meta with chunks because it doesn't appear on the remote side.\n\t\t\t\t\tpayload.meta = {};\n\t\t\t\t\t// Still send information about objectMode in case of packets are received in wrong order\n\t\t\t\t\tif (ctx.params.readableObjectMode === true || (ctx.params._readableState && ctx.params._readableState.objectMode === true)) {\n\t\t\t\t\t\tpayload.meta[\"$streamObjectMode\"] = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst stream = ctx.params;\n\t\t\t\t\tstream.on(\"data\", (chunk) => {\n\t\t\t\t\t\tstream.pause();\n\t\t\t\t\t\tconst chunks = [];\n\t\t\t\t\t\tif (chunk instanceof Buffer && this.opts.maxChunkSize > 0 && chunk.length > this.opts.maxChunkSize) {\n\t\t\t\t\t\t\tlet len = chunk.length;\n\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\twhile (i < len) {\n\t\t\t\t\t\t\t\tchunks.push(chunk.slice(i, i += this.opts.maxChunkSize));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const ch of chunks) {\n\t\t\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\t\t\tcopy.stream = true;\n\t\t\t\t\t\t\tcopy.params = ch;\n\n\t\t\t\t\t\t\tthis.logger.debug(`=> Send stream chunk to ${nodeName} node. Seq: ${copy.seq}`);\n\n\t\t\t\t\t\t\tthis.publish(new Packet(P.PACKET_REQUEST, ctx.nodeID, copy))\n\t\t\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstream.resume();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.on(\"end\", () => {\n\t\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\t\tcopy.params = null;\n\t\t\t\t\t\tcopy.stream = false;\n\n\t\t\t\t\t\tthis.logger.debug(`=> Send stream closing to ${nodeName} node. Seq: ${copy.seq}`);\n\n\t\t\t\t\t\treturn this.publish(new Packet(P.PACKET_REQUEST, ctx.nodeID, copy))\n\t\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.on(\"error\", err => {\n\t\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\t\tcopy.stream = false;\n\t\t\t\t\t\tcopy.meta[\"$streamError\"] = this._createPayloadErrorField(err);\n\t\t\t\t\t\tcopy.params = null;\n\n\t\t\t\t\t\tthis.logger.debug(`=> Send stream error to ${nodeName} node.`, copy.meta[\"$streamError\"]);\n\n\t\t\t\t\t\treturn this.publish(new Packet(P.PACKET_REQUEST, ctx.nodeID, copy))\n\t\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tpublishCatch(err);\n\t\t\t\treject(err);\n\t\t\t});\n\t}\n\n\t/**\n\t * Send an event to a remote node.\n\t * The event is balanced by transporter\n\t *\n\t * @param {Context} ctx\n\t *\n\t * @memberof Transit\n\t */\n\tsendEvent(ctx) {\n\t\tconst groups = ctx.eventGroups;\n\t\tif (ctx.endpoint)\n\t\t\tthis.logger.debug(`=> Send '${ctx.eventName}' event to '${ctx.nodeID}' node` + (groups ? ` in '${groups.join(\", \")}' group(s)` : \"\") + \".\");\n\t\telse\n\t\t\tthis.logger.debug(`=> Send '${ctx.eventName}' event to '${groups.join(\", \")}' group(s).`);\n\n\t\treturn this.publish(new Packet(P.PACKET_EVENT, ctx.endpoint ? ctx.nodeID : null, {\n\t\t\tid: ctx.id,\n\t\t\tevent: ctx.eventName,\n\t\t\tdata: ctx.params,\n\t\t\tgroups,\n\t\t\tbroadcast: ctx.eventType == \"broadcast\",\n\t\t\tmeta: ctx.meta,\n\t\t\tlevel: ctx.level,\n\t\t\ttracing: ctx.tracing,\n\t\t\tparentID: ctx.parentID,\n\t\t\trequestID: ctx.requestID,\n\t\t\tcaller: ctx.caller,\n\t\t\tneedAck: ctx.needAck\n\t\t})).catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send '${ctx.eventName}' event to groups.`, err));\n\t}\n\n\t/**\n\t * Remove a pending request\n\t *\n\t * @param {any} id\n\t *\n\t * @memberof Transit\n\t */\n\tremovePendingRequest(id) {\n\t\tthis.pendingRequests.delete(id);\n\n\t\tthis.pendingReqStreams.delete(id);\n\t\tthis.pendingResStreams.delete(id);\n\t}\n\n\t/**\n\t * Remove a pending request & streams\n\t *\n\t * @param {String} nodeID\n\t *\n\t * @memberof Transit\n\t */\n\tremovePendingRequestByNodeID(nodeID) {\n\t\tthis.logger.debug(`Remove pending requests of '${nodeID}' node.`);\n\t\tthis.pendingRequests.forEach((req, id) => {\n\t\t\tif (req.nodeID === nodeID) {\n\t\t\t\tthis.pendingRequests.delete(id);\n\n\t\t\t\t// Reject the request\n\t\t\t\treq.reject(new E.RequestRejectedError({\n\t\t\t\t\taction: req.action.name,\n\t\t\t\t\tnodeID: req.nodeID\n\t\t\t\t}));\n\n\t\t\t\tthis.pendingReqStreams.delete(id);\n\t\t\t\tthis.pendingResStreams.delete(id);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Create error field in outgoing payload\n\t *\n\t * @param {Error} err\n\t * @returns {Object}\n\t * @memberof Transit\n\t */\n\t_createPayloadErrorField(err) {\n\t\treturn {\n\t\t\tname: err.name,\n\t\t\tmessage: err.message,\n\t\t\tnodeID: err.nodeID || this.nodeID,\n\t\t\tcode: err.code,\n\t\t\ttype: err.type,\n\t\t\tretryable: err.retryable,\n\t\t\tstack: err.stack,\n\t\t\tdata: err.data\n\t\t};\n\t}\n\n\t/**\n\t * Send back the response of request\n\t *\n\t * @param {String} nodeID\n\t * @param {String} id\n\t * @param {any} meta\n\t * @param {any} data\n\t * @param {Error} err\n\t *\n\t * @memberof Transit\n\t */\n\tsendResponse(nodeID, id, meta, data, err) {\n\t\t// Publish the response\n\t\tconst payload = {\n\t\t\tid: id,\n\t\t\tmeta: meta,\n\t\t\tsuccess: err == null,\n\t\t\tdata: data\n\t\t};\n\n\t\tif (err)\n\t\t\tpayload.error = this._createPayloadErrorField(err);\n\n\t\tconst publishCatch = /* istanbul ignore next */ err => this.logger.error(`Unable to send '${id}' response to '${nodeID}' node.`, err);\n\n\t\tif (data && data.readable === true && typeof data.on === \"function\" && typeof data.pipe === \"function\") {\n\t\t\t// Streaming response\n\t\t\tpayload.stream = true;\n\t\t\tif (data.readableObjectMode === true || (data._readableState && data._readableState.objectMode === true)) {\n\t\t\t\tpayload.meta = payload.meta || {};\n\t\t\t\tpayload.meta[\"$streamObjectMode\"] = true;\n\t\t\t}\n\t\t\tpayload.seq = 0;\n\n\t\t\tconst stream = data;\n\t\t\tstream.pause();\n\n\t\t\tstream.on(\"data\", (chunk) => {\n\t\t\t\tstream.pause();\n\t\t\t\tconst chunks = [];\n\t\t\t\tif (chunk instanceof Buffer && this.opts.maxChunkSize > 0 && chunk.length > this.opts.maxChunkSize) {\n\t\t\t\t\tlet len = chunk.length;\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\twhile (i < len) {\n\t\t\t\t\t\tchunks.push(chunk.slice(i, i += this.opts.maxChunkSize));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t\tfor (const ch of chunks) {\n\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\tcopy.stream = true;\n\t\t\t\t\tcopy.data = ch;\n\n\t\t\t\t\tthis.logger.debug(`=> Send stream chunk to ${nodeID} node. Seq: ${copy.seq}`);\n\n\t\t\t\t\tthis.publish(new Packet(P.PACKET_RESPONSE, nodeID, copy))\n\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t}\n\t\t\t\tstream.resume();\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tstream.on(\"end\", () => {\n\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\tcopy.stream = false;\n\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\tcopy.data = null;\n\n\t\t\t\tthis.logger.debug(`=> Send stream closing to ${nodeID} node. Seq: ${copy.seq}`);\n\n\t\t\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, copy))\n\t\t\t\t\t.catch(publishCatch);\n\t\t\t});\n\n\t\t\tstream.on(\"error\", err => {\n\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\tcopy.stream = false;\n\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\tif (err) {\n\t\t\t\t\tcopy.success = false;\n\t\t\t\t\tcopy.error = this._createPayloadErrorField(err);\n\t\t\t\t}\n\n\t\t\t\tthis.logger.debug(`=> Send stream error to ${nodeID} node.`, copy.error);\n\n\t\t\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, copy))\n\t\t\t\t\t.catch(publishCatch);\n\t\t\t});\n\n\t\t\tpayload.data = null;\n\t\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, payload))\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (payload.stream)\n\t\t\t\t\t\tstream.resume();\n\t\t\t\t})\n\t\t\t\t.catch(publishCatch);\n\n\t\t}\n\n\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, payload))\n\t\t\t.catch(publishCatch);\n\t}\n\n\t/**\n\t * Discover other nodes. It will be called after success connect.\n\t *\n\t * @memberof Transit\n\t */\n\tdiscoverNodes() {\n\t\treturn this.publish(new Packet(P.PACKET_DISCOVER))\n\t\t\t.catch(/* istanbul ignore next */ err => this.logger.error(\"Unable to send DISCOVER packet.\", err));\n\t}\n\n\t/**\n\t * Discover a node. It will be called if we got message from an unknown node.\n\t *\n\t * @memberof Transit\n\t */\n\tdiscoverNode(nodeID) {\n\t\treturn this.publish(new Packet(P.PACKET_DISCOVER, nodeID))\n\t\t\t.catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send DISCOVER packet to '${nodeID}' node.`, err));\n\t}\n\n\t/**\n\t * Send node info package to other nodes.\n\t *\n\t * @memberof Transit\n\t */\n\tsendNodeInfo(info, nodeID) {\n\t\tif (!this.connected || !this.isReady) return this.Promise.resolve();\n\n\t\tconst p = !nodeID && this.broker.options.disableBalancer ? this.tx.makeBalancedSubscriptions() : this.Promise.resolve();\n\t\treturn p.then(() => this.publish(new Packet(P.PACKET_INFO, nodeID, {\n\t\t\tservices: info.services,\n\t\t\tipList: info.ipList,\n\t\t\thostname: info.hostname,\n\t\t\tclient: info.client,\n\t\t\tconfig: info.config,\n\t\t\tinstanceID: this.broker.instanceID,\n\t\t\tmetadata: info.metadata,\n\t\t\tseq: info.seq\n\t\t}))).catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send INFO packet to '${nodeID}' node.`, err));\n\n\t}\n\n\t/**\n\t * Send ping to a node (or all nodes if nodeID is null)\n\t *\n\t * @param {String} nodeID\n\t * @param {String} id\n\t * @returns\n\t * @memberof Transit\n\t */\n\tsendPing(nodeID, id) {\n\t\treturn this.publish(new Packet(P.PACKET_PING, nodeID, { time: Date.now(), id: id || this.broker.generateUid() }))\n\t\t\t.catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send PING packet to '${nodeID}' node.`, err));\n\t}\n\n\t/**\n\t * Send back pong response\n\t *\n\t * @param {Object} payload\n\t * @returns\n\t * @memberof Transit\n\t */\n\tsendPong(payload) {\n\t\treturn this.publish(new Packet(P.PACKET_PONG, payload.sender, {\n\t\t\ttime: payload.time,\n\t\t\tid: payload.id,\n\t\t\tarrived: Date.now()\n\t\t})).catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send PONG packet to '${payload.sender}' node.`, err));\n\t}\n\n\t/**\n\t * Process incoming PONG packet.\n\t * Measure ping time & current time difference.\n\t *\n\t * @param {Object} payload\n\t * @memberof Transit\n\t */\n\tprocessPong(payload) {\n\t\tconst now = Date.now();\n\t\tconst elapsedTime = now - payload.time;\n\t\tconst timeDiff = Math.round(now - payload.arrived - elapsedTime / 2);\n\n\t\t// this.logger.debug(`PING-PONG from '${payload.sender}' - Time: ${elapsedTime}ms, Time difference: ${timeDiff}ms`);\n\n\t\tthis.broker.broadcastLocal(\"$node.pong\", { nodeID: payload.sender, elapsedTime, timeDiff, id: payload.id });\n\n\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_PONG_TIME, elapsedTime, { targetNodeID: payload.sender });\n\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_PONG_SYSTIME_DIFF, timeDiff, { targetNodeID: payload.sender });\n\t}\n\n\t/**\n\t * Send a node heartbeat. It will be called with timer from local Discoverer.\n\t *\n\t * @params {Node} localNode\n\t * @memberof Transit\n\t */\n\tsendHeartbeat(localNode) {\n\t\treturn this.publish(new Packet(P.PACKET_HEARTBEAT, null, {\n\t\t\tcpu: localNode.cpu\n\t\t})).catch(/* istanbul ignore next */ err => this.logger.error(\"Unable to send HEARTBEAT packet.\", err));\n\n\t}\n\n\t/**\n\t * Subscribe via transporter\n\t *\n\t * @param {String} topic\n\t * @param {String=} nodeID\n\t *\n\t * @deprecated\n\t * @memberof Transit\n\t */\n\tsubscribe(topic, nodeID) {\n\t\treturn this.tx.subscribe(topic, nodeID);\n\t}\n\n\t/**\n\t * Publish via transporter\n\t *\n\t * @param {Packet} Packet\n\t *\n\t * @memberof Transit\n\t */\n\tpublish(packet) {\n\t\tif (this.subscribing) {\n\t\t\treturn this.subscribing\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn this.tx.prepublish(packet);\n\t\t\t\t});\n\t\t}\n\t\treturn this.tx.prepublish(packet);\n\t}\n\n}\n\nmodule.exports = Transit;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Base strategy class\n *\n * @class BaseStrategy\n */\nclass BaseStrategy {\n\n\t/**\n\t * Constructor\n\t *\n\t * @param {ServiceRegistry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Object?} opts\n\t */\n\tconstructor(registry, broker, opts) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.opts = opts || {};\n\t}\n\n\t/**\n\t * Select an endpoint.\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @param {Context?} ctx\n\t *\n\t * @memberof BaseStrategy\n\t */\n\tselect(/*list, ctx*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n}\n\nmodule.exports = BaseStrategy;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseStrategy = require(\"./base\");\n\n/**\n * Round-robin strategy class\n *\n * @class RoundRobinStrategy\n */\nclass RoundRobinStrategy extends BaseStrategy {\n\n\tconstructor(registry, broker, opts) {\n\t\tsuper(registry, broker, opts);\n\n\t\tthis.counter = 0;\n\t}\n\n\tselect(list) {\n\t\t// Reset counter\n\t\tif (this.counter >= list.length) {\n\t\t\tthis.counter = 0;\n\t\t}\n\t\treturn list[this.counter++];\n\t}\n\n}\n\nmodule.exports = RoundRobinStrategy;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { random } = require(\"lodash\");\nconst BaseStrategy = require(\"./base\");\n\n/**\n * Random strategy class\n *\n * @class RandomStrategy\n */\nclass RandomStrategy extends BaseStrategy {\n\tselect(list) {\n\t\treturn list[random(0, list.length - 1)];\n\t}\n}\n\nmodule.exports = RandomStrategy;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst { random } = require(\"lodash\");\nconst BaseStrategy = require(\"./base\");\n\n/**\n * Lowest latency invocation strategy\n *\n * Since Strategy can be instantiated multiple times, therefore,\n * we need to have a \"master\" instance to send ping, and each\n * individual \"slave\" instance will update their list dynamically\n *\n * These options can be configured in broker registry options:\n *\n * const broker = new ServiceBroker({\n * \tlogger: true,\n * \tregistry: {\n * \t\tstrategy: \"LatencyStrategy\",\n * \t\tstrategyOptions: {\n * \t\t\tsampleCount: 5,\n * \t\t\tlowLatency: 10,\n * \t\t\tcollectCount: 5,\n * \t\t\tpingInterval: 10\n * \t\t}\n * \t}\n * });\n *\n * @class LatencyStrategy\n */\nclass LatencyStrategy extends BaseStrategy {\n\n\tconstructor(registry, broker, opts) {\n\t\tsuper(registry, broker, opts);\n\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tsampleCount: 5,\n\t\t\tlowLatency: 10,\n\t\t\tcollectCount: 5,\n\t\t\tpingInterval: 10\n\t\t});\n\n\t\tthis.brokerStopped = false;\n\n\t\tthis.hostAvgLatency = new Map();\n\n\t\t/* hostMap contains:\n\t\t\thostname => {\n\t\t\t\thistoricLatency: [],\n\t\t\t\tnodeList: []\n\t\t\t}\n\t\t*/\n\t\tthis.hostMap = new Map();\n\n\t\t// short circuit\n\t\tif (!this.broker.transit) return;\n\n\t\tif (this.broker.localBus.listenerCount(\"$node.latencyMaster\") === 0) {\n\t\t\t// claim as master\n\t\t\tthis.broker.localBus.on(\"$node.latencyMaster\", function() {});\n\t\t\t// respond to PONG\n\t\t\tthis.broker.localBus.on(\"$node.pong\", this.processPong.bind(this));\n\t\t\t// dynamically add new node\n\t\t\tthis.broker.localBus.on(\"$node.connected\", this.addNode.bind(this));\n\t\t\t// dynamically remove node\n\t\t\tthis.broker.localBus.on(\"$node.disconnected\", this.removeHostMap.bind(this));\n\t\t\t// try to discovery all nodes on start up\n\t\t\tthis.broker.localBus.on(\"$broker.started\", this.discovery.bind(this));\n\t\t\t// clean up ourselves\n\t\t\tthis.broker.localBus.on(\"$broker.stopped\", () => this.brokerStopped = true);\n\t\t} else {\n\t\t\t// remove node if we are told by master\n\t\t\tthis.broker.localBus.on(\"$node.latencySlave.removeHost\", this.removeHostLatency.bind(this));\n\t\t}\n\n\t\tthis.broker.localBus.on(\"$node.latencySlave\", this.updateLatency.bind(this));\n\t}\n\n\t// Master\n\tdiscovery() {\n\t\treturn this.broker.transit.sendPing().then(() => {\n\t\t\tconst timer = setTimeout(() => this.pingHosts(), 1000 * this.opts.pingInterval);\n\t\t\ttimer.unref();\n\t\t});\n\t}\n\n\t// Master\n\tpingHosts() {\n\n\t\t/* istanbul ignore next */\n\t\tif (this.brokerStopped) return;\n\t\t/*\n\t\t\tSmart Ping: only ping the host, not the nodes (which may be many)\n\n\t\t\tAlthough, if that particular node on the host is overloaded,\n\t\t\tthe measurement may be skewed.\n\t\t*/\n\t\tconst hosts = Array.from(this.hostMap.values());\n\n\t\treturn this.broker.Promise.all(hosts.map(host => { // TODO: missing concurency: 5, here was bluebird Promise.map\n\t\t\t// Select a nodeID randomly\n\t\t\tconst nodeID = host.nodeList[random(0, host.nodeList.length - 1)];\n\t\t\treturn this.broker.transit.sendPing(nodeID);\n\t\t})).then(() => {\n\t\t\tconst timer = setTimeout(() => this.pingHosts(), 1000 * this.opts.pingInterval);\n\t\t\ttimer.unref();\n\t\t});\n\t}\n\n\t// Master\n\tprocessPong(payload) {\n\t\tlet node = this.registry.nodes.get(payload.nodeID);\n\n\t\t/* istanbul ignore next */\n\t\tif (!node) return;\n\n\t\tlet info = this.getHostLatency(node);\n\n\t\tif (info.historicLatency.length > (this.opts.collectCount - 1))\n\t\t\tinfo.historicLatency.shift();\n\n\t\tinfo.historicLatency.push(payload.elapsedTime);\n\n\t\tconst avgLatency = info.historicLatency.reduce((sum, latency) => sum + latency, 0) / info.historicLatency.length;\n\n\t\tthis.broker.localBus.emit(\"$node.latencySlave\", {\n\t\t\thostname: node.hostname,\n\t\t\tavgLatency: avgLatency\n\t\t});\n\t}\n\n\t// Master\n\tgetHostLatency(node) {\n\t\tlet info = this.hostMap.get(node.hostname);\n\t\tif (typeof info === \"undefined\") {\n\t\t\tinfo = {\n\t\t\t\thistoricLatency: [],\n\t\t\t\tnodeList: [ node.id ]\n\t\t\t};\n\t\t\tthis.hostMap.set(node.hostname, info);\n\t\t}\n\t\treturn info;\n\t}\n\n\t// Master\n\taddNode(payload) {\n\t\tlet node = payload.node;\n\n\t\t// each host may have multiple nodes\n\t\tlet info = this.getHostLatency(node);\n\t\tif (info.nodeList.indexOf(node.id) === -1) {\n\t\t\tinfo.nodeList.push(node.id);\n\t\t}\n\t}\n\n\t// Master\n\tremoveHostMap(payload) {\n\t\tlet node = payload.node;\n\n\t\tlet info = this.hostMap.get(node.hostname);\n\t\t// This exists to make sure that we don't get an \"undefined\",\n\t\t// \ttherefore the test coverage here is unnecessary.\n\t\t/* istanbul ignore next */\n\t\tif (typeof info === \"undefined\") return;\n\n\t\tinfo.nodeList = info.nodeList.filter(id => id !== node.id);\n\n\t\tif (info.nodeList.length == 0) {\n\t\t\t// only remove the host if the last node disconnected\n\t\t\tthis.broker.localBus.emit(\"$node.latencySlave.removeHost\", node.hostname);\n\t\t\tthis.hostMap.delete(node.hostname);\n\t\t}\n\t}\n\n\t// Master + Slave\n\tupdateLatency(payload) {\n\t\tthis.hostAvgLatency.set(payload.hostname, payload.avgLatency);\n\t}\n\n\t// Slave\n\tremoveHostLatency(hostname) {\n\t\tthis.hostAvgLatency.delete(hostname);\n\t}\n\n\t/**\n\t * Select an endpoint by network latency\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @returns {Endpoint}\n\t * @memberof LatencyStrategy\n\t */\n\tselect(list) {\n\t\tlet minEp = null;\n\t\tlet minLatency = null;\n\n\t\tconst sampleCount = this.opts.sampleCount;\n\t\tconst count = sampleCount <= 0 || sampleCount > list.length ? list.length : sampleCount;\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tlet ep;\n\t\t\t// Get random endpoint\n\t\t\tif (count == list.length) {\n\t\t\t\tep = list[i];\n\t\t\t} else {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tep = list[random(0, list.length - 1)];\n\t\t\t}\n\t\t\tconst epLatency = this.hostAvgLatency.get(ep.node.hostname);\n\n\t\t\t// Check latency of endpoint\n\t\t\tif (typeof epLatency !== \"undefined\") {\n\n\t\t\t\tif (epLatency < this.opts.lowLatency)\n\t\t\t\t\treturn ep;\n\n\t\t\t\tif (!minEp || !minLatency || epLatency < minLatency) {\n\t\t\t\t\tminLatency = epLatency;\n\t\t\t\t\tminEp = ep;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Return the lowest latency\n\t\tif (minEp) {\n\t\t\treturn minEp;\n\t\t}\n\n\t\t// Return a random item (no latency data)\n\t\treturn list[random(0, list.length - 1)];\n\t}\n}\n\nmodule.exports = LatencyStrategy;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst BaseStrategy = require(\"./base\");\nconst crypto = require(\"crypto\");\nconst LRU = require(\"lru-cache\");\nconst { isFunction } = require(\"../utils\");\n\n/**\n * Sharding invocation strategy\n *\n * Using consistent-hashing. More info: https://www.toptal.com/big-data/consistent-hashing\n *\n * @class ShardStrategy\n */\nclass ShardStrategy extends BaseStrategy {\n\n\tconstructor(registry, broker, opts) {\n\t\tsuper(registry, broker, opts);\n\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tshardKey: null,\n\t\t\tvnodes: 10,\n\t\t\tringSize: null,\n\t\t\tcacheSize: 1000\n\t\t});\n\n\t\tthis.cache = new LRU({\n\t\t\tmax: this.opts.cacheSize,\n\t\t\tmaxAge: null\n\t\t});\n\n\t\tthis.needRebuild = true;\n\t\tthis.ring = [];\n\n\t\tbroker.localBus.on(\"$node.**\", () => this.needRebuild = true);\n\t}\n\n\t/**\n\t * Get key field value from Context.\n\t *\n\t * @param {Context} ctx\n\t * @returns {any}\n\t * @memberof ShardStrategy\n\t */\n\tgetKeyFromContext(ctx) {\n\t\tif (!this.opts.shardKey)  return null;\n\n\t\tif (isFunction(this.opts.shardKey))\n\t\t\treturn this.opts.shardKey.call(this, ctx);\n\n\t\tif (this.opts.shardKey.startsWith(\"#\"))\n\t\t\treturn _.get(ctx.meta, this.opts.shardKey.slice(1));\n\n\t\treturn _.get(ctx.params, this.opts.shardKey);\n\t}\n\n\t/**\n\t * Select an endpoint by sharding.\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @param {Context} ctx\n\t * @returns {Endpoint}\n\t * @memberof ShardStrategy\n\t */\n\tselect(list, ctx) {\n\t\tlet key = this.getKeyFromContext(ctx);\n\t\tif (key != null) {\n\t\t\tif (this.needRebuild)\n\t\t\t\tthis.rebuild(list);\n\n\t\t\tconst nodeID = this.getNodeIDByKey(key);\n\t\t\tif (nodeID)\n\t\t\t\treturn list.find(ep => ep.id == nodeID);\n\t\t}\n\n\t\t// Return a random item (no key)\n\t\treturn list[_.random(0, list.length - 1)];\n\t}\n\n\t/**\n\t * Get nodeID by a hashed numeric key.\n\t *\n\t * @param {Number} key\n\t * @returns {String}\n\t * @memberof ShardStrategy\n\t */\n\tgetNodeIDByKey(key) {\n\t\tif (this.cache) {\n\t\t\tconst cached = this.cache.get(key);\n\t\t\tif (cached) return cached;\n\t\t}\n\n\t\tconst hashNum = this.getHash(key.toString());\n\n\t\tlet found;\n\t\tconst ringLen = this.ring.length;\n\t\tfor(let i = 0; i < ringLen; i++) {\n\t\t\tif (hashNum <= this.ring[i].key) {\n\t\t\t\tfound = this.ring[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (found) {\n\t\t\tif (this.cache)\n\t\t\t\tthis.cache.set(key, found.nodeID);\n\t\t\treturn found.nodeID;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Calculate 8 bit integer hash from string key based on MD5 hash.\n\t *\n\t * @param {String} key\n\t * @returns {Number}\n\t * @memberof ShardStrategy\n\t */\n\tgetHash(key) {\n\t\tconst hash = crypto.createHash(\"md5\").update(key).digest(\"hex\");\n\t\tconst hashNum = parseInt(hash.substring(0,8), 16);\n\t\treturn this.opts.ringSize ? hashNum % this.opts.ringSize : hashNum;\n\t}\n\n\t/**\n\t * Rebuild the node hashring.\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @memberof ShardStrategy\n\t */\n\trebuild(list) {\n\t\tthis.cache.reset();\n\t\tthis.ring = [];\n\n\t\tconst arr = list\n\t\t\t.map(ep => ep.id)\n\t\t\t.sort();\n\n\t\tconst total = arr.length * this.opts.vnodes;\n\t\tconst ringSize = this.opts.ringSize ? this.opts.ringSize : Math.pow(2, 32);\n\t\tconst slice = ringSize / total;\n\n\t\tfor (let j = 0; j < this.opts.vnodes; j++) {\n\t\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\t\tconst nodeID = arr[i];\n\t\t\t\tthis.ring.push({\n\t\t\t\t\tkey: Math.floor(slice * (this.ring.length + 1)),\n\t\t\t\t\tnodeID: nodeID\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Set the latest value to the last slice.\n\t\tthis.ring[this.ring.length - 1].key = ringSize;\n\n\t\tthis.needRebuild = false;\n\t}\n\n}\n\nmodule.exports = ShardStrategy;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Strategies = {\n\tBase: require(\"./base\"),\n\tRoundRobin: require(\"./round-robin\"),\n\tRandom: require(\"./random\"),\n\tCpuUsage: require(\"./cpu-usage\"),\n\tLatency: require(\"./latency\"),\n\tShard: require(\"./shard\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Strategies).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Strategies[n];\n}\n\n/**\n * Resolve strategy by name\n *\n * @param {object|string} opt\n * @returns {Strategy}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (Object.prototype.isPrototypeOf.call(Strategies.Base, opt)) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet StrategyClass = getByName(opt);\n\t\tif (StrategyClass)\n\t\t\treturn StrategyClass;\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid strategy type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet StrategyClass = getByName(opt.type || \"RoundRobin\");\n\t\tif (StrategyClass)\n\t\t\treturn StrategyClass;\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid strategy type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn Strategies.RoundRobin;\n}\n\n\nfunction register(name, value) {\n\tStrategies[name] = value;\n}\n\nmodule.exports = Object.assign(Strategies, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\n/**\n * Abstract Discoverer class\n *\n * @class BaseDiscoverer\n */\nclass BaseDiscoverer {\n\n\t/**\n\t * Creates an instance of Discoverer.\n\t *\n\t * @memberof BaseDiscoverer\n\t */\n\tconstructor(opts) {\n\t\tthis.Promise = Promise; // while `init` is not called\n\n\t\tthis.opts = _.defaultsDeep({}, opts, {\n\t\t\theartbeatInterval: null,\n\t\t\theartbeatTimeout: null,\n\n\t\t\tdisableHeartbeatChecks: false,\n\t\t\tdisableOfflineNodeRemoving: false,\n\t\t\tcleanOfflineNodesTimeout: 10 * 60, // 10 minutes\n\t\t});\n\n\t\t// Timer variables\n\t\tthis.heartbeatTimer = null;\n\t\tthis.checkNodesTimer = null;\n\t\tthis.offlineTimer = null;\n\n\t\t// Pointer for the local `Node` instance\n\t\tthis.localNode = null;\n\t}\n\n\t/**\n\t * Initialize Discoverer\n\t *\n\t * @param {ServiceRegistry} registry\n\t */\n\tinit(registry) {\n\t\tthis.registry = registry;\n\t\tthis.broker = registry.broker;\n\t\tthis.Promise = this.broker.Promise;\n\n\t\tif (this.broker) {\n\t\t\tthis.logger = this.broker.getLogger(\"Discovery\");\n\t\t\tthis.transit = this.broker.transit;\n\n\t\t\t// Get HB time settings from broker options. Backward compatibility\n\t\t\tif (this.opts.heartbeatInterval == null)\n\t\t\t\tthis.opts.heartbeatInterval = this.broker.options.heartbeatInterval;\n\t\t\tif (this.opts.heartbeatTimeout == null)\n\t\t\t\tthis.opts.heartbeatTimeout = this.broker.options.heartbeatTimeout;\n\t\t}\n\n\t\tif (this.transit) {\n\t\t\tthis.broker.localBus.on(\"$transporter.connected\", () => this.startHeartbeatTimers());\n\t\t\tthis.broker.localBus.on(\"$transporter.disconnected\", () => this.stopHeartbeatTimers());\n\t\t}\n\n\t\tthis.localNode = this.registry.nodes.localNode;\n\n\t\tthis.registerMoleculerMetrics();\n\t}\n\n\t/**\n\t * Stop discoverer clients.\n\t */\n\tstop() {\n\t\tthis.stopHeartbeatTimers();\n\t\treturn this.Promise.resolve();\n\t}\n\n\t/**\n\t * Register Moleculer Transit Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Start heartbeat timers\n\t */\n\tstartHeartbeatTimers() {\n\t\tthis.stopHeartbeatTimers();\n\n\t\tif (this.opts.heartbeatInterval > 0) {\n\t\t\t// HB timer\n\t\t\tconst time = this.opts.heartbeatInterval * 1000 + (Math.round(Math.random() * 1000) - 500); // random +/- 500ms\n\t\t\tthis.heartbeatTimer = setInterval(() => this.beat(), time);\n\t\t\tthis.heartbeatTimer.unref();\n\n\t\t\t// Check expired heartbeats of remote nodes timer\n\t\t\tthis.checkNodesTimer = setInterval(() => this.checkRemoteNodes(), this.opts.heartbeatTimeout * 1000);\n\t\t\tthis.checkNodesTimer.unref();\n\n\t\t\t// Clean offline nodes timer\n\t\t\tthis.offlineTimer = setInterval(() => this.checkOfflineNodes(), 60 * 1000); // 1 min\n\t\t\tthis.offlineTimer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Stop heartbeat timers\n\t */\n\tstopHeartbeatTimers() {\n\t\tif (this.heartbeatTimer) {\n\t\t\tclearInterval(this.heartbeatTimer);\n\t\t\tthis.heartbeatTimer = null;\n\t\t}\n\n\t\tif (this.checkNodesTimer) {\n\t\t\tclearInterval(this.checkNodesTimer);\n\t\t\tthis.checkNodesTimer = null;\n\t\t}\n\n\t\tif (this.offlineTimer) {\n\t\t\tclearInterval(this.offlineTimer);\n\t\t\tthis.offlineTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Disable built-in Heartbeat logic. Used by TCP transporter\n\t */\n\tdisableHeartbeat() {\n\t\tthis.opts.heartbeatInterval = 0;\n\t\tthis.stopHeartbeatTimers();\n\t}\n\n\t/**\n\t * Heartbeat method.\n\t */\n\tbeat() {\n\t\t// Update the local CPU usage before sending heartbeat.\n\t\treturn this.localNode.updateLocalInfo(this.broker.getCpuUsage)\n\t\t\t.then(() => this.sendHeartbeat());\n\t}\n\n\t/**\n\t * Check all registered remote nodes are available.\n\t */\n\tcheckRemoteNodes() {\n\t\tif (this.disableHeartbeatChecks) return;\n\n\t\tconst now = Math.round(process.uptime());\n\t\tthis.registry.nodes.toArray().forEach(node => {\n\t\t\tif (node.local || !node.available) return;\n\t\t\tif (!node.lastHeartbeatTime) {\n\t\t\t\t// Még nem jött be az első heartbeat.\n\t\t\t\tnode.lastHeartbeatTime = now;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (now - node.lastHeartbeatTime > this.broker.options.heartbeatTimeout) {\n\t\t\t\tthis.logger.warn(`Heartbeat is not received from '${node.id}' node.`);\n\t\t\t\tthis.registry.nodes.disconnected(node.id, true);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Check offline nodes. Remove which is older than 10 minutes.\n\t */\n\tcheckOfflineNodes() {\n\t\tif (this.disableOfflineNodeRemoving || !this.opts.cleanOfflineNodesTimeout) return;\n\n\t\tconst now = Math.round(process.uptime());\n\t\tthis.registry.nodes.toArray().forEach(node => {\n\t\t\tif (node.local || node.available) return;\n\t\t\tif (!node.lastHeartbeatTime) {\n\t\t\t\t// Még nem jött be az első heartbeat.\n\t\t\t\tnode.lastHeartbeatTime = now;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (now - node.lastHeartbeatTime > this.opts.cleanOfflineNodesTimeout) {\n\t\t\t\tthis.logger.warn(`Removing offline '${node.id}' node from registry because it hasn't submitted heartbeat signal for 10 minutes.`);\n\t\t\t\tthis.registry.nodes.delete(node.id);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Heartbeat received from a remote node.\n\t *\n\t * @param {String} nodeID\n\t * @param {Object} payload\n\t */\n\theartbeatReceived(nodeID, payload) {\n\t\tconst node = this.registry.nodes.get(nodeID);\n\t\tif (node) {\n\t\t\tif (!node.available) {\n\t\t\t\t// Reconnected node. Request a fresh INFO\n\t\t\t\tthis.discoverNode(nodeID);\n\t\t\t} else {\n\t\t\t\tif (payload.seq != null && node.seq !== payload.seq) {\n\t\t\t\t\t// Some services changed on the remote node. Request a new INFO\n\t\t\t\t\tthis.discoverNode(nodeID);\n\t\t\t\t} else if (payload.instanceID != null && !node.instanceID.startsWith(payload.instanceID)) {\n\t\t\t\t\t// The node has been restarted. Request a new INFO\n\t\t\t\t\tthis.discoverNode(nodeID);\n\t\t\t\t} else {\n\t\t\t\t\tnode.heartbeat(payload);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Unknow node. Request an INFO\n\t\t\tthis.discoverNode(nodeID);\n\t\t}\n\t}\n\n\t/**\n\t * Received an INFO from a remote node.\n\t *\n\t * @param {String} nodeID\n\t * @param {Object} payload\n\t */\n\tprocessRemoteNodeInfo(nodeID, payload) {\n\t\treturn this.broker.registry.processNodeInfo(payload);\n\t}\n\n\t/**\n\t * Sending a local heartbeat to remote nodes.\n\t */\n\tsendHeartbeat() {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.sendHeartbeat(this.localNode);\n\t}\n\n\t/**\n\t * Discover a new or old node by nodeID\n\t *\n\t * @param {String} nodeID\n\t */\n\tdiscoverNode() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Discover all nodes (after connected)\n\t */\n\tdiscoverAllNodes() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Called when the local node is ready (transporter connected)\n\t */\n\tlocalNodeReady() {\n\t\t// Local node has started all local services. We send a new INFO packet\n\t\t// which contains the local services because we are ready to accept incoming requests.\n\t\treturn this.sendLocalNodeInfo();\n\t}\n\n\t/**\n\t * Local service registry has been changed. We should notify remote nodes.\n\t *\n\t * @param {String} nodeID\n\t */\n\tsendLocalNodeInfo() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Called when the local node disconnected.\n\t * You can clean it from the remote registry.\n\t */\n\tlocalNodeDisconnected() {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.sendDisconnectPacket();\n\t}\n\n\t/**\n\t * Called when a remote node disconnected (received DISCONNECT packet)\n\t * You can clean it from local registry.\n\t *\n\t * @param {String} nodeID\n\t * @param {Boolean} isUnexpected\n\t */\n\tremoteNodeDisconnected(nodeID, isUnexpected) {\n\t\treturn this.registry.nodes.disconnected(nodeID, isUnexpected);\n\t}\n\n}\n\nmodule.exports = BaseDiscoverer;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseDiscoverer = require(\"./base\");\n\n/**\n * Local (built-in) Discoverer class\n *\n * @class Discoverer\n */\nclass LocalDiscoverer extends BaseDiscoverer {\n\n\t/**\n\t * Creates an instance of Discoverer.\n\t *\n\t * @memberof LocalDiscoverer\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t}\n\n\t/**\n\t * Initialize Discoverer\n\t *\n\t * @param {any} registry\n\t *\n\t * @memberof LocalDiscoverer\n\t */\n\tinit(registry) {\n\t\tsuper.init(registry);\n\t}\n\n\t/**\n\t * Discover a new or old node.\n\t *\n\t * @param {String} nodeID\n\t */\n\tdiscoverNode(nodeID) {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.discoverNode(nodeID);\n\t}\n\n\t/**\n\t * Discover all nodes (after connected)\n\t */\n\tdiscoverAllNodes() {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.discoverNodes();\n\t}\n\n\t/**\n\t * Local service registry has been changed. We should notify remote nodes.\n\t *\n\t * @param {String} nodeID\n\t */\n\tsendLocalNodeInfo(nodeID) {\n\t\tif (!this.transit) return this.Promise.resolve();\n\n\t\tconst info = this.broker.getLocalNodeInfo();\n\t\treturn this.transit.sendNodeInfo(info, nodeID);\n\t}\n\n}\n\nmodule.exports = LocalDiscoverer;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { BrokerOptionsError } = require(\"../../errors\");\nconst { isObject, isString } = require(\"../../utils\");\n\nconst Discoverers = {\n\tBase: require(\"./base\"),\n\tLocal: require(\"./local\"),\n\tEtcd3: require(\"./etcd3\"),\n\tRedis: require(\"./redis\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Discoverers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Discoverers[n];\n}\n\n/**\n * Resolve discoverer by name\n *\n * @param {object|string} opt\n * @returns {Discoverer}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Discoverers.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet DiscovererClass = getByName(opt);\n\t\tif (DiscovererClass)\n\t\t\treturn new DiscovererClass();\n\n\t\tif (opt.startsWith(\"redis://\"))\n\t\t\treturn new Discoverers.Redis(opt);\n\n\t\tif (opt.startsWith(\"etcd3://\"))\n\t\t\treturn new Discoverers.Etcd3(opt);\n\n\t\tthrow new BrokerOptionsError(`Invalid Discoverer type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet DiscovererClass = getByName(opt.type || \"Local\");\n\t\tif (DiscovererClass)\n\t\t\treturn new DiscovererClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid Discoverer type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn new Discoverers.Local();\n}\n\nfunction register(name, value) {\n\tDiscoverers[name] = value;\n}\n\nmodule.exports = Object.assign(Discoverers, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Node class\n *\n * @class Node\n */\nclass Node {\n\t/**\n\t * Creates an instance of Node.\n\t *\n\t * @param {String} id\n\t *\n\t * @memberof Node\n\t */\n\tconstructor(id) {\n\t\tthis.id = id;\n\t\tthis.instanceID = null;\n\t\tthis.available = true;\n\t\tthis.local = false;\n\t\tthis.lastHeartbeatTime = Math.round(process.uptime());\n\t\tthis.config = {};\n\t\tthis.client = {};\n\t\tthis.metadata = null;\n\n\t\tthis.ipList = null;\n\t\tthis.port = null;\n\t\tthis.hostname = null;\n\t\tthis.udpAddress = null;\n\n\t\tthis.rawInfo = null;\n\t\tthis.services = [];\n\n\t\tthis.cpu = null;\n\t\tthis.cpuSeq = null;\n\n\t\tthis.seq = 0;\n\t\tthis.offlineSince = null;\n\t}\n\n\t/**\n\t * Update properties\n\t *\n\t * @param {object} payload\n\t * @param {boolean} isReconnected\n\t * @memberof Node\n\t */\n\tupdate(payload, isReconnected) {\n\t\t// Update properties\n\t\tthis.metadata = payload.metadata;\n\t\tthis.ipList = payload.ipList;\n\t\tthis.hostname = payload.hostname;\n\t\tthis.port = payload.port;\n\t\tthis.client = payload.client || {};\n\t\tthis.config = payload.config || {};\n\t\tthis.instanceID = payload.instanceID;\n\n\t\t// Process services & events\n\t\tthis.services = payload.services;\n\t\tthis.rawInfo = payload;\n\n\t\tconst newSeq = payload.seq || 1;\n\t\tif (newSeq > this.seq || isReconnected) {\n\t\t\tthis.seq = newSeq;\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Update local properties.\n\t *\n\t * @memberof Node\n\t * @param {Function} cpuUsage\n\t */\n\tupdateLocalInfo(cpuUsage) {\n\t\treturn cpuUsage().then(res => {\n\t\t\tconst newVal = Math.round(res.avg);\n\t\t\tif (this.cpu != newVal) {\n\t\t\t\tthis.cpu = newVal;\n\t\t\t\tthis.cpuSeq++;\n\t\t\t}\n\t\t}).catch(() => { /* silent */ });\n\t}\n\n\t/**\n\t * Update heartbeat properties\n\t *\n\t * @param {any} payload\n\t * @memberof Node\n\t */\n\theartbeat(payload) {\n\t\tif (!this.available) {\n\t\t\tthis.available = true;\n\t\t\tthis.offlineSince = null;\n\t\t}\n\n\t\tif (payload.cpu != null) {\n\t\t\tthis.cpu = payload.cpu;\n\t\t\tthis.cpuSeq = payload.cpuSeq || 1;\n\t\t}\n\n\t\tthis.lastHeartbeatTime = Math.round(process.uptime());\n\t}\n\n\t/**\n\t * Node disconnected\n\t *\n\t * @memberof Node\n\t */\n\tdisconnected() {\n\t\tif (this.available) {\n\t\t\tthis.offlineSince = Math.round(process.uptime());\n\t\t\tthis.seq++;\n\t\t}\n\n\t\tthis.available = false;\n\t}\n}\n\nmodule.exports = Node;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst os \t\t\t= require(\"os\");\nconst Node \t\t\t= require(\"./node\");\nconst { getIpList } = require(\"../utils\");\n\n/**\n * Catalog for nodes\n *\n * @class NodeCatalog\n */\nclass NodeCatalog {\n\n\t/**\n\t * Creates an instance of NodeCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t *\n\t * @memberof NodeCatalog\n\t */\n\tconstructor(registry, broker) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\n\t\tthis.nodes = new Map();\n\n\t\tthis.createLocalNode();\n\t}\n\n\t/**\n\t * Create local node with local information\n\t *\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\tcreateLocalNode() {\n\t\tconst node = new Node(this.broker.nodeID);\n\t\tnode.local = true;\n\t\tnode.ipList = getIpList();\n\t\tnode.instanceID = this.broker.instanceID;\n\t\tnode.hostname = os.hostname();\n\t\tnode.client = {\n\t\t\ttype: \"nodejs\",\n\t\t\tversion: this.broker.MOLECULER_VERSION,\n\t\t\tlangVersion: process.version\n\t\t};\n\t\tnode.metadata = this.broker.metadata;\n\t\tnode.seq = 1;\n\n\t\tthis.add(node.id, node);\n\n\t\tthis.localNode = node;\n\t\treturn node;\n\t}\n\n\t/**\n\t * Add a new node\n\t *\n\t * @param {String} id\n\t * @param {any} node\n\t * @memberof NodeCatalog\n\t */\n\tadd(id, node) {\n\t\tthis.nodes.set(id, node);\n\t}\n\n\t/**\n\t * Check a node exist by nodeID\n\t *\n\t * @param {String} id\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\thas(id) {\n\t\treturn this.nodes.has(id);\n\t}\n\n\t/**\n\t * Get a node by nodeID\n\t *\n\t * @param {String} id\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\tget(id) {\n\t\treturn this.nodes.get(id);\n\t}\n\n\t/**\n\t * Delete a node by nodeID\n\t *\n\t * @param {String} id\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\tdelete(id) {\n\t\treturn this.nodes.delete(id);\n\t}\n\n\t/**\n\t * Get count of all registered nodes\n\t */\n\tcount() {\n\t\treturn this.nodes.size;\n\t}\n\n\t/**\n\t * Get count of online nodes\n\t */\n\tonlineCount() {\n\t\tlet count = 0;\n\t\tthis.nodes.forEach(node => {\n\t\t\tif (node.available)\n\t\t\t\tcount++;\n\t\t});\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Process incoming INFO packet payload\n\t *\n\t * @param {any} payload\n\t * @memberof NodeCatalog\n\t */\n\tprocessNodeInfo(payload) {\n\t\tconst nodeID = payload.sender;\n\t\t//let oldNode;\n\t\tlet node = this.get(nodeID);\n\t\tlet isNew = false;\n\t\tlet isReconnected = false;\n\n\t\tif (!node) {\n\t\t\tisNew = true;\n\t\t\tnode = new Node(nodeID);\n\n\t\t\tthis.add(nodeID, node);\n\t\t} else if (!node.available) {\n\t\t\tisReconnected = true;\n\t\t\tnode.lastHeartbeatTime = Math.round(process.uptime());\n\t\t\tnode.available = true;\n\t\t\tnode.offlineSince = null;\n\t\t}\n\n\t\t// Update instance\n\t\tconst needRegister = node.update(payload, isReconnected);\n\n\t\t// Refresh services if 'seq' is greater or it is a reconnected node\n\t\tif (needRegister && node.services) {\n\t\t\tthis.registry.registerServices(node, node.services);\n\t\t}\n\n\t\t// Local notifications\n\t\tif (isNew) {\n\t\t\tthis.broker.broadcastLocal(\"$node.connected\", { node, reconnected: false });\n\t\t\tthis.logger.info(`Node '${nodeID}' connected.`);\n\t\t\tthis.registry.updateMetrics();\n\t\t} else if (isReconnected) {\n\t\t\tthis.broker.broadcastLocal(\"$node.connected\", { node, reconnected: true });\n\t\t\tthis.logger.info(`Node '${nodeID}' reconnected.`);\n\t\t\tthis.registry.updateMetrics();\n\t\t} else {\n\t\t\tthis.broker.broadcastLocal(\"$node.updated\", { node });\n\t\t\tthis.logger.debug(`Node '${nodeID}' updated.`);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Disconnected a node\n\t *\n\t * @param {String} nodeID\n\t * @param {Boolean} isUnexpected\n\t * @memberof NodeCatalog\n\t */\n\tdisconnected(nodeID, isUnexpected) {\n\t\tlet node = this.get(nodeID);\n\t\tif (node && node.available) {\n\t\t\tnode.disconnected(isUnexpected);\n\n\t\t\tthis.registry.unregisterServicesByNode(node.id);\n\n\t\t\tthis.broker.broadcastLocal(\"$node.disconnected\", { node, unexpected: !!isUnexpected });\n\n\t\t\tthis.registry.updateMetrics();\n\n\t\t\tthis.logger.warn(`Node '${node.id}' disconnected${isUnexpected ? \" unexpectedly\" : \"\"}.`);\n\n\t\t\tif (this.broker.transit)\n\t\t\t\tthis.broker.transit.removePendingRequestByNodeID(nodeID);\n\t\t}\n\t}\n\n\n\t/**\n\t * Get a node list\n\t *\n\t * @param {Object} {onlyAvailable = false, withServices = false}\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\tlist({ onlyAvailable = false, withServices = false }) {\n\t\tlet res = [];\n\t\tthis.nodes.forEach(node => {\n\t\t\tif (onlyAvailable && !node.available)\n\t\t\t\treturn;\n\n\t\t\tif (withServices)\n\t\t\t\tres.push(_.omit(node, [\"rawInfo\"]));\n\t\t\telse\n\t\t\t\tres.push(_.omit(node, [\"services\", \"rawInfo\"]));\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Get a copy from node list.\n\t */\n\ttoArray() {\n\t\treturn Array.from(this.nodes.values());\n\t}\n}\n\nmodule.exports = NodeCatalog;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Service class\n *\n * @class ServiceItem\n */\nclass ServiceItem {\n\n\t/**\n\t * Creates an instance of ServiceItem.\n\t *\n\t * @param {Node} node\n\t * @param {Object} service\n\t * @param {Boolean} local\n\t * @memberof ServiceItem\n\t */\n\tconstructor(node, service, local) {\n\t\tthis.node = node;\n\t\tthis.name = service.name;\n\t\tthis.fullName = service.fullName;\n\t\tthis.version = service.version;\n\t\tthis.settings = service.settings;\n\t\tthis.metadata = service.metadata || {};\n\n\t\tthis.local = !!local;\n\n\t\tthis.actions = {};\n\t\tthis.events = {};\n\t}\n\n\t/**\n\t * Check the service equals params\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof ServiceItem\n\t */\n\tequals(fullName, nodeID) {\n\t\treturn this.fullName == fullName && (nodeID == null || this.node.id == nodeID);\n\t}\n\n\t/**\n\t * Update service properties\n\t *\n\t * @param {any} svc\n\t * @memberof ServiceItem\n\t */\n\tupdate(svc) {\n\t\tthis.fullName = svc.fullName;\n\t\tthis.version = svc.version;\n\t\tthis.settings = svc.settings;\n\t\tthis.metadata = svc.metadata || {};\n\t}\n\n\t/**\n\t * Add action to service\n\t *\n\t * @param {any} action\n\t * @memberof ServiceItem\n\t */\n\taddAction(action) {\n\t\tthis.actions[action.name] = action;\n\t}\n\n\t/**\n\t * Add event to service\n\t *\n\t * @param {any} event\n\t * @memberof ServiceItem\n\t */\n\taddEvent(event) {\n\t\tthis.events[event.name] = event;\n\t}\n}\n\nmodule.exports = ServiceItem;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst ServiceItem = require(\"./service-item\");\nconst { removeFromArray } = require(\"../utils\");\n\n/**\n * Catalog for services\n *\n * @class ServiceCatalog\n */\nclass ServiceCatalog {\n\n\t/**\n\t * Creates an instance of ServiceCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @memberof ServiceCatalog\n\t */\n\tconstructor(registry, broker) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\n\t\tthis.services = [];\n\t}\n\n\t/**\n\t * Add a new service\n\t *\n\t * @param {Node} node\n\t * @param {Object} service\n\t * @param {Boolean} local\n\t *\n\t * @returns {ServiceItem}\n\t *\n\t * @memberof ServiceCatalog\n\t */\n\tadd(node, service, local) {\n\t\tconst item = new ServiceItem(node, service, local);\n\t\tthis.services.push(item);\n\t\treturn item;\n\t}\n\n\t/**\n\t * Check the service is exist\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof ServiceCatalog\n\t */\n\thas(fullName, nodeID) {\n\t\treturn this.services.find(svc => svc.equals(fullName, nodeID)) != null;\n\t}\n\n\t/**\n\t * Get a service by fullName & nodeID\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof ServiceCatalog\n\t */\n\tget(fullName, nodeID) {\n\t\treturn this.services.find(svc => svc.equals(fullName, nodeID));\n\t}\n\n\t/**\n\t * Get a filtered list of services with actions\n\t *\n\t * @param {Object} {onlyLocal = false,  onlyAvailable = false, skipInternal = false, withActions = false, withEvents = false, grouping = false}\n\t * @returns {Array}\n\t *\n\t * @memberof Registry\n\t */\n\tlist({ onlyLocal = false, onlyAvailable = false, skipInternal = false, withActions = false, withEvents = false, grouping = false }) {\n\t\tlet res = [];\n\t\tthis.services.forEach(service => {\n\t\t\tif (skipInternal && /^\\$/.test(service.name))\n\t\t\t\treturn;\n\n\t\t\tif (onlyLocal && !service.local)\n\t\t\t\treturn;\n\n\t\t\tif (onlyAvailable && !service.node.available)\n\t\t\t\treturn;\n\n\t\t\tlet item;\n\t\t\tif (grouping)\n\t\t\t\titem = res.find(svc => svc.fullName == service.fullName);\n\n\t\t\tif (!item) {\n\t\t\t\tlet item = {\n\t\t\t\t\tname: service.name,\n\t\t\t\t\tversion: service.version,\n\t\t\t\t\tfullName: service.fullName,\n\t\t\t\t\tsettings: service.settings,\n\t\t\t\t\tmetadata: service.metadata,\n\n\t\t\t\t\tlocal: service.local,\n\t\t\t\t\tavailable: service.node.available,\n\t\t\t\t};\n\n\t\t\t\tif (grouping)\n\t\t\t\t\titem.nodes = [service.node.id];\n\t\t\t\telse\n\t\t\t\t\titem.nodeID = service.node.id;\n\n\t\t\t\tif (withActions) {\n\t\t\t\t\titem.actions = {};\n\n\t\t\t\t\t_.forIn(service.actions, action => {\n\t\t\t\t\t\tif (action.protected) return;\n\n\t\t\t\t\t\titem.actions[action.name] = _.omit(action, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (withEvents) {\n\t\t\t\t\titem.events = {};\n\n\t\t\t\t\t_.forIn(service.events, event => {\n\t\t\t\t\t\t// Skip internal event handlers\n\t\t\t\t\t\tif (/^\\$/.test(event.name)) return;\n\n\t\t\t\t\t\titem.events[event.name] = _.omit(event, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tres.push(item);\n\n\t\t\t} else {\n\t\t\t\tif (item.nodes.indexOf(service.node.id) === -1)\n\t\t\t\t\titem.nodes.push(service.node.id);\n\t\t\t}\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Get local service list for INFO packet\n\t *\n\t * @returns {Object}\n\t * @memberof ServiceCatalog\n\t */\n\tgetLocalNodeServices() {\n\t\tlet res = [];\n\t\tthis.services.forEach(service => {\n\t\t\tif (!service.local)\n\t\t\t\treturn;\n\n\t\t\tlet item = {\n\t\t\t\tname: service.name,\n\t\t\t\tversion: service.version,\n\t\t\t\tfullName: service.fullName,\n\t\t\t\tsettings: service.settings,\n\t\t\t\tmetadata: service.metadata,\n\t\t\t\tdependencies: service.dependencies\n\t\t\t};\n\n\t\t\titem.actions = {};\n\n\t\t\t_.forIn(service.actions, action => {\n\t\t\t\tif (action.protected) return;\n\n\t\t\t\titem.actions[action.name] = _.omit(action, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t});\n\n\t\t\titem.events = {};\n\n\t\t\t_.forIn(service.events, event => {\n\t\t\t\t// Leave internal event handlers, because it can be used for internal events.\n\t\t\t\t//if (/^\\$/.test(event.name)) return;\n\n\t\t\t\titem.events[event.name] = _.omit(event, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t});\n\n\t\t\tres.push(item);\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Remove all endpoints by nodeID\n\t *\n\t * @param {String} nodeID\n\t * @memberof ServiceCatalog\n\t */\n\tremoveAllByNodeID(nodeID) {\n\t\t_.remove(this.services, service => {\n\t\t\tif (service.node.id == nodeID) {\n\t\t\t\tthis.registry.actions.removeByService(service);\n\t\t\t\tthis.registry.events.removeByService(service);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Remove endpoint by fullName & nodeID\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @memberof ServiceCatalog\n\t */\n\tremove(fullName, nodeID) {\n\t\tlet service = this.get(fullName, nodeID);\n\t\tif (service) {\n\t\t\tthis.registry.actions.removeByService(service);\n\t\t\tthis.registry.events.removeByService(service);\n\n\t\t\tremoveFromArray(this.services, service);\n\t\t}\n\t}\n}\n\nmodule.exports = ServiceCatalog;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { MoleculerServerError } = require(\"../errors\");\n\n/**\n * Endpoint list class\n *\n * @class EndpointList\n */\nclass EndpointList {\n\n\t/**\n\t * Creates an instance of EndpointList.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {String} name\n\t * @param {String} group\n\t * @param {EndPointClass} EndPointFactory\n\t * @param {StrategyClass} StrategyFactory\n\t * @param {Object?} strategyOptions\n\t * @memberof EndpointList\n\t */\n\tconstructor(registry, broker, name, group, EndPointFactory, StrategyFactory, strategyOptions) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\t\tthis.strategy = new StrategyFactory(registry, broker, strategyOptions);\n\t\tthis.name = name;\n\t\tthis.group = group;\n\t\tthis.internal = name.startsWith(\"$\");\n\n\t\tthis.EndPointFactory = EndPointFactory;\n\n\t\tthis.endpoints = [];\n\n\t\tthis.localEndpoints = [];\n\t}\n\n\t/**\n\t * Add a new endpoint\n\t *\n\t * @param {Node} node\n\t * @param {Service} service\n\t * @param {any} data\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tadd(node, service, data) {\n\t\tconst found = this.endpoints.find(ep => ep.node == node && ep.service.name == service.name);\n\t\tif (found) {\n\t\t\tfound.update(data);\n\t\t\treturn found;\n\t\t}\n\n\t\tconst ep = new this.EndPointFactory(this.registry, this.broker, node, service, data);\n\t\tthis.endpoints.push(ep);\n\n\t\tthis.setLocalEndpoints();\n\n\t\treturn ep;\n\t}\n\n\t/**\n\t * Get first endpoint\n\t *\n\t * @returns {Endpoint}\n\t * @memberof EndpointList\n\t */\n\tgetFirst() {\n\t\tif (this.endpoints.length > 0)\n\t\t\treturn this.endpoints[0];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Select next endpoint with balancer strategy\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @param {Context} ctx\n\t * @returns {Endpoint}\n\t * @memberof EndpointList\n\t */\n\tselect(list, ctx) {\n\t\tconst ret = this.strategy.select(list, ctx);\n\t\tif (!ret) {\n\t\t\t/* istanbul ignore next */\n\t\t\tthrow new MoleculerServerError(\"Strategy returned an invalid endpoint.\", 500, \"INVALID_ENDPOINT\", { strategy: typeof(this.strategy) });\n\t\t}\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Get next endpoint\n\t *\n\t * @param {Context} ctx\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tnext(ctx) {\n\t\t// No items\n\t\tif (this.endpoints.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// If internal (service), return the local always\n\t\tif (this.internal && this.hasLocal()) {\n\t\t\treturn this.nextLocal();\n\t\t}\n\n\t\t// Only 1 item\n\t\tif (this.endpoints.length === 1) {\n\t\t\t// No need to select a node, return the only one\n\t\t\tconst item = this.endpoints[0];\n\t\t\tif (item.isAvailable)\n\t\t\t\treturn item;\n\n\t\t\treturn null;\n\t\t}\n\n\t\t// Search local item\n\t\tif (this.registry.opts.preferLocal === true && this.hasLocal()) {\n\t\t\tconst ep = this.nextLocal(ctx);\n\t\t\tif (ep && ep.isAvailable)\n\t\t\t\treturn ep;\n\t\t}\n\n\t\tconst epList = this.endpoints.filter(ep => ep.isAvailable);\n\t\tif (epList.length == 0)\n\t\t\treturn null;\n\n\t\treturn this.select(epList, ctx);\n\t}\n\n\t/**\n\t * Get next local endpoint\n\t *\n\t * @param {Context} ctx\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tnextLocal(ctx) {\n\t\t// No items\n\t\tif (this.localEndpoints.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Only 1 item\n\t\tif (this.localEndpoints.length === 1) {\n\t\t\t// No need to select a node, return the only one\n\t\t\tconst item = this.localEndpoints[0];\n\t\t\tif (item.isAvailable)\n\t\t\t\treturn item;\n\n\t\t\treturn null;\n\t\t}\n\n\t\tconst epList = this.localEndpoints.filter(ep => ep.isAvailable);\n\t\tif (epList.length == 0)\n\t\t\treturn null;\n\n\t\treturn this.select(epList, ctx);\n\t}\n\n\t/**\n\t * Check there is available endpoint\n\t *\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\thasAvailable() {\n\t\treturn this.endpoints.find(ep => ep.isAvailable) != null;\n\t}\n\n\t/**\n\t * Check there is local endpoint\n\t *\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\thasLocal() {\n\t\treturn this.localEndpoints.length > 0;\n\t}\n\n\t/**\n\t * Set local endpoint\n\t *\n\t * @memberof EndpointList\n\t */\n\tsetLocalEndpoints() {\n\t\tthis.localEndpoints = this.endpoints.filter(ep => ep.local);\n\t}\n\n\t/**\n\t * Get count of endpoints\n\t *\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tcount() {\n\t\treturn this.endpoints.length;\n\t}\n\n\t/**\n\t * Get endpoint on a specified node\n\t *\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tgetEndpointByNodeID(nodeID) {\n\t\tconst ep = this.endpoints.find(ep => ep.id == nodeID);\n\t\tif (ep && ep.isAvailable)\n\t\t\treturn ep;\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Check nodeID in the endpoint list\n\t *\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\thasNodeID(nodeID) {\n\t\treturn this.endpoints.find(ep => ep.id == nodeID) != null;\n\t}\n\n\t/**\n\t * Remove all endpoints by service\n\t *\n\t * @param {ServiceItem} service\n\t * @memberof EndpointList\n\t */\n\tremoveByService(service) {\n\t\t_.remove(this.endpoints, ep => {\n\t\t\tif (ep.service == service) {\n\t\t\t\tep.destroy();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tthis.setLocalEndpoints();\n\t}\n\n\t/**\n\t * Remove endpoints by node ID\n\t *\n\t * @param {String} nodeID\n\t * @memberof EndpointList\n\t */\n\tremoveByNodeID(nodeID) {\n\t\t_.remove(this.endpoints, ep => {\n\t\t\tif (ep.id == nodeID) {\n\t\t\t\tep.destroy();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tthis.setLocalEndpoints();\n\t}\n}\n\nmodule.exports = EndpointList;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Endpoint class\n *\n * @class Endpoint\n */\nclass Endpoint {\n\t/**\n\t * Creates an instance of Endpoint.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Node} node\n\t * @memberof Endpoint\n\t */\n\tconstructor(registry, broker, node) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\n\t\tthis.id = node.id;\n\t\tthis.node = node;\n\n\t\tthis.local = node.id === broker.nodeID;\n\t\tthis.state = true;\n\t}\n\n\tdestroy() {\n\n\t}\n\n\t/**\n\t * Get availability\n\t *\n\t * @readonly\n\t * @memberof Endpoint\n\t */\n\tget isAvailable() {\n\t\treturn this.state;\n\t}\n\n\tupdate() {\n\n\t}\n}\n\nmodule.exports = Endpoint;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Endpoint = require(\"./endpoint\");\n\n/**\n * Endpoint class for events\n *\n * @class EventEndpoint\n * @extends {Endpoint}\n */\nclass EventEndpoint extends Endpoint {\n\n\t/**\n\t * Creates an instance of EventEndpoint.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Node} node\n\t * @param {Service} service\n\t * @param {any} event\n\t * @memberof EventEndpoint\n\t */\n\tconstructor(registry, broker, node, service, event) {\n\t\tsuper(registry, broker, node);\n\n\t\tthis.service = service;\n\t\tthis.event = event;\n\t}\n\n\t/**\n\t * Update properties\n\t *\n\t * @param {any} event\n\t * @memberof EventEndpoint\n\t */\n\tupdate(event) {\n\t\tthis.event = event;\n\t}\n}\n\nmodule.exports = EventEndpoint;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst utils\t\t\t= require(\"../utils\");\nconst Strategies \t= require(\"../strategies\");\nconst EndpointList \t= require(\"./endpoint-list\");\nconst EventEndpoint = require(\"./endpoint-event\");\n\n/**\n * Catalog for events\n *\n * @class EventCatalog\n */\nclass EventCatalog {\n\n\t/**\n\t * Creates an instance of EventCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {any} StrategyFactory\n\t * @memberof EventCatalog\n\t */\n\tconstructor(registry, broker, StrategyFactory) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\t\tthis.StrategyFactory = StrategyFactory;\n\n\t\tthis.events = [];\n\n\t\tthis.EndpointFactory = EventEndpoint;\n\t}\n\n\t/**\n\t * Add a new event\n\t *\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {any} event\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tadd(node, service, event) {\n\t\tconst eventName = event.name;\n\t\tconst groupName = event.group || service.name;\n\t\tlet list = this.get(eventName, groupName);\n\t\tif (!list) {\n\t\t\tconst strategyFactory = event.strategy ? (Strategies.resolve(event.strategy) || this.StrategyFactory) : this.StrategyFactory;\n\t\t\tconst strategyOptions = event.strategyOptions ? event.strategyOptions : this.registry.opts.strategyOptions;\n\t\t\t// Create a new EndpointList\n\t\t\tlist = new EndpointList(this.registry, this.broker, eventName, groupName, this.EndpointFactory, strategyFactory, strategyOptions);\n\t\t\tthis.events.push(list);\n\t\t}\n\n\t\tlist.add(node, service, event);\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * Get an event by name (and group name)\n\t *\n\t * @param {String} eventName\n\t * @param {String} groupName\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tget(eventName, groupName) {\n\t\treturn this.events.find(list => list.name == eventName && list.group == groupName);\n\t}\n\n\t/**\n\t * Get balanced endpoint for event\n\t *\n\t * @param {String} eventName\n\t * @param {String|Array?} groups\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tgetBalancedEndpoints(eventName, groups) {\n\t\tconst res = [];\n\n\t\tthis.events.forEach(list => {\n\t\t\tif (!utils.match(eventName, list.name)) return;\n\t\t\tif (groups == null || groups.length == 0 || groups.indexOf(list.group) != -1) {\n\t\t\t\t// Use built-in balancer, get the next endpoint\n\t\t\t\tconst ep = list.next();\n\t\t\t\tif (ep && ep.isAvailable)\n\t\t\t\t\tres.push([ep, list.group]);\n\t\t\t}\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Get all groups for event\n\t *\n\t * @param {String} eventName\n\t * @returns Array<String>\n\t * @memberof EventCatalog\n\t */\n\tgetGroups(eventName) {\n\t\treturn _.uniq(this.events.filter(list => utils.match(eventName, list.name)).map(item => item.group));\n\t}\n\n\t/**\n\t * Get all endpoints for event\n\t *\n\t * @param {String} eventName\n\t * @param {Array<String>?} groupNames\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tgetAllEndpoints(eventName, groupNames) {\n\t\tconst res = [];\n\t\tthis.events.forEach(list => {\n\t\t\tif (!utils.match(eventName, list.name)) return;\n\t\t\tif (groupNames == null || groupNames.length == 0 || groupNames.indexOf(list.group) !== -1) {\n\t\t\t\tlist.endpoints.forEach(ep => {\n\t\t\t\t\tif (ep.isAvailable)\n\t\t\t\t\t\tres.push(ep);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn _.uniqBy(res, \"id\");\n\t}\n\n\t/**\n\t * Call local service handlers\n\t *\n\t * @param {String} eventName\n\t * @param {any} payload\n\t * @param {Array<String>?} groupNames\n\t * @param {String} nodeID\n\t * @param {boolean} broadcast\n\t * @returns {Promise<any>}\n\t *\n\t * @memberof EventCatalog\n\t */\n\temitLocalServices(ctx) {\n\t\tconst isBroadcast = [\"broadcast\", \"broadcastLocal\"].indexOf(ctx.eventType) !== -1;\n\t\tconst sender = ctx.nodeID;\n\n\t\tconst promises = [];\n\n\t\tthis.events.forEach(list => {\n\t\t\tif (!utils.match(ctx.eventName, list.name)) return;\n\t\t\tif (ctx.eventGroups == null || ctx.eventGroups.length == 0 || ctx.eventGroups.indexOf(list.group) !== -1) {\n\t\t\t\tif (isBroadcast) {\n\t\t\t\t\tlist.endpoints.forEach(ep => {\n\t\t\t\t\t\tif (ep.local && ep.event.handler) {\n\t\t\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\t\t\tnewCtx.nodeID = sender;\n\t\t\t\t\t\t\tpromises.push(this.callEventHandler(newCtx));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst ep = list.nextLocal();\n\t\t\t\t\tif (ep && ep.event.handler) {\n\t\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\t\tnewCtx.nodeID = sender;\n\t\t\t\t\t\tpromises.push(this.callEventHandler(newCtx));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this.broker.Promise.all(promises);\n\t}\n\n\t/**\n\t * Call local event handler and handles unhandled promise rejections.\n\t *\n\t * @param {Context} ctx\n\t *\n\t * @memberof EventCatalog\n\t */\n\tcallEventHandler(ctx) {\n\t\treturn ctx.endpoint.event.handler(ctx);\n\t}\n\n\t/**\n\t * Remove endpoints by service\n\t *\n\t * @param {ServiceItem} service\n\t * @memberof EventCatalog\n\t */\n\tremoveByService(service) {\n\t\tthis.events.forEach(list => {\n\t\t\tlist.removeByService(service);\n\t\t});\n\t}\n\n\t/**\n\t * Remove endpoint by name & nodeId\n\t *\n\t * @param {String} eventName\n\t * @param {String} nodeID\n\t * @memberof EventCatalog\n\t */\n\tremove(eventName, nodeID) {\n\t\tthis.events.forEach(list => {\n\t\t\tif (list.name == eventName)\n\t\t\t\tlist.removeByNodeID(nodeID);\n\t\t});\n\t}\n\n\t/**\n\t * Get a filtered list of events\n\t *\n\t * @param {Object} {onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false}\n\t * @returns {Array}\n\t *\n\t * @memberof EventCatalog\n\t */\n\tlist({ onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false }) {\n\t\tlet res = [];\n\n\t\tthis.events.forEach(list => {\n\t\t\t/* istanbul ignore next */\n\t\t\tif (skipInternal && /^\\$/.test(list.name))\n\t\t\t\treturn;\n\n\t\t\tif (onlyLocal && !list.hasLocal())\n\t\t\t\treturn;\n\n\t\t\tif (onlyAvailable && !list.hasAvailable())\n\t\t\t\treturn;\n\n\t\t\tlet item = {\n\t\t\t\tname: list.name,\n\t\t\t\tgroup: list.group,\n\t\t\t\tcount: list.count(),\n\t\t\t\t//service: list.service,\n\t\t\t\thasLocal: list.hasLocal(),\n\t\t\t\tavailable: list.hasAvailable()\n\t\t\t};\n\n\t\t\tif (item.count > 0) {\n\t\t\t\tconst ep = list.endpoints[0];\n\t\t\t\tif (ep)\n\t\t\t\t\titem.event = _.omit(ep.event, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t}\n\n\t\t\tif (withEndpoints) {\n\t\t\t\tif (item.count > 0) {\n\t\t\t\t\titem.endpoints = list.endpoints.map(ep => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnodeID: ep.node.id,\n\t\t\t\t\t\t\tstate: ep.state,\n\t\t\t\t\t\t\tavailable: ep.node.available,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tres.push(item);\n\t\t});\n\n\t\treturn res;\n\t}\n}\n\nmodule.exports = EventCatalog;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Endpoint = require(\"./endpoint\");\n\n/**\n * Endpoint class for actions\n *\n * @class ActionEndpoint\n * @extends {Endpoint}\n */\nclass ActionEndpoint extends Endpoint {\n\n\t/**\n\t * Creates an instance of ActionEndpoint.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {any} action\n\t * @memberof ActionEndpoint\n\t */\n\tconstructor(registry, broker, node, service, action) {\n\t\tsuper(registry, broker, node);\n\n\t\tthis.service = service;\n\t\tthis.action = action;\n\n\t\tthis.name = `${this.id}:${this.action.name}`;\n\t}\n\n\t/**\n\t * Update properties\n\t *\n\t * @param {any} action\n\t * @memberof ActionEndpoint\n\t */\n\tupdate(action) {\n\t\tthis.action = action;\n\t}\n}\n\nmodule.exports = ActionEndpoint;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst Strategies = require(\"../strategies\");\nconst EndpointList = require(\"./endpoint-list\");\nconst ActionEndpoint = require(\"./endpoint-action\");\n\n/**\n * Catalog class to store service actions\n *\n * @class ActionCatalog\n */\nclass ActionCatalog {\n\n\t/**\n\t * Creates an instance of ActionCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Strategy} StrategyFactory\n\t * @memberof ActionCatalog\n\t */\n\tconstructor(registry, broker, StrategyFactory) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\t\tthis.StrategyFactory = StrategyFactory;\n\n\t\tthis.actions = new Map();\n\n\t\tthis.EndpointFactory = ActionEndpoint;\n\t}\n\n\t/**\n\t * Add an action\n\t *\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {Action} action\n\t * @memberof ActionCatalog\n\t */\n\tadd(node, service, action) {\n\t\tlet list = this.actions.get(action.name);\n\t\tif (!list) {\n\t\t\tconst strategyFactory = action.strategy ? (Strategies.resolve(action.strategy) || this.StrategyFactory) : this.StrategyFactory;\n\t\t\tconst strategyOptions = action.strategyOptions ? action.strategyOptions : this.registry.opts.strategyOptions;\n\t\t\t// Create a new EndpointList\n\t\t\tlist = new EndpointList(this.registry, this.broker, action.name, null, this.EndpointFactory, strategyFactory, strategyOptions);\n\t\t\tthis.actions.set(action.name, list);\n\t\t}\n\n\t\tlist.add(node, service, action);\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * Get action by name\n\t *\n\t * @param {String} actionName\n\t * @returns\n\t * @memberof ActionCatalog\n\t */\n\tget(actionName) {\n\t\treturn this.actions.get(actionName);\n\t}\n\n\t/**\n\t * Check the action is available (there is live endpoint)\n\t *\n\t * @param {String} actionName\n\t * @returns {Boolean}\n\t * @memberof ActionCatalog\n\t */\n\tisAvailable(actionName) {\n\t\tconst list = this.actions.get(actionName);\n\t\tif (list)\n\t\t\treturn list.hasAvailable();\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Remove all actions by service\n\t *\n\t * @param {ServiceItem} service\n\t * @memberof ActionCatalog\n\t */\n\tremoveByService(service) {\n\t\tthis.actions.forEach(list => {\n\t\t\tlist.removeByService(service);\n\t\t});\n\t}\n\n\t/**\n\t * Remove action by name & nodeID\n\t *\n\t * @param {String} actionName\n\t * @param {String} nodeID\n\t * @memberof ActionCatalog\n\t */\n\tremove(actionName, nodeID) {\n\t\tconst list = this.actions.get(actionName);\n\t\tif (list)\n\t\t\tlist.removeByNodeID(nodeID);\n\t}\n\n\t/**\n\t * Get a filtered list of actions\n\t *\n\t * @param {Object} {onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false}\n\t * @returns {Array}\n\t *\n\t * @memberof ActionCatalog\n\t */\n\tlist({ onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false }) {\n\t\tlet res = [];\n\n\t\tthis.actions.forEach((list, key) => {\n\t\t\tif (skipInternal && /^\\$/.test(key))\n\t\t\t\treturn;\n\n\t\t\tif (onlyLocal && !list.hasLocal())\n\t\t\t\treturn;\n\n\t\t\tif (onlyAvailable && !list.hasAvailable())\n\t\t\t\treturn;\n\n\t\t\tlet item = {\n\t\t\t\tname: key,\n\t\t\t\tcount: list.count(),\n\t\t\t\thasLocal: list.hasLocal(),\n\t\t\t\tavailable: list.hasAvailable()\n\t\t\t};\n\n\t\t\tif (item.count > 0) {\n\t\t\t\tconst ep = list.endpoints[0];\n\t\t\t\tif (ep)\n\t\t\t\t\titem.action = _.omit(ep.action, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t}\n\t\t\tif (item.action && item.action.protected === true) return;\n\n\t\t\tif (withEndpoints) {\n\t\t\t\tif (item.count > 0) {\n\t\t\t\t\titem.endpoints = list.endpoints.map(ep => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnodeID: ep.node.id,\n\t\t\t\t\t\t\tstate: ep.state,\n\t\t\t\t\t\t\tavailable: ep.node.available,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tres.push(item);\n\t\t});\n\n\t\treturn res;\n\t}\n}\n\nmodule.exports = ActionCatalog;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst utils = require(\"../utils\");\nconst Strategies = require(\"../strategies\");\nconst Discoverers = require(\"./discoverers\");\nconst NodeCatalog = require(\"./node-catalog\");\nconst ServiceCatalog = require(\"./service-catalog\");\nconst EventCatalog = require(\"./event-catalog\");\nconst ActionCatalog = require(\"./action-catalog\");\nconst ActionEndpoint = require(\"./endpoint-action\");\nconst { METRIC }\t\t= require(\"../metrics\");\n\n/**\n * Service Registry\n *\n * @class Registry\n */\nclass Registry {\n\n\t/**\n\t * Creates an instance of Registry.\n\t *\n\t * @param {any} broker\n\t * @memberof Registry\n\t */\n\tconstructor(broker) {\n\t\tthis.broker = broker;\n\t\tthis.metrics = broker.metrics;\n\t\tthis.logger = broker.getLogger(\"registry\");\n\n\t\tthis.opts = Object.assign({}, broker.options.registry);\n\n\t\tthis.StrategyFactory = Strategies.resolve(this.opts.strategy);\n\t\tthis.logger.info(`Strategy: ${this.StrategyFactory.name}`);\n\n\t\tthis.discoverer = Discoverers.resolve(this.opts.discoverer);\n\t\tthis.logger.info(`Discoverer: ${this.broker.getConstructorName(this.discoverer)}`);\n\n\t\tthis.nodes = new NodeCatalog(this, broker);\n\t\tthis.services = new ServiceCatalog(this, broker);\n\t\tthis.actions = new ActionCatalog(this, broker, this.StrategyFactory);\n\t\tthis.events = new EventCatalog(this, broker, this.StrategyFactory);\n\n\t\tthis.registerMoleculerMetrics();\n\t\tthis.updateMetrics();\n\t}\n\n\tinit(broker) {\n\t\tthis.discoverer.init(this);\n\t}\n\n\tstop() {\n\t\treturn this.discoverer.stop();\n\t}\n\n\t/**\n\t * Register Moleculer Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tif (!this.broker.isMetricsEnabled()) return;\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_NODES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered nodes\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_NODES_ONLINE_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of online nodes\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_SERVICES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered services\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"service\"], description: \"Number of service endpoints\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_ACTIONS_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered actions\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"action\"], description: \"Number of action endpoints\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_EVENTS_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered events\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"event\"], description: \"Number of event endpoints\" });\n\t}\n\n\t/**\n\t * Update metrics.\n\t */\n\tupdateMetrics() {\n\t\tif (!this.broker.isMetricsEnabled()) return;\n\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_NODES_TOTAL, this.nodes.count());\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_NODES_ONLINE_TOTAL, this.nodes.onlineCount());\n\n\t\tconst services = this.services.list({ grouping: true, onlyLocal: false, onlyAvailable: false, skipInternal: false, withActions: false, withEvents: false });\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_SERVICES_TOTAL, services.length);\n\t\tservices.forEach(svc => this.metrics.set(METRIC.MOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL, svc.nodes ? svc.nodes.length : 0, { service: svc.fullName }));\n\n\t\tconst actions = this.actions.list({ withEndpoints: true });\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_ACTIONS_TOTAL, actions.length);\n\t\tactions.forEach(item => this.metrics.set(METRIC.MOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL, item.endpoints ? item.endpoints.length : 0, { action: item.name }));\n\n\t\tconst events = this.events.list({ withEndpoints: true });\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_EVENTS_TOTAL, events.length);\n\t\tevents.forEach(item => this.metrics.set(METRIC.MOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL, item.endpoints ? item.endpoints.length : 0, { event: item.name }));\n\t}\n\n\t/**\n\t * Register local service\n\t *\n\t * @param {Service} svc\n\t * @memberof Registry\n\t */\n\tregisterLocalService(svc) {\n\t\tif (!this.services.has(svc.fullName, this.broker.nodeID)) {\n\t\t\tconst service = this.services.add(this.nodes.localNode, svc, true);\n\n\t\t\tif (svc.actions)\n\t\t\t\tthis.registerActions(this.nodes.localNode, service, svc.actions);\n\n\t\t\tif (svc.events)\n\t\t\t\tthis.registerEvents(this.nodes.localNode, service, svc.events);\n\n\t\t\tthis.nodes.localNode.services.push(service);\n\n\t\t\tthis.regenerateLocalRawInfo(this.broker.started);\n\n\t\t\tthis.logger.info(`'${svc.name}' service is registered.`);\n\n\t\t\tthis.broker.servicesChanged(true);\n\t\t\tthis.updateMetrics();\n\t\t}\n\t}\n\n\t/**\n\t * Register remote services\n\t *\n\t * @param {Nodeany} node\n\t * @param {Array} serviceList\n\t * @memberof Registry\n\t */\n\tregisterServices(node, serviceList) {\n\t\tserviceList.forEach(svc => {\n\t\t\tif (!svc.fullName)\n\t\t\t\tsvc.fullName = this.broker.ServiceFactory.getVersionedFullName(svc.name, svc.version);\n\n\t\t\tlet prevActions, prevEvents;\n\t\t\tlet service = this.services.get(svc.fullName, node.id);\n\t\t\tif (!service) {\n\t\t\t\tservice = this.services.add(node, svc, false);\n\t\t\t} else {\n\t\t\t\tprevActions = Object.assign({}, service.actions);\n\t\t\t\tprevEvents = Object.assign({}, service.events);\n\t\t\t\tservice.update(svc);\n\t\t\t}\n\n\t\t\t//Register actions\n\t\t\tif (svc.actions) {\n\t\t\t\tthis.registerActions(node, service, svc.actions);\n\t\t\t}\n\n\t\t\t// remove old actions which is not exist\n\t\t\tif (prevActions) {\n\t\t\t\t_.forIn(prevActions, (action, name) => {\n\t\t\t\t\tif (!svc.actions || !svc.actions[name]) {\n\t\t\t\t\t\tthis.unregisterAction(node, name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Register events\n\t\t\tif (svc.events) {\n\t\t\t\tthis.registerEvents(node, service, svc.events);\n\t\t\t}\n\n\t\t\t// remove old events which is not exist\n\t\t\tif (prevEvents) {\n\t\t\t\t_.forIn(prevEvents, (event, name) => {\n\t\t\t\t\tif (!svc.events || !svc.events[name]) {\n\t\t\t\t\t\tthis.unregisterEvent(node, name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// remove old services which is not exist in new serviceList\n\t\t// Please note! At first, copy the array because you can't remove items inside forEach\n\t\tconst prevServices = Array.from(this.services.services);\n\t\tprevServices.forEach(service => {\n\t\t\tif (service.node != node) return;\n\n\t\t\tlet exist = false;\n\t\t\tserviceList.forEach(svc => {\n\t\t\t\tif (service.equals(svc.fullName))\n\t\t\t\t\texist = true;\n\t\t\t});\n\n\t\t\t// This service is removed on remote node!\n\t\t\tif (!exist) {\n\t\t\t\tthis.unregisterService(service.fullName, node.id);\n\t\t\t}\n\t\t});\n\n\t\tthis.broker.servicesChanged(false);\n\t\tthis.updateMetrics();\n\t}\n\n\t/**\n\t * Check the action visiblity.\n\t *\n\t * \tAvailable values:\n\t * \t\t- \"published\" or `null`: public action and can be published via API Gateway\n\t * \t\t- \"public\": public action, can be called remotely but not published via API GW\n\t * \t\t- \"protected\": can be called from local services\n\t * \t\t- \"private\": can be called from internally via `this.actions.xy()` inside Service\n\t *\n\t * @param {*} action\n\t * @param {*} node\n\t * @returns\n\t * @memberof Registry\n\t */\n\tcheckActionVisibility(action, node) {\n\t\tif (action.visibility == null || action.visibility == \"published\" || action.visibility == \"public\")\n\t\t\treturn true;\n\n\t\tif (action.visibility == \"protected\" && node.local)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Register service actions\n\t *\n\t * @param {Node} node\n\t * @param {Service} service\n\t * @param {Object} actions\n\t * @memberof Registry\n\t */\n\tregisterActions(node, service, actions) {\n\t\t_.forIn(actions, action => {\n\n\t\t\tif (!this.checkActionVisibility(action, node))\n\t\t\t\treturn;\n\n\t\t\tif (node.local) {\n\t\t\t\taction.handler = this.broker.middlewares.wrapHandler(\"localAction\", action.handler, action);\n\t\t\t} else if (this.broker.transit) {\n\t\t\t\taction.handler = this.broker.middlewares.wrapHandler(\"remoteAction\", this.broker.transit.request.bind(this.broker.transit), { ...action, service });\n\t\t\t}\n\t\t\tif (this.broker.options.disableBalancer && this.broker.transit)\n\t\t\t\taction.remoteHandler = this.broker.middlewares.wrapHandler(\"remoteAction\", this.broker.transit.request.bind(this.broker.transit), { ...action, service });\n\n\t\t\tthis.actions.add(node, service, action);\n\t\t\tservice.addAction(action);\n\t\t});\n\t}\n\n\t/**\n\t * Create a local Endpoint for private actions\n\t *\n\t * @param {Action} action\n\t * @returns {ActionEndpoint}\n\t * @memberof Registry\n\t */\n\tcreatePrivateActionEndpoint(action) {\n\t\treturn new ActionEndpoint(this, this.broker, this.nodes.localNode, action.service, action);\n\t}\n\n\t/**\n\t * Check the service is exist\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns {Boolean}\n\t * @memberof Registry\n\t */\n\thasService(fullName, nodeID) {\n\t\treturn this.services.has(fullName, nodeID);\n\t}\n\n\t/**\n\t * Get endpoint list of action by name\n\t *\n\t * @param {String} actionName\n\t * @returns {EndpointList}\n\t * @memberof Registry\n\t */\n\tgetActionEndpoints(actionName) {\n\t\treturn this.actions.get(actionName);\n\t}\n\n\t/**\n\t * Get an endpoint of action on a specified node\n\t *\n\t * @param {String} actionName\n\t * @param {String} nodeID\n\t * @returns {Endpoint}\n\t * @memberof Registry\n\t */\n\tgetActionEndpointByNodeId(actionName, nodeID) {\n\t\tconst list = this.actions.get(actionName);\n\t\tif (list)\n\t\t\treturn list.getEndpointByNodeID(nodeID);\n\t}\n\n\t/**\n\t * Unregister service\n\t *\n\t * @param {String} fullName\n\t * @param {String?} nodeID\n\t * @memberof Registry\n\t */\n\tunregisterService(fullName, nodeID) {\n\t\tthis.services.remove(fullName, nodeID || this.broker.nodeID);\n\n\t\tif (!nodeID || nodeID == this.broker.nodeID) {\n\t\t\tthis.regenerateLocalRawInfo(true);\n\t\t}\n\t}\n\n\t/**\n\t * Unregister all services by nodeID\n\t *\n\t * @param {String} nodeID\n\t * @memberof Registry\n\t */\n\tunregisterServicesByNode(nodeID) {\n\t\tthis.services.removeAllByNodeID(nodeID);\n\t}\n\n\t/**\n\t * Unregister an action by node & name\n\t *\n\t * @param {Node} node\n\t * @param {String} actionName\n\t * @memberof Registry\n\t */\n\tunregisterAction(node, actionName) {\n\t\tthis.actions.remove(actionName, node.id);\n\t}\n\n\t/**\n\t * Register service events\n\t *\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {Object} events\n\t * @memberof Registry\n\t */\n\tregisterEvents(node, service, events) {\n\t\t_.forIn(events, event => {\n\n\t\t\tif (node.local)\n\t\t\t\tevent.handler = this.broker.middlewares.wrapHandler(\"localEvent\", event.handler, event);\n\n\t\t\tthis.events.add(node, service, event);\n\t\t\tservice.addEvent(event);\n\t\t});\n\t}\n\n\t/**\n\t * Unregister event by name & node\n\t *\n\t * @param {Node} node\n\t * @param {String} eventName\n\t * @memberof Registry\n\t */\n\tunregisterEvent(node, eventName) {\n\t\tthis.events.remove(eventName, node.id);\n\t}\n\n\t/**\n\t * Generate local raw info for INFO packet\n\t *\n\t * @memberof Registry\n\t */\n\tregenerateLocalRawInfo(incSeq) {\n\t\tlet node = this.nodes.localNode;\n\t\tif (incSeq)\n\t\t\tnode.seq++;\n\n\t\tconst rawInfo = _.pick(node, [\"ipList\", \"hostname\", \"instanceID\", \"client\", \"config\", \"port\", \"seq\", \"metadata\"]);\n\t\tif (this.broker.started)\n\t\t\trawInfo.services = this.services.getLocalNodeServices();\n\t\telse\n\t\t\trawInfo.services = [];\n\n\t\t// Make to be safety\n\t\tnode.rawInfo = utils.safetyObject(rawInfo, this.broker.options);\n\n\t\treturn node.rawInfo;\n\t}\n\n\t/**\n\t * Generate local node info for INFO packets\n\t *\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetLocalNodeInfo(force) {\n\t\tif (force || !this.nodes.localNode.rawInfo)\n\t\t\treturn this.regenerateLocalRawInfo();\n\n\t\treturn this.nodes.localNode.rawInfo;\n\t}\n\n\t/**\n\t * Generate node info for INFO packets\n\t *\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetNodeInfo(nodeID) {\n\t\tconst node = this.nodes.get(nodeID);\n\t\tif (!node)\n\t\t\treturn null;\n\n\t\tif (node.local)\n\t\t\treturn this.getLocalNodeInfo();\n\n\t\treturn node.rawInfo;\n\t}\n\n\t/**\n\t * Process an incoming node INFO packet\n\t *\n\t * @param {any} payload\n\t * @returns\n\t * @memberof Registry\n\t */\n\tprocessNodeInfo(payload) {\n\t\treturn this.nodes.processNodeInfo(payload);\n\t}\n\n\t/**\n\t * Get list of registered nodes\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetNodeList(opts) {\n\t\treturn this.nodes.list(opts);\n\t}\n\n\t/**\n\t * Get list of registered services\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetServiceList(opts) {\n\t\treturn this.services.list(opts);\n\t}\n\n\t/**\n\t * Get list of registered actions\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetActionList(opts) {\n\t\treturn this.actions.list(opts);\n\t}\n\n\t/**\n\t * Get list of registered events\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetEventList(opts) {\n\t\treturn this.events.list(opts);\n\t}\n\n\t/**\n\t * Get a raw info list from nodes\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof Registry\n\t */\n\tgetNodeRawList() {\n\t\treturn this.nodes.toArray().map(node => node.rawInfo);\n\t}\n}\n\nmodule.exports = Registry;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Registry = require(\"./registry\");\n\nmodule.exports = Registry;\n\nmodule.exports.Endpoint = require(\"./endpoint\");\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { match, isObject, isString }\t= require(\"../utils\");\n\nconst LEVELS = [\"fatal\", \"error\", \"warn\", \"info\", \"debug\", \"trace\"];\n\n/**\n * Logger base class.\n *\n * @class BaseLogger\n */\nclass BaseLogger {\n\n\t/**\n\t * Creates an instance of BaseLogger.\n\t *\n\t * @param {Object} opts\n\t * @memberof BaseLogger\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tlevel: \"info\",\n\t\t\tcreateLogger: null\n\t\t});\n\t\tthis.Promise = Promise; // default promise before logger is initialized\n\t}\n\n\t/**\n\t * Initialize logger.\n\t *\n\t * @param {LoggerFactory} loggerFactory\n\t */\n\tinit(loggerFactory)  {\n\t\tthis.loggerFactory = loggerFactory;\n\t\tthis.broker = this.loggerFactory.broker;\n\t\tthis.Promise = this.broker.Promise;\n\t}\n\n\t/**\n\t * Stopping logger\n\t */\n\tstop() {\n\t\treturn this.Promise.resolve();\n\t}\n\n\tgetLogLevel(mod) {\n\t\tmod = mod ? mod.toUpperCase() : \"\";\n\n\t\tconst level = this.opts.level;\n\t\tif (isString(level))\n\t\t\treturn level;\n\n\t\tif (isObject(level)) {\n\t\t\tif (level[mod])\n\t\t\t\treturn level[mod];\n\n\t\t\t// Find with matching\n\t\t\tconst key = Object.keys(level).find(m => match(mod, m) && m !== \"**\");\n\t\t\tif (key)\n\t\t\t\treturn level[key];\n\t\t\telse if (level[\"**\"]) {\n\t\t\t\treturn level[\"**\"];\n\t\t\t}\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\treturn null;\n\t}\n\n\tgetLogHandler(/*bindings*/) {\n\t\treturn null;\n\t}\n}\n\nBaseLogger.LEVELS = LEVELS;\n\nmodule.exports = BaseLogger;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n/* eslint-disable no-console */\n\n\"use strict\";\n\nconst BaseLogger \t= require(\"./base\");\nconst _ \t\t\t= require(\"lodash\");\nconst kleur \t\t= require(\"kleur\");\nconst util \t\t\t= require(\"util\");\nconst { isObject, isFunction }\t= require(\"../utils\");\n\n\nfunction getColor(type) {\n\tswitch(type) {\n\t\tcase \"fatal\": return kleur.red().inverse;\n\t\tcase \"error\": return kleur.red;\n\t\tcase \"warn\": return kleur.yellow;\n\t\tcase \"debug\": return kleur.magenta;\n\t\tcase \"trace\": return kleur.gray;\n\t\tdefault: return kleur.green;\n\t}\n}\n\n/**\n * Formatted abstract logger for Moleculer\n *\n * @class FormattedLogger\n * @extends {BaseLogger}\n */\nclass FormattedLogger extends BaseLogger {\n\n\t/**\n\t * Creates an instance of FormattedLogger.\n\t * @param {Object} opts\n\t * @memberof FormattedLogger\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\tcolors: true,\n\t\t\tmoduleColors: false,\n\t\t\tformatter: \"full\",\n\t\t\tobjectPrinter: null,\n\t\t\tautoPadding: false\n\t\t});\n\n\t\tthis.maxPrefixLength = 0;\n\t}\n\n\tinit(loggerFactory) {\n\t\tsuper.init(loggerFactory);\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\n\t\tthis.objectPrinter = this.opts.objectPrinter ? this.opts.objectPrinter : o => util.inspect(o, { showHidden: false, depth: 2, colors: kleur.enabled, breakLength: Number.POSITIVE_INFINITY });\n\n\t\t// Generate colorful log level names\n\t\tthis.levelColorStr = BaseLogger.LEVELS.reduce((a, level) => {\n\t\t\ta[level] = getColor(level)(_.padEnd(level.toUpperCase(), 5));\n\t\t\treturn a;\n\t\t}, {});\n\n\t\tif (this.opts.colors && this.opts.moduleColors === true) {\n\t\t\tthis.opts.moduleColors = [\n\t\t\t\t\"yellow\", \"bold.yellow\",\n\t\t\t\t\"cyan\", \"bold.cyan\",\n\t\t\t\t\"green\", \"bold.green\",\n\t\t\t\t\"magenta\", \"bold.magenta\",\n\t\t\t\t\"blue\", \"bold.blue\",\n\t\t\t\t/*\"red\",*/\n\t\t\t\t/*\"grey\",*/\n\t\t\t\t/*\"white,\"*/\n\t\t\t];\n\t\t}\n\t}\n\n\t/**\n\t * Get a color for the module name.\n\t */\n\tgetNextColor(mod) {\n\t\tif (this.opts.colors && Array.isArray(this.opts.moduleColors)) {\n\t\t\t// Credits: \"visionmedia/debug\" https://github.com/visionmedia/debug/blob/master/src/common.js#L45\n\t\t\tlet hash = 0;\n\n\t\t\tfor (let i = 0; i < mod.length; i++) {\n\t\t\t\thash = ((hash << 5) - hash) + mod.charCodeAt(i);\n\t\t\t\thash |= 0; // Convert to 32bit integer\n\t\t\t}\n\n\t\t\treturn this.opts.moduleColors[Math.abs(hash) % this.opts.moduleColors.length];\n\t\t}\n\n\t\treturn \"grey\";\n\t}\n\n\tpadLeft(len) {\n\t\tif (this.opts.autoPadding)\n\t\t\treturn \" \".repeat(this.maxPrefixLength - len);\n\n\t\treturn \"\";\n\t}\n\n\t/**\n\t *\n\t * @param {object} bindings\n\t */\n\tgetFormatter(bindings) {\n\t\tconst formatter = this.opts.formatter;\n\n\t\tconst mod = (bindings && bindings.mod) ? bindings.mod.toUpperCase() : \"\";\n\t\tconst c = this.getNextColor(mod);\n\t\tconst modColorName = c.split(\".\").reduce((a,b) => a[b] || a()[b], kleur)(mod);\n\t\tconst moduleColorName = bindings ? kleur.grey(bindings.nodeID + \"/\") + modColorName : \"\";\n\n\t\tconst printArgs = args => {\n\t\t\treturn args.map(p => {\n\t\t\t\tif (isObject(p) || Array.isArray(p))\n\t\t\t\t\treturn this.objectPrinter(p);\n\t\t\t\treturn p;\n\t\t\t});\n\t\t};\n\n\t\tif (isFunction(formatter)) {\n\t\t\treturn (type, args) => formatter.call(this, type, args, bindings, { printArgs });\n\n\t\t} else if (formatter == \"json\") {\n\t\t\t// {\"ts\":1581243299731,\"level\":\"info\",\"msg\":\"Moleculer v0.14.0-rc2 is starting...\",\"nodeID\":\"console\",\"ns\":\"\",\"mod\":\"broker\"}\n\t\t\tkleur.enabled = false;\n\t\t\treturn (type, args) => [JSON.stringify({ ts: Date.now(), level: type, msg: printArgs(args).join(\" \"), ...bindings })];\n\t\t} else if (formatter == \"jsonext\") {\n\t\t\t// {\"time\":\"2020-02-09T10:44:35.285Z\",\"level\":\"info\",\"message\":\"Moleculer v0.14.0-rc2 is starting...\",\"nodeID\":\"console\",\"ns\":\"\",\"mod\":\"broker\"}\n\t\t\tkleur.enabled = false;\n\t\t\treturn (type, args) => {\n\t\t\t\tconst res = {\n\t\t\t\t\ttime: new Date().toISOString(),\n\t\t\t\t\tlevel: type,\n\t\t\t\t\tmessage: \"\",\n\t\t\t\t\t...bindings\n\t\t\t\t};\n\t\t\t\tif (args.length > 0) {\n\t\t\t\t\tif (typeof(args[0]) == \"object\"/* && !(args[0] instanceof Error)*/) {\n\t\t\t\t\t\tObject.assign(res, args[0]);\n\t\t\t\t\t\tres.message = printArgs(args.slice(1)).join(\" \");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres.message = printArgs(args).join(\" \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [JSON.stringify(res)];\n\t\t\t};\n\t\t} else if (formatter == \"simple\") {\n\t\t\t// INFO  - Moleculer v0.14.0-beta3 is starting...\n\t\t\treturn (type, args) => [this.levelColorStr[type], \"-\", ...printArgs(args)];\n\t\t} else if (formatter == \"short\") {\n\t\t\t// [08:42:12.973Z] INFO  BROKER: Moleculer v0.14.0-beta3 is starting...\n\t\t\tconst prefixLen = 23 + bindings.mod.length;\n\t\t\tthis.maxPrefixLength = Math.max(prefixLen, this.maxPrefixLength);\n\t\t\treturn (type, args) => [kleur.grey(`[${new Date().toISOString().substr(11)}]`), this.levelColorStr[type], modColorName + this.padLeft(prefixLen) + kleur.grey(\":\"), ...printArgs(args)];\n\t\t} else if (formatter == \"full\") {\n\t\t\t// [2019-08-31T08:40:53.481Z] INFO  bobcsi-pc-7100/BROKER: Moleculer v0.14.0-beta3 is starting...\n\t\t\tconst prefixLen = 35 + bindings.nodeID.length + bindings.mod.length;\n\t\t\tthis.maxPrefixLength = Math.max(prefixLen, this.maxPrefixLength);\n\t\t\treturn (type, args) => [kleur.grey(`[${new Date().toISOString()}]`), this.levelColorStr[type], moduleColorName + this.padLeft(prefixLen) + kleur.grey(\":\"), ...printArgs(args)];\n\t\t} else {\n\t\t\t// [{timestamp}] {level} {nodeID}/{mod}: {msg}\n\n\t\t\treturn (type, args) => {\n\t\t\t\tconst timestamp = new Date().toISOString();\n\t\t\t\treturn [this.render(formatter, {\n\t\t\t\t\ttimestamp: kleur.grey(timestamp),\n\t\t\t\t\ttime: kleur.grey(timestamp.substr(11)),\n\n\t\t\t\t\tlevel: this.levelColorStr[type],\n\t\t\t\t\tnodeID: kleur.grey(bindings.nodeID),\n\t\t\t\t\tmod: modColorName,\n\t\t\t\t\tmsg: printArgs(args).join(\" \")\n\t\t\t\t})];\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Interpolate a text.\n\t *\n\t * @param {Strimg} str\n\t * @param {Object} obj\n\t * @returns {String}\n\t */\n\trender(str, obj) {\n\t\treturn str.replace(/\\{\\s?(\\w+)\\s?\\}/g, (match, v) => obj[v] || \"\");\n\t}\n\n}\n\nmodule.exports = FormattedLogger;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n/* eslint-disable no-console */\n\n\"use strict\";\n\nconst FormattedLogger \t= require(\"./formatted\");\nconst kleur \t\t\t= require(\"kleur\");\n\n/**\n * Console logger for Moleculer\n *\n * @class ConsoleLogger\n * @extends {FormattedLogger}\n */\nclass ConsoleLogger extends FormattedLogger {\n\n\t/**\n\t * Creates an instance of ConsoleLogger.\n\t * @param {Object} opts\n\t * @memberof ConsoleLogger\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.maxPrefixLength = 0;\n\t}\n\n\tinit(loggerFactory) {\n\t\tsuper.init(loggerFactory);\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\t}\n\n\t/**\n\t *\n\t * @param {object} bindings\n\t */\n\tgetLogHandler(bindings) {\n\t\tconst level = bindings ? this.getLogLevel(bindings.mod) : null;\n\t\tif (!level)\n\t\t\treturn null;\n\n\t\tconst levelIdx = FormattedLogger.LEVELS.indexOf(level);\n\t\tconst formatter = this.getFormatter(bindings);\n\n\t\treturn (type, args) => {\n\t\t\tconst typeIdx = FormattedLogger.LEVELS.indexOf(type);\n\t\t\tif (typeIdx > levelIdx) return;\n\n\t\t\tconst pargs = formatter(type, args);\n\t\t\tswitch(type) {\n\t\t\t\tcase \"fatal\":\n\t\t\t\tcase \"error\": return console.error(...pargs);\n\t\t\t\tcase \"warn\": return console.warn(...pargs);\n\t\t\t\tdefault: return console.log(...pargs);\n\t\t\t}\n\t\t};\n\t}\n\n}\n\nmodule.exports = ConsoleLogger;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\nconst Base = require(\"./base\");\n\nconst Loggers = {\n\tBase,\n\tFormatted: require(\"./formatted\"),\n\n\tBunyan: require(\"./bunyan\"),\n\tConsole: require(\"./console\"),\n\tDatadog: require(\"./datadog\"),\n\tDebug: require(\"./debug\"),\n\tFile: require(\"./file\"),\n\tLog4js: require(\"./log4js\"),\n\tPino: require(\"./pino\"),\n\tWinston: require(\"./winston\"),\n\n\tLEVELS: Base.LEVELS\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Loggers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Loggers[n];\n}\n\n/**\n * Resolve reporter by name\n *\n * @param {object|string} opt\n * @returns {Reporter}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Loggers.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet LoggerClass = getByName(opt);\n\t\tif (LoggerClass)\n\t\t\treturn new LoggerClass();\n\n\t} else if (isObject(opt)) {\n\t\tlet LoggerClass = getByName(opt.type);\n\t\tif (LoggerClass)\n\t\t\treturn new LoggerClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid logger configuration. Type: '${opt.type}'`, { type: opt.type });\n\t}\n\n\tthrow new BrokerOptionsError(`Invalid logger configuration: '${opt}'`, { type: opt });\n}\n\nfunction register(name, value) {\n\tLoggers[name] = value;\n}\n\nmodule.exports = Object.assign(Loggers, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isPlainObject, isString } = require(\"./utils\");\nconst Loggers = require(\"./loggers\");\n\nconst noop = () => {};\nconst cwd = process.cwd();\n\n/**\n * Log factory class.\n *\n * @class LoggerFactory\n */\nclass LoggerFactory {\n\n\t/**\n\t * Constructor of LoggerFactory\n\t */\n\tconstructor(broker) {\n\t\tthis.broker = broker;\n\t\tthis.appenders = [];\n\t\tthis.cache = new Map();\n\t}\n\n\t/**\n\t * Initialize module.\n\t */\n\tinit(opts) {\n\t\tthis.opts = opts;\n\n\t\tconst globalLogLevel = this.broker.options.logLevel || \"info\";\n\n\t\tif (opts === false || opts == null) {\n\t\t\t// No logger\n\t\t\tthis.appenders = [];\n\n\t\t} else if (opts === true || opts === console) {\n\t\t\t// Default console logger\n\t\t\tthis.appenders = [Loggers.resolve({\n\t\t\t\ttype: \"Console\",\n\t\t\t\toptions: {\n\t\t\t\t\tlevel: globalLogLevel\n\t\t\t\t}\n\t\t\t})];\n\n\t\t} else {\n\t\t\tif (!Array.isArray(opts)) {\n\t\t\t\topts = [opts];\n\t\t\t}\n\n\t\t\tthis.appenders = _.compact(opts).map(o => {\n\t\t\t\t// Built-in shorthand\n\t\t\t\tif (isString(o))\n\t\t\t\t\treturn Loggers.resolve({ type: o, options: { level: globalLogLevel } });\n\n\t\t\t\t// Build-in with options\n\t\t\t\tif (isPlainObject(o))\n\t\t\t\t\treturn Loggers.resolve(_.defaultsDeep({}, o, { options: { level: globalLogLevel } }));\n\n\t\t\t\t// Custom logger instance\n\t\t\t\treturn Loggers.resolve(o);\n\t\t\t});\n\t\t}\n\n\t\t// Initialize appenders\n\t\tthis.appenders.forEach(app => app.init(this));\n\t}\n\n\t/**\n\t * Stopping all appenders\n\t */\n\tstop() {\n\t\treturn this.broker.Promise.all(this.appenders.map(appender => appender.stop()));\n\t}\n\n\t/**\n\t * Get caller information from error stack trace.\n\t */\n\tgetCallerFromStack() {\n\t\tconst _prepareStackTrace = Error.prepareStackTrace;\n\t\tError.prepareStackTrace = (_, stack) => stack;\n\t\tconst stack = new Error().stack;\n\t\tError.prepareStackTrace = _prepareStackTrace;\n\n\t\tif (stack.length > 2) {\n\t\t\tconst site = stack[2];\n\t\t\treturn {\n\t\t\t\tfilename: site.getFileName().substring(cwd.length + 1),\n\t\t\t\tlineNumber: site.getLineNumber(),\n\t\t\t\tcolumnNumber: site.getColumnNumber(),\n\t\t\t\tmethodName: site.getMethodName(),\n\t\t\t\tfunctionName: site.getFunctionName(),\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Get a logger for a module (service, transporter, cacher, context...etc)\n\t *\n\t * @param {Object} bindings\n\t * @returns {ModuleLogger}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tgetLogger(bindings) {\n\t\tlet logger = this.cache.get(this.getBindingsKey(bindings));\n\t\tif (logger) return logger;\n\n\t\tlogger = {};\n\t\tconst broker = this.broker;\n\t\tconst appenders = this.appenders;\n\n\t\tconst logHandlers = _.compact(appenders.map(app => app.getLogHandler(bindings)));\n\n\t\tLoggers.LEVELS.forEach((type) => {\n\t\t\tif (logHandlers.length == 0)\n\t\t\t\treturn logger[type] = noop;\n\n\t\t\tlogger[type] = function(...args) {\n\t\t\t\tif (broker.middlewares && broker.middlewares.registeredHooks.newLogEntry)\n\t\t\t\t\tbroker.middlewares.callSyncHandlers(\"newLogEntry\", [type, args, bindings], {});\n\n\t\t\t\tif (logHandlers.length == 0) return;\n\n\t\t\t\tfor(let i = 0; i < logHandlers.length; i++)\n\t\t\t\t\tlogHandlers[i](type, args);\n\t\t\t};\n\t\t});\n\n\t\t/*logger.log = function(type, ...args) {\n\t\t\tif (broker.middlewares)\n\t\t\t\tbroker.middlewares.callSyncHandlers(\"newLogEntry\", [type, args, bindings], {});\n\n\t\t\tif (logHandlers.length == 0) return;\n\n\t\t\tlogHandlers.forEach(fn => fn(type, args));\n\t\t};*/\n\n\t\tlogger.appenders = appenders;\n\n\n\t\tthis.cache.set(this.getBindingsKey(bindings), logger);\n\n\t\treturn logger;\n\t}\n\n\t/**\n\t * Create a key from bindings for logger caching.\n\t *\n\t * @param {object} bindings\n\t * @returns {String}\n\t */\n\tgetBindingsKey(bindings) {\n\t\tif (!bindings) return \"\";\n\n\t\treturn [\"nodeID\", \"ns\", \"mod\"]\n\t\t\t.map(key => bindings[key])\n\t\t\t.join(\"|\");\n\t}\n\n}\n\nmodule.exports = LoggerFactory;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { ValidationError } = require(\"../errors\");\nconst _ = require(\"lodash\");\n\nclass BaseValidator {\n\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tparamName: \"params\"\n\t\t});\n\t}\n\n\tinit(broker) {\n\t\tthis.broker = broker;\n\t}\n\n\t/**\n\t * Compile a validation schema to a checker function.\n\t * @param {any} schema\n\t * @returns {Function}\n\t */\n\tcompile(/*schema*/) {\n\t\tthrow new Error(\"Abstract method\");\n\t}\n\n\t/**\n\t * Validate params againt the schema\n\t * @param {any} params\n\t * @param {any} schema\n\t * @returns {boolean}\n\t */\n\tvalidate(/*params, schema*/) {\n\t\tthrow new Error(\"Abstract method\");\n\t}\n\n\t/**\n\t * Convert the specific validation schema to\n\t * the Moleculer (fastest-validator) validation schema format.\n\t *\n\t * @param {any} schema\n\t * @returns {Object}\n\t */\n\tconvertSchemaToMoleculer(/*schema*/) {\n\t\tthrow new Error(\"Abstract method\");\n\t}\n\n\t/**\n\t * Register validator as a middleware\n\t *\n\t * @memberof BaseValidator\n\t */\n\tmiddleware(broker) {\n\t\tconst self = this;\n\t\tconst paramName = this.opts.paramName;\n\n\t\treturn {\n\t\t\tname: \"Validator\",\n\t\t\tlocalAction: function validatorMiddleware(handler, action) {\n\t\t\t\t// Wrap a param validator\n\t\t\t\tif (action[paramName] && typeof action[paramName] === \"object\") {\n\t\t\t\t\tconst check = self.compile(action[paramName]);\n\t\t\t\t\treturn function validateContextParams(ctx) {\n\t\t\t\t\t\tlet res = check(ctx.params != null ? ctx.params : {});\n\t\t\t\t\t\tif (res === true)\n\t\t\t\t\t\t\treturn handler(ctx);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = res.map(data => Object.assign(data, { nodeID: ctx.nodeID, action: ctx.action.name }));\n\t\t\t\t\t\t\treturn broker.Promise.reject(new ValidationError(\"Parameters validation error!\", null, res));\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn handler;\n\t\t\t},\n\n\t\t\tlocalEvent: function validatorMiddleware(handler, event) {\n\t\t\t\t// Wrap a param validator\n\t\t\t\tif (event[paramName] && typeof event[paramName] === \"object\") {\n\t\t\t\t\tconst check = self.compile(event[paramName]);\n\t\t\t\t\treturn function validateContextParams(ctx) {\n\t\t\t\t\t\tlet res = check(ctx.params != null ? ctx.params : {});\n\t\t\t\t\t\tif (res === true)\n\t\t\t\t\t\t\treturn handler(ctx);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = res.map(data => Object.assign(data, { nodeID: ctx.nodeID, event: ctx.event.name }));\n\t\t\t\t\t\t\treturn broker.Promise.reject(new ValidationError(\"Parameters validation error!\", null, res));\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn handler;\n\t\t\t}\n\t\t};\n\t}\n}\n\n\nmodule.exports = BaseValidator;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Validator = require(\"fastest-validator\");\nconst { ValidationError } = require(\"../errors\");\nconst BaseValidator = require(\"./base\");\n\nclass FastestValidator  extends BaseValidator{\n\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t\tthis.validator = new Validator(this.opts);\n\t}\n\n\t/**\n\t * Compile a validation schema to a checker function.\n\t * @param {any} schema\n\t * @returns {Function}\n\t */\n\tcompile(schema) {\n\t\treturn this.validator.compile(schema);\n\t}\n\n\t/**\n\t * Validate params againt the schema\n\t * @param {any} params\n\t * @param {any} schema\n\t * @returns {boolean}\n\t */\n\tvalidate(params, schema) {\n\t\tconst res = this.validator.validate(params, schema);\n\t\tif (res !== true)\n\t\t\tthrow new ValidationError(\"Parameters validation error!\", null, res);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Convert the specific validation schema to\n\t * the Moleculer (fastest-validator) validation schema format.\n\t *\n\t * @param {any} schema\n\t * @returns {Object}\n\t */\n\tconvertSchemaToMoleculer(schema) {\n\t\treturn schema;\n\t}\n}\n\nmodule.exports = FastestValidator;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { BrokerOptionsError } = require(\"../errors\");\nconst { isObject, isString } = require(\"../utils\");\n\nconst Validators = {\n\tBase: require(\"./base\"),\n\tFastest: require(\"./fastest\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Validators).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Validators[n];\n}\n\n/**\n * Resolve validator by name\n *\n * @param {object|string} opt\n * @returns {Validator}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Validators.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet ValidatorClass = getByName(opt);\n\t\tif (ValidatorClass)\n\t\t\treturn new ValidatorClass();\n\n\t\tthrow new BrokerOptionsError(`Invalid Validator type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet ValidatorClass = getByName(opt.type || \"Fastest\");\n\t\tif (ValidatorClass)\n\t\t\treturn new ValidatorClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid Validator type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn new Validators.Fastest();\n}\n\nfunction register(name, value) {\n\tValidators[name] = value;\n}\n\nmodule.exports = Object.assign(Validators, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst crypto\t\t= require(\"crypto\");\nconst { METRIC }\t= require(\"../metrics\");\nconst { isObject, isFunction }\t= require(\"../utils\");\n\n/**\n * Abstract cacher class\n *\n * @class Cacher\n */\nclass Cacher {\n\n\t/**\n\t * Creates an instance of Cacher.\n\t *\n\t * @param {object} opts\n\t *\n\t * @memberof Cacher\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tttl: null,\n\t\t\tkeygen: null,\n\t\t\tmaxParamsLength: null\n\t\t});\n\t}\n\n\t/**\n\t * Initialize cacher\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof Cacher\n\t */\n\tinit(broker) {\n\t\tthis.broker = broker;\n\t\tthis.metrics = broker.metrics;\n\n\t\tif (this.broker) {\n\t\t\tthis.logger = broker.getLogger(\"cacher\");\n\n\t\t\tif (this.opts.prefix) {\n\t\t\t\tthis.prefix = this.opts.prefix + \"-\";\n\t\t\t} else {\n\t\t\t\tthis.prefix = \"MOL-\";\n\t\t\t\tif (this.broker.namespace)\n\t\t\t\t\tthis.prefix += this.broker.namespace + \"-\";\n\t\t\t}\n\n\t\t\tthis.registerMoleculerMetrics();\n\t\t}\n\t}\n\n\t/**\n\t * Register Moleculer Transit Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_GET_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_GET_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_FOUND_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_SET_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_SET_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_DEL_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_DEL_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_CLEAN_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_CLEAN_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_EXPIRED_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t}\n\n\t/**\n\t * Close cacher\n\t *\n\t * @memberof Cacher\n\t */\n\tclose() {\n\t\t/* istanbul ignore next */\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Get a cached content by key\n\t *\n\t * @param {any} key\n\t *\n\t * @memberof Cacher\n\t */\n\tget(/*key*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Get a cached content and ttl by key\n\t *\n\t * @param {any} key\n\t *\n\t * @memberof Cacher\n\t */\n\tgetWithTTL(/*key*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Set a content by key to cache\n\t *\n\t * @param {any} key\n\t * @param {any} data\n\t * @param {Number?} ttl\n\t *\n\t * @memberof Cacher\n\t */\n\tset(/*key, data, ttl*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Delete a content by key from cache\n\t *\n\t * @param {string|Array<string>} key\n\t *\n\t * @memberof Cacher\n\t */\n\tdel(/*key*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\n\t/**\n\t * Clean cache. Remove every key by match\n\t * @param {string|Array<string>} match string. Default is \"**\"\n\t * @returns {Promise}\n\t *\n\t * @memberof Cacher\n\t */\n\tclean(/*match = \"**\"*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Get a value from params or meta by `key`.\n\t * If the key starts with `#` it reads from `meta`, otherwise from `params`.\n\t *\n\t * @param {String} key\n\t * @param {Object} params\n\t * @param {Object} meta\n\t * @returns {any}\n\t * @memberof Cacher\n\t */\n\tgetParamMetaValue(key, params, meta) {\n\t\tif (key.startsWith(\"#\") && meta != null)\n\t\t\treturn _.get(meta, key.slice(1));\n\t\telse if (params != null)\n\t\t\treturn _.get(params, key);\n\t}\n\n\t/**\n\t * Default cache key generator\n\t *\n\t * @param {String} actionName\n\t * @param {Object|null} params\n\t * @param {Object} meta\n\t * @param {Array|null} keys\n\t * @returns {String}\n\t * @memberof Cacher\n\t */\n\tdefaultKeygen(actionName, params, meta, keys) {\n\t\tif (params || meta) {\n\t\t\tconst keyPrefix = actionName + \":\";\n\t\t\tif (keys) {\n\t\t\t\tif (keys.length == 1) {\n\t\t\t\t\t// Fast solution for ['id'] key\n\t\t\t\t\tconst val = this.getParamMetaValue(keys[0], params, meta);\n\t\t\t\t\treturn keyPrefix + this._hashedKey(isObject(val) ? this._hashedKey(this._generateKeyFromObject(val)) : val);\n\t\t\t\t}\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\treturn keyPrefix + this._hashedKey(keys.reduce((a, key, i) => {\n\t\t\t\t\t\tconst val = this.getParamMetaValue(key, params, meta);\n\t\t\t\t\t\treturn a + (i ? \"|\" : \"\") + (isObject(val) || Array.isArray(val) ? this._hashedKey(this._generateKeyFromObject(val)) : val);\n\t\t\t\t\t}, \"\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn keyPrefix + this._hashedKey(this._generateKeyFromObject(params));\n\t\t\t}\n\t\t}\n\t\treturn actionName;\n\t}\n\n\t_hashedKey(key) {\n\t\tconst maxParamsLength = this.opts.maxParamsLength;\n\t\tif (!maxParamsLength || maxParamsLength < 44 || key.length <= maxParamsLength)\n\t\t\treturn key;\n\n\t\tconst prefixLength = maxParamsLength - 44;\n\n\t\tconst base64Hash = crypto.createHash(\"sha256\").update(key).digest(\"base64\");\n\t\tif (prefixLength < 1)\n\t\t\treturn base64Hash;\n\n\t\treturn key.substring(0, prefixLength) + base64Hash;\n\t}\n\n\t_generateKeyFromObject(obj) {\n\t\tif (Array.isArray(obj)) {\n\t\t\treturn obj.map(o => this._generateKeyFromObject(o)).join(\"|\");\n\t\t}\n\t\telse if (isObject(obj)) {\n\t\t\treturn Object.keys(obj).map(key => [key, this._generateKeyFromObject(obj[key])].join(\"|\")).join(\"|\");\n\t\t}\n\t\telse if (obj != null) {\n\t\t\treturn obj.toString();\n\t\t} else {\n\t\t\treturn \"null\";\n\t\t}\n\t}\n\n\t/**\n\t * Get a cache key by name and params.\n\t * Concatenate the name and the hashed params object\n\t *\n\t * @param {String} name\n\t * @param {Object} params\n\t * @param {Object} meta\n\t * @param {Array|null} keys\n\t * @returns {String}\n\t */\n\tgetCacheKey(actionName, params, meta, keys) {\n\t\tif (isFunction(this.opts.keygen))\n\t\t\treturn this.opts.keygen.call(this, actionName, params, meta, keys);\n\t\telse\n\t\t\treturn this.defaultKeygen(actionName, params, meta, keys);\n\t}\n\n\t/**\n\t * Register cacher as a middleware\n\t *\n\t * @memberof Cacher\n\t */\n\tmiddleware() {\n\t\treturn (handler, action) => {\n\t\t\tconst opts = _.defaultsDeep({}, isObject(action.cache) ? action.cache : { enabled: !!action.cache });\n\t\t\topts.lock = _.defaultsDeep({}, isObject(opts.lock) ? opts.lock : { enabled: !!opts.lock });\n\t\t\tif (opts.enabled !== false) {\n\t\t\t\tconst isEnabledFunction = isFunction(opts.enabled);\n\n\t\t\t\treturn function cacherMiddleware(ctx) {\n\t\t\t\t\tif (isEnabledFunction) {\n\t\t\t\t\t\tif (!opts.enabled.call(ctx.service, ctx)) {\n\t\t\t\t\t\t\t// Cache is disabled. Call the handler only.\n\t\t\t\t\t\t\treturn handler(ctx);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Disable caching with `ctx.meta.$cache = false`\n\t\t\t\t\tif (ctx.meta[\"$cache\"] === false)\n\t\t\t\t\t\treturn handler(ctx);\n\n\t\t\t\t\tconst cacheKey = this.getCacheKey(action.name, ctx.params, ctx.meta, opts.keys);\n\t\t\t\t\t// Using lock\n\t\t\t\t\tif(opts.lock.enabled !== false){\n\t\t\t\t\t\tlet cachePromise;\n\t\t\t\t\t\tif(opts.lock.staleTime && this.getWithTTL){ // If enable cache refresh\n\t\t\t\t\t\t\tcachePromise = this.getWithTTL(cacheKey).then(({ data, ttl }) => {\n\t\t\t\t\t\t\t\tif (data != null) {\n\t\t\t\t\t\t\t\t\tif(opts.lock.staleTime && ttl && ttl < opts.lock.staleTime){\n\t\t\t\t\t\t\t\t\t\t// Cache is stale, try to refresh it.\n\t\t\t\t\t\t\t\t\t\tthis.tryLock(cacheKey, opts.lock.ttl).then(unlock=>{\n\t\t\t\t\t\t\t\t\t\t\treturn handler(ctx).then(result => {\n\t\t\t\t\t\t\t\t\t\t\t\t// Save the result to the cache and realse the lock.\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.set(cacheKey, result, opts.ttl).then(()=>unlock());\n\t\t\t\t\t\t\t\t\t\t\t}).catch((/*err*/) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.del(cacheKey).then(()=>unlock());\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}).catch((/*err*/)=>{\n\t\t\t\t\t\t\t\t\t\t\t// The cache is refreshing on somewhere else.\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcachePromise = this.get(cacheKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn cachePromise.then(data=>{\n\t\t\t\t\t\t\tif (data != null) {\n\t\t\t\t\t\t\t\t// Found in the cache! Don't call handler, return with the content\n\t\t\t\t\t\t\t\tctx.cachedResult = true;\n\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Not found in the cache! Acquire a lock\n\t\t\t\t\t\t\treturn this.lock(cacheKey, opts.lock.ttl).then(unlock => {\n\t\t\t\t\t\t\t\treturn this.get(cacheKey).then(content => {\n\t\t\t\t\t\t\t\t\tif (content != null) {\n\t\t\t\t\t\t\t\t\t\t// Cache found. Realse the lock and return the value.\n\t\t\t\t\t\t\t\t\t\tctx.cachedResult = true;\n\t\t\t\t\t\t\t\t\t\treturn unlock().then(() => {\n\t\t\t\t\t\t\t\t\t\t\treturn content;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Call the handler\n\t\t\t\t\t\t\t\t\treturn handler(ctx).then(result => {\n\t\t\t\t\t\t\t\t\t\t// Save the result to the cache and realse the lock.\n\t\t\t\t\t\t\t\t\t\tthis.set(cacheKey, result, opts.ttl).then(()=>unlock());\n\t\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t\t}).catch(e => {\n\t\t\t\t\t\t\t\t\t\treturn unlock().then(() => {\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// Not using lock\n\t\t\t\t\treturn this.get(cacheKey).then(content => {\n\t\t\t\t\t\tif (content != null) {\n\t\t\t\t\t\t\t// Found in the cache! Don't call handler, return with the content\n\t\t\t\t\t\t\tctx.cachedResult = true;\n\t\t\t\t\t\t\treturn content;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Call the handler\n\t\t\t\t\t\treturn handler(ctx).then(result => {\n\t\t\t\t\t\t\t// Save the result to the cache\n\t\t\t\t\t\t\tthis.set(cacheKey, result, opts.ttl);\n\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}.bind(this);\n\t\t\t}\n\n\t\t\treturn handler;\n\t\t};\n\t}\n\n}\n\nmodule.exports = Cacher;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nclass Lock {\n\tconstructor(){\n\t\tthis.locked = new Map();\n\t}\n\n\tacquire(key /*, ttl*/) {\n\t\tlet locked = this.locked.get(key);\n\t\tif (!locked) { // not locked\n\t\t\tlocked = [];\n\t\t\tthis.locked.set(key, locked);\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn new Promise(resolve => locked.push(resolve));\n\t\t}\n\t}\n\n\tisLocked(key) {\n\t\treturn !!this.locked.get(key);\n\t}\n\n\trelease(key){\n\t\tlet locked = this.locked.get(key);\n\t\tif(locked) {\n\t\t\tif(locked.length > 0) {\n\t\t\t\tlocked.shift()(); // Release the lock\n\t\t\t} else {\n\t\t\t\tthis.locked.delete(key);\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n\nmodule.exports = Lock;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst utils\t\t\t= require(\"../utils\");\nconst BaseCacher  \t= require(\"./base\");\nconst { METRIC }\t= require(\"../metrics\");\n\nconst Lock = require(\"../lock\");\n/**\n * Cacher factory for memory cache\n *\n * @class MemoryCacher\n */\nclass MemoryCacher extends BaseCacher {\n\n\t/**\n\t * Creates an instance of MemoryCacher.\n\t *\n\t * @param {object} opts\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\t// Cache container\n\t\tthis.cache = new Map();\n\t\t// Async lock\n\t\tthis._lock = new Lock();\n\t\t// Start TTL timer\n\t\tthis.timer = setInterval(() => {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.checkTTL();\n\t\t}, 30 * 1000);\n\t\tthis.timer.unref();\n\n\t\t// Set cloning\n\t\tthis.clone = this.opts.clone === true ? _.cloneDeep : this.opts.clone;\n\t}\n\n\t/**\n\t * Initialize cacher\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tinit(broker) {\n\t\tsuper.init(broker);\n\n\t\tbroker.localBus.on(\"$transporter.connected\", () => {\n\t\t\t// Clear all entries after transporter connected. Maybe we missed some \"cache.clear\" events.\n\t\t\treturn this.clean();\n\t\t});\n\t}\n\n\t/**\n\t * Close cacher\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tclose() {\n\t\tclearInterval(this.timer);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Get data from cache by key\n\t *\n\t * @param {any} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tget(key) {\n\t\tthis.logger.debug(`GET ${key}`);\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_GET_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_GET_TIME);\n\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.logger.debug(`FOUND ${key}`);\n\t\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_FOUND_TOTAL);\n\n\t\t\tlet item = this.cache.get(key);\n\t\t\tif (item.expire && item.expire < Date.now()) {\n\t\t\t\tthis.logger.debug(`EXPIRED ${key}`);\n\t\t\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_EXPIRED_TOTAL);\n\t\t\t\tthis.cache.delete(key);\n\t\t\t\ttimeEnd();\n\t\t\t\treturn this.broker.Promise.resolve(null);\n\t\t\t}\n\t\t\tconst res = this.clone ? this.clone(item.data) : item.data;\n\t\t\ttimeEnd();\n\n\t\t\treturn this.broker.Promise.resolve(res);\n\t\t} else {\n\t\t\ttimeEnd();\n\t\t}\n\t\treturn this.broker.Promise.resolve(null);\n\t}\n\n\t/**\n\t * Save data to cache by key\n\t *\n\t * @param {String} key\n\t * @param {any} data JSON object\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tset(key, data, ttl) {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_SET_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_SET_TIME);\n\n\t\tif (ttl == null)\n\t\t\tttl = this.opts.ttl;\n\n\t\tthis.cache.set(key, {\n\t\t\tdata,\n\t\t\texpire: ttl ? Date.now() + ttl * 1000 : null\n\t\t});\n\n\t\ttimeEnd();\n\t\tthis.logger.debug(`SET ${key}`);\n\n\t\treturn this.broker.Promise.resolve(data);\n\t}\n\n\t/**\n\t * Delete a key from cache\n\t *\n\t * @param {string|Array<string>} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tdel(keys) {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_DEL_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_DEL_TIME);\n\n\t\tkeys = Array.isArray(keys) ? keys : [keys];\n\t\tkeys.forEach(key => {\n\t\t\tthis.cache.delete(key);\n\t\t\tthis.logger.debug(`REMOVE ${key}`);\n\t\t});\n\t\ttimeEnd();\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Clean cache. Remove every key by match\n\t * @param {string|Array<string>} match string. Default is \"**\"\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tclean(match = \"**\") {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_CLEAN_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_CLEAN_TIME);\n\n\t\tconst matches = Array.isArray(match) ? match : [match];\n\t\tthis.logger.debug(`CLEAN ${matches.join(\", \")}`);\n\n\t\tthis.cache.forEach((value, key) => {\n\t\t\tif (matches.some(match => utils.match(key, match))) {\n\t\t\t\tthis.logger.debug(`REMOVE ${key}`);\n\t\t\t\tthis.cache.delete(key);\n\t\t\t}\n\t\t});\n\t\ttimeEnd();\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Get data and ttl from cache by key.\n\t *\n\t * @param {string|Array<string>} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tgetWithTTL(key){\n\t\tthis.logger.debug(`GET ${key}`);\n\t\tlet data = null;\n\t\tlet ttl = null;\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.logger.debug(`FOUND ${key}`);\n\n\t\t\tlet item = this.cache.get(key);\n\t\t\tlet now = Date.now();\n\t\t\tttl = (item.expire - now)/1000;\n\t\t\tttl = ttl > 0 ? ttl : null;\n\t\t\tif (this.opts.ttl) {\n\t\t\t\t// Update expire time (hold in the cache if we are using it)\n\t\t\t\titem.expire = now + this.opts.ttl * 1000;\n\t\t\t}\n\t\t\tdata = this.clone ? this.clone(item.data) : item.data;\n\t\t}\n\t\treturn this.broker.Promise.resolve({ data, ttl });\n\t}\n\n\t/**\n\t * Acquire a lock\n\t *\n\t * @param {string|Array<string>} key\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tlock(key, ttl) {\n\t\treturn this._lock.acquire(key, ttl).then(()=> {\n\t\t\treturn ()=>this._lock.release(key);\n\t\t});\n\t}\n\n\t/**\n\t * Try to acquire a lock\n\t *\n\t * @param {string|Array<string>} key\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\ttryLock(key, ttl) {\n\t\tif(this._lock.isLocked(key)){\n\t\t\treturn this.broker.Promise.reject(new Error(\"Locked.\"));\n\t\t}\n\t\treturn this._lock.acquire(key, ttl).then(()=> {\n\t\t\treturn ()=>this._lock.release(key);\n\t\t});\n\t}\n\n\t/**\n\t * Check & remove the expired cache items\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tcheckTTL() {\n\t\tlet now = Date.now();\n\t\tthis.cache.forEach((value, key) => {\n\t\t\tlet item = this.cache.get(key);\n\n\t\t\tif (item.expire && item.expire < now) {\n\t\t\t\tthis.logger.debug(`EXPIRED ${key}`);\n\t\t\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_EXPIRED_TOTAL);\n\t\t\t\tthis.cache.delete(key);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = MemoryCacher;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst utils\t\t\t= require(\"../utils\");\nconst BaseCacher  \t= require(\"./base\");\nconst LRU \t\t\t= require(\"lru-cache\");\nconst { METRIC }\t= require(\"../metrics\");\n\nconst Lock = require(\"../lock\");\n/**\n * Cacher factory for memory cache\n *\n * @class MemoryLRUCacher\n */\nclass MemoryLRUCacher extends BaseCacher {\n\n\t/**\n\t * Creates an instance of MemoryLRUCacher.\n\t *\n\t * @param {object} opts\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\t// Cache container\n\t\tthis.cache = new LRU({\n\t\t\tmax: this.opts.max,\n\t\t\tmaxAge: this.opts.ttl ? this.opts.ttl * 1000 : null,\n\t\t\tupdateAgeOnGet: !!this.opts.ttl\n\t\t});\n\t\t// Async lock\n\t\tthis._lock = new Lock();\n\t\t// Start TTL timer\n\t\tthis.timer = setInterval(() => {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.checkTTL();\n\t\t}, 30 * 1000);\n\t\tthis.timer.unref();\n\n\t\t// Set cloning\n\t\tthis.clone = this.opts.clone === true ? _.cloneDeep : this.opts.clone;\n\t}\n\n\t/**\n\t * Initialize cacher\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tinit(broker) {\n\t\tsuper.init(broker);\n\n\t\tbroker.localBus.on(\"$transporter.connected\", () => {\n\t\t\t// Clear all entries after transporter connected. Maybe we missed some \"cache.clear\" events.\n\t\t\treturn this.clean();\n\t\t});\n\t\tif(this.opts.lock && this.opts.lock.enabled !== false && this.opts.lock.staleTime){\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.logger.warn(\"setting lock.staleTime with MemoryLRUCacher is not supported.\");\n\t\t}\n\t}\n\n\t/**\n\t * Close cacher\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tclose() {\n\t\tclearInterval(this.timer);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Get data from cache by key\n\t *\n\t * @param {any} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tget(key) {\n\t\tthis.logger.debug(`GET ${key}`);\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_GET_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_GET_TIME);\n\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.logger.debug(`FOUND ${key}`);\n\t\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_FOUND_TOTAL);\n\n\t\t\tlet item = this.cache.get(key);\n\t\t\tconst res = this.clone ? this.clone(item) : item;\n\t\t\ttimeEnd();\n\n\t\t\treturn this.broker.Promise.resolve(res);\n\t\t} else {\n\t\t\ttimeEnd();\n\t\t}\n\t\treturn this.broker.Promise.resolve(null);\n\t}\n\n\t/**\n\t * Save data to cache by key\n\t *\n\t * @param {String} key\n\t * @param {any} data JSON object\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tset(key, data, ttl) {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_SET_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_SET_TIME);\n\n\t\tif (ttl == null)\n\t\t\tttl = this.opts.ttl;\n\n\t\tthis.cache.set(key, data, ttl ? ttl * 1000 : null);\n\n\t\ttimeEnd();\n\t\tthis.logger.debug(`SET ${key}`);\n\n\t\treturn this.broker.Promise.resolve(data);\n\t}\n\n\t/**\n\t * Delete a key from cache\n\t *\n\t * @param {string|Array<string>} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tdel(keys) {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_DEL_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_DEL_TIME);\n\n\t\tkeys = Array.isArray(keys) ? keys : [keys];\n\t\tkeys.forEach(key => {\n\t\t\tthis.cache.del(key);\n\t\t\tthis.logger.debug(`REMOVE ${key}`);\n\t\t});\n\t\ttimeEnd();\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Clean cache. Remove every key by match\n\t * @param {string|Array<string>} match string. Default is \"**\"\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tclean(match = \"**\") {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_CLEAN_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_CLEAN_TIME);\n\n\t\tconst matches = Array.isArray(match) ? match : [match];\n\t\tthis.logger.debug(`CLEAN ${matches.join(\", \")}`);\n\n\t\tthis.cache.keys().forEach(key => {\n\t\t\tif (matches.some(match => utils.match(key, match))) {\n\t\t\t\tthis.logger.debug(`REMOVE ${key}`);\n\t\t\t\tthis.cache.del(key);\n\t\t\t}\n\t\t});\n\t\ttimeEnd();\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\t/**\n\t * Get data and ttl from cache by key.\n\t *\n\t * @param {string|Array<string>} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tgetWithTTL(key){\n\t\t// There are no way to get the ttl of LRU cache :(\n\t\treturn this.get(key).then(data=>{\n\t\t\treturn { data, ttl: null };\n\t\t});\n\t}\n\n\t/**\n\t * Acquire a lock\n\t *\n\t * @param {string|Array<string>} key\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\n\tlock(key, ttl) {\n\t\treturn this._lock.acquire(key, ttl).then(()=> {\n\t\t\treturn ()=>this._lock.release(key);\n\t\t});\n\t}\n\n\t/**\n\t * Try to acquire a lock\n\t *\n\t * @param {string|Array<string>} key\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\ttryLock(key, ttl) {\n\t\tif(this._lock.isLocked(key)){\n\t\t\treturn this.broker.Promise.reject(new Error(\"Locked.\"));\n\t\t}\n\t\treturn this._lock.acquire(key, ttl).then(()=> {\n\t\t\treturn ()=>this._lock.release(key);\n\t\t});\n\t}\n\n\n\t/**\n\t * Check & remove the expired cache items\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tcheckTTL() {\n\t\tthis.cache.prune();\n\t}\n}\n\nmodule.exports = MemoryLRUCacher;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Cachers = {\n\tBase: require(\"./base\"),\n\tMemory: require(\"./memory\"),\n\tMemoryLRU: require(\"./memory-lru\"),\n\tRedis: require(\"./redis\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Cachers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Cachers[n];\n}\n\n/**\n * Resolve cacher by name\n *\n * @param {object|string} opt\n * @returns {Cacher}\n */\nfunction resolve(opt) {\n\tif (opt instanceof Cachers.Base) {\n\t\treturn opt;\n\t} else if (opt === true) {\n\t\treturn new Cachers.Memory();\n\t} else if (isString(opt)) {\n\t\tlet CacherClass = getByName(opt);\n\t\tif (CacherClass)\n\t\t\treturn new CacherClass();\n\n\t\tif (opt.startsWith(\"redis://\"))\n\t\t\tCacherClass = Cachers.Redis;\n\n\t\tif (CacherClass)\n\t\t\treturn new CacherClass(opt);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid cacher type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet CacherClass = getByName(opt.type || \"Memory\");\n\t\tif (CacherClass)\n\t\t\treturn new CacherClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid cacher type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn null;\n}\n\nfunction register(name, value) {\n\tCachers[name] = value;\n}\n\nmodule.exports = Object.assign(Cachers, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _\t= require(\"lodash\");\nconst P = require(\"../packets\");\nconst { flatten } = require(\"../utils\");\nconst { BrokerDisconnectedError } = require(\"../errors\");\n\n/**\n * Base Transporter class\n *\n * @class BaseTransporter\n */\nclass BaseTransporter {\n\n\t/**\n\t * Creates an instance of BaseTransporter.\n\t *\n\t * @param {any} opts\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = opts;\n\t\tthis.connected = false;\n\t\tthis.hasBuiltInBalancer = false;\n\t}\n\n\t/**\n\t * Init transporter\n\t *\n\t * @param {Transit} transit\n\t * @param {Function} messageHandler\n\t * @param {Function} afterConnect\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tinit(transit, messageHandler, afterConnect) {\n\t\tif (transit) {\n\t\t\tthis.transit = transit;\n\t\t\tthis.broker = transit.broker;\n\t\t\tthis.nodeID = transit.nodeID;\n\t\t\tthis.logger = this.broker.getLogger(\"transporter\");\n\n\t\t\tthis.prefix = \"MOL\";\n\t\t\tif (this.broker.namespace)\n\t\t\t\tthis.prefix += \"-\" + this.broker.namespace;\n\n\t\t}\n\t\tthis.messageHandler = messageHandler;\n\t\tthis.afterConnect = afterConnect;\n\t}\n\n\t/**\n\t * Connect to the transporter server\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tconnect() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Event handler for connected.\n\t *\n\t * @param {any} wasReconnect\n\t * @returns {Promise}\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tonConnected(wasReconnect) {\n\t\tthis.connected = true;\n\t\tif (this.afterConnect) {\n\t\t\treturn this.afterConnect(wasReconnect);\n\t\t}\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Disconnect from the transporter server\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tdisconnect() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Subscribe to all topics\n\t *\n\t * @param {Array<Object>} topics\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tmakeSubscriptions(topics) {\n\t\treturn this.broker.Promise.all(topics.map(({ cmd, nodeID }) => this.subscribe(cmd, nodeID)));\n\t}\n\n\t/**\n\t * Process incoming messages\n\t *\n\t * @param {String} cmd\n\t * @param {Buffer} msg\n\t * @returns\n\t * @memberof BaseTransporter\n\t */\n\tincomingMessage(cmd, msg) {\n\t\tif (!msg) return;\n\t\ttry {\n\t\t\tconst packet = this.deserialize(cmd, msg);\n\t\t\treturn this.messageHandler(cmd, packet);\n\t\t} catch(err) {\n\t\t\tthis.logger.warn(\"Invalid incoming packet. Type:\", cmd, err);\n\t\t\tthis.logger.debug(\"Content:\", msg.toString ? msg.toString() : msg);\n\t\t}\n\t}\n\n\t/**\n\t * Received data. It's a wrapper for middlewares.\n\t * @param {String} cmd\n\t * @param {Buffer} data\n\t */\n\treceive(cmd, data) {\n\t\treturn this.incomingMessage(cmd, data);\n\t}\n\n\t/**\n\t * Subscribe to a command\n\t *\n\t * @param {String} cmd\n\t * @param {String} nodeID\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tsubscribe(/*cmd, nodeID*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Subscribe to balanced action commands\n\t *\n\t * @param {String} action\n\t * @memberof AmqpTransporter\n\t */\n\tsubscribeBalancedRequest(/*action*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Subscribe to balanced event command\n\t *\n\t * @param {String} event\n\t * @param {String} group\n\t * @memberof AmqpTransporter\n\t */\n\tsubscribeBalancedEvent(/*event, group*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Unsubscribe all balanced request and event commands\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tunsubscribeFromBalancedCommands() {\n\t\t/* istanbul ignore next */\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Publish a normal not balanced packet\n\t *\n\t * @param {Packet} packet\n\t * @returns {Promise}\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tpublish(packet) {\n\t\tconst topic = this.getTopicName(packet.type, packet.target);\n\t\tconst data = this.serialize(packet);\n\n\t\treturn this.send(topic, data, { packet });\n\t}\n\n\t/**\n\t * Publish a balanced EVENT packet to a balanced queue\n\t *\n\t * @param {Packet} packet\n\t * @param {String} group\n\t * @returns {Promise}\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tpublishBalancedEvent(packet, group) {\n\t\tconst topic = `${this.prefix}.${P.PACKET_EVENT}B.${group}.${packet.payload.event}`;\n\t\tconst data = this.serialize(packet);\n\n\t\treturn this.send(topic, data, { packet, balanced: true });\n\t}\n\n\t/**\n\t * Publish a balanced REQ packet to a balanced queue\n\t *\n\t * @param {Packet} packet\n\t * @returns {Promise}\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tpublishBalancedRequest(packet) {\n\t\tconst topic = `${this.prefix}.${P.PACKET_REQUEST}B.${packet.payload.action}`;\n\t\tconst data = this.serialize(packet);\n\n\t\treturn this.send(topic, data, { packet, balanced: true });\n\t}\n\n\t/**\n\t * Send data buffer.\n\t *\n\t * @param {String} topic\n\t * @param {Buffer} data\n\t * @param {Object} meta\n\t *\n\t * @returns {Promise}\n\t */\n\tsend(/*topic, data, meta*/) {\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Get topic name from command & target nodeID\n\t *\n\t * @param {any} cmd\n\t * @param {any} nodeID\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tgetTopicName(cmd, nodeID) {\n\t\treturn this.prefix + \".\" + cmd + (nodeID ? \".\" + nodeID : \"\");\n\t}\n\n\t/**\n\t * Initialize queues for REQUEST & EVENT packets.\n\t *\n\t * @memberof AmqpTransporter\n\t */\n\tmakeBalancedSubscriptions() {\n\t\tif (!this.hasBuiltInBalancer) return this.broker.Promise.resolve();\n\n\t\treturn this.unsubscribeFromBalancedCommands().then(() => {\n\t\t\tconst services = this.broker.getLocalNodeInfo().services;\n\t\t\treturn this.broker.Promise.all(services.map(service => {\n\t\t\t\tconst p = [];\n\n\t\t\t\t// Service actions queues\n\t\t\t\tif (service.actions && typeof(service.actions) == \"object\") {\n\t\t\t\t\tp.push(Object.keys(service.actions).map(action => this.subscribeBalancedRequest(action)));\n\t\t\t\t}\n\n\t\t\t\t// Load-balanced/grouped events queues\n\t\t\t\tif (service.events && typeof(service.events) == \"object\") {\n\t\t\t\t\tp.push(Object.keys(service.events).map(event => {\n\t\t\t\t\t\tconst group = service.events[event].group || service.name;\n\t\t\t\t\t\tthis.subscribeBalancedEvent(event, group);\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\treturn this.broker.Promise.all(_.compact(flatten(p, true)));\n\t\t\t}));\n\t\t});\n\t}\n\n\t/**\n\t * Prepublish a packet. Handle balancing.\n\t *\n\t * @param {Packet} packet\n\t * @returns {Promise}\n\t * @memberof BaseTransporter\n\t */\n\tprepublish(packet) {\n\t\t// Safely handle disconnected state\n\t\tif (!this.connected) {\n\t\t\t// For packets that are triggered intentionally by users, throw a retryable error.\n\t\t\tif ([P.PACKET_REQUEST, P.PACKET_EVENT, P.PACKET_PING].includes(packet.type)) {\n\t\t\t\treturn this.broker.Promise.reject(new BrokerDisconnectedError());\n\t\t\t}\n\n\t\t\t// For internal packets like INFO and HEARTBEATS, skip sending and don't throw\n\t\t\telse {\n\t\t\t\treturn this.broker.Promise.resolve();\n\t\t\t}\n\t\t}\n\n\t\tif (packet.type === P.PACKET_EVENT && packet.target == null && packet.payload.groups) {\n\t\t\tconst groups = packet.payload.groups;\n\t\t\t// If the packet contains groups, we don't send the packet to\n\t\t\t// the targetted node, but we push them to the event group queues\n\t\t\t// and AMQP will load-balanced it.\n\t\t\tif (groups.length > 0) {\n\t\t\t\tgroups.forEach(group => {\n\t\t\t\t\t// Change the groups to this group to avoid multi handling in consumers.\n\t\t\t\t\tpacket.payload.groups = [group];\n\t\t\t\t\tthis.publishBalancedEvent(packet, group);\n\t\t\t\t});\n\t\t\t\treturn this.broker.Promise.resolve();\n\t\t\t}\n\t\t\t// If it's not contain, then it is a broadcasted event,\n\t\t\t// we sent it in the normal way (exchange)\n\n\t\t} else if (packet.type === P.PACKET_REQUEST && packet.target == null) {\n\t\t\treturn this.publishBalancedRequest(packet);\n\t\t}\n\n\t\t// Normal packet publishing...\n\t\treturn this.publish(packet);\n\t}\n\n\t/**\n\t * Serialize the Packet to Buffer\n\t *\n\t * @param {Packet} packet\n\t * @returns {Buffer}\n\t *\n\t * @memberof Transit\n\t */\n\tserialize(packet) {\n\t\tpacket.payload.ver = this.broker.PROTOCOL_VERSION;\n\t\tpacket.payload.sender = this.nodeID;\n\t\treturn this.broker.serializer.serialize(packet.payload, packet.type);\n\t}\n\n\t/**\n\t * Deserialize the incoming Buffer to Packet\n\t *\n\t * @param {String} type\n\t * @param {Buffer} buf\n\t * @returns {Packet}\n\t *\n\t * @memberof Transit\n\t */\n\tdeserialize(type, buf) {\n\t\tif (buf == null) return null;\n\n\t\tconst msg = this.broker.serializer.deserialize(buf, type);\n\t\treturn new P.Packet(type, null, msg);\n\n\t}\n}\n\nmodule.exports = BaseTransporter;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Transporter \t= require(\"./base\");\n\nconst EventEmitter2 = require(\"eventemitter2\").EventEmitter2;\n\n// Put to global to transfer messages between brokers in the same process\nglobal.bus = new EventEmitter2({\n\twildcard: true,\n\tmaxListeners: 100\n});\n\n/**\n * Fake Transporter\n *\n * @class FakeTransporter\n * @extends {Transporter}\n */\nclass FakeTransporter extends Transporter {\n\n\t/**\n\t * Creates an instance of FakeTransporter.\n\t *\n\t * @param {any} opts\n\t *\n\t * @memberof FakeTransporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\t// Local event bus\n\t\tthis.bus = global.bus;\n\t\tthis.hasBuiltInBalancer = true;\n\n\t\tthis.subscriptions = [];\n\t}\n\n\t/**\n\t * Connect to a NATS server\n\t *\n\t * @memberof FakeTransporter\n\t */\n\tconnect() {\n\t\treturn this.onConnected();\n\t}\n\n\t/**\n\t * Disconnect from a NATS server\n\t *\n\t * @memberof FakeTransporter\n\t */\n\tdisconnect() {\n\t\tthis.connected = false;\n\t\tthis.subscriptions.forEach(({ topic, handler }) => this.bus.off(topic, handler));\n\t\tthis.subscriptions = [];\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Subscribe to a command\n\t *\n\t * @param {String} cmd\n\t * @param {String} nodeID\n\t *\n\t * @memberof FakeTransporter\n\t */\n\tsubscribe(cmd, nodeID) {\n\t\tconst t = this.getTopicName(cmd, nodeID);\n\t\tconst handler = msg => this.receive(cmd, msg);\n\t\tthis.subscriptions.push({ topic: t, handler });\n\n\t\tthis.bus.on(t, handler);\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Subscribe to balanced action commands\n\t *\n\t * @param {String} action\n\t * @memberof AmqpTransporter\n\t */\n\tsubscribeBalancedRequest(/*action*/) {\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Subscribe to balanced event command\n\t *\n\t * @param {String} event\n\t * @param {String} group\n\t * @memberof AmqpTransporter\n\t */\n\tsubscribeBalancedEvent(/*event, group*/) {\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Send data buffer.\n\t *\n\t * @param {String} topic\n\t * @param {Buffer} data\n\t * @param {Object} meta\n\t *\n\t * @returns {Promise}\n\t */\n\tsend(topic, data) {\n\t\tthis.bus.emit(topic, data);\n\t\treturn this.broker.Promise.resolve();\n\t}\n}\n\nmodule.exports = FakeTransporter;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Transporters = {\n\tBase: require(\"./base\"),\n\tFake: require(\"./fake\"),\n\tNATS: require(\"./nats\"),\n\tMQTT: require(\"./mqtt\"),\n\tRedis: require(\"./redis\"),\n\tAMQP: require(\"./amqp\"),\n\tAMQP10: require(\"./amqp10\"),\n\tKafka: require(\"./kafka\"),\n\tSTAN: require(\"./stan\"),\n\tTCP: require(\"./tcp\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Transporters).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Transporters[n];\n}\n\n/**\n * Resolve transporter by name\n *\n * @param {object|string} opt\n * @returns {Transporter}\n */\nfunction resolve(opt) {\n\tif (opt instanceof Transporters.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet TransporterClass = getByName(opt);\n\t\tif (TransporterClass)\n\t\t\treturn new TransporterClass();\n\n\t\tif (opt.startsWith(\"nats://\"))\n\t\t\tTransporterClass = Transporters.NATS;\n\t\telse if (opt.startsWith(\"mqtt://\") || opt.startsWith(\"mqtts://\"))\n\t\t\tTransporterClass = Transporters.MQTT;\n\t\telse if (opt.startsWith(\"redis://\") || opt.startsWith(\"rediss://\"))\n\t\t\tTransporterClass = Transporters.Redis;\n\t\telse if (opt.startsWith(\"amqp://\") || opt.startsWith(\"amqps://\"))\n\t\t\tTransporterClass = Transporters.AMQP;\n\t\telse if (opt.startsWith(\"amqp10://\"))\n\t\t\tTransporterClass = Transporters.AMQP10;\n\t\telse if (opt.startsWith(\"kafka://\"))\n\t\t\tTransporterClass = Transporters.Kafka;\n\t\telse if (opt.startsWith(\"stan://\"))\n\t\t\tTransporterClass = Transporters.STAN;\n\t\telse if (opt.startsWith(\"tcp://\"))\n\t\t\tTransporterClass = Transporters.TCP;\n\n\t\tif (TransporterClass)\n\t\t\treturn new TransporterClass(opt);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid transporter type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet TransporterClass = getByName(opt.type || \"NATS\");\n\n\t\tif (TransporterClass)\n\t\t\treturn new TransporterClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid transporter type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn null;\n}\n\nfunction register(name, value) {\n\tTransporters[name] = value;\n}\n\n\nmodule.exports = Object.assign(Transporters, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst P = require(\"../packets\");\n\n/**\n * Abstract serializer class\n *\n * @class Serializer\n */\nclass Serializer {\n\n\t/**\n\t * Creates an instance of Serializer.\n\t *\n\t * @memberof Serializer\n\t */\n\tconstructor() {\n\t}\n\n\t/**\n\t * Initialize Serializer\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof Serializer\n\t */\n\tinit(broker) {\n\t\tthis.broker = broker;\n\t\t/*if (this.broker) {\n\t\t\tthis.logger = broker.getLogger(\"serializer\");\n\t\t}*/\n\t}\n\n\t/**\n\t * Serializer a JS object to Buffer\n\t *\n\t * @param {Object} obj\n\t * @param {String} type of packet\n\t * @returns {Buffer}\n\t *\n\t * @memberof Serializer\n\t */\n\tserialize(/*obj, type*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Deserialize Buffer to JS object\n\t *\n\t * @param {Buffer} buf\n\t * @param {String} type of packet\n\t * @returns {Object}\n\t *\n\t * @memberof Serializer\n\t */\n\tdeserialize(/*buf, type*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Serialize custom fields (stringify)\n\t *\n\t * @param {String} type\n\t * @param {Packet} obj\n\t * @returns {Packet}\n\t * @memberof Serializer\n\t */\n\tserializeCustomFields(type, obj) {\n\t\tswitch (type) {\n\t\t\tcase P.PACKET_INFO: {\n\t\t\t\tobj.services = JSON.stringify(obj.services);\n\t\t\t\tif (obj.config)\n\t\t\t\t\tobj.config = JSON.stringify(obj.config);\n\t\t\t\tif (obj.metadata)\n\t\t\t\t\tobj.metadata = JSON.stringify(obj.metadata);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_EVENT: {\n\t\t\t\tthis.convertDataToTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.stringify(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_REQUEST: {\n\t\t\t\tthis.convertDataToTransport(obj, \"params\", \"paramsType\");\n\t\t\t\tobj.meta = JSON.stringify(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_RESPONSE: {\n\t\t\t\tthis.convertDataToTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.stringify(obj.meta);\n\t\t\t\tif (obj.error)\n\t\t\t\t\tobj.error = JSON.stringify(obj.error);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_REQ: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.stringify(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.stringify(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_RES: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.stringify(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.stringify(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\t/**\n\t * Deserialize custom fields\n\t *\n\t * @param {String} type\n\t * @param {Packet} obj\n\t * @returns {Packet}\n\t * @memberof Serializer\n\t */\n\tdeserializeCustomFields(type, obj) {\n\t\tswitch (type) {\n\t\t\tcase P.PACKET_INFO: {\n\t\t\t\tobj.services = JSON.parse(obj.services);\n\t\t\t\tif (obj.config)\n\t\t\t\t\tobj.config = JSON.parse(obj.config);\n\t\t\t\tif (obj.metadata)\n\t\t\t\t\tobj.metadata = JSON.parse(obj.metadata);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_EVENT: {\n\t\t\t\tthis.convertDataFromTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.parse(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_REQUEST: {\n\t\t\t\tthis.convertDataFromTransport(obj, \"params\", \"paramsType\");\n\t\t\t\tobj.meta = JSON.parse(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_RESPONSE: {\n\t\t\t\tthis.convertDataFromTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.parse(obj.meta);\n\t\t\t\tif (obj.error)\n\t\t\t\t\tobj.error = JSON.parse(obj.error);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_REQ: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.parse(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.parse(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_RES: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.parse(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.parse(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\tconvertDataToTransport(obj, field, fieldType) {\n\t\tif (obj[field] === undefined) {\n\t\t\tobj[fieldType] = P.DATATYPE_UNDEFINED;\n\t\t} else if (obj[field] === null) {\n\t\t\tobj[fieldType] = P.DATATYPE_NULL;\n\t\t} else if (Buffer.isBuffer(obj[field])) {\n\t\t\tobj[fieldType] = P.DATATYPE_BUFFER;\n\t\t} else {\n\t\t\t// JSON\n\t\t\tobj[fieldType] = P.DATATYPE_JSON;\n\t\t\tobj[field] = Buffer.from(JSON.stringify(obj[field]));\n\t\t}\n\t}\n\n\tconvertDataFromTransport(obj, field, fieldType) {\n\t\tconst type = obj[fieldType];\n\t\tswitch(type) {\n\t\t\tcase P.DATATYPE_UNDEFINED: {\n\t\t\t\tobj[field] = undefined;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.DATATYPE_NULL: {\n\t\t\t\tobj[field] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.DATATYPE_BUFFER: {\n\t\t\t\tif (!Buffer.isBuffer(obj[field]))\n\t\t\t\t\tobj[field] = Buffer.from(obj[field]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// JSON\n\t\t\t\tobj[field] = JSON.parse(obj[field]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tdelete obj[fieldType];\n\t}\n}\n\nmodule.exports = Serializer;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseSerializer  \t= require(\"./base\");\n/**\n * JSON serializer for Moleculer\n *\n * @class JSONSerializer\n */\nclass JSONSerializer extends BaseSerializer {\n\n\t/**\n\t * Creates an instance of JSONSerializer.\n\t *\n\t * @memberof JSONSerializer\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * Serializer a JS object to Buffer\n\t *\n\t * @param {Object} obj\n\t * @param {String} type of packet\n\t * @returns {Buffer}\n\t *\n\t * @memberof Serializer\n\t */\n\tserialize(obj) {\n\t\treturn Buffer.from(JSON.stringify(obj));\n\t}\n\n\t/**\n\t * Deserialize Buffer to JS object\n\t *\n\t * @param {Buffer} buf\n\t * @param {String} type of packet\n\t * @returns {Object}\n\t *\n\t * @memberof Serializer\n\t */\n\tdeserialize(buf) {\n\t\treturn JSON.parse(buf);\n\t}\n}\n\nmodule.exports = JSONSerializer;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Serializers = {\n\tBase: require(\"./base\"),\n\tJSON: require(\"./json\"),\n\tAvro: require(\"./avro\"),\n\tMsgPack: require(\"./msgpack\"),\n\tProtoBuf: require(\"./protobuf\"),\n\tThrift: require(\"./thrift\"),\n\tNotepack: require(\"./notepack\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Serializers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Serializers[n];\n}\n\n/**\n * Resolve serializer by name\n *\n * @param {object|string} opt\n * @returns {Serializer}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Serializers.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet SerializerClass = getByName(opt);\n\t\tif (SerializerClass)\n\t\t\treturn new SerializerClass();\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid serializer type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet SerializerClass = getByName(opt.type || \"JSON\");\n\t\tif (SerializerClass)\n\t\t\treturn new SerializerClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid serializer type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn new Serializers.JSON();\n}\n\nfunction register(name, value) {\n\tSerializers[name] = value;\n}\n\nmodule.exports = Object.assign(Serializers, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst os = require(\"os\");\nconst { getIpList } = require(\"./utils\");\nconst MOLECULER_VERSION = require(\"../package.json\").version;\n\nconst getClientInfo = () => {\n\treturn {\n\t\ttype: \"nodejs\",\n\t\tversion: MOLECULER_VERSION,\n\t\tlangVersion: process.version\n\t};\n};\n\nconst getCpuInfo = () => {\n\tconst cpus = os.cpus();\n\tconst load = os.loadavg();\n\tconst cpu = {\n\t\tload1: load[0],\n\t\tload5: load[1],\n\t\tload15: load[2],\n\t\tcores: Array.isArray(cpus) ? os.cpus().length : null,\n\t};\n\tcpu.utilization = Math.min(Math.floor(load[0] * 100 / cpu.cores), 100);\n\n\treturn cpu;\n};\n\nconst getMemoryInfo = () => {\n\tconst mem = {\n\t\tfree: os.freemem(),\n\t\ttotal: os.totalmem()\n\t};\n\tmem.percent = (mem.free * 100 / mem.total);\n\n\treturn mem;\n};\n\nconst getUserInfo = () => {\n\ttry {\n\t\treturn os.userInfo();\n\t} catch (e) {\n\t\treturn {};\n\t}\n};\n\nconst getOsInfo = () => {\n\treturn {\n\t\tuptime: os.uptime(),\n\t\ttype: os.type(),\n\t\trelease: os.release(),\n\t\thostname: os.hostname(),\n\t\tarch: os.arch(),\n\t\tplatform: os.platform(),\n\t\tuser: getUserInfo()\n\t};\n};\n\nconst getProcessInfo = () => {\n\treturn {\n\t\tpid: process.pid,\n\t\tmemory: process.memoryUsage(),\n\t\tuptime: process.uptime(),\n\t\targv: process.argv\n\t};\n};\n\nconst getNetworkInterfacesInfo = () => {\n\treturn {\n\t\tip:  getIpList()\n\t};\n};\n\nconst getDateTimeInfo = () => {\n\treturn {\n\t\tnow: Date.now(),\n\t\tiso: new Date().toISOString(),\n\t\tutc: new Date().toUTCString()\n\t};\n};\n\nconst getHealthStatus = (/*broker*/) => {\n\treturn {\n\t\tcpu: getCpuInfo(),\n\t\tmem: getMemoryInfo(),\n\t\tos: getOsInfo(),\n\t\tprocess: getProcessInfo(),\n\t\tclient: getClientInfo(),\n\t\tnet: getNetworkInterfacesInfo(),\n\t\ttime: getDateTimeInfo()\n\t};\n};\n\nmodule.exports = {\n\tgetHealthStatus,\n\tgetCpuInfo,\n\tgetMemoryInfo,\n\tgetOsInfo,\n\tgetProcessInfo,\n\tgetClientInfo,\n\tgetNetworkInterfacesInfo,\n\tgetDateTimeInfo\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isFunction, isString } = require(\"../utils\");\n\nmodule.exports = function actionHookMiddleware(broker) {\n\n\tfunction callHook(hook, service, ctx, res) {\n\t\tif (isFunction(hook)) {\n\t\t\treturn hook.call(service, ctx, res);\n\t\t} else if (Array.isArray(hook)) {\n\t\t\treturn hook.reduce((p, fn) => p.then(res => fn.call(service, ctx, res)), broker.Promise.resolve(res));\n\t\t}\n\t}\n\n\tfunction callErrorHook(hook, service, ctx, err) {\n\t\tif (isFunction(hook)) {\n\t\t\treturn hook.call(service, ctx, err);\n\t\t} else if (Array.isArray(hook)) {\n\t\t\treturn hook.reduce((p, fn) => p.catch(err => fn.call(service, ctx, err)), broker.Promise.reject(err));\n\t\t}\n\t}\n\n\t/**\n\t * Sanitize hooks. If the hook is a string, convert it to Service method calling.\n\t *\n\t * @param {Function|String|Array<any>} hooks\n\t * @param {Service?} service\n\t * @returns\n\t */\n\tfunction sanitizeHooks(hooks, service) {\n\t\tif (isString(hooks))\n\t\t\treturn service && isFunction(service[hooks]) ? service[hooks] : null;\n\n\t\tif (Array.isArray(hooks)) {\n\t\t\treturn _.compact(hooks.map(h => {\n\t\t\t\tif (isString(h))\n\t\t\t\t\treturn service && isFunction(service[h]) ? service[h] : null;\n\n\t\t\t\treturn h;\n\t\t\t}));\n\t\t}\n\n\t\treturn hooks;\n\t}\n\n\tfunction wrapActionHookMiddleware(handler, action) {\n\t\tconst name = action.rawName || action.name;\n\t\tconst hooks = action.service && action.service.schema ? action.service.schema.hooks : null;\n\t\tif (hooks || action.hooks) {\n\t\t\t// Global hooks\n\t\t\tconst beforeAllHook = hooks && hooks.before ? sanitizeHooks(hooks.before[\"*\"], action.service) : null;\n\t\t\tconst afterAllHook = hooks && hooks.after ? sanitizeHooks(hooks.after[\"*\"], action.service) : null;\n\t\t\tconst errorAllHook = hooks && hooks.error ? sanitizeHooks(hooks.error[\"*\"], action.service) : null;\n\n\t\t\t// Hooks in service\n\t\t\tconst beforeHook = hooks && hooks.before ? sanitizeHooks(hooks.before[name], action.service) : null;\n\t\t\tconst afterHook = hooks && hooks.after ? sanitizeHooks(hooks.after[name], action.service) : null;\n\t\t\tconst errorHook = hooks && hooks.error ? sanitizeHooks(hooks.error[name], action.service) : null;\n\n\t\t\t// Hooks in action definition\n\t\t\tconst actionBeforeHook = action.hooks && action.hooks.before ? sanitizeHooks(action.hooks.before, action.service) : null;\n\t\t\tconst actionAfterHook = action.hooks && action.hooks.after ? sanitizeHooks(action.hooks.after, action.service) : null;\n\t\t\tconst actionErrorHook = action.hooks && action.hooks.error ? sanitizeHooks(action.hooks.error, action.service) : null;\n\n\t\t\tif (beforeAllHook || beforeHook || actionBeforeHook\n\t\t\t\t|| afterAllHook || afterHook || actionAfterHook\n\t\t\t\t|| errorAllHook || errorHook || actionErrorHook) {\n\t\t\t\treturn function actionHookMiddleware(ctx) {\n\t\t\t\t\tlet p = broker.Promise.resolve();\n\n\t\t\t\t\t// Before hook all\n\t\t\t\t\tif (beforeAllHook)\n\t\t\t\t\t\tp = p.then(() => callHook(beforeAllHook, ctx.service, ctx));\n\n\t\t\t\t\t// Before hook\n\t\t\t\t\tif (beforeHook)\n\t\t\t\t\t\tp = p.then(() => callHook(beforeHook, ctx.service, ctx));\n\n\t\t\t\t\t// Before hook in action definition\n\t\t\t\t\tif (actionBeforeHook)\n\t\t\t\t\t\tp = p.then(() => callHook(actionBeforeHook, ctx.service, ctx));\n\n\t\t\t\t\t// Action hook handler\n\t\t\t\t\tp = p.then(() => handler(ctx));\n\n\t\t\t\t\t// After hook in action definition\n\t\t\t\t\tif (actionAfterHook)\n\t\t\t\t\t\tp = p.then(res => callHook(actionAfterHook, ctx.service, ctx, res));\n\n\t\t\t\t\t// After hook\n\t\t\t\t\tif (afterHook)\n\t\t\t\t\t\tp = p.then(res => callHook(afterHook, ctx.service, ctx, res));\n\n\t\t\t\t\t// After hook all\n\t\t\t\t\tif (afterAllHook)\n\t\t\t\t\t\tp = p.then(res => callHook(afterAllHook, ctx.service, ctx, res));\n\n\t\t\t\t\t// Error hook in action definition\n\t\t\t\t\tif (actionErrorHook)\n\t\t\t\t\t\tp = p.catch(err => callErrorHook(actionErrorHook, ctx.service, ctx, err));\n\n\t\t\t\t\t// Error hook\n\t\t\t\t\tif (errorHook)\n\t\t\t\t\t\tp = p.catch(err => callErrorHook(errorHook, ctx.service, ctx, err));\n\n\t\t\t\t\t// Error hook all\n\t\t\t\t\tif (errorAllHook)\n\t\t\t\t\t\tp = p.catch(err => callErrorHook(errorAllHook, ctx.service, ctx, err));\n\n\t\t\t\t\treturn p;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"ActionHook\",\n\t\tlocalAction: wrapActionHookMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { QueueIsFullError } = require(\"../errors\");\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function bulkheadMiddleware(broker) {\n\n\tfunction wrapActionBulkheadMiddleware(handler, action) {\n\t\tconst service = action.service;\n\n\t\tconst opts = Object.assign({}, this.options.bulkhead || {}, action.bulkhead || {});\n\t\tif (opts.enabled) {\n\t\t\tconst queue = [];\n\t\t\tlet currentInFlight = 0;\n\n\t\t\t// Call the next request from the queue\n\t\t\tconst callNext = function callNext() {\n\t\t\t/* istanbul ignore next */\n\t\t\t\tif (queue.length == 0) return;\n\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (currentInFlight >= opts.concurrency) return;\n\n\t\t\t\tconst item = queue.shift();\n\n\t\t\t\tcurrentInFlight++;\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\n\t\t\t\thandler(item.ctx)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\t\titem.resolve(res);\n\t\t\t\t\t\tcallNext();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\t\titem.reject(err);\n\t\t\t\t\t\tcallNext();\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn function bulkheadMiddleware(ctx) {\n\t\t\t// Call handler without waiting\n\t\t\t\tif (currentInFlight < opts.concurrency) {\n\t\t\t\t\tcurrentInFlight++;\n\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\treturn handler(ctx)\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\t\t\tcallNext();\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\t\t\tcallNext();\n\t\t\t\t\t\t\treturn broker.Promise.reject(err);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Check whether the queue is full\n\t\t\t\tif (opts.maxQueueSize && queue.length >= opts.maxQueueSize) {\n\t\t\t\t\treturn broker.Promise.reject(new QueueIsFullError({ action: ctx.action.name, nodeID: ctx.nodeID }));\n\t\t\t\t}\n\n\t\t\t\t// Store the request in the queue\n\t\t\t\tconst p = new Promise((resolve, reject) => queue.push({ resolve, reject, ctx }));\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\n\t\t\t\treturn p;\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\tfunction wrapEventBulkheadMiddleware(handler, event) {\n\t\tconst service = event.service;\n\n\t\tconst opts = Object.assign({}, this.options.bulkhead || {}, event.bulkhead || {});\n\t\tif (opts.enabled) {\n\t\t\tconst queue = [];\n\t\t\tlet currentInFlight = 0;\n\n\t\t\t// Call the next request from the queue\n\t\t\tconst callNext = function callNext() {\n\t\t\t/* istanbul ignore next */\n\t\t\t\tif (queue.length == 0) return;\n\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (currentInFlight >= opts.concurrency) return;\n\n\t\t\t\tconst item = queue.shift();\n\n\t\t\t\tcurrentInFlight++;\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\n\t\t\t\thandler(item.ctx)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\t\titem.resolve(res);\n\t\t\t\t\t\tcallNext();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\t\titem.reject(err);\n\t\t\t\t\t\tcallNext();\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn function bulkheadMiddleware(ctx) {\n\t\t\t\t// Call handler without waiting\n\t\t\t\tif (currentInFlight < opts.concurrency) {\n\t\t\t\t\tcurrentInFlight++;\n\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\treturn handler(ctx)\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\t\t\tcallNext();\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\t\t\tcallNext();\n\t\t\t\t\t\t\treturn broker.Promise.reject(err);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Check whether the queue is full\n\t\t\t\tif (opts.maxQueueSize && queue.length >= opts.maxQueueSize) {\n\t\t\t\t\treturn broker.Promise.reject(new QueueIsFullError({ event: ctx.eventName, service: service.fullName, nodeID: ctx.nodeID }));\n\t\t\t\t}\n\n\t\t\t\t// Store the request in the queue\n\t\t\t\tconst p = new Promise((resolve, reject) => queue.push({ resolve, reject, ctx }));\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\n\t\t\t\treturn p;\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\n\treturn {\n\t\tname: \"Bulkhead\",\n\n\t\tcreated() {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, type: METRIC.TYPE_GAUGE, labelNames: [\"action\", \"service\"] });\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, type: METRIC.TYPE_GAUGE, labelNames: [\"action\", \"service\"] });\n\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, type: METRIC.TYPE_GAUGE, labelNames: [\"event\", \"service\"] });\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, type: METRIC.TYPE_GAUGE, labelNames: [\"event\", \"service\"] });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapActionBulkheadMiddleware,\n\t\tlocalEvent: wrapEventBulkheadMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { GracefulStopTimeoutError } = require(\"../errors\");\n\nmodule.exports = function ContextTrackerMiddleware(broker) {\n\n\tfunction addContext(ctx) {\n\t\tif (ctx.service) {\n\t\t// Local request\n\t\t\tctx.service._trackedContexts.push(ctx);\n\t\t} else {\n\t\t// Remote request\n\t\t\tctx.broker._trackedContexts.push(ctx);\n\t\t}\n\t}\n\n\tfunction removeContext(ctx) {\n\t\tif (ctx.service) {\n\t\t\tconst idx = ctx.service._trackedContexts.indexOf(ctx);\n\t\t\tif (idx !== -1)\n\t\t\t\tctx.service._trackedContexts.splice(idx, 1);\n\t\t} else {\n\t\t\tconst idx = ctx.broker._trackedContexts.indexOf(ctx);\n\t\t\tif (idx !== -1)\n\t\t\t\tctx.broker._trackedContexts.splice(idx, 1);\n\t\t}\n\t}\n\n\tfunction wrapTrackerMiddleware(handler) {\n\t\tif (this.options.tracking && this.options.tracking.enabled) {\n\n\t\t\treturn function ContextTrackerMiddleware(ctx) {\n\n\t\t\t\tconst tracked = ctx.options.tracking != null ? ctx.options.tracking : this.options.tracking.enabled;\n\n\t\t\t\t// If no need to track\n\t\t\t\tif (!tracked)\n\t\t\t\t\treturn handler(ctx);\n\n\t\t\t\t// Track the context\n\t\t\t\taddContext(ctx);\n\n\t\t\t\t// Call the handler\n\t\t\t\tlet p = handler(ctx);\n\n\t\t\t\tp = p.then(res => {\n\t\t\t\t\tremoveContext(ctx);\n\t\t\t\t\treturn res;\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tremoveContext(ctx);\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\n\t\t\t\treturn p;\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\tfunction waitingForActiveContexts(list, logger, time, service) {\n\t\tif (!list || list.length === 0)\n\t\t\treturn broker.Promise.resolve();\n\n\t\treturn new broker.Promise((resolve) => {\n\t\t\tlet timedOut = false;\n\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\ttimedOut = true;\n\t\t\t\tlogger.error(new GracefulStopTimeoutError({ service }));\n\t\t\t\tlist.length = 0; // Clear pointers\n\t\t\t\tresolve();\n\t\t\t}, time);\n\n\t\t\tlet first = true;\n\t\t\tconst checkForContexts = () => {\n\t\t\t\tif (list.length === 0) {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\tif (first) {\n\t\t\t\t\t\tlogger.warn(`Waiting for ${list.length} running context(s)...`);\n\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!timedOut)\n\t\t\t\t\t\tsetTimeout(checkForContexts, 100);\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetImmediate(checkForContexts);\n\t\t});\n\t}\n\n\treturn {\n\t\tname: \"ContextTracker\",\n\n\t\tlocalAction: wrapTrackerMiddleware,\n\t\tremoteAction: wrapTrackerMiddleware,\n\n\t\tlocalEvent: wrapTrackerMiddleware,\n\n\t\t// After the broker created\n\t\tcreated(broker) {\n\t\t\tbroker._trackedContexts = [];\n\t\t},\n\n\t\t// Before a local service started\n\t\tserviceStarting(service) {\n\t\t\tservice._trackedContexts = [];\n\t\t},\n\n\t\t// Before a local service stopping\n\t\tserviceStopping(service) {\n\t\t\treturn waitingForActiveContexts(service._trackedContexts, service.logger, service.settings.$shutdownTimeout || service.broker.options.tracking.shutdownTimeout, service);\n\t\t},\n\n\t\t// Before broker stopping\n\t\tstopping(broker) {\n\t\t\treturn waitingForActiveContexts(broker._trackedContexts, broker.logger, broker.options.tracking.shutdownTimeout);\n\t\t},\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst C \t\t\t= require(\"../constants\");\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function circuitBreakerMiddleware(broker) {\n\n\tlet windowTimer;\n\tconst store = new Map();\n\tlet logger;\n\n\t/**\n\t * Create timer to clear endpoint store\n\t *\n\t * @param {Number} windowTime\n\t */\n\tfunction createWindowTimer(windowTime) {\n\t\tif (!windowTimer) {\n\t\t\twindowTimer = setInterval(() => resetStore(), (windowTime || 60) * 1000);\n\t\t\twindowTimer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Clear endpoint state store\n\t */\n\tfunction resetStore() {\n\t\tif (!logger) return;\n\n\t\tlogger.debug(\"Reset circuit-breaker endpoint states...\");\n\t\tstore.forEach((item, key) => {\n\t\t\tif (item.count == 0) {\n\t\t\t\tlogger.debug(`Remove '${key}' endpoint state because it is not used`);\n\t\t\t\tstore.delete(key);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogger.debug(`Clean '${key}' endpoint state.`);\n\t\t\titem.count = 0;\n\t\t\titem.failures = 0;\n\t\t});\n\t}\n\n\t/**\n\t * Get Endpoint state from store. If not exists, create it.\n\t *\n\t * @param {Endpoint} ep\n\t * @param {Service} service\n\t * @param {Object} opts\n\t * @returns {Object}\n\t */\n\tfunction getEpState(ep, service, opts) {\n\t\tlet item = store.get(ep.name);\n\t\tif (!item) {\n\t\t\titem = {\n\t\t\t\tep,\n\t\t\t\tservice,\n\t\t\t\topts,\n\t\t\t\tcount: 0,\n\t\t\t\tfailures: 0,\n\t\t\t\tstate: C.CIRCUIT_CLOSE,\n\t\t\t\tcbTimer: null\n\t\t\t};\n\t\t\tstore.set(ep.name, item);\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t * Increment failure counter\n\t *\n\t * @param {Object} item\n\t * @param {Error} err\n\t * @param {Context} ctx\n\t */\n\tfunction failure(item, err, ctx) {\n\t\titem.count++;\n\t\titem.failures++;\n\n\t\tcheckThreshold(item, ctx);\n\t}\n\n\t/**\n\t * Increment request counter and switch CB to CLOSE if it is on HALF_OPEN_WAIT.\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction success(item, ctx) {\n\t\titem.count++;\n\n\t\tif (item.state === C.CIRCUIT_HALF_OPEN_WAIT)\n\t\t\tcircuitClose(item, ctx);\n\t\telse\n\t\t\tcheckThreshold(item, ctx);\n\t}\n\n\t/**\n\t * Check circuit-breaker failure threshold of Endpoint\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction checkThreshold(item, ctx) {\n\t\tif (item.count >= item.opts.minRequestCount) {\n\t\t\tconst rate = item.failures / item.count;\n\t\t\tif (rate >= item.opts.threshold)\n\t\t\t\ttrip(item, ctx);\n\t\t}\n\t}\n\n\t/**\n\t * Trip the circuit-breaker, change the status to open\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction trip(item, ctx) {\n\t\tif (item.state == C.CIRCUIT_OPEN) return;\n\n\t\titem.state = C.CIRCUIT_OPEN;\n\t\titem.ep.state = false;\n\n\t\tif (item.cbTimer) {\n\t\t\tclearTimeout(item.cbTimer);\n\t\t\titem.cbTimer = null;\n\t\t}\n\n\t\titem.cbTimer = setTimeout(() => halfOpen(item, ctx), item.opts.halfOpenTime);\n\t\titem.cbTimer.unref();\n\n\t\tconst action = item.ep.action;\n\t\tconst service = item.service.fullName;\n\n\t\tconst rate = item.count > 0 ? item.failures / item.count : 0;\n\t\tlogger.debug(`Circuit breaker has been opened on '${item.ep.name}' endpoint.`, { nodeID: item.ep.id, service, action: action.name, failures: item.failures, count: item.count, rate });\n\t\tbroker.broadcast(\"$circuit-breaker.opened\", { nodeID: item.ep.id, service, action: action.name, failures: item.failures, count: item.count, rate });\n\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, 1, { affectedNodeID: item.ep.id, service, action: action.name });\n\t\tbroker.metrics.increment(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL, { affectedNodeID: item.ep.id, service, action: action.name });\n\t}\n\n\t/**\n\t * Change circuit-breaker status to half-open\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction halfOpen(item) {\n\t\titem.state = C.CIRCUIT_HALF_OPEN;\n\t\titem.ep.state = true;\n\n\t\tconst action = item.ep.action;\n\t\tconst service = item.service.fullName;\n\n\t\tlogger.debug(`Circuit breaker has been half-opened on '${item.ep.name}' endpoint.`, { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.broadcast(\"$circuit-breaker.half-opened\", { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, 0, { affectedNodeID: item.ep.id, service, action: action.name });\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE, 1, { affectedNodeID: item.ep.id, service, action: action.name });\n\n\t\tif (item.cbTimer) {\n\t\t\tclearTimeout(item.cbTimer);\n\t\t\titem.cbTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Change circuit-breaker status to half-open waiting. First request is invoked after half-open.\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t*/\n\tfunction halfOpenWait(item, ctx) {\n\t\titem.state = C.CIRCUIT_HALF_OPEN_WAIT;\n\t\titem.ep.state = false;\n\n\t\t// Anti-stick protection\n\t\titem.cbTimer = setTimeout(() => halfOpen(item, ctx), item.opts.halfOpenTime);\n\t\titem.cbTimer.unref();\n\t}\n\n\t/**\n\t * Change circuit-breaker status to close\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction circuitClose(item) {\n\t\titem.state = C.CIRCUIT_CLOSE;\n\t\titem.ep.state = true;\n\t\titem.failures = 0;\n\t\titem.count = 0;\n\n\t\tconst action = item.ep.action;\n\t\tconst service = item.service.fullName;\n\n\t\tlogger.debug(`Circuit breaker has been closed on '${item.ep.name}' endpoint.`, { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.broadcast(\"$circuit-breaker.closed\", { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, 0, { affectedNodeID: item.ep.id, service, action: action.name });\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE, 0, { affectedNodeID: item.ep.id, service, action: action.name });\n\n\t\tif (item.cbTimer) {\n\t\t\tclearTimeout(item.cbTimer);\n\t\t\titem.cbTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Middleware wrapper function\n\t *\n\t * @param {Function} handler\n\t * @param {Action} action\n\t * @returns {Function}\n\t */\n\tfunction wrapCBMiddleware(handler, action) {\n\t\tconst service = action.service;\n\t\t// Merge action option and broker options\n\t\tconst opts = Object.assign({}, this.options.circuitBreaker || {}, action.circuitBreaker || {});\n\t\tif (opts.enabled) {\n\t\t\treturn function circuitBreakerMiddleware(ctx) {\n\t\t\t\t// Get endpoint state item\n\t\t\t\tconst ep = ctx.endpoint;\n\t\t\t\tconst item = getEpState(ep, service, opts);\n\n\t\t\t\t// Handle half-open state in circuit breaker\n\t\t\t\tif (item.state == C.CIRCUIT_HALF_OPEN) {\n\t\t\t\t\thalfOpenWait(item, ctx);\n\t\t\t\t}\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler(ctx).then(res => {\n\t\t\t\t\tconst item = getEpState(ep, service, opts);\n\t\t\t\t\tsuccess(item, ctx);\n\n\t\t\t\t\treturn res;\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tif (opts.check && opts.check(err)) {\n\t\t\t\t\t\t// Failure if error is created locally (not came from a 3rd node error)\n\t\t\t\t\t\tif (item && (!err.nodeID || err.nodeID == ctx.nodeID)) {\n\t\t\t\t\t\t\tconst item = getEpState(ep, service, opts);\n\t\t\t\t\t\t\tfailure(item, err, ctx);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.Promise.reject(err);\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\n\treturn {\n\t\tname: \"CircuitBreaker\",\n\n\t\tcreated(broker) {\n\t\t\tlogger = broker.getLogger(\"circuit-breaker\");\n\n\t\t\t// Expose the internal state store.\n\t\t\tbroker.CircuitBreakerStore = store;\n\n\t\t\tconst opts = broker.options.circuitBreaker;\n\t\t\tif (opts.enabled) {\n\t\t\t\tcreateWindowTimer(opts.windowTime);\n\n\t\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"affectedNodeID\", \"service\", \"action\"], description: \"Number of active opened circuit-breakers\" });\n\t\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"affectedNodeID\", \"service\", \"action\"], description: \"Number of opened circuit-breakers\" });\n\t\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"affectedNodeID\", \"service\", \"action\"], description: \"Number of active half-opened circuit-breakers\" });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapCBMiddleware,\n\t\tremoteAction: wrapCBMiddleware,\n\n\t\tstopped() {\n\t\t\tif (windowTimer) {\n\t\t\t\tclearInterval(windowTimer);\n\t\t\t}\n\n\t\t\tdelete broker.CircuitBreakerStore;\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { RequestTimeoutError } = require(\"../errors\");\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function(broker) {\n\n\tfunction wrapTimeoutMiddleware(handler, action) {\n\t\tconst actionTimeout = action.timeout;\n\t\tconst actionName = action.name;\n\t\tconst service = action.service ? action.service.fullName : null;\n\n\t\treturn function timeoutMiddleware(ctx) {\n\n\t\t\t// Load opts with default values\n\t\t\tif (ctx.options.timeout == null) {\n\t\t\t\tif (actionTimeout != null)\n\t\t\t\t\tctx.options.timeout = actionTimeout;\n\t\t\t\telse\n\t\t\t\t\tctx.options.timeout = broker.options.requestTimeout;\n\t\t\t}\n\n\t\t\tif (ctx.options.timeout > 0 && !ctx.startHrTime) {\n\t\t\t// For distributed timeout calculation need to be set\n\t\t\t\tctx.startHrTime = process.hrtime();\n\t\t\t}\n\n\t\t\t// Call the handler\n\t\t\tconst p = handler(ctx);\n\t\t\tif (ctx.options.timeout > 0 && p.timeout) {\n\t\t\t\treturn p.timeout(ctx.options.timeout)\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tif (err instanceof broker.Promise.TimeoutError) {\n\t\t\t\t\t\t\tconst nodeID = ctx.nodeID;\n\t\t\t\t\t\t\tthis.logger.warn(`Request '${actionName}' is timed out.`, { requestID: ctx.requestID, nodeID, timeout: ctx.options.timeout });\n\t\t\t\t\t\t\terr = new RequestTimeoutError({ action: actionName, nodeID });\n\n\t\t\t\t\t\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_TIMEOUT_TOTAL, { service, action: actionName });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t}.bind(this);\n\t}\n\n\treturn {\n\t\tname: \"Timeout\",\n\n\t\tcreated(broker) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_TIMEOUT_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\"], description: \"Number of timed out requests\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapTimeoutMiddleware,\n\t\tremoteAction: wrapTimeoutMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function RetryMiddleware(broker) {\n\n\tfunction wrapRetryMiddleware(handler, action) {\n\t\tconst actionName = action.name;\n\t\tconst service = action.service ? action.service.fullName : null;\n\t\t// Merge action option and broker options\n\t\tconst opts = Object.assign({}, this.options.retryPolicy, action.retryPolicy || {});\n\t\tif (opts.enabled) {\n\t\t\treturn function retryMiddleware(ctx) {\n\t\t\t\tconst attempts = typeof ctx.options.retries === \"number\" ? ctx.options.retries : opts.retries;\n\t\t\t\tif (ctx._retryAttempts == null)\n\t\t\t\t\tctx._retryAttempts = 0;\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler(ctx).catch(err => {\n\n\t\t\t\t\t// Skip retry if it is a remote call. The retry logic will run on the caller node\n\t\t\t\t\t// because the Retry middleware wrap the `remoteAction` hook, as well.\n\t\t\t\t\tif (ctx.nodeID != broker.nodeID && ctx.endpoint.local)\n\t\t\t\t\t\treturn Promise.reject(err);\n\n\t\t\t\t\t// Check the error's `retryable` property.\n\t\t\t\t\tif (opts.check(err)) {\n\t\t\t\t\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL, { service, action: action.name });\n\n\t\t\t\t\t\tif (ctx._retryAttempts < attempts) {\n\t\t\t\t\t\t\t// Retry call\n\t\t\t\t\t\t\tctx._retryAttempts++;\n\n\t\t\t\t\t\t\t// Correct tracing\n\t\t\t\t\t\t\tif (ctx.span) {\n\t\t\t\t\t\t\t\tctx.span.setError(err);\n\t\t\t\t\t\t\t\tctx.span.addTags({ retryAttempts: ctx._retryAttempts });\n\t\t\t\t\t\t\t\tctx.finishSpan(ctx.span);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Calculate next delay\n\t\t\t\t\t\t\tconst delay = Math.min(opts.delay * Math.pow(opts.factor, ctx._retryAttempts - 1), opts.maxDelay);\n\n\t\t\t\t\t\t\tbroker.logger.warn(`Retry to call '${actionName}' action after ${delay} ms...`, { requestID: ctx.requestID, attempts: ctx._retryAttempts });\n\n\t\t\t\t\t\t\t// Wait & recall\n\t\t\t\t\t\t\treturn broker.Promise.delay(delay)\n\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\tconst newCtx = ctx.copy();\n\t\t\t\t\t\t\t\t\tnewCtx._retryAttempts = ctx._retryAttempts;\n\n\t\t\t\t\t\t\t\t\tif (action.visibility == \"private\")\n\t\t\t\t\t\t\t\t\t\treturn ctx.service.actions[action.rawName](ctx.params, { ctx: newCtx });\n\n\t\t\t\t\t\t\t\t\treturn broker.call(actionName, ctx.params, { ctx: newCtx });\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Throw error\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"Retry\",\n\n\t\tcreated() {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\"], description: \"Number of retries\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapRetryMiddleware,\n\t\tremoteAction: wrapRetryMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { MoleculerError } = require(\"../errors\");\nconst { METRIC }\t= require(\"../metrics\");\nconst { isFunction, isString } = require(\"../utils\");\n\nmodule.exports = function FallbackMiddleware(broker) {\n\n\tfunction handleContextFallback(ctx, err) {\n\t\tbroker.logger.warn(`The '${ctx.action.name}' request is failed. Return fallback response.`, { requestID: ctx.requestID, err: err.message });\n\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_FALLBACK_TOTAL, { action: ctx.action.name });\n\t\tctx.fallbackResult = true;\n\n\t\tif (isFunction(ctx.options.fallbackResponse))\n\t\t\treturn ctx.options.fallbackResponse(ctx, err);\n\t\telse\n\t\t\treturn Promise.resolve(ctx.options.fallbackResponse);\n\t}\n\n\tfunction wrapFallbackMiddleware(handler, action) {\n\t\treturn function fallbackMiddleware(ctx) {\n\t\t\t// Call the handler\n\t\t\treturn handler(ctx).catch(err => {\n\n\t\t\t\t// Handle fallback response from calling options\n\t\t\t\tif (ctx.options.fallbackResponse) {\n\t\t\t\t\treturn handleContextFallback(ctx, err);\n\t\t\t\t}\n\n\t\t\t\t// Handle fallback from Action Definition (only locally)\n\t\t\t\tif (action.fallback && action.service) {\n\t\t\t\t\tconst svc = action.service;\n\n\t\t\t\t\tconst fallback = isString(action.fallback) ? svc[action.fallback] : action.fallback;\n\t\t\t\t\tif (!isFunction(fallback)) {\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tthrow new MoleculerError(`The 'fallback' of '${action.name}' action is not a Function or valid method name: ${action.fallback}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tsvc.logger.warn(`The '${ctx.action.name}' request is failed. Return fallback response.`, { requestID: ctx.requestID, err: err.message });\n\t\t\t\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_FALLBACK_TOTAL, { service: svc.fullName, action: action.name });\n\t\t\t\t\tctx.fallbackResult = true;\n\n\t\t\t\t\treturn fallback.call(svc, ctx, err);\n\t\t\t\t}\n\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}.bind(this);\n\t}\n\n\treturn {\n\t\tname: \"Fallback\",\n\n\t\tcreated(broker) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_FALLBACK_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\"], description: \"Number of fallbacked requests\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapFallbackMiddleware,\n\t\tremoteAction: wrapFallbackMiddleware,\n\n\t\t/*call(next) {\n\t\t\treturn (actionName, params, opts) => {\n\t\t\t\treturn next(actionName, params, opts).catch(err => {\n\t\t\t\t\tif (opts.fallbackResponse) {\n\t\t\t\t\t\treturn handleContextFallback(null, err);\n\t\t\t\t\t}\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\t\t\t};\n\t\t},*/\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { MoleculerError } = require(\"../errors\");\n\nfunction wrapActionErrorHandler(handler) {\n\treturn function errorHandlerMiddleware(ctx) {\n\t\t// Call the handler\n\t\treturn handler(ctx)\n\t\t\t.catch(err => {\n\t\t\t\tif (!(err instanceof Error))\n\t\t\t\t\terr = new MoleculerError(err, 500);\n\n\t\t\t\tif (ctx.nodeID !== this.nodeID) {\n\t\t\t\t\t// Remove pending request (the request didn't reach the target service)\n\t\t\t\t\tif (this.transit)\n\t\t\t\t\t\tthis.transit.removePendingRequest(ctx.id);\n\t\t\t\t}\n\n\t\t\t\tthis.logger.debug(`The '${ctx.action.name}' request is rejected.`, { requestID: ctx.requestID }, err);\n\n\t\t\t\tObject.defineProperty(err, \"ctx\", {\n\t\t\t\t\tvalue: ctx,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tenumerable: false\n\t\t\t\t});\n\n\t\t\t\t// Call global errorHandler\n\t\t\t\treturn ctx.broker.errorHandler(err, {\n\t\t\t\t\tctx,\n\t\t\t\t\tservice: ctx.service,\n\t\t\t\t\taction: ctx.action\n\t\t\t\t});\n\t\t\t});\n\n\t}.bind(this);\n}\n\nfunction wrapEventErrorHandler(handler) {\n\treturn function errorHandlerMiddleware(ctx) {\n\t\t// Call the handler\n\t\treturn handler(ctx)\n\t\t\t.catch(err => {\n\t\t\t\tif (!(err instanceof Error))\n\t\t\t\t\terr = new MoleculerError(err, 500);\n\n\t\t\t\tthis.logger.debug(`Error occured in the '${ctx.event.name}' event handler in the '${ctx.service.fullName}' service.`, { requestID: ctx.requestID }, err);\n\n\t\t\t\tObject.defineProperty(err, \"ctx\", {\n\t\t\t\t\tvalue: ctx,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tenumerable: false\n\t\t\t\t});\n\n\t\t\t\t// Call global errorHandler\n\t\t\t\treturn ctx.broker.errorHandler(err, {\n\t\t\t\t\tctx,\n\t\t\t\t\tservice: ctx.service,\n\t\t\t\t\tevent: ctx.event\n\t\t\t\t});\n\t\t\t}).catch(err => {\n\t\t\t\t// No global error Handler, or thrown further, so we handle it because it's an event handler.\n\t\t\t\tctx.broker.logger.error(err);\n\t\t\t});\n\n\t}.bind(this);\n}\n\nmodule.exports = function() {\n\treturn {\n\t\tname: \"ErrorHandler\",\n\n\t\tlocalAction: wrapActionErrorHandler,\n\t\tremoteAction: wrapActionErrorHandler,\n\n\t\tlocalEvent: wrapEventErrorHandler\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function MetricsMiddleware(broker) {\n\tconst metrics = broker.metrics;\n\n\tfunction getActionHandler(type, actionDef, next) {\n\t\tconst action = actionDef.name;\n\t\tconst service = actionDef.service ? actionDef.service.fullName : null;\n\n\t\treturn function metricsMiddleware(ctx) {\n\t\t\tconst caller = ctx.caller;\n\n\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_TOTAL, { service, action, caller, type });\n\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_ACTIVE, { service, action, caller, type });\n\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_LEVELS, { service, action, caller, level: ctx.level });\n\t\t\tconst timeEnd = metrics.timer(METRIC.MOLECULER_REQUEST_TIME, { service, action, caller, type });\n\n\t\t\t// Call the next handler\n\t\t\treturn next(ctx).then(res => {\n\t\t\t\ttimeEnd();\n\t\t\t\tmetrics.decrement(METRIC.MOLECULER_REQUEST_ACTIVE, { service, action, caller, type });\n\t\t\t\treturn res;\n\t\t\t}).catch(err => {\n\t\t\t\ttimeEnd();\n\t\t\t\tmetrics.decrement(METRIC.MOLECULER_REQUEST_ACTIVE, { service, action, caller, type });\n\t\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_ERROR_TOTAL, {\n\t\t\t\t\tservice,\n\t\t\t\t\taction,\n\t\t\t\t\tcaller,\n\t\t\t\t\ttype,\n\t\t\t\t\terrorName: err ? err.name : null,\n\t\t\t\t\terrorCode: err ? err.code : null,\n\t\t\t\t\terrorType: err ? err.type : null\n\t\t\t\t});\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\t};\n\t}\n\n\treturn {\n\t\tname: \"Metrics\",\n\n\t\tcreated() {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\t// --- MOLECULER REQUEST METRICS ---\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\", \"type\", \"caller\"], unit: METRIC.UNIT_REQUEST, description: \"Number of requests\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"service\", \"action\", \"type\", \"caller\"], unit: METRIC.UNIT_REQUEST, description: \"Number of active requests\" });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_ERROR_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\", \"type\", \"caller\", \"errorName\", \"errorCode\", \"errorType\"], unit: METRIC.UNIT_REQUEST, description: \"Number of request errors\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_TIME, type: METRIC.TYPE_HISTOGRAM, labelNames: [\"service\", \"action\", \"type\", \"caller\"], quantiles: true, buckets: true, unit: METRIC.UNIT_MILLISECONDS, description: \"Request times in milliseconds\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_LEVELS, type: METRIC.TYPE_COUNTER, labelNames: [\"level\"], unit: METRIC.UNIT_REQUEST, description: \"Number of requests by context level\" });\n\t\t\t\t//metrics.register({ name: METRIC.MOLECULER_REQUEST_DIRECTCALL_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"action\"], unit: METRIC.UNIT_REQUEST, description: \"Number of direct calls\", rate: true });\n\t\t\t\t//metrics.register({ name: METRIC.MOLECULER_REQUEST_MULTICALL_TOTAL, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_REQUEST, description: \"Number of multicalls\", rate: true });\n\n\t\t\t\t// --- MOLECULER EVENTS METRICS ---\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_EMIT_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"event\", \"groups\"], unit: METRIC.UNIT_EVENT, description: \"Number of emitted events\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_BROADCAST_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"event\", \"groups\"], unit: METRIC.UNIT_EVENT, description: \"Number of broadcast events\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_BROADCASTLOCAL_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"event\", \"groups\"], unit: METRIC.UNIT_EVENT, description: \"Number of local broadcast events\", rate: true });\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"group\", \"event\", \"caller\"], unit: METRIC.UNIT_EVENT, description: \"Number of received events\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"service\", \"group\", \"event\", \"caller\"], unit: METRIC.UNIT_REQUEST, description: \"Number of active event executions\" });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_ERROR_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"group\", \"event\", \"caller\", \"errorName\", \"errorCode\", \"errorType\"], unit: METRIC.UNIT_REQUEST, description: \"Number of event execution errors\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_TIME, type: METRIC.TYPE_HISTOGRAM, labelNames: [\"service\", \"group\", \"event\", \"caller\"], quantiles: true, buckets: true, unit: METRIC.UNIT_MILLISECONDS, description: \"Execution time of events in milliseconds\", rate: true });\n\n\t\t\t\t// --- MOLECULER TRANSIT METRICS ---\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_PUBLISH_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"type\"], unit: METRIC.UNIT_PACKET, description: \"Number of published packets\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_RECEIVE_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"type\"], unit: METRIC.UNIT_PACKET, description: \"Number of received packets\", rate: true });\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_REQUESTS_ACTIVE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_REQUEST, description: \"Number of active requests\" });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_STREAMS_SEND_ACTIVE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_STREAM, description: \"Number of active sent streams\" });\n\t\t\t\t//metrics.register({ name: METRIC.MOLECULER_TRANSIT_STREAMS_RECEIVE_ACTIVE, type: METRIC.TYPE_GAUGE, description: \"\" });\n\n\t\t\t\t// --- MOLECULER TRANSPORTER METRICS ---\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_PACKET, description: \"Number of sent packets\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_BYTES, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_BYTE, description: \"Number of sent bytes\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_PACKET, description: \"Number of received packets\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_BYTE, description: \"Number of received bytes\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction(next, action) {\n\t\t\tif (broker.isMetricsEnabled())\n\t\t\t\treturn getActionHandler(\"local\", action, next);\n\n\t\t\treturn next;\n\t\t},\n\n\t\tremoteAction(next, action) {\n\t\t\tif (broker.isMetricsEnabled())\n\t\t\t\treturn getActionHandler(\"remote\", action, next);\n\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap local event handlers\n\t\tlocalEvent(next, event) {\n\t\t\tconst service = event.service ? event.service.name : null;\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(ctx) {\n\t\t\t\t\tconst group = event.group || service;\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_RECEIVED_TOTAL, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\tconst timeEnd = metrics.timer(METRIC.MOLECULER_EVENT_RECEIVED_TIME, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\treturn next.apply(this, arguments).then(res => {\n\t\t\t\t\t\ttimeEnd();\n\t\t\t\t\t\tmetrics.decrement(METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\ttimeEnd();\n\t\t\t\t\t\tmetrics.decrement(METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_RECEIVED_ERROR_TOTAL, {\n\t\t\t\t\t\t\tservice, event: ctx.eventName, group, caller: ctx.caller,\n\t\t\t\t\t\t\terrorName: err ? err.name : null,\n\t\t\t\t\t\t\terrorCode: err ? err.code : null,\n\t\t\t\t\t\t\terrorType: err ? err.type : null\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t\t}.bind(this);\n\t\t\t}\n\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap broker.emit method\n\t\temit(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* event, payload */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_EMIT_TOTAL, { event: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap broker.broadcast method\n\t\tbroadcast(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* event, payload */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_BROADCAST_TOTAL, { event: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap broker.broadcastLocal method\n\t\tbroadcastLocal(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* event, payload */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_BROADCASTLOCAL_TOTAL, { event: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transit publishing a packet\n\t\ttransitPublish(next) {\n\t\t\tconst transit = this;\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* packet */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_PUBLISH_TOTAL, { type: arguments[0].type });\n\n\t\t\t\t\tconst p = next.apply(this, arguments);\n\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_REQUESTS_ACTIVE, null, transit.pendingRequests.size);\n\t\t\t\t\t//metrics.increment(METRIC.MOLECULER_TRANSIT_STREAMS_RECEIVE_ACTIVE, null, transit.);\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_STREAMS_SEND_ACTIVE, null, transit.pendingReqStreams.size + this.pendingResStreams.size);\n\n\t\t\t\t\treturn p;\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transit receives & handles a packet\n\t\ttransitMessageHandler(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* cmd, packet */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_RECEIVE_TOTAL, { type: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transporter send data\n\t\ttransporterSend(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* topic, data, meta */) {\n\t\t\t\t\tconst data = arguments[1];\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL);\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_BYTES, null, data && data.length ? data.length : 0);\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transporter received data\n\t\ttransporterReceive(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* cmd, data, s */) {\n\t\t\t\t\tconst data = arguments[1];\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL);\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES, null, data && data.length ? data.length : 0);\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t}\n\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isFunction, isPlainObject } = require(\"../utils\");\n\nmodule.exports = function TracingMiddleware(broker) {\n\n\tconst tracer = broker.tracer;\n\n\tfunction tracingLocalActionMiddleware(handler, action) {\n\t\tlet opts = action.tracing;\n\t\tif (opts === true || opts === false)\n\t\t\topts = { enabled: !!opts };\n\t\topts = _.defaultsDeep({}, opts, { enabled: true });\n\n\t\tif (opts.enabled) {\n\t\t\treturn function tracingLocalActionMiddleware(ctx) {\n\n\t\t\t\tctx.requestID = ctx.requestID || tracer.getCurrentTraceID();\n\t\t\t\tctx.parentID = ctx.parentID || tracer.getActiveSpanID();\n\n\t\t\t\tconst tags = {\n\t\t\t\t\tcallingLevel: ctx.level,\n\t\t\t\t\taction: ctx.action ? {\n\t\t\t\t\t\tname: ctx.action.name,\n\t\t\t\t\t\trawName: ctx.action.rawName\n\t\t\t\t\t} : null,\n\t\t\t\t\tremoteCall: ctx.nodeID !== ctx.broker.nodeID,\n\t\t\t\t\tcallerNodeID: ctx.nodeID,\n\t\t\t\t\tnodeID: ctx.broker.nodeID,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\ttimeout: ctx.options.timeout,\n\t\t\t\t\t\tretries: ctx.options.retries\n\t\t\t\t\t},\n\t\t\t\t\trequestID: ctx.requestID,\n\t\t\t\t};\n\t\t\t\tconst globalActionTags = tracer.opts.tags.action;\n\t\t\t\tlet actionTags;\n\t\t\t\t// local action tags take precedence\n\t\t\t\tif (isFunction(opts.tags)) {\n\t\t\t\t\tactionTags = opts.tags;\n\t\t\t\t} else if (!opts.tags && isFunction(globalActionTags)) {\n\t\t\t\t\tactionTags = globalActionTags;\n\t\t\t\t} else {\n\t\t\t\t\t// By default all params are captured. This can be overridden globally and locally\n\t\t\t\t\tactionTags = { ...{ params: true }, ...globalActionTags, ...opts.tags };\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(actionTags)) {\n\t\t\t\t\tconst res = actionTags.call(ctx.service, ctx);\n\t\t\t\t\tif (res)\n\t\t\t\t\t\tObject.assign(tags, res);\n\n\t\t\t\t} else if (isPlainObject(actionTags)) {\n\t\t\t\t\tif (actionTags.params === true)\n\t\t\t\t\t\ttags.params = ctx.params != null && isPlainObject(ctx.params) ? Object.assign({}, ctx.params) : ctx.params;\n\t\t\t\t\telse if (Array.isArray(actionTags.params))\n\t\t\t\t\t\ttags.params = _.pick(ctx.params, actionTags.params);\n\n\t\t\t\t\tif (actionTags.meta === true)\n\t\t\t\t\t\ttags.meta = ctx.meta != null ? Object.assign({}, ctx.meta) : ctx.meta;\n\t\t\t\t\telse if (Array.isArray(actionTags.meta))\n\t\t\t\t\t\ttags.meta = _.pick(ctx.meta, actionTags.meta);\n\t\t\t\t}\n\n\t\t\t\tlet spanName = `action '${ctx.action.name}'`;\n\t\t\t\tif (opts.spanName) {\n\t\t\t\t\tswitch(typeof opts.spanName) {\n\t\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\t\tspanName = opts.spanName;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\t\tspanName = opts.spanName.call(ctx.service, ctx);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst span = ctx.startSpan(spanName, {\n\t\t\t\t\tid: ctx.id,\n\t\t\t\t\ttype: \"action\",\n\t\t\t\t\ttraceID: ctx.requestID,\n\t\t\t\t\tparentID: ctx.parentID,\n\t\t\t\t\tservice: ctx.service,\n\t\t\t\t\tsampled: ctx.tracing,\n\t\t\t\t\ttags\n\t\t\t\t});\n\n\t\t\t\tctx.tracing = span.sampled;\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler(ctx).then(res => {\n\t\t\t\t\tconst tags = {\n\t\t\t\t\t\tfromCache: ctx.cachedResult\n\t\t\t\t\t};\n\n\t\t\t\t\tif (isFunction(actionTags)) {\n\t\t\t\t\t\tconst r = actionTags.call(ctx.service, ctx, res);\n\t\t\t\t\t\tif (r)\n\t\t\t\t\t\t\tObject.assign(tags, r);\n\n\t\t\t\t\t} else if (isPlainObject(actionTags)) {\n\t\t\t\t\t\tif (actionTags.response === true)\n\t\t\t\t\t\t\ttags.response = res != null && isPlainObject(res) ? Object.assign({}, res) : res;\n\t\t\t\t\t\telse if (Array.isArray(actionTags.response))\n\t\t\t\t\t\t\ttags.response = _.pick(res, actionTags.response);\n\t\t\t\t\t}\n\n\t\t\t\t\tspan.addTags(tags);\n\t\t\t\t\tctx.finishSpan(span);\n\n\t\t\t\t\t//ctx.duration = span.duration;\n\n\t\t\t\t\treturn res;\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tspan.setError(err);\n\t\t\t\t\tctx.finishSpan(span);\n\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\tfunction tracingLocalEventMiddleware(handler, event) {\n\t\tconst service = event.service;\n\n\t\tlet opts = event.tracing;\n\t\tif (opts === true || opts === false)\n\t\t\topts = { enabled: !!opts };\n\t\topts = _.defaultsDeep({}, opts, { enabled: true  });\n\n\t\tif (opts.enabled) {\n\t\t\treturn function tracingLocalEventMiddleware(ctx) {\n\n\t\t\t\tctx.requestID = ctx.requestID || tracer.getCurrentTraceID();\n\t\t\t\tctx.parentID = ctx.parentID || tracer.getActiveSpanID();\n\n\t\t\t\tconst tags = {\n\t\t\t\t\tevent: {\n\t\t\t\t\t\tname: event.name,\n\t\t\t\t\t\tgroup: event.group\n\t\t\t\t\t},\n\t\t\t\t\teventName: ctx.eventName,\n\t\t\t\t\teventType: ctx.eventType,\n\t\t\t\t\tcallerNodeID: ctx.nodeID,\n\t\t\t\t\tcallingLevel: ctx.level,\n\t\t\t\t\tremoteCall: ctx.nodeID !== broker.nodeID,\n\t\t\t\t\tnodeID: broker.nodeID,\n\t\t\t\t\trequestID: ctx.requestID,\n\t\t\t\t};\n\n\t\t\t\tconst globalEventTags = tracer.opts.tags.event;\n\t\t\t\tlet eventTags;\n\t\t\t\t// local event tags take precedence\n\t\t\t\tif (isFunction(opts.tags)) {\n\t\t\t\t\teventTags = opts.tags;\n\t\t\t\t} else if (!opts.tags && isFunction(globalEventTags)) {\n\t\t\t\t\teventTags = globalEventTags;\n\t\t\t\t} else {\n\t\t\t\t\t// By default all params are captured. This can be overridden globally and locally\n\t\t\t\t\teventTags = { ...{ params: true }, ...globalEventTags, ...opts.tags };\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(eventTags)) {\n\t\t\t\t\tconst res = eventTags.call(service, ctx);\n\t\t\t\t\tif (res)\n\t\t\t\t\t\tObject.assign(tags, res);\n\n\t\t\t\t} else if (isPlainObject(eventTags)) {\n\t\t\t\t\tif (eventTags.params === true)\n\t\t\t\t\t\ttags.params = ctx.params != null && isPlainObject(ctx.params) ? Object.assign({}, ctx.params) : ctx.params;\n\t\t\t\t\telse if (Array.isArray(eventTags.params))\n\t\t\t\t\t\ttags.params = _.pick(ctx.params, eventTags.params);\n\n\t\t\t\t\tif (eventTags.meta === true)\n\t\t\t\t\t\ttags.meta = ctx.meta != null ? Object.assign({}, ctx.meta) : ctx.meta;\n\t\t\t\t\telse if (Array.isArray(eventTags.meta))\n\t\t\t\t\t\ttags.meta = _.pick(ctx.meta, eventTags.meta);\n\t\t\t\t}\n\n\t\t\t\tlet spanName = `event '${ctx.eventName}' in '${service.fullName}'`;\n\t\t\t\tif (opts.spanName) {\n\t\t\t\t\tswitch(typeof opts.spanName) {\n\t\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\t\tspanName = opts.spanName;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\t\tspanName = opts.spanName.call(service, ctx);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst span = ctx.startSpan(spanName, {\n\t\t\t\t\tid: ctx.id,\n\t\t\t\t\ttype: \"event\",\n\t\t\t\t\ttraceID: ctx.requestID,\n\t\t\t\t\tparentID: ctx.parentID,\n\t\t\t\t\tservice,\n\t\t\t\t\tsampled: ctx.tracing,\n\t\t\t\t\ttags\n\t\t\t\t});\n\n\t\t\t\tctx.tracing = span.sampled;\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler.apply(service, arguments).then(() => {\n\t\t\t\t\tctx.finishSpan(span);\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tspan.setError(err);\n\t\t\t\t\tctx.finishSpan(span);\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\t/*\n\tfunction wrapRemoteTracingMiddleware(handler) {\n\n\t\tif (this.options.tracing) {\n\t\t\treturn function tracingMiddleware(ctx) {\n\t\t\t\tif (ctx.tracing == null) {\n\t\t\t\t\tctx.tracing = shouldTracing(ctx);\n\t\t\t\t}\n\t\t\t\treturn handler(ctx);\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}*/\n\treturn {\n\t\tname: \"Tracing\",\n\n\t\tlocalAction: broker.isTracingEnabled() && tracer.opts.actions ? tracingLocalActionMiddleware : null,\n\t\tlocalEvent: broker.isTracingEnabled() && tracer.opts.events ? tracingLocalEventMiddleware : null,\n\t\t//remoteAction: wrapRemoteTracingMiddleware\n\t};\n};\n","import * as fflate from 'fflate'\n\nexport const deflateRaw = (...args) => fflate.deflateSync(...args)\nexport const inflateRaw = (...args) => fflate.inflateSync(...args)\nexport const gzip = (...args) => fflate.gzip(...args)\nexport const gunzip = (...args) => fflate.gunzip(...args)\nexport const deflate = (...args) => fflate.zlibSync(...args)\nexport const inflate = (...args) => fflate.unzlibSync(...args)\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { defaultsDeep } = require(\"lodash\");\nconst { parseByteString } = require(\"../../utils\");\nconst zlib = require(\"zlib\");\nconst { promisify } = require(\"util\");\n\n/**\n * This is a transmission compression middleware. It supports\n * the `deflate`, `deflateRaw` & `gzip` compression methods.\n *\n * @param {String?} opts.method\n * @param {String|Number} opts.threshold\n */\nmodule.exports = function CompressionMiddleware(opts) {\n\topts = defaultsDeep(opts, { method: \"deflate\", threshold: \"1kb\" });\n\n\tlet compress, decompress;\n\tconst threshold = parseByteString(opts.threshold);\n\n\tswitch(opts.method) {\n\t\tcase \"deflate\":\n\t\t\tcompress = promisify(zlib.deflate);\n\t\t\tdecompress = promisify(zlib.inflate);\n\t\t\tbreak;\n\t\tcase \"deflateRaw\":\n\t\t\tcompress = promisify(zlib.deflateRaw);\n\t\t\tdecompress = promisify(zlib.inflateRaw);\n\t\t\tbreak;\n\t\tcase \"gzip\":\n\t\t\tcompress = promisify(zlib.gzip);\n\t\t\tdecompress = promisify(zlib.gunzip);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t/* istanbul ignore next */\n\t\t\tthrow new Error(\"Unknow compression method: \" + opts.method);\n\t}\n\n\tlet logger;\n\n\treturn {\n\t\tname: \"Compression\",\n\n\t\tcreated(broker) {\n\t\t\tlogger = broker.getLogger(\"TX-COMPRESS\");\n\t\t\t/* istanbul ignore next */\n\t\t\tlogger.info(`The transmission is COMPRESSED by '${opts.method}'. Threshold: ${ threshold != null ? opts.threshold : \"none\"}`);\n\t\t},\n\n\t\ttransporterSend(next) {\n\t\t\treturn (topic, data, meta) => {\n\t\t\t\tif (threshold != null && data.length < threshold) {\n\t\t\t\t\tlogger.debug(`Packet '${topic}' is small and not compressed. Size: ${data.length}`);\n\t\t\t\t\treturn next(topic, Buffer.concat([Buffer.from([0x00]), data]), meta);\n\t\t\t\t}\n\t\t\t\treturn compress(data)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tlogger.debug(`Packet '${topic}' compressed. Saving: ${Number((1 - (res.length / data.length)) * 100).toFixed(0)}%`, data.length, res.length);\n\t\t\t\t\t\treturn next(topic, Buffer.concat([Buffer.from([0x01]), res]), meta);\n\t\t\t\t\t});\n\t\t\t};\n\t\t},\n\n\t\ttransporterReceive(next) {\n\t\t\treturn (cmd, data, s) => {\n\t\t\t\tconst isCompressed = data.readInt8(0);\n\t\t\t\tif (isCompressed == 0) {\n\t\t\t\t\tlogger.debug(`Packet '${cmd}' is small and not compressed. Size: ${data.length}`);\n\t\t\t\t\treturn next(cmd, data.slice(1), s);\n\t\t\t\t} else {\n\t\t\t\t\treturn decompress(data.slice(1))\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tlogger.debug(`Packet '${cmd}' decompressed. Saving: ${Number((1 - (data.length / res.length)) * 100).toFixed(0)}%`, res.length, data.length);\n\t\t\t\t\t\t\treturn next(cmd, res, s);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst kleur = require(\"kleur\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst { makeDirs } = require(\"../../utils\");\n\nmodule.exports = function TransitLoggerMiddleware(opts) {\n\topts = _.defaultsDeep(opts, {\n\t\tlogger: null,\n\t\tlogLevel: \"info\",\n\t\tlogPacketData: false,\n\n\t\tfolder: null,\n\t\textension: \".json\",\n\n\t\tcolors: {\n\t\t\treceive: \"grey\",\n\t\t\tsend: \"grey\"\n\t\t},\n\n\t\tpacketFilter: [\"HEARTBEAT\"]\n\t});\n\n\tlet logger;\n\tlet nodeID;\n\n\tlet targetFolder;\n\n\tfunction saveToFile(filename, payload) {\n\t\tconst data = JSON.stringify(payload, payload instanceof Error ? Object.getOwnPropertyNames(payload) : null, 4);\n\t\tfs.writeFile(path.join(targetFolder, filename), data, () => { /* Silent error */ });\n\t}\n\n\tconst coloringSend = opts.colors && opts.colors.send ? opts.colors.send.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\tconst coloringReceive = opts.colors && opts.colors.receive ? opts.colors.receive.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\n\tlet logFn;\n\n\treturn {\n\t\tname: \"TransitLogger\",\n\t\tcreated(broker) {\n\t\t\tlogger = opts.logger || broker.getLogger(\"debug\");\n\t\t\tnodeID = broker.nodeID;\n\n\t\t\tif (opts.folder) {\n\t\t\t\ttargetFolder = path.join(opts.folder, nodeID);\n\t\t\t\tmakeDirs(targetFolder);\n\t\t\t}\n\n\t\t\tlogFn = opts.logLevel ? logger[opts.logLevel] : null;\n\t\t},\n\n\t\ttransitPublish(next) {\n\t\t\treturn packet => {\n\t\t\t\t// Packet filtering\n\t\t\t\tif (opts.packetFilter.includes(packet.type)) {\n\t\t\t\t\treturn next(packet);\n\t\t\t\t}\n\n\t\t\t\tconst payload = packet.payload;\n\n\t\t\t\t// Logging to logger\n\t\t\t\tif (logFn) {\n\t\t\t\t\tlogFn(coloringSend(`=> Send ${packet.type} packet to '${packet.target || \"<all nodes>\"}'`));\n\t\t\t\t\tif (opts.logPacketData) {\n\t\t\t\t\t\tlogFn(\"=>\", payload);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (targetFolder) {\n\t\t\t\t\tsaveToFile(`${Date.now()}-send-${packet.type}-to-${packet.target || \"all\"}${opts.extension}`, payload);\n\t\t\t\t}\n\n\t\t\t\treturn next(packet);\n\t\t\t};\n\t\t},\n\n\t\ttransitMessageHandler(next) {\n\t\t\treturn (cmd, packet) => {\n\t\t\t\t// Packet filtering\n\t\t\t\tif (opts.packetFilter.includes(cmd)) {\n\t\t\t\t\treturn next(cmd, packet);\n\t\t\t\t}\n\n\t\t\t\tconst payload = packet.payload;\n\n\t\t\t\tif (logFn) {\n\t\t\t\t\tlogFn(coloringReceive(`<= Receive ${cmd} packet from '${payload.sender}'`));\n\t\t\t\t\tif (opts.logPacketData) {\n\t\t\t\t\t\tlogFn(\"<=\", packet.payload);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (targetFolder) {\n\t\t\t\t\tsaveToFile(`${Date.now()}-receive-${cmd}-from-${payload.sender}${opts.extension}`, payload);\n\t\t\t\t}\n\n\t\t\t\treturn next(cmd, packet);\n\t\t\t};\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst kleur = require(\"kleur\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst { makeDirs, match, isObject } = require(\"../../utils\");\n\nmodule.exports = function ActionLoggerMiddleware(opts) {\n\topts = _.defaultsDeep(opts, {\n\t\tlogger: null,\n\t\tlogLevel: \"info\",\n\t\tlogParams: false,\n\t\tlogResponse: false,\n\t\tlogMeta: false,\n\n\t\tfolder: null,\n\t\textension: \".json\",\n\n\t\tcolors: {\n\t\t\trequest: \"yellow\",\n\t\t\tresponse: \"cyan\",\n\t\t\terror: \"red\"\n\t\t},\n\t\twhitelist: [\"**\"]\n\t});\n\n\tlet logger;\n\tlet nodeID;\n\n\tlet targetFolder;\n\n\tfunction saveToFile(filename, payload) {\n\t\tconst data = JSON.stringify(payload, payload instanceof Error ? Object.getOwnPropertyNames(payload) : null, 4);\n\t\tfs.writeFile(path.join(targetFolder, filename), data, () => { /* Silent error */ });\n\t}\n\n\tfunction isWhiteListed(actionName) {\n\t\treturn !!opts.whitelist.find(pattern => match(actionName, pattern));\n\t}\n\n\tconst coloringRequest = opts.colors && opts.colors.request ? opts.colors.request.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\tconst coloringResponse = opts.colors && opts.colors.response ? opts.colors.response.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\tconst coloringError = opts.colors && opts.colors.error ? opts.colors.error.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\n\tlet logFn;\n\n\treturn {\n\t\tname: \"ActionLogger\",\n\t\tcreated(broker) {\n\t\t\tlogger = opts.logger || broker.getLogger(\"debug\");\n\t\t\tnodeID = broker.nodeID;\n\n\t\t\tif (opts.folder) {\n\t\t\t\ttargetFolder = path.join(opts.folder, nodeID);\n\t\t\t\tmakeDirs(targetFolder);\n\t\t\t}\n\n\t\t\tlogFn = opts.logLevel ? logger[opts.logLevel] : null;\n\t\t},\n\n\t\tcall(next) {\n\t\t\treturn (actionName, params, callingOpts) => {\n\t\t\t\t// Whitelist filtering\n\t\t\t\tif (!isWhiteListed(isObject(actionName) ? actionName.action.name : actionName)) {\n\t\t\t\t\treturn next(actionName, params, callingOpts);\n\t\t\t\t}\n\n\t\t\t\t// Logging to logger\n\t\t\t\tif (logFn) {\n\t\t\t\t\tconst msg = coloringRequest(`Calling '${actionName}'` + (opts.logParams ? \" with params:\" : \".\"));\n\t\t\t\t\topts.logParams ? logFn(msg, params) : logFn(msg);\n\t\t\t\t\tif (opts.logMeta && callingOpts && callingOpts.meta) {\n\t\t\t\t\t\tlogFn(\"Meta:\", callingOpts.meta);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Logging to file\n\t\t\t\tif (targetFolder) {\n\t\t\t\t\tif (opts.logParams) {\n\t\t\t\t\t\tsaveToFile(`${Date.now()}-call-${actionName}-request${opts.extension}`, params);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (opts.logMeta && callingOpts && callingOpts.meta) {\n\t\t\t\t\t\tsaveToFile(`${Date.now()}-call-${actionName}-meta${opts.extension}`, callingOpts.meta);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Call the original method\n\t\t\t\tconst p = next(actionName, params, callingOpts);\n\n\t\t\t\tconst p2 = p\n\t\t\t\t\t.then(response => {\n\n\t\t\t\t\t\t// Log response to logger\n\t\t\t\t\t\tif (logFn) {\n\t\t\t\t\t\t\tconst msg = coloringResponse(`Response for '${actionName}' is received` + (opts.logResponse ? \":\" : \".\"));\n\t\t\t\t\t\t\topts.logResponse ? logFn(msg, response) : logFn(msg);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Log response to file\n\t\t\t\t\t\tif (targetFolder && opts.logResponse)\n\t\t\t\t\t\t\tsaveToFile(`${Date.now()}-call-${actionName}-response${opts.extension}`, response);\n\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\n\t\t\t\t\t\t// Log error to logger\n\t\t\t\t\t\tif (logFn) {\n\t\t\t\t\t\t\tlogFn(coloringError(`Error for '${actionName}' is received:`), err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Logger error to file\n\t\t\t\t\t\tif (targetFolder && opts.logResponse)\n\t\t\t\t\t\t\tsaveToFile(`${Date.now()}-call-${actionName}-error${opts.extension}`, err);\n\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\n\t\t\t\t// Context issue workaround: https://github.com/moleculerjs/moleculer/issues/413\n\t\t\t\tp2.ctx = p.ctx;\n\n\t\t\t\treturn p2;\n\t\t\t};\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Middlewares = {\n\tActionHook: require(\"./action-hook\"),\n\tBulkhead: require(\"./bulkhead\"),\n\tContextTracker: require(\"./context-tracker\"),\n\tCircuitBreaker: require(\"./circuit-breaker\"),\n\tTimeout: require(\"./timeout\"),\n\tRetry: require(\"./retry\"),\n\tFallback: require(\"./fallback\"),\n\tErrorHandler: require(\"./error-handler\"),\n\tMetrics: require(\"./metrics\"),\n\tTracing: require(\"./tracing\"),\n\n\tDebounce: require(\"./debounce\"),\n\tThrottle: require(\"./throttle\"),\n\n\tHotReload: require(\"./hot-reload\"),\n\n\tTransmit: {\n\t\tEncryption: require(\"./transmit/encryption\"),\n\t\tCompression: require(\"./transmit/compression\")\n\t},\n\n\tDebugging: {\n\t\tTransitLogger: require(\"./debugging/transit-logger\"),\n\t\tActionLogger: require(\"./debugging/action-logger\"),\n\t}\n};\n\nmodule.exports = Middlewares;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = function debounceMiddleware(broker) {\n\n\tfunction wrapEventDebounceMiddleware(handler, event) {\n\t\tif (event.debounce > 0) {\n\t\t\tlet timer;\n\n\t\t\treturn function debounceMiddleware(ctx) {\n\t\t\t\tif (timer)\n\t\t\t\t\tclearTimeout(timer);\n\n\t\t\t\ttimer = setTimeout(() => {\n\t\t\t\t\ttimer = null;\n\t\t\t\t\treturn handler(ctx);\n\t\t\t\t}, event.debounce);\n\n\t\t\t\treturn broker.Promise.resolve();\n\t\t\t}.bind(this);\n\t\t}\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"Debounce\",\n\n\t\tlocalEvent: wrapEventDebounceMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = function throttleMiddleware(broker) {\n\n\tfunction wrapEventThrottleMiddleware(handler, event) {\n\t\tif (event.throttle > 0) {\n\t\t\tlet lastInvoke = 0;\n\n\t\t\treturn function throttleMiddleware(ctx) {\n\t\t\t\tconst now = Date.now();\n\t\t\t\tif (now - lastInvoke < event.throttle) {\n\t\t\t\t\treturn broker.Promise.resolve();\n\t\t\t\t}\n\t\t\t\tlastInvoke = now;\n\t\t\t\treturn handler(ctx);\n\t\t\t}.bind(this);\n\t\t}\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"Throttle\",\n\n\t\tlocalEvent: wrapEventThrottleMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst crypto = require(\"crypto\");\n\n/**\n * This is a AES encryption middleware to protect the whole\n * Moleculer transporter communication with AES.\n *\n * @param {String|Buffer} password\n * @param {String?} algorithm\n * @param {String|Buffer?} iv\n */\nmodule.exports = function EncryptionMiddleware(password, algorithm = \"aes-256-cbc\", iv) {\n\tif (!password || password.length == 0) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Must be set a password for encryption\");\n\t}\n\n\treturn {\n\t\tname: \"Encryption\",\n\n\t\tcreated() {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.logger.info(`The transmission is ENCRYPTED by '${algorithm}'.`);\n\t\t},\n\n\t\ttransporterSend(next) {\n\t\t\treturn (topic, data, meta) => {\n\t\t\t\tconst encrypter = iv ? crypto.createCipheriv(algorithm, password, iv) : crypto.createCipher(algorithm, password);\n\t\t\t\tconst res = Buffer.concat([encrypter.update(data), encrypter.final()]);\n\t\t\t\treturn next(topic, res, meta);\n\t\t\t};\n\t\t},\n\n\t\ttransporterReceive(next) {\n\t\t\treturn (cmd, data, s) => {\n\t\t\t\tconst decrypter = iv ? crypto.createDecipheriv(algorithm, password, iv) : crypto.createDecipher(algorithm, password);\n\t\t\t\tconst res = Buffer.concat([decrypter.update(data), decrypter.final()]);\n\t\t\t\treturn next(cmd, res, s);\n\t\t\t};\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst Middlewares \t= require(\"./middlewares\");\nconst { BrokerOptionsError } = require(\"./errors\");\nconst { isObject, isFunction, isString }\t= require(\"./utils\");\n\nclass MiddlewareHandler {\n\n\tconstructor(broker) {\n\t\tthis.broker = broker;\n\n\t\tthis.list = [];\n\n\t\tthis.registeredHooks = {};\n\t}\n\n\tadd(mw) {\n\t\tif (!mw) return;\n\n\t\tif (isString(mw)) {\n\t\t\tconst found = _.get(Middlewares, mw);\n\t\t\tif (!found)\n\t\t\t\tthrow new BrokerOptionsError(`Invalid built-in middleware type '${mw}'.`, { type: mw });\n\t\t\tmw = found;\n\t\t}\n\n\t\tif (isFunction(mw))\n\t\t\tmw = mw.call(this.broker, this.broker);\n\n\t\tif (!isObject(mw))\n\t\t\tthrow new BrokerOptionsError(`Invalid middleware type '${typeof mw}'. Accepted only Object of Function.`, { type: typeof mw });\n\n\t\tObject.keys(mw).forEach(key => {\n\t\t\tif (isFunction(mw[key])) {\n\t\t\t\tif (Array.isArray(this.registeredHooks[key]))\n\t\t\t\t\tthis.registeredHooks[key].push(mw[key]);\n\t\t\t\telse\n\t\t\t\t\tthis.registeredHooks[key] = [mw[key]];\n\t\t\t}\n\t\t});\n\n\t\tthis.list.push(mw);\n\t}\n\n\t/**\n\t * Wrap a handler\n\t *\n\t * @param {string} method\n\t * @param {Function} handler\n\t * @param {Object} def\n\t * @returns {Function}\n\t * @memberof MiddlewareHandler\n\t */\n\twrapHandler(method, handler, def) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\thandler = this.registeredHooks[method].reduce((handler, fn) => {\n\t\t\t\treturn fn.call(this.broker, handler, def);\n\t\t\t}, handler);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\t/**\n\t * Call a handler asynchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns {Promise}\n\t * @memberof MiddlewareHandler\n\t */\n\tcallHandlers(method, args, opts = {}) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\tconst list = opts.reverse ? Array.from(this.registeredHooks[method]).reverse() : this.registeredHooks[method];\n\t\t\treturn list.reduce((p, fn) => p.then(() => fn.apply(this.broker, args)), this.broker.Promise.resolve());\n\t\t}\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Call a handler synchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns {Array<any}\n\t * @memberof MiddlewareHandler\n\t */\n\tcallSyncHandlers(method, args, opts = {}) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\tconst list = opts.reverse ? Array.from(this.registeredHooks[method]).reverse() : this.registeredHooks[method];\n\t\t\treturn list.map(fn => fn.apply(this.broker, args));\n\t\t}\n\t\treturn;\n\t}\n\n\t/**\n\t * Get count of registered middlewares\n\t *\n\t * @returns {Number}\n\t * @memberof MiddlewareHandler\n\t */\n\tcount() {\n\t\treturn this.list.length;\n\t}\n\n\t/**\n\t * Wrap a method\n\t *\n\t * @param {string} method\n\t * @param {Function} handler\n\t * @param {any} bindTo\n\t * @param {Object} opts\n\t * @returns {Function}\n\t * @memberof MiddlewareHandler\n\t */\n\twrapMethod(method, handler, bindTo = this.broker, opts = {}) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\tconst list = opts.reverse ? Array.from(this.registeredHooks[method]).reverse() : this.registeredHooks[method];\n\t\t\thandler = list.reduce((next, fn) => fn.call(bindTo, next), handler.bind(bindTo));\n\t\t}\n\n\t\treturn handler;\n\t}\n\n}\n\nmodule.exports = MiddlewareHandler;\n\n/*\n{\n    // After broker is created\n    created(broker) {\n\t\treturn;\n    },\n\n    // Wrap local action handlers (legacy middleware handler)\n    localAction(next, action) {\n\t\treturn ctx => {\n\t\t\treturn next(ctx);\n\t\t};\n    },\n\n    // Wrap remote action handlers\n    remoteAction(next, action) {\n\t\treturn ctx => {\n\t\t\treturn next(ctx);\n\t\t};\n    },\n\n\t// Wrap local event handlers\n\tlocalEvent(next, event) {\n\t\treturn (payload, sender, event) => {\n\t\t\treturn next(payload, sender, event);\n\t\t};\n\t},\n\n    // Wrap local method handlers\n    localMethod(next, method) {\n\t\treturn () => {\n\t\t\treturn next(...arguments);\n\t\t};\n\t},\n\n\t// Wrap broker.createService method\n\tcreateService(next) {\n\t\treturn (schema, schemaMods) => {\n\t\t\treturn next(schema, schemaMods);\n\t\t};\n\t},\n\n\t// Wrap broker.registerLocalService method\n\tregisterLocalService(next) {\n\t\treturn (svc) => {\n\t\t\treturn next(svc);\n\t\t};\n\t},\n\n\t// Wrap broker.destroyService method\n\tdestroyService(next) {\n\t\treturn (svc) => {\n\t\t\treturn next(svc);\n\t\t};\n\t},\n\n\t// Wrap broker.call method\n\tcall(next) {\n\t\treturn (actionName, params, opts) => {\n\t\t\treturn next(actionName, params, opts);\n\t\t};\n\t},\n\n\t// Wrap broker.mcall method\n\tmcall(next) {\n\t\treturn (def) => {\n\t\t\treturn next(def);\n\t\t};\n\t},\n\n    // Wrap broker.emit method\n    emit(next) {\n\t\treturn (event, payload) => {\n\t\t\treturn next(event, payload);\n\t\t};\n    },\n\n    // Wrap broker.broadcast method\n    broadcast(next) {\n\t\treturn (event, payload) => {\n\t\t\treturn next(event, payload);\n\t\t};\n    },\n\n    // Wrap broker.broadcastLocal method\n    broadcastLocal(next) {\n\t\treturn (event, payload) => {\n\t\t\treturn next(event, payload);\n\t\t};\n    },\n\n\t// While a new local service creating (after mixins are mixed)\n\tserviceCreating(service, schema) {\n\t\treturn;\n\t},\n\n\t// After a new local service created\n\tserviceCreated(service) {\n\t\treturn;\n\t},\n\n\t// Before a local service started\n\tserviceStarting(service) {\n\t\treturn Promise.resolve();\n\t},\n\n\t// After a local service started\n\tserviceStarted(service) {\n\t\treturn Promise.resolve();\n\t},\n\n\t// Before a local service stopping\n\tserviceStopping(service) {\n\t\treturn Promise.resolve();\n\t},\n\n\t// After a local service stopped\n\tserviceStopped(service) {\n\t\treturn Promise.resolve();\n\t},\n\n    // Before broker starting\n    starting(broker) {\n\t\treturn Promise.resolve();\n    },\n\n    // After broker started\n    started(broker) {\n\t\treturn Promise.resolve();\n    },\n\n    // Before broker stopping\n    stopping(broker) {\n\t\treturn Promise.resolve();\n    },\n\n    // After broker stopped\n    stopped(broker) {\n\t\treturn Promise.resolve();\n    },\n\n\t// When transit publishing a packet\n\ttransitPublish(next) {\n\t\treturn (packet) => {\n\t\t\treturn next(packet);\n\t\t};\n\t},\n\n\t// When transit receives & handles a packet\n\ttransitMessageHandler(next) {\n\t\treturn (cmd, packet) => {\n\t\t\treturn next(cmd, packet);\n\t\t};\n\t},\n\n\t// When transporter send data\n\ttransporterSend(next) {\n\t\treturn (topic, data, meta) => {\n\t\t\treturn next(topic, data, meta);\n\t\t};\n\t},\n\n\t// When transporter received data\n\ttransporterReceive(next) {\n\t\treturn (cmd, data, s) => {\n\t\t\treturn next(cmd, data, s);\n\t\t};\n\t},\n\n\t// When transporter received data\n\tnewLogEntry(type, args, bindings) {\n\t\t// Do something\n\t}\n}\n\n*/\n","\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isObject } = require(\"../../utils\");\n\n/**\n * Abstract Trace Exporter\n *\n * @class BaseTraceExporter\n */\nclass BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of BaseTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof BaseTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = opts || {};\n\t\tthis.Promise = Promise; // default promise before logger is initialized\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof BaseTraceExporter\n\t */\n\tinit(tracer) {\n\t\tthis.tracer = tracer;\n\t\tthis.broker = tracer.broker;\n\t\tthis.Promise = this.broker.Promise;\n\t\tthis.logger = this.opts.logger || this.tracer.logger;\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanStarted(/*span*/) {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanFinished(/*span*/) {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Flattening tags to one-level object.\n\t * E.g.\n\t *  **From:**\n\t * \t```js\n\t * \t{\n\t * \t\terror: {\n\t * \t\t\tname: \"MoleculerError\"\n\t * \t\t}\n\t * \t}\n\t *  ```\n\t *\n\t * \t**To:**\n\t * \t```js\n\t *  {\n\t * \t\t\"error.name\": \"MoleculerError\"\n\t *  }\n\t *  ```\n\t *\n\t * @param {Object} obj\n\t * @param {boolean} [convertToString=false]\n\t * @param {string} [path=\"\"]\n\t * @returns {Object}\n\t * @memberof BaseTraceExporter\n\t */\n\tflattenTags(obj, convertToString = false, path = \"\") {\n\t\tif (!obj) return null;\n\n\t\treturn Object.keys(obj).reduce((res, k) => {\n\t\t\tconst o = obj[k];\n\t\t\tconst pp = (path ? path + \".\" : \"\") + k;\n\n\t\t\tif (isObject(o))\n\t\t\t\tObject.assign(res, this.flattenTags(o, convertToString, pp));\n\t\t\telse if (o !== undefined) {\n\t\t\t\tres[pp] = convertToString ? String(o) : o;\n\t\t\t}\n\n\t\t\treturn res;\n\t\t}, {});\n\t}\n\n\t/**\n\t * Convert Error to POJO.\n\t *\n\t * @param {Error} err\n\t * @returns {Object}\n\t * @memberof BaseTraceExporter\n\t */\n\terrorToObject(err) {\n\t\tif (!err) return null;\n\n\t\treturn _.pick(err, this.tracer.opts.errorFields);\n\t}\n}\n\nmodule.exports = BaseTraceExporter;\n","\"use strict\";\n\nconst _ \t\t\t\t\t\t= require(\"lodash\");\nconst r \t\t\t\t\t\t= _.repeat;\nconst kleur \t\t\t\t\t= require(\"kleur\");\nconst { humanize, isFunction }  = require(\"../../utils\");\n\nconst BaseTraceExporter = require(\"./base\");\n\n/**\n * Console Trace Exporter only for debugging\n *\n * @class ConsoleTraceExporter\n */\nclass ConsoleTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of ConsoleTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof ConsoleTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\tlogger: null,\n\t\t\tcolors: true,\n\t\t\twidth: 100,\n\t\t\tgaugeWidth: 40\n\t\t});\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\n\t\tthis.spans = {};\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof ConsoleTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tthis.spans = {};\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof ConsoleTraceExporter\n\t */\n\tspanStarted(span) {\n\t\tthis.spans[span.id] = {\n\t\t\tspan,\n\t\t\tchildren: []\n\t\t};\n\n\t\tif (span.parentID) {\n\t\t\tconst parentItem = this.spans[span.parentID];\n\t\t\tif (parentItem)\n\t\t\t\tparentItem.children.push(span.id);\n\t\t}\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof ConsoleTraceExporter\n\t */\n\tspanFinished(span) {\n\t\t//this.log(span);\n\t\tif (!this.spans[span.parentID]) {\n\t\t\tthis.printRequest(span.id);\n\n\t\t\t// remove old printed requests\n\t\t\tthis.removeSpanWithChildren(span.id);\n\t\t}\n\t}\n\n\t/**\n\t * Remove a finished span with children.\n\t *\n\t * @param {String} spanID\n\t * @memberof ConsoleTraceExporter\n\t */\n\tremoveSpanWithChildren(spanID) {\n\t\tconst span = this.spans[spanID];\n\t\tif (span) {\n\t\t\tif (span.children && span.children.length > 0) {\n\t\t\t\tspan.children.forEach(child => this.removeSpanWithChildren(child));\n\t\t\t}\n\t\t\tdelete this.spans[spanID];\n\t\t}\n\t}\n\n\tdrawTableTop() {\n\t\tthis.log(kleur.grey(\"┌\" + r(\"─\", this.opts.width - 2) + \"┐\"));\n\t}\n\n\tdrawHorizonalLine() {\n\t\tthis.log(kleur.grey(\"├\" + r(\"─\", this.opts.width - 2) + \"┤\"));\n\t}\n\n\tdrawLine(text) {\n\t\tthis.log(kleur.grey(\"│ \") + text + kleur.grey(\" │\"));\n\t}\n\n\tdrawTableBottom() {\n\t\tthis.log(kleur.grey(\"└\" + r(\"─\", this.opts.width - 2) + \"┘\"));\n\t}\n\n\tgetAlignedTexts(str, space) {\n\t\tconst len = str.length;\n\n\t\tlet left;\n\t\tif (len <= space)\n\t\t\tleft = str + r(\" \", space - len);\n\t\telse {\n\t\t\tleft = str.slice(0, Math.max(space - 3, 0));\n\t\t\tleft += r(\".\", Math.min(3, space));\n\t\t}\n\n\t\treturn left;\n\t}\n\n\tdrawGauge(gstart, gstop) {\n\t\tconst gw = this.opts.gaugeWidth;\n\t\tconst p1 = Math.floor(gw * gstart / 100);\n\t\tconst p2 = Math.max(Math.floor(gw * gstop / 100) - p1, 1);\n\t\tconst p3 = Math.max(gw - (p1 + p2), 0);\n\n\t\treturn [\n\t\t\tkleur.grey(\"[\"),\n\t\t\tkleur.grey(r(\".\", p1)),\n\t\t\tr(\"■\", p2),\n\t\t\tkleur.grey(r(\".\", p3)),\n\t\t\tkleur.grey(\"]\")\n\t\t].join(\"\");\n\t}\n\n\tgetCaption(span) {\n\t\tlet caption = span.name;\n\n\t\tif (span.tags.fromCache)\n\t\t\tcaption += \" *\";\n\t\tif (span.tags.remoteCall)\n\t\t\tcaption += \" »\";\n\t\tif (span.error)\n\t\t\tcaption += \" ×\";\n\n\t\treturn caption;\n\t}\n\n\tgetColor(span) {\n\t\tlet c = kleur.bold;\n\t\tif (span.tags.fromCache)\n\t\t\tc = c().yellow;\n\t\tif (span.tags.remoteCall)\n\t\t\tc = c().cyan;\n\t\tif (span.duration == null)\n\t\t\tc = c().grey;\n\t\tif (span.error)\n\t\t\tc = c().red;\n\n\t\treturn c;\n\t}\n\n\tgetTraceInfo(main) {\n\t\tlet depth = 0;\n\t\tlet total = 0;\n\t\tlet check = (item, level, parents) => {\n\t\t\titem.level = level;\n\t\t\titem.parents = parents || [];\n\t\t\ttotal++;\n\t\t\tif (level > depth)\n\t\t\t\tdepth = level;\n\n\t\t\tif (item.children.length > 0) {\n\t\t\t\titem.children.forEach((spanID, idx) => {\n\t\t\t\t\tconst span = this.spans[spanID];\n\t\t\t\t\tspan.first = idx == 0;\n\t\t\t\t\tspan.last = idx == item.children.length - 1;\n\t\t\t\t\tcheck(span, item.level + 1, [].concat(item.parents, [item]));\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcheck(main, 1);\n\n\t\treturn { depth, total };\n\t}\n\n\tgetSpanIndent(spanItem) {\n\t\tif (spanItem.level > 1) {\n\t\t\tlet s = spanItem.parents.map((item, idx) => {\n\t\t\t\tif (idx > 0)\n\t\t\t\t\treturn item.last ? \"  \" : \"│ \";\n\n\t\t\t\treturn \"\";\n\t\t\t}).join(\"\");\n\n\t\t\ts += spanItem.last ? \"└─\" : \"├─\";\n\n\t\t\treturn s + (spanItem.children.length > 0 ? \"┬─\" : \"──\") + \" \";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Print a span row\n\t *\n\t * @param {Object} span\n\t * @param {Object} main\n\t */\n\tprintSpanTime(spanItem, mainItem, level) {\n\t\tconst span = spanItem.span;\n\t\tconst mainSpan = mainItem.span;\n\t\tconst margin = 2 * 2;\n\t\tconst w = (this.opts.width || 80) - margin;\n\t\tconst gw = this.opts.gaugeWidth || 40;\n\n\t\tconst time = span.duration == null ? \"?\" : humanize(span.duration);\n\t\tconst indent = this.getSpanIndent(spanItem);\n\t\tconst caption = this.getCaption(span);\n\t\tconst info = kleur.grey(indent) + this.getAlignedTexts(caption, w - gw - 3 - time.length - 1 - indent.length) + \" \" + time;\n\n\t\tconst startTime = span.startTime || mainSpan.startTime;\n\t\tconst finishTime = span.finishTime || mainSpan.finishTime;\n\n\t\tlet gstart = (startTime - mainSpan.startTime) / (mainSpan.finishTime - mainSpan.startTime) * 100;\n\t\tlet gstop = (finishTime - mainSpan.startTime) / (mainSpan.finishTime - mainSpan.startTime) * 100;\n\n\t\tif (Number.isNaN(gstart) && Number.isNaN(gstop)) {\n\t\t\tgstart = 0;\n\t\t\tgstop = 100;\n\t\t}\n\t\tif (gstop > 100)\n\t\t\tgstop = 100;\n\n\t\tconst c = this.getColor(span);\n\t\tthis.drawLine(c(info + \" \" + this.drawGauge(gstart, gstop)));\n\n\t\tif (spanItem.children.length > 0)\n\t\t\tspanItem.children.forEach((spanID, idx) =>\n\t\t\t\tthis.printSpanTime(this.spans[spanID], mainItem, level + 1, spanItem, {\n\t\t\t\t\tfirst: idx == 0,\n\t\t\t\t\tlast: idx == spanItem.children.length - 1\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\t/**\n\t * Print request traces\n\t *\n\t * @param {String} id\n\t */\n\tprintRequest(id) {\n\t\tconst main = this.spans[id];\n\t\tif (!main) return ; // Async span\n\n\t\tconst margin = 2 * 2;\n\t\tconst w = this.opts.width - margin;\n\n\t\tthis.drawTableTop();\n\n\t\tconst { total, depth } = this.getTraceInfo(main);\n\n\t\tconst truncatedID = this.getAlignedTexts(id, w - \"ID: \".length - \"Depth: \".length - (\"\"+depth).length - \"Total: \".length - (\"\"+total).length - 2);\n\t\tconst line = kleur.grey(\"ID: \") + kleur.bold(truncatedID) + \" \" + kleur.grey(\"Depth: \") + kleur.bold(depth) + \" \" + kleur.grey(\"Total: \") + kleur.bold(total);\n\t\tthis.drawLine(line);\n\n\t\tthis.drawHorizonalLine();\n\n\t\tthis.printSpanTime(main, main, 1, null, {});\n\n\t\tthis.drawTableBottom();\n\t}\n\n\tlog(...args) {\n\t\tif (isFunction(this.opts.logger)) {\n\t\t\treturn this.opts.logger(...args);\n\t\t} else {\n\t\t\treturn this.logger.info(...args);\n\t\t}\n\t}\n}\n\nmodule.exports = ConsoleTraceExporter;\n","\"use strict\";\n\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst BaseTraceExporter \t= require(\"./base\");\nconst { isFunction } \t\t= require(\"../../utils\");\n\n/**\n * Event Trace Exporter.\n *\n * @class EventTraceExporter\n */\nclass EventTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of EventTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof EventTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\t/** @type {String} Base URL for Zipkin server. */\n\t\t\teventName: \"$tracing.spans\",\n\n\t\t\tsendStartSpan: false,\n\t\t\tsendFinishSpan: true,\n\n\t\t\tbroadcast: false,\n\n\t\t\tgroups: null,\n\n\t\t\t/** @type {Number} Batch send time interval. */\n\t\t\tinterval: 5,\n\n\t\t\tspanConverter: null,\n\n\t\t\t/** @type {Object?} Default span tags */\n\t\t\tdefaultTags: null\n\t\t});\n\n\t\tthis.queue = [];\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof EventTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.flush(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\n\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, tracer) : this.opts.defaultTags;\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = null;\n\t\t}\n\t\treturn this.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanStarted(span) {\n\t\tif (this.opts.sendStartSpan) {\n\t\t\tthis.queue.push(span);\n\t\t\tif (!this.timer)\n\t\t\t\tthis.flush();\n\t\t}\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof EventTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tif (this.opts.sendFinishSpan) {\n\t\t\tthis.queue.push(span);\n\t\t\tif (!this.timer)\n\t\t\t\tthis.flush();\n\t\t}\n\t}\n\n\t/**\n\t * Flush tracing data to Datadog server\n\t *\n\t * @memberof EventTraceExporter\n\t */\n\tflush() {\n\t\tif (this.queue.length == 0) return;\n\n\t\tconst data = this.generateTracingData();\n\t\tthis.queue.length = 0;\n\n\t\tif (this.opts.broadcast) {\n\t\t\tthis.logger.debug(`Send tracing spans (${data.length} spans) broadcast events.`);\n\t\t\tthis.broker.broadcast(this.opts.eventName, data, { groups: this.opts.groups });\n\t\t} else {\n\t\t\tthis.logger.debug(`Send tracing spans (${data.length} spans) events.`);\n\t\t\tthis.broker.emit(this.opts.eventName, data, { groups: this.opts.groups });\n\t\t}\n\t}\n\n\t/**\n\t * Generate tracing data with custom converter\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof EventTraceExporter\n\t */\n\tgenerateTracingData() {\n\t\tif (isFunction(this.opts.spanConverter))\n\t\t\treturn this.queue.map(span => this.opts.spanConverter.call(this, span));\n\n\t\treturn Array.from(this.queue).map(span => {\n\t\t\tconst newSpan = Object.assign({}, span);\n\t\t\tif (newSpan.error)\n\t\t\t\tnewSpan.error = this.errorToObject(span.error);\n\n\t\t\treturn newSpan;\n\t\t});\n\t}\n\n}\n\nmodule.exports = EventTraceExporter;\n","\"use strict\";\n\nconst _ \t\t\t\t\t\t= require(\"lodash\");\nconst BaseTraceExporter \t\t= require(\"./base\");\nconst { isObject, isFunction }\t= require(\"../../utils\");\n\n/**\n * Event Trace Exporter. It sends same trace events as in Moleculer <= v0.13.\n *\n * @class EventLegacyTraceExporter\n */\nclass EventLegacyTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of EventLegacyTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof EventLegacyTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t});\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof EventLegacyTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\t\tthis.broker = tracer.broker;\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanStarted(span) {\n\t\tconst payload = this.generateMetricPayload(span);\n\t\tthis.broker.emit(\"metrics.trace.span.start\", payload);\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof EventLegacyTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tconst payload = this.generateMetricPayload(span);\n\t\tthis.broker.emit(\"metrics.trace.span.finish\", payload);\n\t}\n\n\t/**\n\t * Generate metrics payload\n\t *\n\t * @param {Context} ctx\n\t * @returns {Object}\n\t */\n\tgenerateMetricPayload(span) {\n\t\tlet payload = {\n\t\t\tid: span.id,\n\t\t\trequestID: span.traceID,\n\t\t\tlevel: span.tags.callingLevel,\n\t\t\tstartTime: span.startTime,\n\t\t\tremoteCall: span.tags.remoteCall\n\t\t};\n\n\t\t// Process extra metrics\n\t\tif (span.opts.ctx)\n\t\t\tthis.processExtraMetrics(span.opts.ctx, payload);\n\n\t\tpayload.action = span.tags.action;\n\t\tpayload.service = span.service;\n\n\t\tif (span.parentID)\n\t\t\tpayload.parent = span.parentID;\n\n\t\tpayload.nodeID = this.broker.nodeID;\n\t\tif (payload.remoteCall)\n\t\t\tpayload.callerNodeID = span.tags.callerNodeID;\n\n\t\tif (span.finishTime) {\n\t\t\tpayload.endTime = span.finishTime;\n\t\t\tpayload.duration = span.duration;\n\t\t\tpayload.fromCache = span.tags.fromCache;\n\n\t\t\tif (span.error) {\n\t\t\t\tpayload.error = this.errorToObject(span.error);\n\t\t\t}\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * Assign extra metrics taking into account action definitions\n\t *\n\t * @param {Context} ctx\n\t * @param {string} name Field of the context to be assigned.\n\t * @param {any} payload Object for assignment.\n\t *\n\t * @private\n\t */\n\tassignExtraMetrics(ctx, name, payload) {\n\t\tlet def = ctx.action.metrics[name];\n\t\t// if metrics definitions is boolean do default, metrics=true\n\t\tif (def === true) {\n\t\t\tpayload[name] = ctx[name];\n\t\t} else if (Array.isArray(def)) {\n\t\t\tpayload[name] = _.pick(ctx[name], def);\n\t\t} else if (isFunction(def)) {\n\t\t\tpayload[name] = def(ctx[name]);\n\t\t}\n\t}\n\n\t/**\n\t * Decide and process extra metrics taking into account action definitions\n\t *\n\t * @param {Context} ctx\n\t * @param {any} payload Object for assignment.\n\t *\n\t * @private\n\t */\n\tprocessExtraMetrics(ctx, payload) {\n\t\t// extra metrics (params and meta)\n\t\tif (isObject(ctx.action.metrics)) {\n\t\t\t// custom metrics def\n\t\t\tthis.assignExtraMetrics(ctx, \"params\", payload);\n\t\t\tthis.assignExtraMetrics(ctx, \"meta\", payload);\n\t\t}\n\t}\n\n\n}\n\nmodule.exports = EventLegacyTraceExporter;\n","/* global self */\n\nconst scope = (typeof global !== 'undefined' && global) ||\n            (typeof self !== 'undefined' && self) ||\n            window\n\nexport default (...args) => scope.fetch(...args)\n","\"use strict\";\n\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst fetch \t\t\t\t= require(\"node-fetch\");\nconst BaseTraceExporter \t= require(\"./base\");\nconst { isFunction } \t\t= require(\"../../utils\");\n\n/**\n * Trace Exporter for Zipkin.\n *\n * API v2: https://zipkin.io/zipkin-api/#/\n * API v1: https://zipkin.io/pages/data_model.html\n *\n * Running Zipkin in Docker:\n *\n * \t docker run -d -p 9411:9411 --name=zipkin openzipkin/zipkin\n *\n * @class ZipkinTraceExporter\n */\nclass ZipkinTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of ZipkinTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof ZipkinTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\t/** @type {String} Base URL for Zipkin server. */\n\t\t\tbaseURL: process.env.ZIPKIN_URL || \"http://localhost:9411\",\n\n\t\t\t/** @type {String} Zipkin REST API version. */\n\t\t\t//version: \"v2\",\n\n\t\t\t/** @type {Number} Batch send time interval in seconds. */\n\t\t\tinterval: 5,\n\n\t\t\t/** @type {Object} Additional payload options. */\n\t\t\tpayloadOptions: {\n\n\t\t\t\t/** @type {Boolean} Set `debug` property in v2 payload. */\n\t\t\t\tdebug: false,\n\n\t\t\t\t/** @type {Boolean} Set `shared` property in v2 payload. */\n\t\t\t\tshared: false\n\t\t\t},\n\n\t\t\t/** @type {Object?} Default span tags */\n\t\t\tdefaultTags: null\n\t\t});\n\n\t\tthis.queue = [];\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof ZipkinTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\n\t\tfetch.Promise = this.broker.Promise;\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.flush(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\n\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, tracer) : this.opts.defaultTags;\n\t\tif (this.defaultTags) {\n\t\t\tthis.defaultTags = this.flattenTags(this.defaultTags, true);\n\t\t}\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = null;\n\t\t}\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof ZipkinTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tthis.queue.push(span);\n\t}\n\n\t/**\n\t * Flush tracing data to Datadog server\n\t *\n\t * @memberof ZipkinTraceExporter\n\t */\n\tflush() {\n\t\tif (this.queue.length == 0) return;\n\n\t\tconst data = this.generateTracingData();\n\t\tthis.queue.length = 0;\n\n\t\tfetch(`${this.opts.baseURL}/api/v2/spans`, {\n\t\t\tmethod: \"post\",\n\t\t\tbody: JSON.stringify(data),\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t}\n\t\t}).then(res => {\n\t\t\tif (res.status >= 400) {\n\t\t\t\tthis.logger.warn(`Unable to upload tracing spans to Zipkin. Status: ${res.status} ${res.statusText}`);\n\t\t\t} else {\n\t\t\t\tthis.logger.debug(`Tracing spans (${data.length} spans) are uploaded to Zipkin. Status: ${res.statusText}`);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.logger.warn(\"Unable to upload tracing spans to Zipkin. Error:\" + err.message, err);\n\t\t});\n\t}\n\n\t/**\n\t * Generate tracing data for Zipkin\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof ZipkinTraceExporter\n\t */\n\tgenerateTracingData() {\n\t\treturn this.queue.map(span => this.makePayload(span));\n\t}\n\n\t/**\n\t * Create Zipkin v2 payload from metric event\n\t *\n\t * @param {Span} span\n\t * @returns {Object}\n\t */\n\tmakePayload(span) {\n\t\tconst serviceName = span.service ? span.service.fullName : null;\n\t\tconst payload = {\n\t\t\tname: span.name,\n\t\t\tkind: \"SERVER\",\n\n\t\t\t// Trace & span IDs\n\t\t\ttraceId: this.convertID(span.traceID),\n\t\t\tid: this.convertID(span.id),\n\t\t\tparentId: this.convertID(span.parentID),\n\n\t\t\tlocalEndpoint: { serviceName },\n\t\t\tremoteEndpoint: { serviceName },\n\n\t\t\tannotations: [],\n\n\t\t\ttimestamp: this.convertTime(span.startTime),\n\t\t\tduration: this.convertTime(span.duration),\n\n\t\t\ttags: {\n\t\t\t\tservice: serviceName,\n\t\t\t\t\"span.type\": span.type,\n\t\t\t},\n\n\t\t\tdebug: this.opts.payloadOptions.debug,\n\t\t\tshared: this.opts.payloadOptions.shared\n\t\t};\n\n\t\tif (span.error) {\n\t\t\tpayload.tags[\"error\"] = span.error.message;\n\n\t\t\tpayload.annotations.push({\n\t\t\t\tvalue: \"error\",\n\t\t\t\tendpoint: { serviceName: serviceName, ipv4: \"\", port: 0 },\n\t\t\t\ttimestamp: this.convertTime(span.finishTime)\n\t\t\t});\n\t\t}\n\n\t\tObject.assign(\n\t\t\tpayload.tags,\n\t\t\tthis.defaultTags || {},\n\t\t\tthis.flattenTags(span.tags, true),\n\t\t\tthis.flattenTags(this.errorToObject(span.error), true, \"error\") || {}\n\t\t);\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * Convert Context ID to Zipkin format\n\t *\n\t * @param {String} id\n\t * @returns {String}\n\t */\n\tconvertID(id) {\n\t\treturn id ? id.replace(/-/g, \"\").substring(0, 16) : null;\n\t}\n\n\t/**\n\t * Convert JS timestamp to microseconds\n\t *\n\t * @param {Number} ts\n\t * @returns {Number}\n\t */\n\tconvertTime(ts) {\n\t\treturn ts != null ? Math.round(ts * 1000) : null;\n\t}\n\n}\n\nmodule.exports = ZipkinTraceExporter;\n","\"use strict\";\n\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst fetch \t\t\t\t= require(\"node-fetch\");\nconst BaseTraceExporter \t= require(\"./base\");\nconst { isFunction } \t\t= require(\"../../utils\");\n\n/**\n * Trace Exporter for NewRelic using Zipkin data.\n *\n * NewRelic zipkin tracer: https://docs.newrelic.com/docs/understand-dependencies/distributed-tracing/trace-api/report-zipkin-format-traces-trace-api\n * API v2: https://zipkin.io/zipkin-api/#/\n *\n * @class NewRelicTraceExporter\n */\nclass NewRelicTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of NewRelicTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof NewRelicTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\t/** @type {String} Base URL for NewRelic server. */\n\t\t\tbaseURL:\n\t\t\tprocess.env.NEW_RELIC_TRACE_API_URL || \"https://trace-api.newrelic.com\",\n\n\t\t  /** @type {String} NewRelic Insert API Key */\n\t\t  insertKey: \"\",\n\n\t\t  /** @type {Number} Batch send time interval in seconds. */\n\t\t  interval: 5,\n\n\t\t  /** @type {Object} Additional payload options. */\n\t\t  payloadOptions: {\n\t\t\t/** @type {Boolean} Set `debug` property in v2 payload. */\n\t\t\t\tdebug: false,\n\n\t\t\t\t/** @type {Boolean} Set `shared` property in v2 payload. */\n\t\t\t\tshared: false,\n\t\t  },\n\n\t\t  /** @type {Object?} Default span tags */\n\t\t  defaultTags: null,\n\t\t});\n\n\t\tthis.queue = [];\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof NewRelicTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\n\t\tfetch.Promise = this.broker.Promise;\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.flush(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\n\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, tracer) : this.opts.defaultTags;\n\t\tif (this.defaultTags) {\n\t\t\tthis.defaultTags = this.flattenTags(this.defaultTags, true);\n\t\t}\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = null;\n\t\t}\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof NewRelicTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tthis.queue.push(span);\n\t}\n\n\t/**\n\t * Flush tracing data to NewRelic Zipkin api endpoint\n\t *\n\t * @memberof NewRelicTraceExporter\n\t */\n\tflush() {\n\t\tif (this.queue.length == 0) return;\n\n\t\tconst data = this.generateTracingData();\n\t\tthis.queue.length = 0;\n\n\t\tfetch(`${this.opts.baseURL}/trace/v1`,\n\t\t\t{\n\t\t\t\tmethod: \"post\",\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"Api-Key\": this.opts.insertKey,\n \t\t\t\t\"Data-Format\": \"zipkin\",\n \t\t\t\t\"Data-Format-Version\": \"2\"\n\t\t\t\t}\n\t\t\t}).then(res => {\n\t\t\tif (res.status >= 400) {\n\t\t\t\tthis.logger.warn(`Unable to upload tracing spans to NewRelic. Status: ${res.status} ${res.statusText}`);\n\t\t\t} else {\n\t\t\t\tthis.logger.debug(`Tracing spans (${data.length} spans) uploaded to NewRelic. Status: ${res.statusText}`);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.logger.warn(\"Unable to upload tracing spans to NewRelic. Error:\" + err.message, err);\n\t\t});\n\t}\n\n\t/**\n\t * Generate tracing data for NewRelic\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof NewRelicTraceExporter\n\t */\n\tgenerateTracingData() {\n\t\treturn this.queue.map(span => this.makePayload(span));\n\t}\n\n\t/**\n\t * Create Zipkin v2 payload from metric event\n\t *\n\t * @param {Span} span\n\t * @returns {Object}\n\t */\n\tmakePayload(span) {\n\t\tconst serviceName = span.service ? span.service.fullName : null;\n\t\tconst payload = {\n\t\t\tname: span.name,\n\t\t\tkind: \"CONSUMER\",\n\n\t\t\t// Trace & span IDs\n\t\t\ttraceId: this.convertID(span.traceID),\n\t\t\tid: this.convertID(span.id),\n\t\t\tparentId: this.convertID(span.parentID),\n\n\t\t\tlocalEndpoint: { serviceName },\n\t\t\tremoteEndpoint: { serviceName },\n\n\t\t\tannotations: [\n\t\t\t\t{ timestamp: this.convertTime(span.startTime), value: \"sr\" },\n\t\t\t\t{ timestamp: this.convertTime(span.finishTime), value: \"ss\" },\n\t\t\t],\n\n\t\t\ttimestamp: this.convertTime(span.startTime),\n\t\t\tduration: this.convertTime(span.duration),\n\n\t\t\ttags: {\n\t\t\t\tservice: serviceName,\n\t\t\t\t\"span.type\": span.type,\n\t\t\t},\n\n\t\t\tdebug: this.opts.payloadOptions.debug,\n\t\t\tshared: this.opts.payloadOptions.shared\n\t\t};\n\n\t\tif (span.error) {\n\t\t\tpayload.tags[\"error\"] = span.error.message;\n\n\t\t\tpayload.annotations.push({\n\t\t\t\tvalue: \"error\",\n\t\t\t\tendpoint: { serviceName: serviceName, ipv4: \"\", port: 0 },\n\t\t\t\ttimestamp: this.convertTime(span.finishTime)\n\t\t\t});\n\t\t}\n\n\t\tObject.assign(\n\t\t\tpayload.tags,\n\t\t\tthis.defaultTags || {},\n\t\t\tthis.flattenTags(span.tags, true),\n\t\t\tthis.flattenTags(this.errorToObject(span.error), true, \"error\") || {}\n\t\t);\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * Convert Context ID to Zipkin format\n\t *\n\t * @param {String} id\n\t * @returns {String}\n\t */\n\tconvertID(id) {\n\t\treturn id ? id.replace(/-/g, \"\").substring(0, 16) : null;\n\t}\n\n\t/**\n\t * Convert JS timestamp to microseconds\n\t *\n\t * @param {Number} ts\n\t * @returns {Number}\n\t */\n\tconvertTime(ts) {\n\t\treturn ts != null ? Math.round(ts * 1000) : null;\n\t}\n\n}\n\nmodule.exports = NewRelicTraceExporter;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../../utils\");\nconst { BrokerOptionsError } = require(\"../../errors\");\n\nconst Exporters = {\n\tBase: require(\"./base\"),\n\tConsole: require(\"./console\"),\n\tDatadog: require(\"./datadog\"),\n\t//DatadogSimple: require(\"./datadog-simple\"),\n\tEvent: require(\"./event\"),\n\tEventLegacy: require(\"./event-legacy\"),\n\tJaeger: require(\"./jaeger\"),\n\tZipkin: require(\"./zipkin\"),\n\tNewRelic: require(\"./newrelic\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Exporters).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Exporters[n];\n}\n\n/**\n * Resolve exporter by name\n *\n * @param {object|string} opt\n * @returns {Exporters.Base}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Exporters.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet ExporterClass = getByName(opt);\n\t\tif (ExporterClass)\n\t\t\treturn new ExporterClass();\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid tracing exporter type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet ExporterClass = getByName(opt.type);\n\t\tif (ExporterClass)\n\t\t\treturn new ExporterClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid tracing exporter type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\tthrow new BrokerOptionsError(`Invalid tracing exporter type '${opt}'.`, { type: opt });\n}\n\nfunction register(name, value) {\n\tExporters[name] = value;\n}\n\nmodule.exports = Object.assign(Exporters, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\n/**\n * Rate Limiter class for Tracing.\n *\n * Inspired by\n * \thttps://github.com/jaegertracing/jaeger-client-node/blob/master/src/rate_limiter.js\n *\n * @class RateLimiter\n */\nclass RateLimiter {\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\ttracesPerSecond: 1\n\t\t});\n\n\t\tthis.lastTime = Date.now();\n\t\tthis.balance = 0;\n\t\tthis.maxBalance = this.opts.tracesPerSecond < 1 ? 1 : this.opts.tracesPerSecond;\n\t}\n\n\tcheck(cost = 1) {\n\t\tconst now = Date.now();\n\t\tconst elapsedTime = (now - this.lastTime) / 1000;\n\t\tthis.lastTime = now;\n\n\t\tthis.balance += elapsedTime * this.opts.tracesPerSecond;\n\t\tif (this.balance > this.maxBalance)\n\t\t\tthis.balance = this.maxBalance;\n\n\t\tif (this.balance >= cost) {\n\t\t\tthis.balance -= cost;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nmodule.exports = RateLimiter;\n","const loadTime = getNanoSeconds();\nconst nodeLoadTime = loadTime - process.uptime() * 1e9;\n\nfunction getNanoSeconds() {\n\tconst time = process.hrtime();\n\treturn time[0] * 1e9 + time[1];\n}\n\nfunction now() {\n\treturn (getNanoSeconds() - nodeLoadTime) / 1e6;\n}\n\nconst loadNs = now();\nconst loadMs = Date.now();\n\nmodule.exports = () => loadMs + now() - loadNs;\n","\"use strict\";\n\nconst now = require(\"./now\");\n\nfunction defProp(instance, propName, value, readOnly = false) {\n\tObject.defineProperty(instance, propName, {\n\t\tvalue,\n\t\twritable: !!readOnly,\n\t\tenumerable: false\n\t});\n}\n\n/**\n * Trace Span class\n *\n * @class Span\n */\nclass Span {\n\n\t/**\n\t * Creates an instance of Span.\n\t * @param {Tracer} tracer\n\t * @param {String} name\n\t * @param {Object?} opts\n\t *\n\t * @memberof Span\n\t */\n\tconstructor(tracer, name, opts) {\n\t\tdefProp(this, \"tracer\", tracer, true);\n\t\tdefProp(this, \"logger\", this.tracer.logger, true);\n\t\tdefProp(this, \"opts\", opts || {});\n\t\tdefProp(this, \"meta\", {});\n\n\t\tthis.name = name;\n\t\tthis.type = this.opts.type || \"custom\";\n\t\tthis.id = this.opts.id || this.tracer.broker.generateUid();\n\t\tthis.traceID = this.opts.traceID || this.id;\n\t\tthis.parentID = this.opts.parentID;\n\n\t\tif (this.opts.service) {\n\t\t\tif (typeof this.opts.service == \"string\") {\n\t\t\t\tthis.service = {\n\t\t\t\t\tname: this.opts.service,\n\t\t\t\t\tfullName: this.opts.service,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tthis.service = {\n\t\t\t\t\tname: this.opts.service.name,\n\t\t\t\t\tversion: this.opts.service.version,\n\t\t\t\t\tfullName: this.opts.service.fullName,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthis.priority = this.opts.priority != null ? this.opts.priority : 5;\n\t\tthis.sampled = this.opts.sampled != null ? this.opts.sampled : this.tracer.shouldSample(this);\n\n\t\tthis.startTime = null;\n\t\tthis.finishTime = null;\n\t\tthis.duration = null;\n\n\t\tthis.error = null;\n\n\t\tthis.logs = [];\n\t\tthis.tags = {};\n\n\t\tif (this.opts.defaultTags)\n\t\t\tthis.addTags(this.opts.defaultTags);\n\n\t\tif (this.opts.tags)\n\t\t\tthis.addTags(this.opts.tags);\n\t}\n\n\t/**\n\t * Start span.\n\t *\n\t * @param {Number?} time\n\t * @returns {Span}\n\t * @memberof Span\n\t */\n\tstart(time) {\n\t\tthis.logger.debug(`[${this.id}] Span '${this.name}' is started.`);\n\n\t\tthis.startTime = time || now();\n\t\t// console.log(`\"${this.name}\" start time: ${this.startTime}`);\n\n\t\tthis.tracer.spanStarted(this);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add tags. It will be merged with previous tags.\n\t *\n\t * @param {Object} obj\n\t * @returns {Span}\n\t *\n\t * @memberof Span\n\t */\n\taddTags(obj) {\n\t\tObject.assign(this.tags, obj);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Log a trace event.\n\t *\n\t * @param {String} name\n\t * @param {Object?} fields\n\t * @param {Number?} time\n\t * @returns {Span}\n\t * @memberof Span\n\t */\n\tlog(name, fields, time) {\n\t\ttime = time || now();\n\n\t\tthis.logs.push({\n\t\t\tname,\n\t\t\tfields: fields || {},\n\t\t\ttime,\n\t\t\telapsed: time - this.startTime\n\t\t});\n\n\t\tthis.logger.debug(`[${this.id}] Span '${this.name}' has a new log event: ${name}.`);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set error span.\n\t *\n\t * @param {Error} err\n\t * @memberof Span\n\t */\n\tsetError(err) {\n\t\tthis.error = err != null ? err : true;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Finish span.\n\t *\n\t * @param {Number?} time\n\t * @returns {Span}\n\t * @memberof Span\n\t */\n\tfinish(time) {\n\t\tthis.finishTime = time ? time : now();\n\t\tthis.duration = this.finishTime - this.startTime;\n\n\t\t// console.log(`\"${this.name}\" stop time: ${this.finishTime}  Duration: ${this.duration}`);\n\n\t\tthis.logger.debug(`[${this.id}] Span '${this.name}' is finished. Duration: ${Number(this.duration).toFixed(3)} ms`, this.tags);\n\n\t\tthis.tracer.spanFinished(this);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Check the span is active or finished.\n\t *\n\t * @returns {boolean}\n\t */\n\tisActive() {\n\t\treturn this.finishTime == null;\n\t}\n\n\t/**\n\t * Start a child span.\n\t *\n\t * @param {String} name\n\t * @param {Object?} opts\n\t * @returns {Span} Child span\n\t * @memberof Span\n\t */\n\tstartSpan(name, opts) {\n\t\tconst r = {\n\t\t\ttraceID: this.traceID,\n\t\t\tparentID: this.id,\n\t\t\tsampled: this.sampled,\n\t\t\tservice: this.service\n\t\t};\n\t\treturn this.tracer.startSpan(name, opts ? Object.assign(r, opts) : r);\n\t}\n\n}\n\nmodule.exports = Span;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst Exporters = require(\"./exporters\");\n//const AsyncStorage = require(\"../async-storage\");\nconst RateLimiter = require(\"./rate-limiter\");\nconst Span = require(\"./span\");\nconst { isFunction } = require(\"../utils\");\n\n/**\n * Moleculer Tracer class\n */\nclass Tracer {\n\n\t/**\n\t * Creates an instance of Tracer.\n\t *\n\t * @param {ServiceBroker} broker\n\t * @param {Object} opts\n\t * @memberof Tracer\n\t */\n\tconstructor(broker, opts) {\n\t\tthis.broker = broker;\n\t\tthis.logger = broker.getLogger(\"tracer\");\n\n\t\tif (opts === true || opts === false)\n\t\t\topts = { enabled: opts };\n\n\t\tthis.opts = _.defaultsDeep({}, opts, {\n\t\t\tenabled: true,\n\n\t\t\texporter: null,\n\n\t\t\tsampling: {\n\t\t\t\t// Constants sampling\n\t\t\t\trate: 1.0, // 0.0 - Never, 1.0 > x > 0.0 - Fix, 1.0 - Always\n\n\t\t\t\t// Ratelimiting sampling https://opencensus.io/tracing/sampling/ratelimited/\n\t\t\t\ttracesPerSecond: null, // 1: 1 trace / sec, 5: 5 traces / sec, 0.1: 1 trace / 10 secs\n\n\t\t\t\tminPriority: null\n\t\t\t},\n\n\t\t\tactions: true,\n\t\t\tevents: false,\n\n\t\t\terrorFields: [\"name\", \"message\", \"code\", \"type\", \"data\"],\n\t\t\tstackTrace: false,\n\n\t\t\tdefaultTags: null,\n\n\t\t\ttags: {\n\t\t\t\taction: null,\n\t\t\t\tevent: null,\n\t\t\t}\n\t\t});\n\n\t\tif (this.opts.stackTrace && this.opts.errorFields.indexOf(\"stack\") === -1)\n\t\t\tthis.opts.errorFields.push(\"stack\");\n\n\t\tthis.sampleCounter = 0;\n\n\t\tif (this.opts.sampling.tracesPerSecond != null && this.opts.sampling.tracesPerSecond > 0) {\n\t\t\tthis.rateLimiter = new RateLimiter({\n\t\t\t\ttracesPerSecond: this.opts.sampling.tracesPerSecond\n\t\t\t});\n\t\t}\n\n\t\t//this.scope = new AsyncStorage(this.broker);\n\t\t//this.scope.enable();\n\t\t//this._scopeEnabled = true;\n\n\t\tif (this.opts.enabled)\n\t\t\tthis.logger.info(\"Tracing: Enabled\");\n\t}\n\n\t/**\n\t * Initialize Tracer.\n\t */\n\tinit() {\n\t\tif (this.opts.enabled) {\n\n\t\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, this) : this.opts.defaultTags;\n\n\t\t\t// Create Exporter instances\n\t\t\tif (this.opts.exporter) {\n\t\t\t\tconst exporters = Array.isArray(this.opts.exporter) ? this.opts.exporter : [this.opts.exporter];\n\n\t\t\t\tthis.exporter = _.compact(exporters).map(r => {\n\t\t\t\t\tconst exporter = Exporters.resolve(r);\n\t\t\t\t\texporter.init(this);\n\t\t\t\t\treturn exporter;\n\t\t\t\t});\n\n\t\t\t\tconst exporterNames = this.exporter.map(exporter => this.broker.getConstructorName(exporter));\n\t\t\t\tthis.logger.info(`Tracing exporter${exporterNames.length > 1 ? \"s\": \"\"}: ${exporterNames.join(\", \")}`);\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/**\n\t * Stop Tracer.\n\t */\n\tstop() {\n\t\tif (this.exporter) {\n\t\t\treturn this.broker.Promise.all(this.exporter.map(r => r.stop()));\n\t\t}\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Check tracing is enabled\n\t *\n\t * @returns {boolean}\n\t * @memberof MetricRegistry\n\t */\n\tisEnabled() {\n\t\treturn this.opts.enabled;\n\t}\n\n\t/**\n\t * Disable trace hooks and clear the store - noop if scope is already stopped\n\t *\n\t * @memberof Tracer\n\t *\n\tstopAndClearScope() {\n\t\tif (this._scopeEnabled) {\n\t\t\tthis.scope.stop();\n\t\t\tthis._scopeEnabled = false;\n\t\t}\n\t}*/\n\n\t/**\n\t * Renable the trace hooks - noop if scope is already enabled\n\t *\n\t * @memberof Tracer\n\t *\n\trestartScope() {\n\t\tif (!this._scopeEnabled) {\n\t\t\tthis.scope.enable();\n\t\t\tthis._scopeEnabled = true;\n\t\t}\n\t}*/\n\n\t/**\n\t * Decide that span should be sampled.\n\t *\n\t * @param {Span} span\n\t * @returns {Boolean}\n\t * @memberof Tracer\n\t */\n\tshouldSample(span) {\n\t\tif (this.opts.sampling.minPriority != null) {\n\t\t\tif (span.priority < this.opts.sampling.minPriority)\n\t\t\t\treturn false;\n\t\t}\n\n\t\tif (this.rateLimiter) {\n\t\t\treturn this.rateLimiter.check();\n\t\t}\n\n\t\tif (this.opts.sampling.rate == 0)\n\t\t\treturn false;\n\n\t\tif (this.opts.sampling.rate == 1)\n\t\t\treturn true;\n\n\t\tif (++this.sampleCounter * this.opts.sampling.rate >= 1.0) {\n\t\t\tthis.sampleCounter = 0;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Start a new Span.\n\t *\n\t * @param {String} name\n\t * @param {Object?} opts\n\t * @returns {Span}\n\t *\n\t * @memberof Tracer\n\t */\n\tstartSpan(name, opts = {}) {\n\t\tlet parentOpts = {};\n\t\tif (opts.parentSpan) {\n\t\t\tparentOpts.traceID = opts.parentSpan.traceID;\n\t\t\tparentOpts.parentID = opts.parentSpan.id;\n\t\t\tparentOpts.sampled = opts.parentSpan.sampled;\n\t\t}\n\n\t\tconst span = new Span(this, name, Object.assign({\n\t\t\ttype: \"custom\",\n\t\t\tdefaultTags: this.defaultTags\n\t\t}, parentOpts, opts, { parentSpan: undefined }));\n\n\t\tspan.start();\n\n\t\treturn span;\n\t}\n\n\t/**\n\t * Invoke Exporter method.\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @memberof Tracer\n\t */\n\tinvokeExporter(method, args) {\n\t\tif (this.exporter) {\n\t\t\tthis.exporter.forEach(exporter => exporter[method].apply(exporter, args));\n\t\t}\n\t}\n\n\t/**\n\t * Set the active span\n\t *\n\t * @param {Span} span\n\t * @memberof Tracer\n\t *\n\tsetCurrentSpan(span) {\n\t\tconst state = this.scope.getSessionData() || {\n\t\t\tspans: []\n\t\t};\n\n\t\tstate.spans.push(span);\n\t\tthis.scope.setSessionData(state);\n\n\t\tspan.meta.state = state;\n\t}*/\n\n\t/**\n\t * Remove the active span (because async block destroyed)\n\t *\n\t * @param {Span} span\n\t * @memberof Tracer\n\t *\n\tremoveCurrentSpan(span) {\n\t\tconst state = span.meta.state || this.scope.getSessionData();\n\t\tif (state && state.spans.length > 0) {\n\t\t\tconst idx = state.spans.indexOf(span);\n\t\t\tif (idx >= 0)\n\t\t\t\tstate.spans.splice(idx, 1);\n\t\t}\n\t}*/\n\n\t/**\n\t * Get the current active span\n\t *\n\t * @returns {Span}\n\t * @memberof Tracer\n\t *\n\tgetCurrentSpan() {\n\t\tconst state = this.scope.getSessionData();\n\t\treturn state ? state.spans[state.spans.length - 1] : null;\n\t}*/\n\n\t/**\n\t * Get the current trace ID\n\t *\n\t * @returns\n\t * @memberof Tracer\n\t */\n\tgetCurrentTraceID() {\n\t\treturn null;\n\t\t//const span = this.getCurrentSpan();\n\t\t//return span ? span.traceID : null;\n\t}\n\n\t/**\n\t * Get the active span ID (for the next span as parent ID)\n\t *\n\t * @returns\n\t * @memberof Tracer\n\t */\n\tgetActiveSpanID() {\n\t\treturn null;\n\t\t//const span = this.getCurrentSpan();\n\t\t//return span ? span.id : null;\n\t}\n\n\t/**\n\t * Called when a span started. Call exporters.\n\t *\n\t * @param {Span} span\n\t * @memberof Tracer\n\t */\n\tspanStarted(span) {\n\t\t//this.setCurrentSpan(span);\n\n\t\tif (span.sampled)\n\t\t\tthis.invokeExporter(\"spanStarted\", [span]);\n\t}\n\n\t/**\n\t * Called when a span finished. Call exporters.\n\t *\n\t * @param {Span} span\n\t * @memberof Tracer\n\t */\n\tspanFinished(span) {\n\t\t//this.removeCurrentSpan(span);\n\n\t\tif (span.sampled)\n\t\t\tthis.invokeExporter(\"spanFinished\", [span]);\n\t}\n}\n\nmodule.exports = Tracer;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = {\n\tTracer: require(\"./tracer\"),\n\tSpan: require(\"./span\"),\n\tExporters: require(\"./exporters\"),\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t\t\t\t= require(\"lodash\");\nconst functionArguments \t\t= require(\"fn-args\");\nconst { ServiceSchemaError, MoleculerError } \t= require(\"./errors\");\nconst { isObject, isFunction, flatten }\t= require(\"./utils\");\n\n/**\n * Wrap a handler Function to an object with a `handler` property.\n *\n * @param {Function|Object} o\n * @returns {Object}\n */\nfunction wrapToHander(o) {\n\treturn isFunction(o) ? { handler: o } : o;\n}\n\n/**\n * Wrap any value to an array.\n * @param {any} o\n * @returns {Array}\n */\nfunction wrapToArray(o) {\n\treturn Array.isArray(o) ? o : [o];\n}\n\nfunction isNewSignature(args) {\n\treturn args.length > 0 && [\"ctx\", \"context\"].indexOf(args[0].toLowerCase()) !== -1;\n}\n\n\n/**\n * Service class\n *\n * @class Service\n */\nclass Service {\n\n\t/**\n\t * Creates an instance of Service by schema.\n\t *\n\t * @param {ServiceBroker} \tbroker\tbroker of service\n\t * @param {Object} \t\t\tschema\tschema of service\n\t *\n\t * @memberof Service\n\t */\n\tconstructor(broker, schema) {\n\t\tif (!isObject(broker))\n\t\t\tthrow new ServiceSchemaError(\"Must set a ServiceBroker instance!\");\n\n\t\tthis.broker = broker;\n\n\t\tif (broker)\n\t\t\tthis.Promise = broker.Promise;\n\n\t\tif (schema)\n\t\t\tthis.parseServiceSchema(schema);\n\t}\n\n\t/**\n\t * Parse Service schema & register as local service\n\t *\n\t * @param {Object} schema of Service\n\t */\n\tparseServiceSchema(schema) {\n\t\tif (!isObject(schema))\n\t\t\tthrow new ServiceSchemaError(\"The service schema can't be null. Maybe is it not a service schema?\");\n\n\t\tthis.originalSchema = _.cloneDeep(schema);\n\n\t\tif (schema.mixins) {\n\t\t\tschema = Service.applyMixins(schema);\n\t\t}\n\n\t\tif (isFunction(schema.merged)) {\n\t\t\tschema.merged.call(this, schema);\n\t\t} else if (Array.isArray(schema.merged)) {\n\t\t\tschema.merged.forEach(fn => fn.call(this, schema));\n\t\t}\n\n\t\tthis.broker.callMiddlewareHookSync(\"serviceCreating\", [this, schema]);\n\n\t\tif (!schema.name) {\n\t\t\t/* eslint-disable-next-line */\n\t\t\tconsole.error(\"Service name can't be empty! Maybe it is not a valid Service schema. Maybe is it not a service schema?\", { schema });\n\t\t\tthrow new ServiceSchemaError(\"Service name can't be empty! Maybe it is not a valid Service schema. Maybe is it not a service schema?\", { schema });\n\t\t}\n\n\t\tthis.name = schema.name;\n\t\tthis.version = schema.version;\n\t\tthis.settings = schema.settings || {};\n\t\tthis.metadata = schema.metadata || {};\n\t\tthis.schema = schema;\n\n\t\tthis.fullName = Service.getVersionedFullName(this.name, this.settings.$noVersionPrefix !== true ? this.version : undefined);\n\n\t\tthis.logger = this.broker.getLogger(this.fullName, {\n\t\t\tsvc: this.name,\n\t\t\tver: this.version\n\t\t});\n\n\t\tthis.actions = {}; // external access to actions\n\t\tthis.events = {}; // external access to event handlers.\n\n\t\t// Service item for Registry\n\t\tconst serviceSpecification = {\n\t\t\tname: this.name,\n\t\t\tversion: this.version,\n\t\t\tfullName: this.fullName,\n\t\t\tsettings: this._getPublicSettings(this.settings),\n\t\t\tmetadata: this.metadata,\n\t\t\tactions: {},\n\t\t\tevents: {}\n\t\t};\n\n\t\t// Register methods\n\t\tif (isObject(schema.methods)) {\n\n\t\t\t_.forIn(schema.methods, (method, name) => {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif ([\"name\", \"version\", \"settings\", \"metadata\", \"dependencies\", \"schema\", \"broker\", \"actions\", \"logger\", \"created\", \"started\", \"stopped\", \"_start\", \"_stop\", \"_init\"].indexOf(name) != -1) {\n\t\t\t\t\tthrow new ServiceSchemaError(`Invalid method name '${name}' in '${this.name}' service!`);\n\t\t\t\t}\n\n\t\t\t\tthis._createMethod(method, name);\n\t\t\t});\n\t\t}\n\n\t\t// Register actions\n\t\tif (isObject(schema.actions)) {\n\t\t\t_.forIn(schema.actions, (action, name) => {\n\t\t\t\tif (action === false)\n\t\t\t\t\treturn;\n\n\t\t\t\tlet innerAction = this._createAction(action, name);\n\n\t\t\t\tserviceSpecification.actions[innerAction.name] = innerAction;\n\n\t\t\t\tconst wrappedHandler = this.broker.middlewares.wrapHandler(\"localAction\", innerAction.handler, innerAction);\n\n\t\t\t\t// Expose to be callable as `this.actions.find({ ...params })`\n\t\t\t\tconst ep = this.broker.registry.createPrivateActionEndpoint(innerAction);\n\t\t\t\tthis.actions[name] = (params, opts) => {\n\t\t\t\t\tlet ctx;\n\t\t\t\t\tif (opts && opts.ctx) {\n\t\t\t\t\t\t// Reused context (in case of retry)\n\t\t\t\t\t\tctx = opts.ctx;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx = this.broker.ContextFactory.create(this.broker, ep, params, opts || {});\n\t\t\t\t\t}\n\t\t\t\t\treturn wrappedHandler(ctx);\n\t\t\t\t};\n\n\t\t\t});\n\t\t}\n\n\t\t// Event subscriptions\n\t\tif (isObject(schema.events)) {\n\t\t\t_.forIn(schema.events, (event, name) => {\n\t\t\t\tconst innerEvent = this._createEvent(event, name);\n\t\t\t\tserviceSpecification.events[innerEvent.name] = innerEvent;\n\n\t\t\t\t// Expose to be callable as `this.events[''](params, opts);\n\t\t\t\tthis.events[innerEvent.name] = (params, opts) => {\n\t\t\t\t\tlet ctx;\n\t\t\t\t\tif (opts && opts.ctx) {\n\t\t\t\t\t\t// Reused context (in case of retry)\n\t\t\t\t\t\tctx = opts.ctx;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst ep = {\n\t\t\t\t\t\t\tid: this.broker.nodeID,\n\t\t\t\t\t\t\tevent: innerEvent\n\t\t\t\t\t\t};\n\t\t\t\t\t\tctx = this.broker.ContextFactory.create(this.broker, ep, params, opts || {});\n\t\t\t\t\t}\n\t\t\t\t\tctx.eventName = name;\n\t\t\t\t\tctx.eventType = \"emit\";\n\t\t\t\t\tctx.eventGroups = [innerEvent.group || this.name];\n\n\t\t\t\t\treturn innerEvent.handler(ctx);\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tthis._serviceSpecification = serviceSpecification;\n\n\t\t// Initialize\n\t\tthis._init();\n\t}\n\n\t/**\n\t * Return a service settings without protected properties.\n\t *\n\t * @param {Object?} settings\n\t */\n\t_getPublicSettings(settings) {\n\t\tif (settings && Array.isArray(settings.$secureSettings)) {\n\t\t\treturn _.omit(settings, [].concat(settings.$secureSettings, [\"$secureSettings\"]));\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\t/**\n\t * Initialize service. It called `created` handler in schema\n\t *\n\t * @private\n\t * @memberof Service\n\t */\n\t_init() {\n\t\tthis.logger.debug(`Service '${this.fullName}' is creating...`);\n\t\tif (isFunction(this.schema.created)) {\n\t\t\tthis.schema.created.call(this);\n\t\t} else if (Array.isArray(this.schema.created)) {\n\t\t\tthis.schema.created.forEach(fn => fn.call(this));\n\t\t}\n\n\t\tthis.broker.addLocalService(this);\n\n\t\tthis.broker.callMiddlewareHookSync(\"serviceCreated\", [this]);\n\n\t\tthis.logger.debug(`Service '${this.fullName}' created.`);\n\t}\n\n\t/**\n\t * Start service\n\t *\n\t * @returns {Promise}\n\t * @private\n\t * @memberof Service\n\t */\n\t_start() {\n\t\tthis.logger.debug(`Service '${this.fullName}' is starting...`);\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\treturn this.broker.callMiddlewareHook(\"serviceStarting\", [this]);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Wait for dependent services\n\t\t\t\tif (this.schema.dependencies)\n\t\t\t\t\treturn this.waitForServices(this.schema.dependencies, this.settings.$dependencyTimeout || 0, this.settings.$dependencyInterval || this.broker.options.dependencyInterval);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (isFunction(this.schema.started))\n\t\t\t\t\treturn this.Promise.method(this.schema.started).call(this);\n\n\t\t\t\tif (Array.isArray(this.schema.started)) {\n\t\t\t\t\treturn this.schema.started\n\t\t\t\t\t\t.map(fn => this.Promise.method(fn.bind(this)))\n\t\t\t\t\t\t.reduce((p, fn) => p.then(() => fn()), this.Promise.resolve());\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Register service\n\t\t\t\tthis.broker.registerLocalService(this._serviceSpecification);\n\t\t\t\treturn null;\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.broker.callMiddlewareHook(\"serviceStarted\", [this]);\n\t\t\t})\n\t\t\t.then(() => this.logger.info(`Service '${this.fullName}' started.`));\n\t}\n\n\t/**\n\t * Stop service\n\t *\n\t * @returns {Promise}\n\t * @private\n\t * @memberof Service\n\t */\n\t_stop() {\n\t\tthis.logger.debug(`Service '${this.fullName}' is stopping...`);\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\treturn this.broker.callMiddlewareHook(\"serviceStopping\", [this], { reverse: true });\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (isFunction(this.schema.stopped))\n\t\t\t\t\treturn this.Promise.method(this.schema.stopped).call(this);\n\n\t\t\t\tif (Array.isArray(this.schema.stopped)) {\n\t\t\t\t\tconst arr = Array.from(this.schema.stopped).reverse();\n\t\t\t\t\treturn arr\n\t\t\t\t\t\t.map(fn => this.Promise.method(fn.bind(this)))\n\t\t\t\t\t\t.reduce((p, fn) => p.then(() => fn()), this.Promise.resolve());\n\t\t\t\t}\n\n\t\t\t\treturn this.Promise.resolve();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.broker.callMiddlewareHook(\"serviceStopped\", [this], { reverse: true });\n\t\t\t})\n\t\t\t.then(() => this.logger.info(`Service '${this.fullName}' stopped.`));\n\t}\n\n\t/**\n\t * Create an external action handler for broker (internal command!)\n\t *\n\t * @param {Object|Function} actionDef\n\t * @param {String} name\n\t * @returns {Object}\n\t *\n\t * @private\n\t * @memberof Service\n\t */\n\t_createAction(actionDef, name) {\n\t\tlet action;\n\t\tif (isFunction(actionDef)) {\n\t\t\t// Wrap to an object\n\t\t\taction = {\n\t\t\t\thandler: actionDef\n\t\t\t};\n\t\t} else if (isObject(actionDef)) {\n\t\t\taction = _.cloneDeep(actionDef);\n\t\t} else {\n\t\t\tthrow new ServiceSchemaError(`Invalid action definition in '${name}' action in '${this.fullName}' service!`);\n\t\t}\n\n\t\tlet handler = action.handler;\n\t\tif (!isFunction(handler)) {\n\t\t\tthrow new ServiceSchemaError(`Missing action handler on '${name}' action in '${this.fullName}' service!`);\n\t\t}\n\n\t\taction.rawName = action.name || name;\n\t\tif (this.settings.$noServiceNamePrefix !== true)\n\t\t\taction.name = this.fullName + \".\" + action.rawName;\n\t\telse\n\t\t\taction.name = action.rawName;\n\n\t\tif (action.cache === undefined && this.settings.$cache !== undefined) {\n\t\t\taction.cache = this.settings.$cache;\n\t\t}\n\n\t\taction.service = this;\n\t\taction.handler = this.Promise.method(handler.bind(this));\n\n\t\treturn action;\n\t}\n\n\t/**\n\t * Create an internal service method.\n\t *\n\t * @param {Object|Function} methodDef\n\t * @param {String} name\n\t * @returns {Object}\n\t */\n\t_createMethod(methodDef, name) {\n\t\tlet method;\n\t\tif (isFunction(methodDef)) {\n\t\t\t// Wrap to an object\n\t\t\tmethod = {\n\t\t\t\thandler: methodDef\n\t\t\t};\n\t\t} else if (isObject(methodDef)) {\n\t\t\tmethod = methodDef;\n\t\t} else {\n\t\t\tthrow new ServiceSchemaError(`Invalid method definition in '${name}' method in '${this.fullName}' service!`);\n\t\t}\n\n\t\tif (!isFunction(method.handler)) {\n\t\t\tthrow new ServiceSchemaError(`Missing method handler on '${name}' method in '${this.fullName}' service!`);\n\t\t}\n\n\t\tmethod.name = name;\n\t\tmethod.service = this;\n\t\tmethod.handler = method.handler.bind(this);\n\n\t\tthis[name] = this.broker.middlewares.wrapHandler(\"localMethod\", method.handler, method);\n\n\t\treturn method;\n\t}\n\n\t/**\n\t * Create an event subscription for broker\n\t *\n\t * @param {Object|Function} eventDef\n\t * @param {String} name\n\t * @returns {Object}\n\t *\n\t * @private\n\t * @memberof Service\n\t */\n\t_createEvent(eventDef, name) {\n\t\tlet event;\n\t\tif (isFunction(eventDef) || Array.isArray(eventDef)) {\n\t\t\tevent = {\n\t\t\t\thandler: eventDef\n\t\t\t};\n\t\t} else if (isObject(eventDef)) {\n\t\t\tevent = _.cloneDeep(eventDef);\n\t\t} else {\n\t\t\tthrow new ServiceSchemaError(`Invalid event definition in '${name}' event in '${this.fullName}' service!`);\n\t\t}\n\n\t\tif (!isFunction(event.handler) && !Array.isArray(event.handler)) {\n\t\t\tthrow new ServiceSchemaError(`Missing event handler on '${name}' event in '${this.fullName}' service!`);\n\t\t}\n\n\t\t// Detect new or legacy parameter list of event handler\n\t\t// Legacy: handler(payload, sender, eventName)\n\t\t// New: handler(ctx)\n\t\tlet handler;\n\t\tif (isFunction(event.handler)) {\n\t\t\tconst args = functionArguments(event.handler);\n\t\t\thandler = this.Promise.method(event.handler);\n\t\t\thandler.__newSignature = event.context === true || isNewSignature(args);\n\t\t} else if (Array.isArray(event.handler)) {\n\t\t\thandler = event.handler.map(h => {\n\t\t\t\tconst args = functionArguments(h);\n\t\t\t\th = this.Promise.method(h);\n\t\t\t\th.__newSignature = event.context === true || isNewSignature(args);\n\t\t\t\treturn h;\n\t\t\t});\n\t\t}\n\n\t\tif (!event.name)\n\t\t\tevent.name = name;\n\n\t\tevent.service = this;\n\t\tconst self = this;\n\t\tif (isFunction(handler)) {\n\t\t\t// Call single handler\n\t\t\tevent.handler = function(ctx) {\n\t\t\t\treturn handler.apply(self, handler.__newSignature ? [ctx] : [ctx.params, ctx.nodeID, ctx.eventName, ctx]);\n\t\t\t};\n\t\t} else if (Array.isArray(handler)) {\n\t\t\t// Call multiple handler\n\t\t\tevent.handler = function(ctx) {\n\t\t\t\treturn self.Promise.all(handler.map(fn => fn.apply(self, fn.__newSignature ? [ctx] : [ctx.params, ctx.nodeID, ctx.eventName, ctx])));\n\t\t\t};\n\t\t}\n\n\t\treturn event;\n\t}\n\n\t/**\n\t * Call a local event handler. Useful for unit tests.\n\t *\n\t * @param {String} eventName\n\t * @param {any?} params\n\t * @param {Object?} opts\n\t */\n\temitLocalEventHandler(eventName, params, opts) {\n\t\tif (!this.events[eventName])\n\t\t\treturn Promise.reject(new MoleculerError(`No '${eventName}' registered local event handler`, 500, \"NOT_FOUND_EVENT\", { eventName }));\n\n\t\treturn this.events[eventName](params, opts);\n\t}\n\n\t/**\n\t * Getter of current Context.\n\t * @returns {Context?}\n\t *\n\t * @memberof Service\n\t *\n\tget currentContext() {\n\t\treturn this.broker.getCurrentContext();\n\t}*/\n\n\t/**\n\t * Setter of current Context\n\t *\n\t * @memberof Service\n\t *\n\tset currentContext(ctx) {\n\t\tthis.broker.setCurrentContext(ctx);\n\t}*/\n\n\t/**\n\t * Wait for other services\n\t *\n\t * @param {String|Array<String>} serviceNames\n\t * @param {Number} timeout Timeout in milliseconds\n\t * @param {Number} interval Check interval in milliseconds\n\t * @returns {Promise}\n\t * @memberof Service\n\t */\n\twaitForServices(serviceNames, timeout, interval) {\n\t\treturn this.broker.waitForServices(serviceNames, timeout, interval, this.logger);\n\t}\n\n\t/**\n\t * Apply `mixins` list in schema. Merge the schema with mixins schemas. Returns with the mixed schema\n\t *\n\t * @static\n\t * @param {Schema} schema\n\t * @returns {Schema}\n\t *\n\t * @memberof Service\n\t */\n\tstatic applyMixins(schema) {\n\t\tif (schema.mixins) {\n\t\t\tconst mixins = Array.isArray(schema.mixins) ? schema.mixins : [schema.mixins];\n\t\t\tif (mixins.length > 0) {\n\t\t\t\tconst mixedSchema = Array.from(mixins).reverse().reduce((s, mixin) => {\n\t\t\t\t\tif (mixin.mixins)\n\t\t\t\t\t\tmixin = Service.applyMixins(mixin);\n\n\t\t\t\t\treturn s ? Service.mergeSchemas(s, mixin) : mixin;\n\t\t\t\t}, null);\n\n\t\t\t\treturn Service.mergeSchemas(mixedSchema, schema);\n\t\t\t}\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\treturn schema;\n\t}\n\n\t/**\n\t * Merge two Service schema\n\t *\n\t * @static\n\t * @param {Object} mixinSchema\t\tMixin schema\n\t * @param {Object} svcSchema \t\tService schema\n\t * @returns {Object} Mixed schema\n\t *\n\t * @memberof Service\n\t */\n\tstatic mergeSchemas(mixinSchema, svcSchema) {\n\t\tconst res = _.cloneDeep(mixinSchema);\n\t\tconst mods = _.cloneDeep(svcSchema);\n\n\t\tObject.keys(mods).forEach(key => {\n\t\t\tif ([\"name\", \"version\"].indexOf(key) !== -1 && mods[key] !== undefined) {\n\t\t\t\t// Simple overwrite\n\t\t\t\tres[key] = mods[key];\n\t\t\t} else if (key == \"settings\") {\n\t\t\t\t// Merge with defaultsDeep\n\t\t\t\tres[key] = Service.mergeSchemaSettings(mods[key], res[key]);\n\n\t\t\t} else if (key == \"metadata\") {\n\t\t\t\t// Merge with defaultsDeep\n\t\t\t\tres[key] = Service.mergeSchemaMetadata(mods[key], res[key]);\n\n\t\t\t} else if (key == \"hooks\") {\n\t\t\t\t// Merge & concat\n\t\t\t\tres[key] = Service.mergeSchemaHooks(mods[key], res[key] || {});\n\n\t\t\t} else if (key == \"actions\") {\n\t\t\t\t// Merge with defaultsDeep\n\t\t\t\tres[key] = Service.mergeSchemaActions(mods[key], res[key] || {});\n\n\t\t\t} else if (key == \"methods\") {\n\t\t\t\t// Overwrite\n\t\t\t\tres[key] = Service.mergeSchemaMethods(mods[key], res[key]);\n\n\t\t\t} else if (key == \"events\") {\n\t\t\t\t// Merge & concat by groups\n\t\t\t\tres[key] = Service.mergeSchemaEvents(mods[key], res[key] || {});\n\n\t\t\t} else if ([\"merged\", \"created\", \"started\", \"stopped\"].indexOf(key) !== -1) {\n\t\t\t\t// Concat lifecycle event handlers\n\t\t\t\tres[key] = Service.mergeSchemaLifecycleHandlers(mods[key], res[key]);\n\n\t\t\t} else if (key == \"mixins\") {\n\t\t\t\t// Concat mixins\n\t\t\t\tres[key] = Service.mergeSchemaUniqArray(mods[key], res[key]);\n\n\t\t\t} else if (key == \"dependencies\") {\n\t\t\t\t// Concat mixins\n\t\t\t\tres[key] = Service.mergeSchemaUniqArray(mods[key], res[key]);\n\n\t\t\t} else {\n\t\t\t\tconst customFnName = \"mergeSchema\" + key.replace(/./, key[0].toUpperCase()); // capitalize first letter\n\t\t\t\tif (isFunction(Service[customFnName])) {\n\t\t\t\t\tres[key] = Service[customFnName](mods[key], res[key]);\n\t\t\t\t} else {\n\t\t\t\t\tres[key] = Service.mergeSchemaUnknown(mods[key], res[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Merge `settings` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaSettings(src, target) {\n\t\tif ((target && target.$secureSettings) || (src && src.$secureSettings)) {\n\t\t\tconst srcSS = src && src.$secureSettings ? src.$secureSettings : [];\n\t\t\tconst targetSS = target && target.$secureSettings ? target.$secureSettings : [];\n\t\t\tif (!target) target = {};\n\n\t\t\ttarget.$secureSettings = _.uniq([].concat(srcSS, targetSS));\n\t\t}\n\n\t\treturn _.defaultsDeep(src, target);\n\t}\n\n\t/**\n\t * Merge `metadata` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaMetadata(src, target) {\n\t\treturn _.defaultsDeep(src, target);\n\t}\n\n\t/**\n\t * Merge `mixins` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaUniqArray(src, target) {\n\t\treturn _.uniqWith(_.compact(flatten([src, target])), _.isEqual);\n\t}\n\n\t/**\n\t * Merge `dependencies` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaDependencies(src, target) {\n\t\treturn Service.mergeSchemaUniqArray(src, target);\n\t}\n\n\t/**\n\t * Merge `hooks` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaHooks(src, target) {\n\t\tObject.keys(src).forEach(k => {\n\t\t\tif (target[k] == null)\n\t\t\t\ttarget[k] = {};\n\n\t\t\tObject.keys(src[k]).forEach(k2 => {\n\t\t\t\tconst modHook = wrapToArray(src[k][k2]);\n\t\t\t\tconst resHook = wrapToArray(target[k][k2]);\n\n\t\t\t\ttarget[k][k2] = _.compact(flatten(k == \"before\" ? [resHook, modHook] : [modHook, resHook]));\n\t\t\t});\n\t\t});\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Merge `actions` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property (real schema)\n\t * @param {Object} target Target schema property (mixin schema)\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaActions(src, target) {\n\t\tObject.keys(src).forEach(k => {\n\t\t\tif (src[k] === false && target[k]) {\n\t\t\t\tdelete target[k];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst srcAction = wrapToHander(src[k]);\n\t\t\tconst targetAction = wrapToHander(target[k]);\n\n\t\t\tif (srcAction && srcAction.hooks && targetAction && targetAction.hooks) {\n\t\t\t\tObject.keys(srcAction.hooks).forEach(k => {\n\t\t\t\t\tconst modHook = wrapToArray(srcAction.hooks[k]);\n\t\t\t\t\tconst resHook = wrapToArray(targetAction.hooks[k]);\n\n\t\t\t\t\tsrcAction.hooks[k] = _.compact(flatten(k == \"before\" ? [resHook, modHook] : [modHook, resHook]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttarget[k] = _.defaultsDeep(srcAction, targetAction);\n\t\t});\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Merge `methods` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaMethods(src, target) {\n\t\treturn Object.assign(target || {}, src || {});\n\t}\n\n\t/**\n\t * Merge `events` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaEvents(src, target) {\n\t\tObject.keys(src).forEach(k => {\n\t\t\tconst modEvent = wrapToHander(src[k]);\n\t\t\tconst resEvent = wrapToHander(target[k]);\n\n\t\t\tlet handler = _.compact(flatten([resEvent ? resEvent.handler : null, modEvent ? modEvent.handler : null]));\n\t\t\tif (handler.length == 1) handler = handler[0];\n\n\t\t\ttarget[k] = _.defaultsDeep(modEvent, resEvent);\n\t\t\ttarget[k].handler = handler;\n\t\t});\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Merge `started`, `stopped`, `created` event handler properties in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaLifecycleHandlers(src, target) {\n\t\treturn _.compact(flatten([target, src]));\n\t}\n\n\t/**\n\t * Merge unknown properties in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaUnknown(src, target) {\n\t\tif (src !== undefined)\n\t\t\treturn src;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Return a versioned full service name.\n\t * @param {String} name\n\t * @param {String|Number?} version\n\t */\n\tstatic getVersionedFullName(name, version) {\n\t\tif (version != null)\n\t\t\treturn (typeof(version) == \"number\" ? \"v\" + version : version) + \".\" + name;\n\n\t\treturn name;\n\t}\n\n}\n\nmodule.exports = Service;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst { isString } = require(\"./utils\");\nconst _ = require(\"lodash\");\nconst { RequestSkippedError, MaxCallLevelError } = require(\"./errors\");\n\n/**\n * Merge metadata\n *\n * @param {Object} newMeta\n *\n * @private\n * @memberof Context\n */\nfunction mergeMeta(ctx, newMeta) {\n\tif (newMeta)\n\t\tObject.assign(ctx.meta, newMeta);\n\treturn ctx.meta;\n}\n\n/**\n * Context class for action calls\n *\n * @property {String} id - Context ID\n * @property {ServiceBroker} broker - Broker instance\n * @property {Action} action - Action definition\n * @property {String} [nodeID=null] - Node ID\n * @property {String} parentID - Parent Context ID\n * @property {Boolean} tracing - Enable tracing\n * @property {Number} [level=1] - Level of context\n *\n * @class Context\n */\nclass Context {\n\n\t/**\n\t * Creates an instance of Context.\n\t *\n\t * @param {ServiceBroker} broker - Broker instance\n\t * @param {Endpoint} endpoint\n\t *\n\t * @memberof Context\n\t */\n\tconstructor(broker, endpoint) {\n\n\t\tthis.broker = broker;\n\t\tif (this.broker) {\n\t\t\tthis.nodeID = this.broker.nodeID;\n\t\t\tthis.id = this.broker.generateUid();\n\t\t} else {\n\t\t\tthis.nodeID = null;\n\t\t}\n\n\t\tif (endpoint) {\n\t\t\tthis.setEndpoint(endpoint);\n\t\t} else {\n\t\t\tthis.endpoint = null;\n\t\t\tthis.service = null;\n\t\t\tthis.action = null;\n\t\t\tthis.event = null;\n\t\t}\n\n\t\t// The emitted event \"user.created\" because `ctx.event.name` can be \"user.**\"\n\t\tthis.eventName = null;\n\t\t// Type of event (\"emit\" or \"broadcast\")\n\t\tthis.eventType = null;\n\t\t// The groups of event\n\t\tthis.eventGroups = null;\n\n\t\tthis.options = {\n\t\t\ttimeout: null,\n\t\t\tretries: null,\n\t\t};\n\n\t\tthis.parentID = null;\n\t\tthis.caller = null;\n\n\t\tthis.level = 1;\n\n\t\tthis.params = null;\n\t\tthis.meta = {};\n\t\tthis.locals = {};\n\n\t\tthis.requestID = this.id;\n\n\t\tthis.tracing = null;\n\t\tthis.span = null;\n\t\tthis._spanStack = [];\n\n\t\tthis.needAck = null;\n\t\tthis.ackID = null;\n\n\t\t//this.startTime = null;\n\t\t//his.startHrTime = null;\n\t\t//this.stopTime = null;\n\t\t//this.duration = null;\n\n\t\t//this.error = null;\n\t\tthis.cachedResult = false;\n\t}\n\n\t/**\n\t * Create a new Context instance\n\t *\n\t * @param {ServiceBroker} broker\n\t * @param {Endpoint} endpoint\n\t * @param {Object?} params\n\t * @param {Object} opts\n\t * @returns {Context}\n\t *\n\t * @static\n\t * @memberof Context\n\t */\n\tstatic create(broker, endpoint, params, opts = {}) {\n\t\tconst ctx = new broker.ContextFactory(broker, endpoint);\n\n\t\tif (endpoint != null)\n\t\t\tctx.setEndpoint(endpoint);\n\n\t\tif (params != null) {\n\t\t\tlet cloning = broker ? broker.options.contextParamsCloning : false;\n\t\t\tif (opts.paramsCloning != null)\n\t\t\t\tcloning = opts.paramsCloning;\n\t\t\tctx.setParams(params, cloning);\n\t\t}\n\n\t\t//Object.assign(ctx.options, opts);\n\t\tctx.options = opts;\n\n\t\t// RequestID\n\t\tif (opts.requestID != null)\n\t\t\tctx.requestID = opts.requestID;\n\t\telse if (opts.parentCtx != null && opts.parentCtx.requestID != null)\n\t\t\tctx.requestID = opts.parentCtx.requestID;\n\n\t\t// Meta\n\t\tif (opts.parentCtx != null && opts.parentCtx.meta != null)\n\t\t\tctx.meta = Object.assign({}, opts.parentCtx.meta || {}, opts.meta || {});\n\t\telse if (opts.meta != null)\n\t\t\tctx.meta = opts.meta;\n\n\t\t// ParentID, Level, Caller, Tracing\n\t\tif (opts.parentCtx != null) {\n\t\t\tctx.tracing = opts.parentCtx.tracing;\n\t\t\tctx.level = opts.parentCtx.level + 1;\n\n\t\t\tif (opts.parentCtx.span)\n\t\t\t\tctx.parentID = opts.parentCtx.span.id;\n\t\t\telse\n\t\t\t\tctx.parentID = opts.parentCtx.id;\n\n\t\t\tif (opts.parentCtx.service)\n\t\t\t\tctx.caller = opts.parentCtx.service.fullName;\n\t\t}\n\n\t\t// caller\n\t\tif (opts.caller) {\n\t\t\tctx.caller = opts.caller;\n\t\t}\n\n\t\t// Parent span\n\t\tif (opts.parentSpan != null) {\n\t\t\tctx.parentID = opts.parentSpan.id;\n\t\t\tctx.requestID = opts.parentSpan.traceID;\n\t\t\tctx.tracing = opts.parentSpan.sampled;\n\t\t}\n\n\t\t// Event acknowledgement\n\t\tif (opts.needAck) {\n\t\t\tctx.needAck = opts.needAck;\n\t\t}\n\n\t\treturn ctx;\n\t}\n\n\t/**\n\t * Copy itself without ID.\n\t * @param {Endpoint} ep\n\t * @returns {Context}\n\t */\n\tcopy(ep) {\n\t\tconst newCtx = new this.constructor(this.broker);\n\n\t\tnewCtx.nodeID = this.nodeID;\n\t\tnewCtx.setEndpoint(ep || this.endpoint);\n\t\tnewCtx.options = this.options;\n\t\tnewCtx.parentID = this.parentID;\n\t\tnewCtx.caller = this.caller;\n\t\tnewCtx.level = this.level;\n\t\tnewCtx.params = this.params;\n\t\tnewCtx.meta = this.meta;\n\t\tnewCtx.locals = this.locals;\n\t\tnewCtx.requestID = this.requestID;\n\t\tnewCtx.tracing = this.tracing;\n\t\tnewCtx.span = this.span;\n\t\tnewCtx.needAck = this.needAck;\n\t\tnewCtx.ackID = this.ackID;\n\t\tnewCtx.eventName = this.eventName;\n\t\tnewCtx.eventType = this.eventType;\n\t\tnewCtx.eventGroups = this.eventGroups;\n\n\t\tnewCtx.cachedResult = this.cachedResult;\n\n\t\treturn newCtx;\n\t}\n\n\t/**\n\t * Set endpoint of context\n\t *\n\t * @param {Endpoint} endpoint\n\t * @memberof Context\n\t */\n\tsetEndpoint(endpoint) {\n\t\tthis.endpoint = endpoint;\n\t\tif (endpoint) {\n\t\t\tthis.nodeID = endpoint.id;\n\t\t\tif (endpoint.action) {\n\t\t\t\tthis.action = endpoint.action;\n\t\t\t\tthis.service = this.action.service;\n\t\t\t\tthis.event = null;\n\t\t\t} else if (endpoint.event) {\n\t\t\t\tthis.event =  endpoint.event;\n\t\t\t\tthis.service = this.event.service;\n\t\t\t\tthis.action = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set params of context\n\t *\n\t * @param {Object} newParams\n\t * @param {Boolean} cloning\n\t *\n\t * @memberof Context\n\t */\n\tsetParams(newParams, cloning = false) {\n\t\tif (cloning && newParams)\n\t\t\tthis.params = Object.assign({}, newParams);\n\t\telse\n\t\t\tthis.params = newParams;\n\t}\n\n\t/**\n\t * Call an other action. It creates a sub-context.\n\t *\n\t * @param {String} actionName\n\t * @param {Object?} params\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @example <caption>Call an other service with params & options</caption>\n\t * ctx.call(\"posts.get\", { id: 12 }, { timeout: 1000 });\n\t *\n\t * @memberof Context\n\t */\n\tcall(actionName, params, _opts) {\n\t\tconst opts = Object.assign({\n\t\t\tparentCtx: this\n\t\t}, _opts);\n\n\t\tif (this.options.timeout > 0 && this.startHrTime) {\n\t\t\t// Distributed timeout handling. Decrementing the timeout value with the elapsed time.\n\t\t\t// If the timeout below 0, skip the call.\n\t\t\tconst diff = process.hrtime(this.startHrTime);\n\t\t\tconst duration = (diff[0] * 1e3) + (diff[1] / 1e6);\n\t\t\tconst distTimeout = this.options.timeout - duration;\n\n\t\t\tif (distTimeout <= 0) {\n\t\t\t\treturn this.broker.Promise.reject(new RequestSkippedError({ action: actionName, nodeID: this.broker.nodeID }));\n\t\t\t}\n\n\t\t\tif (!opts.timeout || distTimeout < opts.timeout)\n\t\t\t\topts.timeout = distTimeout;\n\t\t}\n\n\t\t// Max calling level check to avoid calling loops\n\t\tif (this.broker.options.maxCallLevel > 0 && this.level >= this.broker.options.maxCallLevel) {\n\t\t\treturn this.broker.Promise.reject(new MaxCallLevelError({ nodeID: this.broker.nodeID, level: this.level }));\n\t\t}\n\n\t\tlet p = this.broker.call(actionName, params, opts);\n\n\t\t// Merge metadata with sub context metadata\n\t\treturn p.then(res => {\n\t\t\tif (p.ctx)\n\t\t\t\tmergeMeta(this, p.ctx.meta);\n\n\t\t\treturn res;\n\t\t}).catch(err => {\n\t\t\tif (p.ctx)\n\t\t\t\tmergeMeta(this, p.ctx.meta);\n\n\t\t\treturn this.broker.Promise.reject(err);\n\t\t});\n\t}\n\n\tmcall(def, _opts) {\n\t\tconst opts = Object.assign({\n\t\t\tparentCtx: this\n\t\t}, _opts);\n\n\t\tif (this.options.timeout > 0 && this.startHrTime) {\n\t\t\t// Distributed timeout handling. Decrementing the timeout value with the elapsed time.\n\t\t\t// If the timeout below 0, skip the call.\n\t\t\tconst diff = process.hrtime(this.startHrTime);\n\t\t\tconst duration = (diff[0] * 1e3) + (diff[1] / 1e6);\n\t\t\tconst distTimeout = this.options.timeout - duration;\n\n\t\t\tif (distTimeout <= 0) {\n\t\t\t\tconst action = (Array.isArray(def) ? def : Object.values(def)).map(d => d.action).join(\", \");\n\t\t\t\treturn this.broker.Promise.reject(new RequestSkippedError({ action, nodeID: this.broker.nodeID }));\n\t\t\t}\n\n\t\t\tif (!opts.timeout || distTimeout < opts.timeout)\n\t\t\t\topts.timeout = distTimeout;\n\t\t}\n\n\t\t// Max calling level check to avoid calling loops\n\t\tif (this.broker.options.maxCallLevel > 0 && this.level >= this.broker.options.maxCallLevel) {\n\t\t\treturn this.broker.Promise.reject(new MaxCallLevelError({ nodeID: this.broker.nodeID, level: this.level }));\n\t\t}\n\n\t\tlet p = this.broker.mcall(def, opts);\n\n\t\t// Merge metadata with sub context metadata\n\t\treturn p.then(res => {\n\t\t\tif (Array.isArray(p.ctx) && p.ctx.length)\n\t\t\t\tp.ctx.forEach(ctx => mergeMeta(this, ctx.meta));\n\n\t\t\treturn res;\n\t\t}).catch(err => {\n\t\t\tif (Array.isArray(p.ctx) && p.ctx.length)\n\t\t\t\tp.ctx.forEach(ctx => mergeMeta(this, ctx.meta));\n\n\t\t\treturn this.broker.Promise.reject(err);\n\t\t});\n\t}\n\n\t/**\n\t * Emit an event (grouped & balanced global event)\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @example\n\t * ctx.emit(\"user.created\", { entity: user, creator: ctx.meta.user });\n\t *\n\t * @memberof Context\n\t */\n\temit(eventName, data, opts) {\n\t\tif (Array.isArray(opts) || isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\topts.parentCtx = this;\n\t\treturn this.broker.emit(eventName, data, opts);\n\t}\n\n\t/**\n\t * Emit an event for all local & remote services\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @example\n\t * ctx.broadcast(\"user.created\", { entity: user, creator: ctx.meta.user });\n\t *\n\t * @memberof Context\n\t */\n\tbroadcast(eventName, data, opts) {\n\t\tif (Array.isArray(opts) || isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\topts.parentCtx = this;\n\t\treturn this.broker.broadcast(eventName, data, opts);\n\t}\n\n\t/**\n\t * Start a new child tracing span.\n\t *\n\t * @param {String} name\n\t * @param {Object?} opts\n\t * @returns {Span}\n\t * @memberof Context\n\t */\n\tstartSpan(name, opts) {\n\t\tlet span;\n\t\tif (this.span) {\n\t\t\tspan = this.span.startSpan(name, Object.assign({ ctx: this }, opts));\n\t\t} else {\n\t\t\tspan = this.broker.tracer.startSpan(name, Object.assign({ ctx: this }, opts));\n\t\t}\n\n\t\tthis._spanStack.push(span);\n\t\tthis.span = span;\n\n\t\treturn span;\n\t}\n\n\t/**\n\t * Finish an active span.\n\t *\n\t * @param {Span} span\n\t * @param {Number?} time\n\t */\n\tfinishSpan(span, time) {\n\t\tif (!span.isActive()) return;\n\n\t\tspan.finish(time);\n\n\t\tconst idx = this._spanStack.findIndex(sp => sp == span);\n\t\tif (idx !== -1) {\n\t\t\tthis._spanStack.splice(idx, 1);\n\t\t\tthis.span = this._spanStack[this._spanStack.length - 1];\n\t\t} else {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.service.logger.warn(\"This span is not assigned to this context\", span);\n\t\t}\n\t}\n\n\t/**\n\t * Convert Context to a printable POJO object.\n\t */\n\ttoJSON() {\n\t\tconst res = _.pick(this, [\n\t\t\t\"id\",\n\t\t\t\"nodeID\",\n\t\t\t\"action.name\",\n\t\t\t\"event.name\",\n\t\t\t\"service.name\",\n\t\t\t\"service.version\",\n\t\t\t\"service.fullName\",\n\t\t\t\"options\",\n\t\t\t\"parentID\",\n\t\t\t\"caller\",\n\t\t\t\"level\",\n\t\t\t\"params\",\n\t\t\t\"meta\",\n\t\t\t//\"locals\",\n\t\t\t\"requestID\",\n\t\t\t\"tracing\",\n\t\t\t\"span\",\n\t\t\t\"needAck\",\n\t\t\t\"ackID\",\n\t\t\t\"eventName\",\n\t\t\t\"eventType\",\n\t\t\t\"eventGroups\",\n\t\t\t\"cachedResult\"\n\t\t]);\n\n\t\treturn res;\n\t}\n\n\t/* istanbul ignore next */\n\t[util.inspect.custom](depth, options) {\n\t\t// https://nodejs.org/docs/latest-v8.x/api/util.html#util_custom_inspection_functions_on_objects\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(\"[Context]\", \"special\");\n\t\t}\n\n\t\tconst inner = util.inspect(this.toJSON(), options);\n\t\treturn `${options.stylize(\"Context\", \"special\")}< ${inner} >`;\n\t}\n}\n\nmodule.exports = Context;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { MoleculerClientError } = require(\"./errors\");\nconst utils = require(\"./utils\");\n\nmodule.exports = function() {\n\tconst schema = {\n\t\tname: \"$node\",\n\n\t\tactions: {\n\t\t\tlist: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\twithServices: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tonlyAvailable: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\treturn this.broker.registry.getNodeList(ctx.params);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tservices: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\tonlyLocal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tskipInternal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\twithActions: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\twithEvents: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tonlyAvailable: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tgrouping: { type: \"boolean\", optional: true, convert: true, default: true },\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\treturn this.broker.registry.getServiceList(ctx.params);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tactions: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\tonlyLocal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tskipInternal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\twithEndpoints: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tonlyAvailable: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\treturn this.broker.registry.getActionList(ctx.params);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tevents: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\tonlyLocal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tskipInternal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\twithEndpoints: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tonlyAvailable: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\treturn this.broker.registry.getEventList(ctx.params);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thealth: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\thandler() {\n\t\t\t\t\treturn this.broker.getHealthStatus();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\toptions: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {},\n\t\t\t\thandler() {\n\t\t\t\t\treturn utils.safetyObject(this.broker.options, this.broker.options);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tmetrics: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\ttypes: { type: \"multi\", optional: true, rules: [ { type: \"string\" }, { type: \"array\", items: \"string\" } ] },\n\t\t\t\t\tincludes: { type: \"multi\", optional: true, rules: [ { type: \"string\" }, { type: \"array\", items: \"string\" } ] },\n\t\t\t\t\texcludes: { type: \"multi\", optional: true, rules: [ { type: \"string\" }, { type: \"array\", items: \"string\" } ] }\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\tif (!this.broker.isMetricsEnabled())\n\t\t\t\t\t\treturn this.Promise.reject(new MoleculerClientError(\"Metrics feature is disabled\", 400, \"METRICS_DISABLED\"));\n\n\t\t\t\t\treturn this.broker.metrics.list(ctx.params);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn schema;\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst EventEmitter2 \t\t= require(\"eventemitter2\").EventEmitter2;\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst glob \t\t\t\t\t= require(\"glob\");\nconst path \t\t\t\t\t= require(\"path\");\n\nconst Transit \t\t\t\t= require(\"./transit\");\nconst Registry \t\t\t\t= require(\"./registry\");\nconst E \t\t\t\t\t= require(\"./errors\");\nconst utils \t\t\t\t= require(\"./utils\");\nconst LoggerFactory\t\t\t= require(\"./logger-factory\");\nconst Validators \t\t\t= require(\"./validators\");\n//const AsyncStorage \t\t\t= require(\"./async-storage\");\n\nconst Cachers \t\t\t\t= require(\"./cachers\");\nconst Transporters \t\t\t= require(\"./transporters\");\nconst Serializers \t\t\t= require(\"./serializers\");\nconst H \t\t\t\t\t= require(\"./health\");\nconst MiddlewareHandler\t\t= require(\"./middleware\");\nconst cpuUsage \t\t\t\t= require(\"./cpu-usage\");\n\nconst { MetricRegistry, METRIC }\t= require(\"./metrics\");\nconst { Tracer }\t\t\t= require(\"./tracing\");\n\n/**\n * Default broker options\n */\nconst defaultOptions = {\n\tnamespace: \"\",\n\tnodeID: null,\n\n\tlogger: true,\n\tlogLevel: null,\n\n\ttransporter: null, //\"TCP\",\n\n\trequestTimeout: 0 * 1000,\n\tretryPolicy: {\n\t\tenabled: false,\n\t\tretries: 5,\n\t\tdelay: 100,\n\t\tmaxDelay: 1000,\n\t\tfactor: 2,\n\t\tcheck: err => err && !!err.retryable\n\t},\n\n\tcontextParamsCloning: false,\n\tmaxCallLevel: 0,\n\theartbeatInterval: 10,\n\theartbeatTimeout: 30,\n\n\ttracking: {\n\t\tenabled: false,\n\t\tshutdownTimeout: 5000,\n\t},\n\n\tdisableBalancer: false,\n\n\tregistry: {\n\t\tstrategy: \"RoundRobin\",\n\t\tpreferLocal: true\n\t},\n\n\tcircuitBreaker: {\n\t\tenabled: false,\n\t\tthreshold: 0.5,\n\t\twindowTime: 60,\n\t\tminRequestCount: 20,\n\t\thalfOpenTime: 10 * 1000,\n\t\tcheck: err => err && err.code >= 500\n\t},\n\n\tbulkhead: {\n\t\tenabled: false,\n\t\tconcurrency: 10,\n\t\tmaxQueueSize: 100,\n\t},\n\n\ttransit: {\n\t\tmaxQueueSize: 50 * 1000, // 50k ~ 400MB,\n\t\tmaxChunkSize: 256*1024, // 256KB\n\t\tdisableReconnect: false,\n\t\tdisableVersionCheck: false\n\t},\n\n\tuidGenerator: null,\n\n\terrorHandler: null,\n\n\tcacher: null,\n\tserializer: null,\n\n\tvalidator: true,\n\n\tmetrics: false,\n\ttracing: false,\n\n\tinternalServices: true,\n\tinternalMiddlewares: true,\n\tdependencyInterval: 1000,\n\n\thotReload: false,\n\n\tmiddlewares: null,\n\n\treplCommands: null,\n\treplDelimiter: null,\n\n\tmetadata: {},\n\n\tskipProcessEventRegistration: false,\n\n\t/**\n\t * Maximum size of objects that can be serialized\n\t *\n\t * On serialization process, check each object property size (based on length or size property value)\n\t * and trim it, if object size bigger than maxSafeObjectSize value\n\t *\n\t * @type {(number|null)}\n\t */\n\tmaxSafeObjectSize: null,\n\t// ServiceFactory: null,\n\t// ContextFactory: null\n\t// Promise: null\n};\n\n/**\n * Service broker class\n *\n * @class ServiceBroker\n */\nclass ServiceBroker {\n\n\t/**\n\t * Creates an instance of ServiceBroker.\n\t *\n\t * @param {Object} options\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tconstructor(options) {\n\t\ttry {\n\t\t\tthis.options = _.defaultsDeep(options, defaultOptions);\n\n\t\t\t// Custom Promise lib\n\t\t\tif (this.options.Promise) {\n\t\t\t\tthis.Promise = this.options.Promise;\n\t\t\t} else {\n\t\t\t\t// Use native Promise lib\n\t\t\t\tthis.Promise = Promise;\n\t\t\t}\n\t\t\tutils.polyfillPromise(this.Promise);\n\t\t\tServiceBroker.Promise = this.Promise;\n\n\t\t\t// Broker started flag\n\t\t\tthis.started = false;\n\n\t\t\t// Class factories\n\t\t\tthis.ServiceFactory = this.options.ServiceFactory || require(\"./service\");\n\t\t\tthis.ContextFactory = this.options.ContextFactory || require(\"./context\");\n\n\t\t\t// Namespace\n\t\t\tthis.namespace = this.options.namespace || \"\";\n\n\t\t\t// Metadata\n\t\t\tthis.metadata = this.options.metadata || {};\n\n\t\t\t// Self nodeID\n\t\t\tthis.nodeID = this.options.nodeID || utils.getNodeID();\n\n\t\t\t// Instance ID\n\t\t\tthis.instanceID = utils.generateToken();\n\n\t\t\t// Internal maps\n\t\t\tthis.services = [];\n\n\t\t\t// Internal event bus\n\t\t\tthis.localBus = new EventEmitter2({\n\t\t\t\twildcard: true,\n\t\t\t\tmaxListeners: 100\n\t\t\t});\n\n\t\t\t// Log Factory\n\t\t\tthis.loggerFactory = new LoggerFactory(this);\n\t\t\tthis.loggerFactory.init(this.options.logger);\n\n\t\t\t// Logger\n\t\t\tthis.logger = this.getLogger(\"broker\");\n\n\t\t\tthis.logger.info(`Moleculer v${this.MOLECULER_VERSION} is starting...`);\n\t\t\tthis.logger.info(`Namespace: ${this.namespace || \"<not defined>\"}`);\n\t\t\tthis.logger.info(`Node ID: ${this.nodeID}`);\n\n\t\t\t// Async storage for Contexts\n\t\t\t//this.scope = new AsyncStorage(this);\n\n\t\t\t// Metrics Registry\n\t\t\tthis.metrics = new MetricRegistry(this, this.options.metrics);\n\t\t\tthis.metrics.init();\n\t\t\tthis.registerMoleculerMetrics();\n\n\t\t\t// Middleware handler\n\t\t\tthis.middlewares = new MiddlewareHandler(this);\n\n\t\t\t// Service registry\n\t\t\tthis.registry = new Registry(this);\n\n\t\t\t// Cacher\n\t\t\tthis.cacher = Cachers.resolve(this.options.cacher);\n\t\t\tif (this.cacher) {\n\t\t\t\tthis.cacher.init(this);\n\n\t\t\t\tconst name = this.getConstructorName(this.cacher);\n\t\t\t\tthis.logger.info(`Cacher: ${name}`);\n\t\t\t}\n\n\t\t\t// Serializer\n\t\t\tthis.serializer = Serializers.resolve(this.options.serializer);\n\t\t\tthis.serializer.init(this);\n\n\t\t\tconst serializerName = this.getConstructorName(this.serializer);\n\t\t\tthis.logger.info(`Serializer: ${serializerName}`);\n\n\t\t\t// Validator\n\t\t\tif (this.options.validator) {\n\t\t\t\tthis.validator = Validators.resolve(this.options.validator);\n\t\t\t\tif (this.validator) {\n\t\t\t\t\tconst validatorName = this.getConstructorName(this.validator);\n\t\t\t\t\tthis.logger.info(`Validator: ${validatorName}`);\n\t\t\t\t\tthis.validator.init(this);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tracing\n\t\t\tthis.tracer = new Tracer(this, this.options.tracing);\n\t\t\tthis.tracer.init();\n\n\t\t\t// Register middlewares\n\t\t\tthis.registerMiddlewares(this.options.middlewares);\n\n\t\t\t// Transit & Transporter\n\t\t\tif (this.options.transporter) {\n\t\t\t\tconst tx = Transporters.resolve(this.options.transporter);\n\t\t\t\tthis.transit = new Transit(this, tx, this.options.transit);\n\n\t\t\t\tconst txName = this.getConstructorName(tx);\n\t\t\t\tthis.logger.info(`Transporter: ${txName}`);\n\n\t\t\t\tif (this.options.disableBalancer) {\n\t\t\t\t\tif (tx.hasBuiltInBalancer) {\n\t\t\t\t\t\tthis.logger.info(\"The broker built-in balancer is DISABLED.\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logger.warn(`The ${txName} has no built-in balancer. Broker balancer is ENABLED.`);\n\t\t\t\t\t\tthis.options.disableBalancer = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Change the call method if balancer is disabled\n\t\t\tif (this.options.disableBalancer) {\n\t\t\t\tthis.call = this.callWithoutBalancer;\n\t\t\t}\n\n\t\t\tthis.registry.init(this);\n\n\t\t\t// Register internal actions\n\t\t\tif (this.options.internalServices)\n\t\t\t\tthis.registerInternalServices(this.options.internalServices);\n\n\t\t\t// Call `created` event handler in middlewares\n\t\t\tthis.callMiddlewareHookSync(\"created\", [this]);\n\n\t\t\t// Call `created` event handler from options\n\t\t\tif (utils.isFunction(this.options.created))\n\t\t\t\tthis.options.created(this);\n\n\t\t\t// Graceful exit\n\t\t\tthis._closeFn = () => {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.stop()\n\t\t\t\t\t.catch(err => this.logger.error(err))\n\t\t\t\t\t.then(() => process.exit(0));\n\t\t\t};\n\n\t\t\tprocess.setMaxListeners(0);\n\t\t\tif (this.options.skipProcessEventRegistration === false) {\n\t\t\t\tprocess.on(\"beforeExit\", this._closeFn);\n\t\t\t\tprocess.on(\"exit\", this._closeFn);\n\t\t\t\tprocess.on(\"SIGINT\", this._closeFn);\n\t\t\t\tprocess.on(\"SIGTERM\", this._closeFn);\n\t\t\t}\n\n\t\t} catch(err) {\n\t\t\tif (this.logger)\n\t\t\t\tthis.fatal(\"Unable to create ServiceBroker.\", err, true);\n\t\t\telse {\n\t\t\t\t/* eslint-disable-next-line no-console */\n\t\t\t\tconsole.error(\"Unable to create ServiceBroker.\", err);\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Register middlewares (user & internal)\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tregisterMiddlewares(userMiddlewares) {\n\t\t// Register user middlewares\n\t\tif (Array.isArray(userMiddlewares) && userMiddlewares.length > 0) {\n\t\t\t_.compact(userMiddlewares).forEach(mw => this.middlewares.add(mw));\n\n\t\t\tthis.logger.info(`Registered ${this.middlewares.count()} custom middleware(s).`);\n\t\t}\n\n\t\tif (this.options.internalMiddlewares) {\n\t\t\t// Register internal middlewares\n\n\t\t\tconst prevCount = this.middlewares.count();\n\n\t\t\t// 0. ActionHook\n\t\t\tthis.middlewares.add(\"ActionHook\");\n\n\t\t\t// 1. Validator\n\t\t\tif (this.validator && utils.isFunction(this.validator.middleware)) {\n\t\t\t\tconst mw = this.validator.middleware(this);\n\t\t\t\tif (utils.isPlainObject(mw))\n\t\t\t\t\tthis.middlewares.add(mw);\n\t\t\t\telse\n\t\t\t\t\tthis.middlewares.add({ localAction: mw });\n\t\t\t}\n\n\t\t\t// 2. Bulkhead\n\t\t\tthis.middlewares.add(\"Bulkhead\");\n\n\t\t\t// 3. Cacher\n\t\t\tif (this.cacher && utils.isFunction(this.cacher.middleware)) {\n\t\t\t\tconst mw = this.cacher.middleware();\n\t\t\t\tif (utils.isPlainObject(mw))\n\t\t\t\t\tthis.middlewares.add(mw);\n\t\t\t\telse\n\t\t\t\t\tthis.middlewares.add({ localAction: mw });\n\t\t\t}\n\n\t\t\t// 4. Context tracker\n\t\t\tthis.middlewares.add(\"ContextTracker\");\n\n\t\t\t// 5. CircuitBreaker\n\t\t\tthis.middlewares.add(\"CircuitBreaker\");\n\n\t\t\t// 6. Timeout\n\t\t\tthis.middlewares.add(\"Timeout\");\n\n\t\t\t// 7. Retry\n\t\t\tthis.middlewares.add(\"Retry\");\n\n\t\t\t// 8. Fallback\n\t\t\tthis.middlewares.add(\"Fallback\");\n\n\t\t\t// 9. Error handler\n\t\t\tthis.middlewares.add(\"ErrorHandler\");\n\n\t\t\t// 10. Tracing\n\t\t\tthis.middlewares.add(\"Tracing\");\n\n\t\t\t// 11. Metrics\n\t\t\tthis.middlewares.add(\"Metrics\");\n\n\t\t\t// 12. Debounce\n\t\t\tthis.middlewares.add(\"Debounce\");\n\n\t\t\t// 13. Throttle\n\t\t\tthis.middlewares.add(\"Throttle\");\n\n\t\t\tif (this.options.hotReload) {\n\t\t\t\t// 14. Hot Reload\n\t\t\t\tthis.middlewares.add(\"HotReload\");\n\t\t\t}\n\n\t\t\tthis.logger.info(`Registered ${this.middlewares.count() - prevCount} internal middleware(s).`);\n\t\t}\n\n\t\tthis.createService = this.wrapMethod(\"createService\", this.createService);\n\t\tthis.registerLocalService = this.wrapMethod(\"registerLocalService\", this.registerLocalService);\n\t\tthis.destroyService = this.wrapMethod(\"destroyService\", this.destroyService);\n\t\tthis.call = this.wrapMethod(\"call\", this.call);\n\t\tthis.callWithoutBalancer = this.wrapMethod(\"call\", this.callWithoutBalancer);\n\t\tthis.mcall = this.wrapMethod(\"mcall\", this.mcall);\n\t\tthis.emit = this.wrapMethod(\"emit\", this.emit);\n\t\tthis.broadcast = this.wrapMethod(\"broadcast\", this.broadcast);\n\t\tthis.broadcastLocal = this.wrapMethod(\"broadcastLocal\", this.broadcastLocal);\n\n\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_MIDDLEWARES_TOTAL,this.middlewares.count());\n\t}\n\n\t/**\n\t * Register Moleculer Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tif (!this.isMetricsEnabled()) return;\n\n\t\t// --- MOLECULER NODE METRICS ---\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_NODE_TYPE, type: METRIC.TYPE_INFO, description: \"Moleculer implementation type\" }).set(\"nodejs\");\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_NODE_VERSIONS_MOLECULER, type: METRIC.TYPE_INFO, description: \"Moleculer version number\" }).set(ServiceBroker.MOLECULER_VERSION);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_NODE_VERSIONS_PROTOCOL, type: METRIC.TYPE_INFO, description: \"Moleculer protocol version\" }).set(ServiceBroker.PROTOCOL_VERSION);\n\n\t\t// --- MOLECULER BROKER METRICS ---\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_BROKER_NAMESPACE, type: METRIC.TYPE_INFO, description: \"Moleculer namespace\" }).set(this.namespace);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_BROKER_STARTED, type: METRIC.TYPE_GAUGE, description: \"ServiceBroker started\" }).set(0);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_BROKER_LOCAL_SERVICES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of local services\" }).set(0);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_BROKER_MIDDLEWARES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of local middlewares\" }).set(0);\n\t}\n\n\t/**\n\t * Start broker. If has transporter, transporter.connect will be called.\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tstart() {\n\t\tconst startTime = Date.now();\n\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\t//this.tracer.restartScope();\n\t\t\t\t//this.scope.enable();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.callMiddlewareHook(\"starting\", [this]);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.transit)\n\t\t\t\t\treturn this.transit.connect();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Call service `started` handlers\n\t\t\t\treturn this.Promise.all(this.services.map(svc => svc._start.call(svc)))\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tthis.logger.error(\"Unable to start all services.\", err);\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.started = true;\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_STARTED, 1);\n\t\t\t\tthis.broadcastLocal(\"$broker.started\");\n\t\t\t\tthis.registry.regenerateLocalRawInfo(true);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.transit)\n\t\t\t\t\treturn this.transit.ready();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.callMiddlewareHook(\"started\", [this]);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (utils.isFunction(this.options.started))\n\t\t\t\t\treturn this.options.started(this);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tconst duration = Date.now() - startTime;\n\t\t\t\tthis.logger.info(`✔ ServiceBroker with ${this.services.length} service(s) is started successfully in ${utils.humanize(duration)}.`);\n\t\t\t});\n\t}\n\n\t/**\n\t * Stop broker. If has transporter, transporter.disconnect will be called.\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tstop() {\n\t\tthis.started = false;\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\tif (this.transit) {\n\t\t\t\t\tthis.registry.regenerateLocalRawInfo(true);\n\t\t\t\t\t// Send empty node info in order to block incoming requests\n\t\t\t\t\treturn this.registry.discoverer.sendLocalNodeInfo();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.callMiddlewareHook(\"stopping\", [this], { reverse: true });\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Call service `stopped` handlers\n\t\t\t\treturn this.Promise.all(this.services.map(svc => svc._stop.call(svc)))\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tthis.logger.error(\"Unable to stop all services.\", err);\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.transit) {\n\t\t\t\t\treturn this.transit.disconnect();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.cacher) {\n\t\t\t\t\treturn this.cacher.close();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.metrics) {\n\t\t\t\t\treturn this.metrics.stop();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.tracer) {\n\t\t\t\t\treturn this.tracer.stop();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.registry.stop();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.callMiddlewareHook(\"stopped\", [this], { reverse: true });\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (utils.isFunction(this.options.stopped))\n\t\t\t\t\treturn this.options.stopped(this);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.logger.error(err);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.logger.info(\"ServiceBroker is stopped. Good bye.\");\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_STARTED, 0);\n\n\t\t\t\tthis.broadcastLocal(\"$broker.stopped\");\n\n\t\t\t\tif (this.options.skipProcessEventRegistration === false) {\n\t\t\t\t\tprocess.removeListener(\"beforeExit\", this._closeFn);\n\t\t\t\t\tprocess.removeListener(\"exit\", this._closeFn);\n\t\t\t\t\tprocess.removeListener(\"SIGINT\", this._closeFn);\n\t\t\t\t\tprocess.removeListener(\"SIGTERM\", this._closeFn);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.loggerFactory.stop();\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\t// Silent\n\t\t\t});\n\t}\n\n\t/**\n\t * Switch the console to REPL mode.\n\t *\n\t * @example\n\t * broker.start().then(() => broker.repl());\n\t * @returns {object}\n\t */\n\trepl() {\n\t\tlet repl;\n\t\ttry {\n\t\t\trepl = require(\"moleculer-repl\");\n\t\t}\n\t\tcatch (error) {\n\t\t\tconsole.error(\"The 'moleculer-repl' package is missing. Please install it with 'npm install moleculer-repl' command.\"); // eslint-disable-line no-console\n\t\t\tthis.logger.error(\"The 'moleculer-repl' package is missing. Please install it with 'npm install moleculer-repl' command.\");\n\t\t\tthis.logger.debug(\"ERROR\", error);\n\t\t\treturn;\n\t\t}\n\n\t\tif (repl)\n\t\t{\n\t\t\tlet opts = null;\n\t\t\tconst delimiter = this.options.replDelimiter;\n\t\t\tconst customCommands = this.options.replCommands;\n\t\t\tdelimiter && (opts = { delimiter });\n\t\t\tcustomCommands && (opts = { ...opts,customCommands });\n\t\t\treturn repl(this, opts);\n\t\t}\n\t}\n\n\t/**\n\t * Global error handler.\n\t *\n\t * @param {Error} err\n\t * @param {object} info\n\t * @returns\n\t * @memberof ServiceBroker\n\t */\n\terrorHandler(err, info) {\n\t\tif (this.options.errorHandler) {\n\t\t\treturn this.options.errorHandler.call(this, err, info);\n\t\t}\n\n\t\tthrow err;\n\t}\n\n\t/**\n\t * Wrap a method with middlewares\n\t *\n\t * @param {string} method\n\t * @param {Function} handler\n\t * @param {any} bindTo\n\t * @param {Object} opts\n\t * @returns {Function}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\twrapMethod(name, handler, bindTo, opts) {\n\t\treturn this.middlewares.wrapMethod(name, handler, bindTo, opts);\n\t}\n\n\t/**\n\t * Call a handler asynchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns {Promise}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tcallMiddlewareHook(name, args, opts) {\n\t\treturn this.middlewares.callHandlers(name, args, opts);\n\t}\n\n\t/**\n\t * Call a handler synchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tcallMiddlewareHookSync(name, args, opts) {\n\t\treturn this.middlewares.callSyncHandlers(name, args, opts);\n\t}\n\n\t/**\n\t * Check metrics are enabled.\n\t *\n\t * @returns {boolean}\n\t * @memberof ServiceBroker\n\t */\n\tisMetricsEnabled() {\n\t\treturn this.metrics.isEnabled();\n\t}\n\n\t/**\n\t * Check tracing is enabled.\n\t *\n\t * @returns {boolean}\n\t * @memberof ServiceBroker\n\t */\n\tisTracingEnabled() {\n\t\treturn this.tracer.isEnabled();\n\t}\n\n\t/**\n\t * Get a custom logger for sub-modules (service, transporter, cacher, context...etc)\n\t *\n\t * @param {String} mod\tName of module\n\t * @param {Object} props\tModule properties (service name, version, ...etc\n\t * @returns {ModuleLogger}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tgetLogger(mod, props) {\n\t\tlet bindings = Object.assign({\n\t\t\tnodeID: this.nodeID,\n\t\t\tns: this.namespace,\n\t\t\tmod\n\t\t}, props);\n\n\t\treturn this.loggerFactory.getLogger(bindings);\n\t}\n\n\t/**\n\t * Fatal error. Print the message to console and exit the process (if need)\n\t *\n\t * @param {String} message\n\t * @param {Error?} err\n\t * @param {boolean} [needExit=true]\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tfatal(message, err, needExit = true) {\n\t\tif (this.logger)\n\t\t\tthis.logger.fatal(message, err);\n\t\telse\n\t\t\tconsole.error(message, err); // eslint-disable-line no-console\n\n\t\tif (needExit)\n\t\t\tprocess.exit(1);\n\t}\n\n\t/**\n\t * Load services from a folder\n\t *\n\t * @param {string} [folder=\"./services\"]\t\tFolder of services\n\t * @param {string} [fileMask=\"**\\/*.service.js\"]\tService filename mask\n\t * @returns\t{Number}\t\t\t\t\t\t\tNumber of found services\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tloadServices(folder = \"./services\", fileMask = \"**/*.service.js\") {\n\t\tthis.logger.debug(`Search services in '${folder}/${fileMask}'...`);\n\n\t\tlet serviceFiles;\n\n\t\tif (Array.isArray(fileMask))\n\t\t\tserviceFiles = fileMask.map(f => path.join(folder, f));\n\t\telse\n\t\t\tserviceFiles = glob.sync(path.join(folder, fileMask));\n\n\t\tif (serviceFiles)\n\t\t\tserviceFiles.forEach(filename => this.loadService(filename));\n\n\t\treturn serviceFiles.length;\n\t}\n\n\t/**\n\t * Load a service from file\n\t *\n\t * @param {string} \t\tPath of service\n\t * @returns\t{Service}\tLoaded service\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tloadService(filePath) {\n\t\tlet fName, schema;\n\n\t\ttry {\n\t\t\tfName = require.resolve(path.resolve(filePath));\n\t\t\tthis.logger.debug(`Load service '${path.basename(fName)}'...`);\n\n\t\t\tconst r = require(fName);\n\t\t\tschema = r.default != null ? r.default : r;\n\n\t\t\tlet svc;\n\t\t\tschema = this.normalizeSchemaConstructor(schema);\n\t\t\tif (Object.prototype.isPrototypeOf.call(this.ServiceFactory, schema)) {\n\t\t\t\t// Service implementation\n\t\t\t\tsvc = new schema(this);\n\n\t\t\t\t// If broker is started, call the started lifecycle event of service\n\t\t\t\tif (this.started)\n\t\t\t\t\tthis._restartService(svc);\n\n\t\t\t} else if (utils.isFunction(schema)) {\n\t\t\t\t// Function\n\t\t\t\tsvc = schema(this);\n\t\t\t\tif (!(svc instanceof this.ServiceFactory)) {\n\t\t\t\t\tsvc = this.createService(svc);\n\t\t\t\t} else {\n\t\t\t\t\t// If broker is started, call the started lifecycle event of service\n\t\t\t\t\tif (this.started)\n\t\t\t\t\t\tthis._restartService(svc);\n\t\t\t\t}\n\n\t\t\t} else if (schema) {\n\t\t\t\t// Schema object\n\t\t\t\tsvc = this.createService(schema);\n\t\t\t}\n\n\t\t\tif (svc) {\n\t\t\t\tsvc.__filename = fName;\n\t\t\t}\n\n\t\t\treturn svc;\n\n\t\t} catch (e) {\n\t\t\tthis.logger.error(`Failed to load service '${filePath}'`, e);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Create a new service by schema\n\t *\n\t * @param {any} schema\tSchema of service or a Service class\n\t * @param {any=} schemaMods\tModified schema\n\t * @returns {Service}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tcreateService(schema, schemaMods) {\n\t\tlet service;\n\n\t\tschema = this.normalizeSchemaConstructor(schema);\n\t\tif (Object.prototype.isPrototypeOf.call(this.ServiceFactory, schema)) {\n\t\t\tservice = new schema(this, schemaMods);\n\t\t} else {\n\t\t\tlet s = schema;\n\t\t\tif (schemaMods)\n\t\t\t\ts = this.ServiceFactory.mergeSchemas(schema, schemaMods);\n\n\t\t\tservice = new this.ServiceFactory(this, s);\n\t\t}\n\n\t\t// If broker has started yet, call the started lifecycle event of service\n\t\tif (this.started)\n\t\t\tthis._restartService(service);\n\n\t\treturn service;\n\t}\n\n\t/**\n\t * Restart a hot-reloaded service after creation.\n\t *\n\t * @param {Service} service\n\t * @returns {Promise}\n\t * @memberof ServiceBroker\n\t * @private\n\t */\n\t_restartService(service) {\n\t\treturn service._start.call(service)\n\t\t\t.catch(err => this.logger.error(\"Unable to start service.\", err));\n\t}\n\n\t/**\n\t * Add a local service instance\n\t *\n\t * @param {Service} service\n\t * @memberof ServiceBroker\n\t */\n\taddLocalService(service) {\n\t\tthis.services.push(service);\n\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_LOCAL_SERVICES_TOTAL, this.services.length);\n\t}\n\n\t/**\n\t * Register a local service to Service Registry\n\t *\n\t * @param {Object} registryItem\n\t * @memberof ServiceBroker\n\t */\n\tregisterLocalService(registryItem) {\n\t\tthis.registry.registerLocalService(registryItem);\n\t}\n\n\t/**\n\t * Destroy a local service\n\t *\n\t * @param {Service|string|object} service\n\t * @returns Promise<void>\n\t * @memberof ServiceBroker\n\t */\n\tdestroyService(service) {\n\t\tlet serviceName;\n\t\tlet serviceVersion;\n\t\tif (utils.isString(service)) {\n\t\t\tserviceName = service;\n\t\t\tservice = this.getLocalService(service);\n\t\t} else if (utils.isPlainObject(service)) {\n\t\t\tserviceName = service.name;\n\t\t\tserviceVersion  = service.version;\n\t\t\tservice = this.getLocalService(service.name, service.version);\n\t\t}\n\n\t\tif (!service) {\n\t\t\treturn this.Promise.reject(new E.ServiceNotFoundError({ service: serviceName, version: serviceVersion }));\n\t\t}\n\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => service._stop())\n\t\t\t.catch(err => {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.logger.error(`Unable to stop '${service.fullName}' service.`, err);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tutils.removeFromArray(this.services, service);\n\t\t\t\tthis.registry.unregisterService(service.fullName, this.nodeID);\n\n\t\t\t\tthis.logger.info(`Service '${service.fullName}' is stopped.`);\n\t\t\t\tthis.servicesChanged(true);\n\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_LOCAL_SERVICES_TOTAL, this.services.length);\n\t\t\t});\n\t}\n\n\t/**\n\t * It will be called when a new local or remote service\n\t * is registered or unregistered.\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tservicesChanged(localService = false) {\n\t\tthis.broadcastLocal(\"$services.changed\", { localService });\n\n\t\t// Should notify remote nodes, because our service list is changed.\n\t\tif (this.started && localService && this.transit) {\n\t\t\tthis.registry.discoverer.sendLocalNodeInfo();\n\t\t}\n\t}\n\n\t/**\n\t * Register internal services\n\t * @param {Object?} opts\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tregisterInternalServices(opts) {\n\t\topts = utils.isObject(opts) ? opts : {};\n\t\tthis.createService(require(\"./internals\")(this), opts[\"$node\"]);\n\t}\n\n\t/**\n\t * Get a local service by name\n\t *\n\t * Example:\n\t * \tgetLocalService(\"v2.posts\");\n\t * \tgetLocalService({ name: \"posts\", version: 2 });\n\t *\n\t * @param {String|ServiceSearchObj} name\n\t * @param {String|Number?} version\n\t * @returns {Service}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tgetLocalService(name, version) {\n\t\tif (arguments.length == 1) {\n\t\t\tif (utils.isString(name))\n\t\t\t\treturn this.services.find(service => service.fullName == name);\n\t\t\telse if (utils.isPlainObject(name))\n\t\t\t\treturn this.services.find(service => service.name == name.name && service.version == name.version);\n\t\t}\n\t\t// Deprecated\n\t\treturn this.services.find(service => service.name == name && service.version == version);\n\t}\n\n\t/**\n\t * Wait for other services\n\t *\n\t * @param {String|Array<String>} serviceNames\n\t * @param {Number} timeout Timeout in milliseconds\n\t * @param {Number} interval Check interval in milliseconds\n\t * @returns {Promise}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\twaitForServices(serviceNames, timeout, interval, logger = this.logger) {\n\t\tif (!Array.isArray(serviceNames))\n\t\t\tserviceNames = [serviceNames];\n\n\t\tserviceNames = _.uniq(_.compact(serviceNames.map(x => {\n\t\t\tif (utils.isPlainObject(x) && x.name)\n\t\t\t\treturn this.ServiceFactory.getVersionedFullName(x.name, x.version);\n\n\t\t\tif (utils.isString(x))\n\t\t\t\treturn x;\n\t\t})));\n\n\t\tif (serviceNames.length == 0)\n\t\t\treturn this.Promise.resolve();\n\n\t\tlogger.info(`Waiting for service(s) '${serviceNames.join(\", \")}'...`);\n\n\t\tconst startTime = Date.now();\n\t\treturn new this.Promise((resolve, reject) => {\n\t\t\tconst check = () => {\n\t\t\t\tconst count = serviceNames.filter(fullName => {\n\t\t\t\t\treturn this.registry.hasService(fullName);\n\t\t\t\t});\n\n\t\t\t\tif (count.length == serviceNames.length) {\n\t\t\t\t\tlogger.info(`Service(s) '${serviceNames.join(\", \")}' are available.`);\n\t\t\t\t\treturn resolve();\n\t\t\t\t}\n\n\t\t\t\tlogger.debug(`${count.length} of ${serviceNames.length} services are available. Waiting further...`);\n\n\t\t\t\tif (timeout && Date.now() - startTime > timeout)\n\t\t\t\t\treturn reject(new E.MoleculerServerError(\"Services waiting is timed out.\", 500, \"WAITFOR_SERVICES\", { services: serviceNames }));\n\n\t\t\t\tsetTimeout(check, interval || this.options.dependencyInterval || 1000);\n\t\t\t};\n\n\t\t\tcheck();\n\t\t});\n\t}\n\n\t/**\n\t * Find the next available endpoint for action\n\t *\n\t * @param {String} actionName\n\t * @param {Object?} opts\n\t * @param {Context?} ctx\n\t * @returns {Endpoint|Error}\n\t *\n\t * @performance-critical\n\t * @memberof ServiceBroker\n\t */\n\tfindNextActionEndpoint(actionName, opts, ctx) {\n\t\tif (typeof actionName !== \"string\") {\n\t\t\treturn actionName;\n\t\t} else {\n\t\t\tif (opts && opts.nodeID) {\n\t\t\t\tconst nodeID = opts.nodeID;\n\t\t\t\t// Direct call\n\t\t\t\tconst endpoint = this.registry.getActionEndpointByNodeId(actionName, nodeID);\n\t\t\t\tif (!endpoint) {\n\t\t\t\t\tthis.logger.warn(`Service '${actionName}' is not found on '${nodeID}' node.`);\n\t\t\t\t\treturn new E.ServiceNotFoundError({ action: actionName, nodeID });\n\t\t\t\t}\n\t\t\t\treturn endpoint;\n\n\t\t\t} else {\n\t\t\t\t// Get endpoint list by action name\n\t\t\t\tconst epList = this.registry.getActionEndpoints(actionName);\n\t\t\t\tif (!epList) {\n\t\t\t\t\tthis.logger.warn(`Service '${actionName}' is not registered.`);\n\t\t\t\t\treturn new E.ServiceNotFoundError({ action: actionName });\n\t\t\t\t}\n\n\t\t\t\t// Get the next available endpoint\n\t\t\t\tconst endpoint = epList.next(ctx);\n\t\t\t\tif (!endpoint) {\n\t\t\t\t\tconst errMsg = `Service '${actionName}' is not available.`;\n\t\t\t\t\tthis.logger.warn(errMsg);\n\t\t\t\t\treturn new E.ServiceNotAvailableError({ action: actionName });\n\t\t\t\t}\n\t\t\t\treturn endpoint;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Call an action\n\t *\n\t * @param {String} actionName\tname of action\n\t * @param {Object?} params\t\tparams of action\n\t * @param {Object?} opts\t\toptions of call (optional)\n\t * @returns {Promise}\n\t *\n\t * @performance-critical\n\t * @memberof ServiceBroker\n\t */\n\tcall(actionName, params, opts = {}) {\n\t\tif (params === undefined)\n\t\t\tparams = {}; // Backward compatibility\n\n\t\t// Create context\n\t\tlet ctx;\n\t\tif (opts.ctx != null) {\n\n\t\t\tconst endpoint = this.findNextActionEndpoint(actionName, opts, opts.ctx);\n\t\t\tif (endpoint instanceof Error) {\n\t\t\t\treturn this.Promise.reject(endpoint).catch(err => this.errorHandler(err, { actionName, params, opts }));\n\t\t\t}\n\n\t\t\t// Reused context\n\t\t\tctx = opts.ctx;\n\t\t\tctx.endpoint = endpoint;\n\t\t\tctx.nodeID = endpoint.id;\n\t\t\tctx.action = endpoint.action;\n\t\t\tctx.service = endpoint.action.service;\n\t\t} else {\n\t\t\t// New root context\n\t\t\tctx = this.ContextFactory.create(this, null, params, opts);\n\n\t\t\tconst endpoint = this.findNextActionEndpoint(actionName, opts, ctx);\n\t\t\tif (endpoint instanceof Error) {\n\t\t\t\treturn this.Promise.reject(endpoint).catch(err => this.errorHandler(err, { actionName, params, opts }));\n\t\t\t}\n\n\t\t\tctx.setEndpoint(endpoint);\n\t\t}\n\n\t\tif (ctx.endpoint.local)\n\t\t\tthis.logger.debug(\"Call action locally.\", { action: ctx.action.name, requestID: ctx.requestID });\n\t\telse\n\t\t\tthis.logger.debug(\"Call action on remote node.\", { action: ctx.action.name, nodeID: ctx.nodeID, requestID: ctx.requestID });\n\n\t\t//this.setCurrentContext(ctx);\n\n\t\tlet p = ctx.endpoint.action.handler(ctx);\n\n\t\t// Pointer to Context\n\t\tp.ctx = ctx;\n\n\t\treturn p;\n\t}\n\n\t/**\n\t * Call an action without built-in balancer.\n\t * You don't call it directly. Broker will replace the\n\t * original 'call' method to this if you disable the\n\t * built-in balancer with the \"disableBalancer\" option.\n\t *\n\t * @param {String} actionName\tname of action\n\t * @param {Object?} params\t\tparams of action\n\t * @param {Object?} opts \t\toptions of call (optional)\n\t * @returns {Promise}\n\t *\n\t * @private\n\t * @memberof ServiceBroker\n\t */\n\tcallWithoutBalancer(actionName, params, opts = {}) {\n\t\tif (params === undefined)\n\t\t\tparams = {}; // Backward compatibility\n\n\t\tlet nodeID = null;\n\t\tlet endpoint = null;\n\t\tif (typeof actionName !== \"string\") {\n\t\t\tendpoint = actionName;\n\t\t\tactionName = endpoint.action.name;\n\t\t\tnodeID = endpoint.id;\n\t\t} else {\n\t\t\tif (opts.nodeID) {\n\t\t\t\tnodeID = opts.nodeID;\n\t\t\t\tendpoint = this.registry.getActionEndpointByNodeId(actionName, nodeID);\n\t\t\t\tif (!endpoint) {\n\t\t\t\t\tthis.logger.warn(`Service '${actionName}' is not found on '${nodeID}' node.`);\n\t\t\t\t\treturn this.Promise.reject(new E.ServiceNotFoundError({ action: actionName, nodeID })).catch(err => this.errorHandler(err, { nodeID, actionName, params, opts }));\n\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Get endpoint list by action name\n\t\t\t\tconst epList = this.registry.getActionEndpoints(actionName);\n\t\t\t\tif (epList == null) {\n\t\t\t\t\tthis.logger.warn(`Service '${actionName}' is not registered.`);\n\t\t\t\t\treturn this.Promise.reject(new E.ServiceNotFoundError({ action: actionName })).catch(err => this.errorHandler(err, { actionName, params, opts }));\n\n\t\t\t\t}\n\n\t\t\t\tendpoint = epList.getFirst();\n\t\t\t\tif (endpoint == null) {\n\t\t\t\t\tconst errMsg = `Service '${actionName}' is not available.`;\n\t\t\t\t\tthis.logger.warn(errMsg);\n\t\t\t\t\treturn this.Promise.reject(new E.ServiceNotAvailableError({ action: actionName })).catch(err => this.errorHandler(err, { actionName, params, opts }));\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Create context\n\t\tlet ctx;\n\t\tif (opts.ctx != null) {\n\t\t\t// Reused context\n\t\t\tctx = opts.ctx;\n\t\t\tif (endpoint) {\n\t\t\t\tctx.endpoint = endpoint;\n\t\t\t\tctx.action = endpoint.action;\n\t\t\t}\n\t\t} else {\n\t\t\t// New root context\n\t\t\tctx = this.ContextFactory.create(this, endpoint, params, opts);\n\t\t}\n\t\tctx.nodeID = nodeID;\n\n\t\tthis.logger.debug(\"Call action on a node.\", { action: ctx.action.name, nodeID: ctx.nodeID, requestID: ctx.requestID });\n\n\t\tlet p = endpoint.action.remoteHandler(ctx);\n\n\t\t// Pointer to Context\n\t\tp.ctx = ctx;\n\n\t\treturn p;\n\t}\n\n\t_getLocalActionEndpoint(actionName, ctx) {\n\t\t// Find action by name\n\t\tlet epList = this.registry.getActionEndpoints(actionName);\n\t\tif (epList == null || !epList.hasLocal()) {\n\t\t\tthis.logger.warn(`Service '${actionName}' is not registered locally.`);\n\t\t\tthrow new E.ServiceNotFoundError({ action: actionName, nodeID: this.nodeID });\n\t\t}\n\n\t\t// Get local endpoint\n\t\tlet endpoint = epList.nextLocal(ctx);\n\t\tif (!endpoint) {\n\t\t\tthis.logger.warn(`Service '${actionName}' is not available locally.`);\n\t\t\tthrow new E.ServiceNotAvailableError({ action: actionName, nodeID: this.nodeID });\n\t\t}\n\n\t\treturn endpoint;\n\t}\n\n\t/**\n\t * Multiple action calls.\n\t *\n\t * @param {Array<Object>|Object} def Calling definitions.\n\t * @returns {Promise<Array<Object>|Object>}\n\t *\n\t * @example\n\t * Call `mcall` with an array:\n\t * ```js\n\t * broker.mcall([\n\t * \t{ action: \"posts.find\", params: { limit: 5, offset: 0 } },\n\t * \t{ action: \"users.find\", params: { limit: 5, sort: \"username\" }, opts: { timeout: 500 } }\n\t * ]).then(results => {\n\t * \tlet posts = results[0];\n\t * \tlet users = results[1];\n\t * })\n\t * ```\n\t *\n\t * @example\n\t * Call `mcall` with an Object:\n\t * ```js\n\t * broker.mcall({\n\t * \tposts: { action: \"posts.find\", params: { limit: 5, offset: 0 } },\n\t * \tusers: { action: \"users.find\", params: { limit: 5, sort: \"username\" }, opts: { timeout: 500 } }\n\t * }).then(results => {\n\t * \tlet posts = results.posts;\n\t * \tlet users = results.users;\n\t * })\n\t * ```\n\t * @throws MoleculerServerError - If the `def` is not an `Array` and not an `Object`.\n\t * @memberof ServiceBroker\n\t */\n\tmcall(def, opts) {\n\t\tif (Array.isArray(def)) {\n\t\t\treturn this.Promise.all(def.map(item => this.call(item.action, item.params, item.options || opts)));\n\n\t\t} else if (utils.isObject(def)) {\n\t\t\tlet results = {};\n\t\t\tlet promises = Object.keys(def).map(name => {\n\t\t\t\tconst item = def[name];\n\t\t\t\tconst options = item.options || opts;\n\t\t\t\treturn this.call(item.action, item.params, options).then(res => results[name] = res);\n\t\t\t});\n\n\t\t\tlet p = this.Promise.all(promises);\n\n\t\t\t// Pointer to Context\n\t\t\tp.ctx = promises.map(promise => promise.ctx);\n\n\t\t\treturn p.then(() => results);\n\t\t} else {\n\t\t\treturn this.Promise.reject(new E.MoleculerServerError(\"Invalid calling definition.\", 500, \"INVALID_PARAMETERS\"));\n\t\t}\n\t}\n\n\n\t/**\n\t * Emit an event (grouped & balanced global event)\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise<any>}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\temit(eventName, payload, opts) {\n\t\tif (Array.isArray(opts) || utils.isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\tconst promises = [];\n\n\t\tconst ctx = this.ContextFactory.create(this, null, payload, opts);\n\t\tctx.eventName = eventName;\n\t\tctx.eventType = \"emit\";\n\t\tctx.eventGroups = opts.groups;\n\n\t\tthis.logger.debug(`Emit '${eventName}' event`+ (opts.groups ? ` to '${opts.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\t// Call local/internal subscribers\n\t\tif (/^\\$/.test(eventName))\n\t\t\tthis.localBus.emit(eventName, payload);\n\n\t\tif (!this.options.disableBalancer) {\n\n\t\t\tconst endpoints = this.registry.events.getBalancedEndpoints(eventName, opts.groups);\n\n\t\t\t// Grouping remote events (reduce the network traffic)\n\t\t\tconst groupedEP = {};\n\n\t\t\tendpoints.forEach(([ep, group]) => {\n\t\t\t\tif (ep.id == this.nodeID) {\n\t\t\t\t\t// Local service, call handler\n\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\tpromises.push(this.registry.events.callEventHandler(newCtx));\n\t\t\t\t} else {\n\t\t\t\t\t// Remote service\n\t\t\t\t\tconst e = groupedEP[ep.id];\n\t\t\t\t\tif (e)\n\t\t\t\t\t\te.groups.push(group);\n\t\t\t\t\telse\n\t\t\t\t\t\tgroupedEP[ep.id] = {\n\t\t\t\t\t\t\tep,\n\t\t\t\t\t\t\tgroups: [group]\n\t\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.transit) {\n\t\t\t\t// Remote service\n\t\t\t\t_.forIn(groupedEP, item => {\n\t\t\t\t\tconst newCtx = ctx.copy(item.ep);\n\t\t\t\t\tnewCtx.eventGroups = item.groups;\n\t\t\t\t\tpromises.push(this.transit.sendEvent(newCtx));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this.Promise.all(promises);\n\n\t\t} else if (this.transit) {\n\t\t\t// Disabled balancer case\n\t\t\tlet groups = opts.groups;\n\n\t\t\tif (!groups || groups.length == 0) {\n\t\t\t\t// Apply to all groups\n\t\t\t\tgroups = this.getEventGroups(eventName);\n\t\t\t}\n\n\t\t\tif (groups.length == 0)\n\t\t\t\treturn this.Promise.resolve();\n\n\t\t\tctx.eventGroups = groups;\n\t\t\treturn this.transit.sendEvent(ctx);\n\t\t}\n\t}\n\n\t/**\n\t * Broadcast an event for all local & remote services\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tbroadcast(eventName, payload, opts) {\n\t\tif (Array.isArray(opts) || utils.isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\tconst promises = [];\n\n\t\tthis.logger.debug(`Broadcast '${eventName}' event`+ (opts.groups ? ` to '${opts.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\tif (this.transit) {\n\t\t\tconst ctx = this.ContextFactory.create(this, null, payload, opts);\n\t\t\tctx.eventName = eventName;\n\t\t\tctx.eventType = \"broadcast\";\n\t\t\tctx.eventGroups = opts.groups;\n\n\t\t\tif (!this.options.disableBalancer) {\n\t\t\t\tconst endpoints = this.registry.events.getAllEndpoints(eventName, opts.groups);\n\n\t\t\t\t// Send to remote services\n\t\t\t\tendpoints.forEach(ep => {\n\t\t\t\t\tif (ep.id != this.nodeID) {\n\t\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\t\tpromises.push(this.transit.sendEvent(newCtx));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Disabled balancer case\n\t\t\t\tlet groups = opts.groups;\n\n\t\t\t\tif (!groups || groups.length == 0) {\n\t\t\t\t\t// Apply to all groups\n\t\t\t\t\tgroups = this.getEventGroups(eventName);\n\t\t\t\t}\n\n\t\t\t\tif (groups.length == 0)\n\t\t\t\t\treturn; // Return here because balancer disabled, so we can't call the local services.\n\n\t\t\t\tconst endpoints = this.registry.events.getAllEndpoints(eventName, groups);\n\n\t\t\t\t// Return here because balancer disabled, so we can't call the local services.\n\t\t\t\treturn this.Promise.all(endpoints.map(ep => {\n\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\tnewCtx.eventGroups = groups;\n\t\t\t\t\treturn this.transit.sendEvent(newCtx);\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\t// Send to local services\n\t\tpromises.push(this.broadcastLocal(eventName, payload, opts));\n\n\t\treturn this.Promise.all(promises);\n\t}\n\n\t/**\n\t * Broadcast an event for all local services\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} groups\n\t * @returns\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tbroadcastLocal(eventName, payload, opts) {\n\t\tif (Array.isArray(opts) || utils.isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\tthis.logger.debug(`Broadcast '${eventName}' local event`+ (opts.groups ? ` to '${opts.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\t// Call internal subscribers\n\t\tif (/^\\$/.test(eventName))\n\t\t\tthis.localBus.emit(eventName, payload);\n\n\t\tconst ctx = this.ContextFactory.create(this, null, payload, opts);\n\t\tctx.eventName = eventName;\n\t\tctx.eventType = \"broadcastLocal\";\n\t\tctx.eventGroups = opts.groups;\n\n\t\treturn this.emitLocalServices(ctx);\n\t}\n\n\t/**\n\t * Send ping to a node (or all nodes if nodeID is null)\n\t *\n\t * @param {String|Array<String>?} nodeID\n\t * @param {Number?} timeout\n\t * @returns {Promise}\n\t * @memberof ServiceBroker\n\t */\n\tping(nodeID, timeout = 2000) {\n\t\tif (this.transit && this.transit.connected) {\n\t\t\tif (utils.isString(nodeID)) {\n\t\t\t\t// Ping a single node\n\t\t\t\treturn new this.Promise(resolve => {\n\n\t\t\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t\t\tthis.localBus.off(\"$node.pong\", handler);\n\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t}, timeout);\n\n\t\t\t\t\tconst handler = pong => {\n\t\t\t\t\t\tif (pong.nodeID == nodeID) {\n\t\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\t\tthis.localBus.off(\"$node.pong\", handler);\n\t\t\t\t\t\t\tresolve(pong);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.localBus.on(\"$node.pong\", handler);\n\n\t\t\t\t\tthis.transit.sendPing(nodeID);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tconst pongs = {};\n\t\t\t\tlet nodes = nodeID;\n\t\t\t\tif (!nodes) {\n\t\t\t\t\tnodes = this.registry.getNodeList({ onlyAvailable: true })\n\t\t\t\t\t\t.filter(node => node.id != this.nodeID)\n\t\t\t\t\t\t.map(node => node.id);\n\t\t\t\t}\n\n\t\t\t\tnodes.forEach(id => pongs[id] = null);\n\t\t\t\tconst processing = new Set(nodes);\n\n\t\t\t\t// Ping multiple nodes\n\t\t\t\treturn new this.Promise(resolve => {\n\n\t\t\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t\t\tthis.localBus.off(\"$node.pong\", handler);\n\t\t\t\t\t\tresolve(pongs);\n\t\t\t\t\t}, timeout);\n\n\t\t\t\t\tconst handler = pong => {\n\t\t\t\t\t\tpongs[pong.nodeID] = pong;\n\t\t\t\t\t\tprocessing.delete(pong.nodeID);\n\n\t\t\t\t\t\tif (processing.size == 0) {\n\t\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\t\tthis.localBus.off(\"$node.pong\", handler);\n\t\t\t\t\t\t\tresolve(pongs);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.localBus.on(\"$node.pong\", handler);\n\n\t\t\t\t\tnodes.forEach(id => this.transit.sendPing(id));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn this.Promise.resolve(nodeID ? null : []);\n\t}\n\n\t/**\n\t * Get local node health status\n\t *\n\t * @returns {Promise}\n\t * @memberof ServiceBroker\n\t */\n\tgetHealthStatus() {\n\t\treturn H.getHealthStatus(this);\n\t}\n\n\t/**\n\t * Get local node info.\n\t *\n\t * @returns\n\t * @memberof ServiceBroker\n\t */\n\tgetLocalNodeInfo() {\n\t\treturn this.registry.getLocalNodeInfo();\n\t}\n\n\t/**\n\t * Get event groups by event name\n\t *\n\t * @param {String} eventName\n\t * @returns\n\t * @memberof ServiceBroker\n\t */\n\tgetEventGroups(eventName) {\n\t\treturn this.registry.events.getGroups(eventName);\n\t}\n\n\t/**\n\t * Has registered event listener for an event name?\n\t *\n\t * @param {String} eventName\n\t * @returns {boolean}\n\t */\n\thasEventListener(eventName) {\n\t\treturn this.registry.events.getAllEndpoints(eventName).length > 0;\n\t}\n\n\t/**\n\t * Get all registered event listener for an event name.\n\t *\n\t * @param {String} eventName\n\t * @returns {Array<Object>}\n\t */\n\tgetEventListeners(eventName) {\n\t\treturn this.registry.events.getAllEndpoints(eventName);\n\t}\n\n\t/**\n\t * Emit event to local nodes. It is called from transit when a remote event received\n\t * or from `broadcastLocal`\n\t *\n\t * @param {Context} ctx\n\t * @returns\n\t * @memberof ServiceBroker\n\t */\n\temitLocalServices(ctx) {\n\t\treturn this.registry.events.emitLocalServices(ctx);\n\t}\n\n\t/**\n\t * Set the current Context to the async storage.\n\t *\n\t * @param {Context} ctx\n\t * @memberof ServiceBroker\n\t *\n\tsetCurrentContext(ctx) {\n\t\tthis.scope.setSessionData(ctx);\n\t}*/\n\n\t/**\n\t * Get the current Context from the async storage.\n\t *\n\t * @returns {Context?}\n\t * @memberof ServiceBroker\n\t *\n\tgetCurrentContext() {\n\t\treturn this.scope.getSessionData();\n\t}*/\n\n\t/**\n\t * Get node overall CPU usage\n\t *\n\t * @returns {Promise<object>}\n\t * @memberof ServiceBroker\n\t */\n\tgetCpuUsage() {\n\t\treturn cpuUsage();\n\t}\n\n\t/**\n\t * Generate an UUID.\n\t *\n\t * @returns {String} uuid\n\t */\n\tgenerateUid() {\n\t\tif (this.options.uidGenerator)\n\t\t\treturn this.options.uidGenerator.call(this, this);\n\n\t\treturn utils.generateToken();\n\t}\n\n\n\t/**\n\t * Get the Constructor name of any object if it exists\n\t * @param {any} obj\n\t * @returns {string}\n\t *\n\t */\n\tgetConstructorName(obj) {\n\t\tlet target = obj.prototype;\n\t\tif (target && target.constructor && target.constructor.name){\n\t\t\treturn target.constructor.name;\n\t\t}\n\t\tif (obj.constructor && obj.constructor.name){\n\t\t\treturn obj.constructor.name;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Ensure the service schema will be prototype of ServiceFactory;\n\t *\n\t * @param {any} schema\n\t * @returns {string}\n\t *\n\t */\n\tnormalizeSchemaConstructor(schema) {\n\t\tif (Object.prototype.isPrototypeOf.call(this.ServiceFactory, schema)) {\n\t\t\treturn schema;\n\t\t}\n\t\t// Sometimes the schame was loaded from another node_module or is a object copy.\n\t\t// Then we will check if the constructor name is the same, asume that is a derivate object\n\t\t// and adjust the prototype of the schema.\n\t\tlet serviceName = this.getConstructorName(this.ServiceFactory);\n\t\tlet target = this.getConstructorName(schema);\n\t\tif (serviceName === target){\n\t\t\tObject.setPrototypeOf(schema, this.ServiceFactory);\n\t\t\treturn schema;\n\t\t}\n\t\t// Depending how the schema was create the correct constructor name (from base class) will be locate on __proto__.\n\t\ttarget = this.getConstructorName(schema.__proto__);\n\t\tif (serviceName === target){\n\t\t\tObject.setPrototypeOf(schema.__proto__, this.ServiceFactory);\n\t\t\treturn schema;\n\t\t}\n\t\t// This is just to handle some idiosyncrasies from Jest.\n\t\tif (schema._isMockFunction){\n\t\t\ttarget = this.getConstructorName(schema.prototype.__proto__);\n\t\t\tif (serviceName === target){\n\t\t\t\tObject.setPrototypeOf(schema, this.ServiceFactory);\n\t\t\t\treturn schema;\n\t\t\t}\n\t\t}\n\t\treturn schema;\n\t}\n}\n\n/**\n * Version of Moleculer\n */\nServiceBroker.MOLECULER_VERSION = require(\"../package.json\").version;\nServiceBroker.prototype.MOLECULER_VERSION = ServiceBroker.MOLECULER_VERSION;\n\n/**\n * Version of Protocol\n */\nServiceBroker.PROTOCOL_VERSION = \"4\";\nServiceBroker.prototype.PROTOCOL_VERSION = ServiceBroker.PROTOCOL_VERSION;\n\n/**\n * Default configuration\n */\nServiceBroker.defaultOptions = defaultOptions;\n\nmodule.exports = ServiceBroker;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst {\n\tCIRCUIT_CLOSE,\n\tCIRCUIT_HALF_OPEN,\n\tCIRCUIT_HALF_OPEN_WAIT,\n\tCIRCUIT_OPEN\n} = require(\"./src/constants\");\n\nmodule.exports = {\n\tServiceBroker: require(\"./src/service-broker\"),\n\tLoggers: require(\"./src/loggers\"),\n\tService: require(\"./src/service\"),\n\tContext: require(\"./src/context\"),\n\n\tCachers: require(\"./src/cachers\"),\n\n\tTransporters: require(\"./src/transporters\"),\n\tSerializers: require(\"./src/serializers\"),\n\tStrategies: require(\"./src/strategies\"),\n\tValidators: require(\"./src/validators\"),\n\tValidator: require(\"./src/validators/fastest\"), // deprecated\n\tTracerExporters: require(\"./src/tracing/exporters\"),\n\tMetricTypes: require(\"./src/metrics/types\"),\n\tMetricReporters: require(\"./src/metrics/reporters\"),\n\tMETRIC: require(\"./src/metrics/constants\"),\n\n\tRegistry: require(\"./src/registry\"),\n\tDiscoverers: require(\"./src/registry/discoverers\"),\n\n\tMiddlewares: require(\"./src/middlewares\"),\n\n\tErrors: require(\"./src/errors\"),\n\n\tRunner: require(\"./src/runner\"),\n\tUtils: require(\"./src/utils\"),\n\n\tCIRCUIT_CLOSE,\n\tCIRCUIT_HALF_OPEN,\n\tCIRCUIT_HALF_OPEN_WAIT,\n\tCIRCUIT_OPEN,\n\n\tMOLECULER_VERSION: require(\"./src/service-broker\").MOLECULER_VERSION,\n\tPROTOCOL_VERSION: require(\"./src/service-broker\").PROTOCOL_VERSION\n};\n","import moleculer from './moleculer/index.js'\n\nexport const ServiceBroker = moleculer.ServiceBroker\nexport const Loggers = moleculer.Loggers\nexport const Service = moleculer.Service\nexport const Context = moleculer.Context\nexport const Cachers = moleculer.Cachers\nexport const Transporters = moleculer.Transporters\nexport const Serializers = moleculer.Serializers\nexport const Strategies = moleculer.Strategies\nexport const Validators = moleculer.Validators\nexport const TracerExporters = moleculer.TracerExporters\nexport const MetricTypes = moleculer.MetricTypes\nexport const MetricReporters = moleculer.MetricReporters\nexport const METRIC = moleculer.METRIC\nexport const Registry = moleculer.Registry\nexport const Discoverers = moleculer.Discoverers\nexport const Middlewares = moleculer.Middlewares\nexport const Errors = moleculer.Errors\nexport const Runner = false\nexport const Utils = moleculer.Utils\nexport const CIRCUIT_CLOSE = moleculer.CIRCUIT_CLOSE\nexport const CIRCUIT_HALF_OPEN = moleculer.CIRCUIT_HALF_OPEN\nexport const CIRCUIT_HALF_OPEN_WAIT = moleculer.CIRCUIT_HALF_OPEN_WAIT\nexport const CIRCUIT_OPEN = moleculer.CIRCUIT_OPEN\nexport const MOLECULER_VERSION = moleculer.MOLECULER_VERSION\nexport const PROTOCOL_VERSION = moleculer.PROTOCOL_VERSION\n"],"names":["CIRCUIT_CLOSE","CIRCUIT_HALF_OPEN","CIRCUIT_HALF_OPEN_WAIT","CIRCUIT_OPEN","global","self","window","Process","EventEmitter","[object Object]","super","this","title","browser","env","argv","version","versions","http_parser","node","v8","uv","zlib","ares","icu","modules","openssl","hrtime","pid","exitCode","connected","_startTime","Date","now","_errorCallback","code","emit","Error","cb","removeEventListener","addEventListener","Math","floor","performance","memory","rss","heapTotal","Number","MAX_SAFE_INTEGER","heapUsed","external","totalJSHeapSize","usedJSHeapSize","handler","args","queueMicrotask","proc","currentProcess","process","prop","bind","PACKET_UNKNOWN","PACKET_EVENT","PACKET_REQUEST","PACKET_RESPONSE","PACKET_DISCOVER","PACKET_INFO","PACKET_DISCONNECT","PACKET_HEARTBEAT","PACKET_PING","PACKET_PONG","PACKET_GOSSIP_REQ","PACKET_GOSSIP_RES","PACKET_GOSSIP_HELLO","DATATYPE_UNDEFINED","DATATYPE_NULL","DATATYPE_JSON","DATATYPE_BUFFER","Packet","type","target","payload","MoleculerError","ExtendableError","message","data","retryable","MoleculerRetryableError","MoleculerClientError","module","MoleculerServerError","ServiceNotFoundError","msg","nodeID","action","service","ServiceNotAvailableError","ValidationError","RequestTimeoutError","RequestSkippedError","RequestRejectedError","QueueIsFullError","MaxCallLevelError","level","ServiceSchemaError","BrokerOptionsError","GracefulStopTimeoutError","name","ProtocolVersionMismatchError","InvalidPacketDataError","BrokerDisconnectedError","stack","recreateError","err","Class","exports","TYPE_COUNTER","TYPE_GAUGE","TYPE_HISTOGRAM","TYPE_INFO","PROCESS_ARGUMENTS","PROCESS_PID","PROCESS_PPID","PROCESS_MEMORY_HEAP_SIZE_TOTAL","PROCESS_MEMORY_HEAP_SIZE_USED","PROCESS_MEMORY_RSS","PROCESS_MEMORY_EXTERNAL","PROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL","PROCESS_MEMORY_HEAP_SPACE_SIZE_USED","PROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE","PROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL","PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL","PROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL","PROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL","PROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL","PROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE","PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT","PROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY","PROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY","PROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE","PROCESS_UPTIME","PROCESS_INTERNAL_ACTIVE_HANDLES","PROCESS_INTERNAL_ACTIVE_REQUESTS","PROCESS_VERSIONS_NODE","PROCESS_EVENTLOOP_LAG_MIN","PROCESS_EVENTLOOP_LAG_AVG","PROCESS_EVENTLOOP_LAG_MAX","PROCESS_EVENTLOOP_LAG_COUNT","PROCESS_GC_TIME","PROCESS_GC_TOTAL_TIME","PROCESS_GC_EXECUTED_TOTAL","OS_MEMORY_FREE","OS_MEMORY_USED","OS_MEMORY_TOTAL","OS_UPTIME","OS_TYPE","OS_RELEASE","OS_HOSTNAME","OS_ARCH","OS_PLATFORM","OS_USER_UID","OS_USER_GID","OS_USER_USERNAME","OS_USER_HOMEDIR","OS_DATETIME_UNIX","OS_DATETIME_ISO","OS_DATETIME_UTC","OS_DATETIME_TZ_OFFSET","OS_NETWORK_ADDRESS","OS_NETWORK_MAC","OS_CPU_LOAD_1","OS_CPU_LOAD_5","OS_CPU_LOAD_15","OS_CPU_UTILIZATION","OS_CPU_USER","OS_CPU_SYSTEM","OS_CPU_TOTAL","OS_CPU_INFO_MODEL","OS_CPU_INFO_SPEED","OS_CPU_INFO_TIMES_USER","OS_CPU_INFO_TIMES_SYS","MOLECULER_NODE_TYPE","MOLECULER_NODE_VERSIONS_MOLECULER","MOLECULER_NODE_VERSIONS_LANG","MOLECULER_NODE_VERSIONS_PROTOCOL","MOLECULER_BROKER_NAMESPACE","MOLECULER_BROKER_STARTED","MOLECULER_BROKER_LOCAL_SERVICES_TOTAL","MOLECULER_BROKER_MIDDLEWARES_TOTAL","MOLECULER_REGISTRY_NODES_TOTAL","MOLECULER_REGISTRY_NODES_ONLINE_TOTAL","MOLECULER_REGISTRY_SERVICES_TOTAL","MOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL","MOLECULER_REGISTRY_ACTIONS_TOTAL","MOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL","MOLECULER_REGISTRY_EVENTS_TOTAL","MOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL","MOLECULER_REQUEST_TOTAL","MOLECULER_REQUEST_ACTIVE","MOLECULER_REQUEST_ERROR_TOTAL","MOLECULER_REQUEST_TIME","MOLECULER_REQUEST_LEVELS","MOLECULER_EVENT_EMIT_TOTAL","MOLECULER_EVENT_BROADCAST_TOTAL","MOLECULER_EVENT_BROADCASTLOCAL_TOTAL","MOLECULER_EVENT_RECEIVED_TOTAL","MOLECULER_EVENT_RECEIVED_ACTIVE","MOLECULER_EVENT_RECEIVED_ERROR_TOTAL","MOLECULER_EVENT_RECEIVED_TIME","MOLECULER_TRANSIT_PUBLISH_TOTAL","MOLECULER_TRANSIT_RECEIVE_TOTAL","MOLECULER_TRANSIT_REQUESTS_ACTIVE","MOLECULER_TRANSIT_STREAMS_SEND_ACTIVE","MOLECULER_TRANSIT_READY","MOLECULER_TRANSIT_CONNECTED","MOLECULER_TRANSIT_PONG_TIME","MOLECULER_TRANSIT_PONG_SYSTIME_DIFF","MOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL","MOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL","MOLECULER_TRANSPORTER_PACKETS_SENT_BYTES","MOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL","MOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES","MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE","MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL","MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE","MOLECULER_REQUEST_FALLBACK_TOTAL","MOLECULER_REQUEST_BULKHEAD_INFLIGHT","MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE","MOLECULER_EVENT_BULKHEAD_INFLIGHT","MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE","MOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL","MOLECULER_REQUEST_TIMEOUT_TOTAL","MOLECULER_CACHER_GET_TOTAL","MOLECULER_CACHER_GET_TIME","MOLECULER_CACHER_FOUND_TOTAL","MOLECULER_CACHER_SET_TOTAL","MOLECULER_CACHER_SET_TIME","MOLECULER_CACHER_DEL_TOTAL","MOLECULER_CACHER_DEL_TIME","MOLECULER_CACHER_CLEAN_TOTAL","MOLECULER_CACHER_CLEAN_TIME","MOLECULER_CACHER_EXPIRED_TOTAL","MOLECULER_DISCOVERER_REDIS_COLLECT_TOTAL","MOLECULER_DISCOVERER_REDIS_COLLECT_TIME","MOLECULER_DISCOVERER_ETCD_COLLECT_TOTAL","MOLECULER_DISCOVERER_ETCD_COLLECT_TIME","UNIT_BIT","UNIT_BYTE","UNIT_KILOBYTES","UNIT_MEGABYTE","UNIT_GIGABYTE","UNIT_TERRABYTE","UNIT_PETABYTE","UNIT_EXOBYTE","UNIT_NANOSECONDS","UNIT_MICROSECONDS","UNIT_MILLISECONDS","UNIT_SECONDS","UNIT_MINUTE","UNIT_HOUR","UNIT_DAY","UNIT_WEEK","UNIT_MONTH","UNIT_YEAR","UNIT_HANDLE","UNIT_CPU","UNIT_GHZ","UNIT_REQUEST","UNIT_CONNECTION","UNIT_PACKET","UNIT_MESSAGE","UNIT_STREAM","UNIT_EVENT","EE","RafPerf","options","defaultOptions","reset","tick","onVisibilityChange","isVisible","running","prevTime","startTime","frameDuration","fpsToMs","fps","undefined","perfSamples","requestID","cancelAnimationFrame","perfStartTime","document","requestAnimationFrame","performances","time","deltaTime","frameDeltaTime","enabled","push","sampleDuration","length","samplesCount","averageDeltaTime","reduce","sum","hidden","start","value","_osLoadAvg","init","avg","getCpuUsage","sampleTime","engine","Promise","resolve","reject","once","ratio","stop","avgByCpu","cpus","currentTime","updateLoadAvg","usages","map","cpu","loadavg","cpuUsage","location","hostname","navigator","appVersion","uid","gid","username","homedir","shell","MAX_VALUE","lut","i","toString","RegexCache","Map","deprecateList","byteMultipliers","b","kb","mb","gb","tb","pow","pb","parseByteStringRe","TimeoutError","units","divisors","utils","isFunction","fn","isString","s","String","isObject","o","isPlainObject","Object","getPrototypeOf","prototype","flatten","arr","Array","call","a","concat","milli","val","d0","random","d1","d2","d3","item","idx","indexOf","splice","getNodeID","os","toLowerCase","list","ilist","interfaces","networkInterfaces","iface","f","family","internal","address","isPromise","p","then","P","method","apply","arguments","delay","ms","setTimeout","res","timeout","timer","race","clearTimeout","catch","mapSeries","promFn","r","slice","filename","keys","require","cache","forEach","key","text","pattern","firstStarPosition","len","endsWith","substring","startsWith","lastIndexOf","origPattern","regex","get","replace","RegExp","set","test","console","warn","kleur","yellow","bold","safetyObject","obj","JSON","parse","stringify","maxSafeObjectSize","Infinity","seen","WeakSet","objectType","constructor","size","has","add","circularReplacer","path","parts","split","part","shift","hasOwnProperty","dotSet","join","sep","prevPath","folder","currentPath","fs","existsSync","mkdirSync","v","isNaN","floatValue","results","exec","unit","parseFloat","parseInt","opts","registry","description","labelNames","aggregator","defaultAggregator","lastSnapshot","dirty","values","labels","hash","hashingLabels","changed","generateSnapshot","clearDirty","timestamp","setDirty","snapshot","metric","min","rate","lastValue","lastTickTime","setInterval","INTERVAL","unref","elapsedSec","diff","oneMinRate","abs","pick","require$$0","BaseMetric","METRIC","update","MetricRate","from","GaugeMetric","sortAscending","setProp","k","HistogramMetric","linearBuckets","buckets","generateLinearBuckets","width","count","exponentialBuckets","generateExponentialBuckets","factor","isArray","defaultBuckets","sort","quantiles","defaultQuantiles","maxAgeSeconds","defaultMaxAgeSeconds","ageBuckets","defaultAgeBuckets","resetItem","_","bucketValues","quantileValues","bound","generateItemSnapshot","assign","createBucketValues","TimeWindowQuantiles","ringBuckets","Bucket","currentBucket","rotate","clear","samples","mean","variance","stdDev","sqrt","max","q","ceil","Types","Base","require$$1","Counter","require$$2","Gauge","require$$3","Histogram","require$$4","Info","require$$5","TypeClass","n","find","getByName","register","match","defaultsDeep","includes","excludes","metricNamePrefix","metricNameSuffix","metricNameFormatter","labelNameFormatter","broker","logger","some","every","BaseReporter","interval","colors","onlyChanges","lastChanges","Set","print","gray","formatLabelName","magenta","filter","log","cyan","formatMetricName","pluralizeUnit","labelStr","labelsToStr","grey","green","toFixed","info","matchMetricName","eventName","broadcast","groups","sendEvent","debug","Reporters","Console","CSV","Event","Datadog","require$$6","Prometheus","require$$7","StatsD","require$$8","opt","ReporterClass","eventLoop","e","startGCWatcher","gc","on","stats","pause","increment","gctype","startEventLoopStats","registerCommonMetrics","arg","index","ppid","release","arch","platform","userInfo","getUserInfo","store","updateCommonMetrics","end","procMem","memoryUsage","getHeapSpaceStatistics","space","space_name","space_size","space_used_size","space_available_size","physical_space_size","getHeapStatistics","stat","total_heap_size","total_heap_size_executable","total_physical_size","total_available_size","used_heap_size","heap_size_limit","malloced_memory","peak_malloced_memory","does_zap_garbage","uptime","_getActiveHandles","_getActiveRequests","freeMem","freemem","totalMem","totalmem","usedMem","getNetworkInterfaces","interface","mac","d","valueOf","toISOString","toUTCString","getTimezoneOffset","load","sense","num","duration","first","times","second","third","first_idle","idle","first_total","user","nice","sys","irq","second_idle","second_total","third_idle","per_usage","model","speed","METRIC_NAME_REGEXP","METRIC_LABEL_REGEXP","getLogger","collectProcessMetrics","NODE_ENV","collectInterval","reporter","reporters","compact","reporterNames","getConstructorName","collectTimer","clearInterval","all","MetricClass","getMetric","decrement","observe","resetAll","delta","metricChanged","types","toObject","CounterMetric","HistrogramMetric","InfoMetric","Transform","transporter","metrics","instanceID","tx","discoverer","pendingRequests","pendingReqStreams","pendingResStreams","packets","sent","bytes","received","disconnecting","isReady","wrappedMessageHandler","cmd","packet","messageHandler","publish","wrapMethod","afterConnect","send","receive","reverse","__connectResolve","registerMoleculerMetrics","isMetricsEnabled","wasReconnect","sendLocalNodeInfo","makeSubscriptions","discoverAllNodes","broadcastLocal","doConnect","reconnectStarted","errorHandler","disableReconnect","connect","graceFul","localNodeDisconnected","disconnect","localNodeReady","subscribing","E","ver","PROTOCOL_VERSION","disableVersionCheck","sender","actual","fatal","requestHandler","responseHandler","eventHandler","processRemoteNodeInfo","remoteNodeDisconnected","heartbeatReceived","sendPong","processPong","error","event","started","ctx","ContextFactory","id","setParams","contextParamsCloning","eventGroups","eventType","meta","tracing","parentID","caller","emitLocalServices","pass","stream","_handleIncomingRequestStream","endpoint","_getLocalActionEndpoint","setEndpoint","params","sendResponse","isNew","seq","objectMode","transform","chunk","encoding","done","$prevSeq","$pool","_createErrFromPayload","delete","write","Buffer","nextSeq","nextPacket","setImmediate","req","_handleIncomingResponseStream","removePendingRequest","success","maxQueueSize","limit","_sendRequest","isStream","readable","pipe","request","readableObjectMode","_readableState","nodeName","publishCatch","chunks","maxChunkSize","ch","copy","resume","_createPayloadErrorField","needAck","disableBalancer","makeBalancedSubscriptions","services","ipList","client","config","metadata","generateUid","arrived","elapsedTime","timeDiff","round","targetNodeID","localNode","topic","subscribe","prepublish","BaseStrategy","counter","sampleCount","lowLatency","collectCount","pingInterval","brokerStopped","hostAvgLatency","hostMap","transit","localBus","listenerCount","addNode","removeHostMap","discovery","removeHostLatency","updateLatency","sendPing","pingHosts","hosts","host","nodeList","nodes","getHostLatency","historicLatency","avgLatency","latency","minEp","minLatency","ep","epLatency","shardKey","vnodes","ringSize","cacheSize","LRU","maxAge","needRebuild","ring","getKeyFromContext","rebuild","getNodeIDByKey","cached","hashNum","getHash","found","ringLen","crypto","createHash","digest","total","j","Strategies","RoundRobin","Random","CpuUsage","Latency","Shard","isPrototypeOf","StrategyClass","heartbeatInterval","heartbeatTimeout","disableHeartbeatChecks","disableOfflineNodeRemoving","cleanOfflineNodesTimeout","heartbeatTimer","checkNodesTimer","offlineTimer","startHeartbeatTimers","stopHeartbeatTimers","beat","checkRemoteNodes","checkOfflineNodes","updateLocalInfo","sendHeartbeat","toArray","local","available","lastHeartbeatTime","disconnected","discoverNode","heartbeat","processNodeInfo","sendDisconnectPacket","isUnexpected","BaseDiscoverer","discoverNodes","getLocalNodeInfo","sendNodeInfo","Discoverers","Local","Etcd3","Redis","DiscovererClass","port","udpAddress","rawInfo","cpuSeq","offlineSince","isReconnected","newSeq","newVal","getIpList","createLocalNode","Node","MOLECULER_VERSION","langVersion","registerServices","reconnected","updateMetrics","unregisterServicesByNode","unexpected","removePendingRequestByNodeID","onlyAvailable","withServices","omit","fullName","settings","actions","events","svc","removeFromArray","ServiceItem","equals","onlyLocal","skipInternal","withActions","withEvents","grouping","forIn","protected","dependencies","remove","removeByService","group","EndPointFactory","StrategyFactory","strategyOptions","strategy","endpoints","localEndpoints","setLocalEndpoints","ret","select","hasLocal","nextLocal","isAvailable","preferLocal","epList","destroy","state","Endpoint","EndpointFactory","EventEndpoint","groupName","strategyFactory","EndpointList","next","uniq","groupNames","uniqBy","isBroadcast","promises","newCtx","callEventHandler","removeByNodeID","withEndpoints","hasAvailable","ActionEndpoint","actionName","NodeCatalog","ServiceCatalog","ActionCatalog","EventCatalog","onlineCount","registerActions","registerEvents","regenerateLocalRawInfo","servicesChanged","serviceList","prevActions","prevEvents","ServiceFactory","getVersionedFullName","unregisterAction","unregisterEvent","exist","unregisterService","visibility","checkActionVisibility","middlewares","wrapHandler","remoteHandler","addAction","getEndpointByNodeID","removeAllByNodeID","addEvent","incSeq","getLocalNodeServices","force","BaseLogger","createLogger","loggerFactory","mod","toUpperCase","m","LEVELS","moduleColors","formatter","objectPrinter","autoPadding","maxPrefixLength","util","inspect","showHidden","depth","breakLength","POSITIVE_INFINITY","levelColorStr","red","inverse","getColor","padEnd","charCodeAt","repeat","bindings","modColorName","getNextColor","c","moduleColorName","printArgs","ts","prefixLen","substr","padLeft","render","str","FormattedLogger","getLogLevel","levelIdx","getFormatter","pargs","Loggers","Formatted","Bunyan","Debug","File","Log4js","Pino","require$$9","Winston","require$$10","LoggerClass","noop","cwd","appenders","globalLogLevel","logLevel","app","appender","_prepareStackTrace","prepareStackTrace","site","getFileName","lineNumber","getLineNumber","columnNumber","getColumnNumber","methodName","getMethodName","functionName","getFunctionName","getBindingsKey","logHandlers","getLogHandler","registeredHooks","newLogEntry","callSyncHandlers","paramName","localAction","check","compile","localEvent","BaseValidator","validator","Validator","schema","validate","Validators","Fastest","ValidatorClass","ttl","keygen","maxParamsLength","prefix","namespace","keyPrefix","_hashedKey","_generateKeyFromObject","getParamMetaValue","prefixLength","base64Hash","defaultKeygen","lock","isEnabledFunction","cacheKey","getCacheKey","cachePromise","staleTime","getWithTTL","tryLock","unlock","result","del","cachedResult","content","locked","BaseCacher","_lock","Lock","checkTTL","clone","cloneDeep","clean","timeEnd","expire","matches","acquire","isLocked","updateAgeOnGet","prune","Cachers","Memory","MemoryLRU","CacherClass","hasBuiltInBalancer","topics","deserialize","incomingMessage","getTopicName","serialize","balanced","unsubscribeFromBalancedCommands","subscribeBalancedRequest","subscribeBalancedEvent","publishBalancedEvent","publishBalancedRequest","serializer","buf","EventEmitter2","bus","wildcard","maxListeners","Transporter","subscriptions","onConnected","off","t","Transporters","Fake","NATS","MQTT","AMQP","AMQP10","Kafka","STAN","TCP","require$$11","TransporterClass","convertDataToTransport","online","offline","convertDataFromTransport","field","fieldType","isBuffer","BaseSerializer","Serializers","Avro","MsgPack","ProtoBuf","Thrift","Notepack","SerializerClass","getClientInfo","getCpuInfo","load1","load5","load15","cores","utilization","getMemoryInfo","mem","free","percent","getOsInfo","getProcessInfo","getNetworkInterfacesInfo","ip","getDateTimeInfo","iso","utc","net","wrapActionErrorHandler","defineProperty","writable","enumerable","wrapEventErrorHandler","fflate.deflateSync","fflate.inflateSync","fflate.gzip","fflate.gunzip","fflate.zlibSync","fflate.unzlibSync","parseByteString","promisify","makeDirs","ActionHook","callHook","hook","callErrorHook","sanitizeHooks","hooks","h","rawName","beforeAllHook","before","afterAllHook","after","errorAllHook","beforeHook","afterHook","errorHook","actionBeforeHook","actionAfterHook","actionErrorHook","Bulkhead","bulkhead","queue","currentInFlight","callNext","concurrency","ContextTracker","removeContext","_trackedContexts","wrapTrackerMiddleware","tracking","addContext","waitingForActiveContexts","timedOut","checkForContexts","remoteAction","serviceStopping","$shutdownTimeout","shutdownTimeout","stopping","CircuitBreaker","windowTimer","createWindowTimer","windowTime","failures","resetStore","getEpState","C","cbTimer","affectedNodeID","circuitClose","checkThreshold","minRequestCount","threshold","halfOpen","halfOpenTime","trip","wrapCBMiddleware","circuitBreaker","halfOpenWait","failure","CircuitBreakerStore","Timeout","wrapTimeoutMiddleware","actionTimeout","requestTimeout","startHrTime","Retry","wrapRetryMiddleware","retryPolicy","attempts","retries","_retryAttempts","span","setError","addTags","retryAttempts","finishSpan","maxDelay","Fallback","wrapFallbackMiddleware","fallbackResponse","fallbackResult","handleContextFallback","fallback","ErrorHandler","Metrics","getActionHandler","actionDef","errorName","errorCode","errorType","transitMessageHandler","transporterSend","transporterReceive","Tracing","tracer","isTracingEnabled","getCurrentTraceID","getActiveSpanID","tags","callingLevel","remoteCall","callerNodeID","globalActionTags","actionTags","spanName","startSpan","traceID","sampled","fromCache","response","globalEventTags","eventTags","Debounce","debounce","Throttle","throttle","lastInvoke","HotReload","require$$12","Transmit","Encryption","password","algorithm","iv","encrypter","createCipheriv","createCipher","final","decrypter","createDecipheriv","createDecipher","Compression","compress","decompress","deflate","inflate","deflateRaw","inflateRaw","gzip","gunzip","readInt8","Debugging","TransitLogger","targetFolder","saveToFile","getOwnPropertyNames","writeFile","coloringSend","logPacketData","extension","packetFilter","coloringReceive","logFn","transitPublish","ActionLogger","coloringRequest","logParams","logResponse","logMeta","whitelist","coloringResponse","coloringError","callingOpts","isWhiteListed","p2","mw","Middlewares","def","bindTo","convertToString","pp","flattenTags","errorFields","humanize","BaseTraceExporter","gaugeWidth","spans","children","parentItem","printRequest","removeSpanWithChildren","spanID","child","left","gstart","gstop","gw","p1","p3","caption","main","parents","last","spanItem","mainItem","mainSpan","w","indent","getSpanIndent","getCaption","getAlignedTexts","finishTime","drawLine","drawGauge","printSpanTime","drawTableTop","getTraceInfo","truncatedID","line","drawHorizonalLine","drawTableBottom","sendStartSpan","sendFinishSpan","spanConverter","defaultTags","flush","generateTracingData","newSpan","errorToObject","generateMetricPayload","processExtraMetrics","parent","endTime","assignExtraMetrics","scope","fetch","baseURL","ZIPKIN_URL","payloadOptions","shared","body","headers","Content-Type","status","statusText","makePayload","serviceName","kind","traceId","convertID","parentId","localEndpoint","remoteEndpoint","annotations","convertTime","span.type","ipv4","NEW_RELIC_TRACE_API_URL","insertKey","Api-Key","Data-Format","Data-Format-Version","Exporters","EventLegacy","Jaeger","Zipkin","NewRelic","ExporterClass","tracesPerSecond","lastTime","balance","maxBalance","cost","nodeLoadTime","getNanoSeconds","loadNs","loadMs","defProp","instance","propName","readOnly","priority","shouldSample","logs","spanStarted","fields","elapsed","spanFinished","Tracer","exporter","sampling","minPriority","stackTrace","sampleCounter","rateLimiter","RateLimiter","exporters","exporterNames","parentOpts","parentSpan","Span","invokeExporter","wrapToHander","wrapToArray","isNewSignature","Service","parseServiceSchema","originalSchema","mixins","applyMixins","merged","callMiddlewareHookSync","$noVersionPrefix","serviceSpecification","_getPublicSettings","methods","_createMethod","innerAction","_createAction","wrappedHandler","createPrivateActionEndpoint","create","innerEvent","_createEvent","_serviceSpecification","_init","$secureSettings","created","addLocalService","callMiddlewareHook","waitForServices","$dependencyTimeout","$dependencyInterval","dependencyInterval","registerLocalService","stopped","$noServiceNamePrefix","$cache","methodDef","eventDef","functionArguments","__newSignature","context","serviceNames","mixedSchema","mixin","mergeSchemas","mixinSchema","svcSchema","mods","mergeSchemaSettings","mergeSchemaMetadata","mergeSchemaHooks","mergeSchemaActions","mergeSchemaMethods","mergeSchemaEvents","mergeSchemaLifecycleHandlers","mergeSchemaUniqArray","customFnName","mergeSchemaUnknown","src","srcSS","targetSS","uniqWith","isEqual","k2","modHook","resHook","srcAction","targetAction","modEvent","resEvent","mergeMeta","newMeta","Context","locals","_spanStack","ackID","cloning","paramsCloning","parentCtx","newParams","_opts","distTimeout","maxCallLevel","mcall","isActive","finish","findIndex","sp","custom","stylize","inner","toJSON","MetricRegistry","uidGenerator","cacher","internalServices","internalMiddlewares","hotReload","replCommands","replDelimiter","skipProcessEventRegistration","ServiceBroker","polyfillPromise","generateToken","LoggerFactory","MiddlewareHandler","Registry","serializerName","validatorName","registerMiddlewares","Transit","txName","callWithoutBalancer","registerInternalServices","_closeFn","exit","setMaxListeners","userMiddlewares","prevCount","middleware","createService","destroyService","_start","ready","_stop","close","removeListener","repl","delimiter","customCommands","callHandlers","isEnabled","props","ns","needExit","fileMask","serviceFiles","glob","sync","loadService","filePath","fName","basename","default","normalizeSchemaConstructor","_restartService","__filename","schemaMods","registryItem","serviceVersion","getLocalService","localService","optional","convert","getNodeList","getServiceList","getActionList","getEventList","health","getHealthStatus","rules","items","x","hasService","getActionEndpointByNodeId","getActionEndpoints","errMsg","findNextActionEndpoint","getFirst","promise","getBalancedEndpoints","groupedEP","getEventGroups","getAllEndpoints","pong","pongs","processing","H","getGroups","setPrototypeOf","__proto__","_isMockFunction","TracerExporters","MetricTypes","MetricReporters","require$$13","require$$14","require$$15","require$$16","require$$17","Errors","require$$18","Runner","require$$19","Utils","require$$20","moleculer"],"mappings":"8qCAQiB,CAGhBA,cAAmB,QACnBC,kBAAsB,YACtBC,uBAAyB,iBACzBC,aAAkB,UCde,oBAAXC,OACnBA,OAAyB,oBAATC,KACdA,KAAyB,oBAAXC,OACZA,OAAS,GCCjB,MAAMC,UAAgBC,UACpBC,cACEC,QAEAC,KAAKC,MAAQ,UACbD,KAAKE,SAAU,EACfF,KAAKG,IAAM,GACXH,KAAKI,KAAO,GACZJ,KAAKK,QAAU,GACfL,KAAKM,SAAW,CACdC,YAAa,MACbC,KAAM,UACNC,GAAI,MACJC,GAAI,MACJC,KAAM,MACNC,KAAM,MACNC,IAAK,MACLC,QAAS,IACTC,QAAS,OAEXf,KAAKgB,OAASA,UACdhB,KAAKiB,IAAM,EACXjB,KAAKkB,SAAW,EAChBlB,KAAKmB,WAAY,EACjBnB,KAAKoB,WAAaC,KAAKC,MACvBtB,KAAKuB,eAAiB,KAGxBzB,KAAM0B,GAGJ,MAFAxB,KAAKkB,SAAWM,EAChBxB,KAAKyB,KAAK,OAAQ,CAACD,IACb,IAAIE,MAAM,0BAGlB5B,oCAAqC6B,GAC/B3B,KAAKuB,gBACP5B,OAAOiC,oBAAoB,QAAS5B,KAAKuB,gBAE3CvB,KAAKuB,eAAiBI,EAClBA,GACFhC,OAAOkC,iBAAiB,QAASF,GAIrC7B,sCACE,OAA+B,OAAxBE,KAAKuB,eAGdzB,MACE,MAAO,IAGTA,SACE,OAAOgC,KAAKC,OAAOV,KAAKC,MAAQtB,KAAKoB,YAAc,KAGrDtB,cACE,IAAKkC,cAAgBA,YAAYC,OAC/B,MAAO,CACLC,IAAK,EACLC,UAAWC,OAAOC,iBAClBC,SAAU,EACVC,SAAU,GAId,MAAMN,OAAEA,GAAWD,YAEnB,MAAO,CACLE,IAAK,EACLC,UAAWF,EAAOO,gBAClBF,SAAUL,EAAOQ,eACjBF,SAAU,GAIdzC,SAAU4C,KAAYC,GACpBC,gBAAe,IAAMF,KAAWC,KAGlC7C,oBACE,MAAO,GAGTA,qBACE,MAAO,IAIX,MAAM+C,EAAO,IAAIjD,EAMXkD,EAAkBrD,GAAUA,EAAOsD,SAAYA,QAErD,GAAID,EACF,IAAK,MAAME,KAAQH,EACS,mBAAfA,EAAKG,GAKhBF,EAAeE,GAAQH,EAAKG,GAJ1BF,EAAeE,GAAQH,EAAKG,GAAMC,KAAKJ,gQCrD7C,MAAiB,CAChBK,eA3CuB,MA4CvBC,aA3CuB,QA4CvBC,eA3CwB,MA4CxBC,gBA3CwB,MA4CxBC,gBA3CyB,WA4CzBC,YA3CsB,OA4CtBC,kBA3C0B,aA4C1BC,iBA3C0B,YA4C1BC,YA3CsB,OA4CtBC,YA3CsB,OA4CtBC,kBA1C0B,aA2C1BC,kBA1C0B,aA2C1BC,oBA1C2B,eA4C3BC,mBA1C0B,EA2C1BC,cA1CqB,EA2CrBC,cA1CqB,EA2CrBC,gBA1CuB,EA4CvBC,OArCD,MAUCrE,YAAYsE,EAAMC,EAAQC,GACzBtE,KAAKoE,KAAOA,GApCU,MAqCtBpE,KAAKqE,OAASA,EACdrE,KAAKsE,QAAUA,GAAW,2IC/B5B,MAAMC,UAAuBC,UAW5B1E,YAAY2E,EAASjD,EAAM4C,EAAMM,GAChC3E,MAAM0E,GACNzE,KAAKwB,KAAOA,GAAQ,IACpBxB,KAAKoE,KAAOA,EACZpE,KAAK0E,KAAOA,EACZ1E,KAAK2E,WAAY,GAUnB,MAAMC,UAAgCL,EAWrCzE,YAAY2E,EAASjD,EAAM4C,EAAMM,GAChC3E,MAAM0E,GACNzE,KAAKwB,KAAOA,GAAQ,IACpBxB,KAAKoE,KAAOA,EACZpE,KAAK0E,KAAOA,EACZ1E,KAAK2E,WAAY,GAiCnB,MAAME,UAA6BN,EAWlCzE,YAAY2E,EAASjD,EAAM4C,EAAMM,GAChC3E,MAAM0E,EAASjD,GAAQ,IAAK4C,EAAMM,IA0TpCI,UAAiB,CAChBP,eAAAA,EACAK,wBAAAA,EACAG,qBAlVD,cAAmCH,IAmVlCC,qBAAAA,EAEAG,qBArTD,cAAmCJ,EAQlC9E,YAAY4E,EAAO,IAClB,IAAIO,EACAP,EAAKQ,QAAUR,EAAKS,OACvBF,EAAM,YAAYP,EAAKS,4BAA4BT,EAAKQ,gBAChDR,EAAKS,SACbF,EAAM,YAAYP,EAAKS,yBAEpBT,EAAKU,SAAWV,EAAKrE,QACxB4E,EAAM,YAAYP,EAAKrE,WAAWqE,EAAKU,sBAC/BV,EAAKU,UACbH,EAAM,YAAYP,EAAKU,uBAExBrF,MAAMkF,EAAK,IAAK,oBAAqBP,KAkStCW,yBAxRD,cAAuCT,EAQtC9E,YAAY4E,GACX,IAAIO,EAEHA,EADGP,EAAKQ,OACF,YAAYR,EAAKS,gCAAgCT,EAAKQ,gBAEtD,YAAYR,EAAKS,4BAExBpF,MAAMkF,EAAK,IAAK,wBAAyBP,KA2Q1CY,gBApLD,cAA8BT,EAU7B/E,YAAY2E,EAASL,EAAMM,GAC1B3E,MAAM0E,EAAS,IAAKL,GAAQ,mBAAoBM,KA0KjDa,oBAlQD,cAAkCX,EAQjC9E,YAAY4E,GACX3E,MAAM,mCAAmC2E,EAAKS,sBAAsBT,EAAKQ,gBAAiB,IAAK,kBAAmBR,KA0PnHc,oBAhPD,cAAkCjB,EAQjCzE,YAAY4E,GACX3E,MAAM,YAAY2E,EAAKS,kDAAkDT,EAAKQ,gBAAiB,IAAK,kBAAmBR,GACvH1E,KAAK2E,WAAY,IAuOlBc,qBA7ND,cAAmCb,EAQlC9E,YAAY4E,GACX3E,MAAM,kCAAkC2E,EAAKS,sBAAsBT,EAAKQ,gBAAiB,IAAK,mBAAoBR,KAqNnHgB,iBA3MD,cAA+Bd,EAQ9B9E,YAAY4E,GACX3E,MAAM,2BAA2B2E,EAAKS,sBAAsBT,EAAKQ,4BAA6B,IAAK,aAAcR,KAmMlHiB,kBApKD,cAAgCpB,EAQ/BzE,YAAY4E,GACX3E,MAAM,uCAAuC2E,EAAKkB,cAAclB,EAAKQ,gBAAiB,IAAK,iBAAkBR,GAC7G1E,KAAK2E,WAAY,IA4JlBkB,mBAlJD,cAAiCtB,EAQhCzE,YAAYmF,EAAKP,GAChB3E,MAAMkF,EAAK,IAAK,uBAAwBP,KA0IzCoB,mBAhID,cAAiCvB,EAQhCzE,YAAYmF,EAAKP,GAChB3E,MAAMkF,EAAK,IAAK,uBAAwBP,KAwHzCqB,yBA9GD,cAAuCxB,EAOtCzE,YAAY4E,GACPA,GAAQA,EAAKU,QAChBrF,MAAM,mBAAmB2E,EAAKU,QAAQY,4BAA6B,IAAK,wBAAyBtB,GAAQA,EAAKU,QAAU,CACvHY,KAAMtB,EAAKU,QAAQY,KACnB3F,QAASqE,EAAKU,QAAQ/E,SACnB,MAEJN,MAAM,2CAA4C,IAAK,2BAkGzDkG,6BAvFD,cAA2C1B,EAQ1CzE,YAAY4E,GACX3E,MAAM,6BAA8B,IAAK,4BAA6B2E,KA+EvEwB,uBArED,cAAqC3B,EAQpCzE,YAAY4E,GACX3E,MAAM,uBAAwB,IAAK,sBAAuB2E,KA8D3DyB,wBApXD,cAAsCvB,EACrC9E,cACCC,MAAM,kGAAmG,IAAK,eAE9GC,KAAKoG,MAAQ,KAkXdC,cAtDD,SAAuBC,GACtB,MAAMC,EAAQzB,EAAO0B,QAAQF,EAAIN,MACjC,GAAIO,EACH,OAAOD,EAAIN,MACV,IAAK,iBACL,IAAK,0BACL,IAAK,uBACL,IAAK,uBAAwB,OAAO,IAAIO,EAAMD,EAAI7B,QAAS6B,EAAI9E,KAAM8E,EAAIlC,KAAMkC,EAAI5B,MAEnF,IAAK,kBAAmB,OAAO,IAAI6B,EAAMD,EAAI7B,QAAS6B,EAAIlC,KAAMkC,EAAI5B,MAEpE,IAAK,uBACL,IAAK,2BACL,IAAK,sBACL,IAAK,sBACL,IAAK,uBACL,IAAK,mBACL,IAAK,oBACL,IAAK,2BACL,IAAK,+BACL,IAAK,yBAA0B,OAAO,IAAI6B,EAAMD,EAAI5B,MAEpD,IAAK,qBACL,IAAK,qBAAsB,OAAO,IAAI6B,EAAMD,EAAI7B,QAAS6B,EAAI5B,cCnZ/C,CAIhB+B,aAAgB,UAChBC,WAAc,QACdC,eAAgB,YAChBC,UAAa,OASbC,kBAAmB,oBAEnBC,YAAa,cACbC,aAAc,eAEdC,+BAAgC,iCAChCC,8BAA+B,gCAC/BC,mBAAoB,qBACpBC,wBAAyB,0BAEzBC,qCAAsC,uCACtCC,oCAAqC,sCACrCC,yCAA0C,2CAC1CC,wCAAyC,0CAEzCC,yCAA0C,2CAC1CC,+CAAgD,iDAChDC,6CAA8C,+CAC9CC,8CAA+C,gDAC/CC,wCAAyC,0CACzCC,yCAA0C,2CAC1CC,2CAA4C,6CAC5CC,gDAAiD,kDACjDC,qCAAsC,uCAEtCC,eAAgB,iBAChBC,gCAAiC,kCACjCC,iCAAkC,mCAElCC,sBAAuB,wBAIvBC,0BAA2B,4BAC3BC,0BAA2B,4BAC3BC,0BAA2B,4BAC3BC,4BAA6B,8BAI7BC,gBAAiB,kBACjBC,sBAAuB,wBACvBC,0BAA2B,4BAI3BC,eAAgB,iBAChBC,eAAgB,iBAChBC,gBAAiB,kBACjBC,UAAW,YACXC,QAAS,UACTC,WAAY,aACZC,YAAa,cACbC,QAAS,UACTC,YAAa,cACbC,YAAa,cACbC,YAAa,cACbC,iBAAkB,mBAClBC,gBAAiB,kBAEjBC,iBAAkB,mBAClBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,sBAAuB,wBAEvBC,mBAAoB,qBACpBC,eAAgB,iBAEhBC,cAAe,gBACfC,cAAe,gBACfC,eAAgB,iBAChBC,mBAAoB,qBAEpBC,YAAa,cACbC,cAAe,gBAEfC,aAAc,eACdC,kBAAmB,oBACnBC,kBAAmB,oBACnBC,uBAAwB,yBACxBC,sBAAuB,wBAIvBC,oBAAqB,sBACrBC,kCAAmC,oCACnCC,6BAA8B,+BAC9BC,iCAAkC,mCAIlCC,2BAA4B,6BAC5BC,yBAA0B,2BAC1BC,sCAAuC,wCACvCC,mCAAoC,qCAIpCC,+BAAgC,iCAChCC,sCAAuC,wCACvCC,kCAAmC,oCACnCC,2CAA4C,6CAC5CC,iCAAkC,mCAClCC,0CAA2C,4CAC3CC,gCAAiC,kCACjCC,yCAA0C,2CAI1CC,wBAAyB,0BACzBC,yBAA0B,2BAC1BC,8BAA+B,gCAC/BC,uBAAwB,yBACxBC,yBAA0B,2BAM1BC,2BAA4B,6BAC5BC,gCAAiC,kCACjCC,qCAAsC,wCACtCC,+BAAgC,iCAChCC,gCAAiC,kCACjCC,qCAAsC,uCACtCC,8BAA+B,gCAI/BC,gCAAiC,kCACjCC,gCAAiC,kCAEjCC,kCAAmC,oCACnCC,sCAAuC,wCAEvCC,wBAAyB,0BACzBC,4BAA6B,8BAE7BC,4BAA6B,8BAC7BC,oCAAqC,sCAErCC,wCAAyC,0CAIzCC,yCAA0C,2CAC1CC,yCAA0C,2CAC1CC,6CAA8C,+CAC9CC,6CAA8C,+CAI9CC,wCAAyC,0CACzCC,uCAAwC,yCACxCC,6CAA8C,+CAI9CC,iCAAkC,mCAIlCC,oCAAqC,sCACrCC,sCAAuC,wCAEvCC,kCAAmC,oCACnCC,oCAAqC,sCAIrCC,uCAAwC,yCAIxCC,gCAAiC,kCAIjCC,2BAA4B,6BAC5BC,0BAA2B,4BAC3BC,6BAA8B,+BAC9BC,2BAA4B,6BAC5BC,0BAA2B,4BAC3BC,2BAA4B,6BAC5BC,0BAA2B,4BAC3BC,6BAA8B,+BAC9BC,4BAA6B,8BAC7BC,+BAAgC,iCAEhCC,yCAA0C,2CAC1CC,wCAAyC,0CAEzCC,wCAAyC,0CACzCC,uCAAwC,yCAMxCC,SAAU,MACVC,UAAW,OACXC,eAAgB,WAChBC,cAAe,WACfC,cAAe,WACfC,eAAgB,YAChBC,cAAe,WACfC,aAAc,UAGdC,iBAAkB,aAClBC,kBAAmB,cACnBC,kBAAmB,cACnBC,aAAc,SACdC,YAAa,SACbC,UAAW,OACXC,SAAU,MACVC,UAAW,OACXC,WAAY,QACZC,UAAW,OAGXC,YAAa,SACbC,SAAU,MACVC,SAAU,MAGVC,aAAc,UACdC,gBAAiB,aACjBC,YAAa,SACbC,aAAc,UACdC,YAAa,SACbC,WAAY,SC7PN,MAAMxQ,EAAeyQ,UCC5B,MAAMC,UAAgB1Q,EACpBC,YAAa0Q,GACXzQ,QAEAC,KAAKwQ,QAAU,IAAKD,EAAQE,kBAAmBD,GAE/CxQ,KAAK0Q,QAEL1Q,KAAK2Q,KAAO3Q,KAAK2Q,KAAK1N,KAAKjD,MAC3BA,KAAK4Q,mBAAqB5Q,KAAK4Q,mBAAmB3N,KAAKjD,MAGzDF,QACEE,KAAK6Q,WAAY,EACjB7Q,KAAK8Q,SAAU,EACf9Q,KAAK+Q,SAAW,KAChB/Q,KAAKgR,UAAY,KAEjBhR,KAAKiR,cAAgBV,EAAQW,QAAQlR,KAAKwQ,QAAQW,KAElDnR,KAAKgC,iBAAcoP,EACnBpR,KAAKqR,YAAc,GAEfrR,KAAKsR,WAAWC,qBAAqBvR,KAAKsR,WAGhDxR,QAEME,KAAK8Q,UAGT9Q,KAAK8Q,SAAU,EACf9Q,KAAK+Q,SAAWR,EAAQjP,MACxBtB,KAAKgR,UAAYhR,KAAK+Q,SACtB/Q,KAAKwR,cAAgBxR,KAAK+Q,SAG1BU,SAAS5P,iBACP,mBACA7B,KAAK4Q,oBACL,GAIF5Q,KAAKsR,UAAYI,sBAAsB1R,KAAK2Q,OAG9C7Q,OAEE,IAAKE,KAAK8Q,UAAY9Q,KAAK6Q,UAAW,OAEtC,MAAMc,aAAEA,GAAiB3R,KAAKwQ,QAGxBoB,EAAOrB,EAAQjP,MACfuQ,EAAYD,EAAO5R,KAAK+Q,SAGxBe,EAAiBF,EAAO5R,KAAKgR,UAGnC,GAAIa,EAAY7R,KAAKiR,cAAe,CAClC,GAAIU,EAAaI,QAAS,CAExB/R,KAAKqR,YAAYW,KAAKF,GAQtB,GAJGH,EAAaM,gBACZL,EAAO5R,KAAKwR,cAAgBG,EAAaM,gBAC3CjS,KAAKqR,YAAYa,OAASP,EAAaQ,aAEnB,CAEpB,MAAMC,EACJpS,KAAKqR,YAAYgB,QAAO,CAACT,EAAMU,IAAQV,EAAOU,IAC9CtS,KAAKqR,YAAYa,OACnBlS,KAAKgC,YAAchC,KAAKiR,cAAgBmB,EACxCpS,KAAKyB,KAAK,OAAQzB,KAAKgC,aAGvBhC,KAAKqR,YAAc,GACnBrR,KAAKwR,cAAgBI,GAMzB5R,KAAK+Q,SAAWa,EAAQC,EAAY7R,KAAKiR,cACzCjR,KAAKgR,UAAYY,EAGjB5R,KAAKyB,KAAK,OAAQqQ,GAGpB9R,KAAKsR,UAAYI,sBAAsB1R,KAAK2Q,MAG9C7Q,OACE2R,SAAS7P,oBACP,mBACA5B,KAAK4Q,oBACL,GAGF5Q,KAAK0Q,QAGP5Q,qBACEE,KAAK6Q,WAAaY,SAASc,OAEvBvS,KAAK6Q,YACP7Q,KAAK0Q,QACL1Q,KAAKwS,UAMXjC,EAAQE,eAAiB,CACvBU,IAAK,GACLQ,aAAc,CACZI,SAAS,EACTI,aAAc,IAGdF,eAAgB,MAIpB1B,EAAQjP,IAAM,KACJU,aAAeX,MAAMC,MAG/BiP,EAAQW,QAAUuB,GACR,EAAIA,EAAS,IAIvB,MAAMC,EAAa,CAEjB,CACEd,KAAM9P,KAAKC,MAAMV,KAAKC,MAAQ,KAC9BqR,MAAM,EACNC,IAAK,GAIP,CACEhB,KAAM9P,KAAKC,MAAMV,KAAKC,MAAQ,KAC9BsR,IAAK,GAIP,CACEhB,KAAM9P,KAAKC,MAAMV,KAAKC,MAAQ,KAC9BsR,IAAK,IAuCT,SAASC,EAAaC,EAAa,KACjC,MAAMC,EAAS,IAAIxC,EAAQ,CACzBoB,aAAc,CACZI,SAAS,EACTI,aAAc,EACdF,eAAgBa,KAIpB,OAAO,IAAIE,SAAQ,CAACC,EAASC,KAC3BH,EAAOI,KAAK,QAAQC,IAGlB,GAFAL,EAAOM,QAEFD,EACH,OAAOF,EAAO,IAAIxR,MAAM,oCAG1B,MAAMkR,EAAM,IAAe,IAARQ,EACbE,EAAWV,EAAMW,YAAOrB,QArDpC,SAAwBU,GACtB,MAAMY,EAAc1R,KAAKC,MAAMV,KAAKC,MAAQ,OACvCoR,EAAW,GAAGC,MAASa,EAAcd,EAAW,GAAGd,KAAQ,MAC9Dc,EAAW,GAAGC,MAAO,EACrBD,EAAW,GAAGd,KAAO4B,EACrBd,EAAW,GAAGE,IAAMA,GAGjBY,EAAcd,EAAW,GAAGd,KAAQ,MACvCc,EAAW,GAAGd,KAAO4B,EACrBd,EAAW,GAAGE,IAAMA,GAGjBY,EAAcd,EAAW,GAAGd,KAAQ,MACvCc,EAAW,GAAGd,KAAO4B,EACrBd,EAAW,GAAGE,IAAMA,GAwClBa,CAAcb,GAEdK,EAAQ,CACNL,IAAAA,EACAc,OAAQH,YAAOI,KAAIC,GAAON,SAI9BP,EAAOP,WAIXK,EAAYgB,QAhDZ,WACE,OAAOnB,EAAWiB,KAAIlB,GAASA,EAAMG,OCnLhC,MAgCMiB,EAAUC,EAASD,qDAhCR,IACE,oBAAbE,SACFA,SAASC,SACJ,WAGO,IACI,oBAAdC,UACFA,UAAUC,WAEZ,YAGe,MACtBC,IAAK,IACLC,IAAK,IACLC,SAAU,YACVC,QAAS,kBACTC,MAAO,yBAEiB,IAAM,YACV,IAAMlT,KAAKC,WACb,IAAM,4BACO,8BACG,cAChB,IAAM,sBACF,IAAM,iBACR,IAAM,cACN,IAAM,WACT,aACI,IAAM,uBAGL,IAAMU,YAAcA,YAAYC,OAAOO,gBAAkBJ,OAAOoS,kBACjE,IAAMxS,YAAcA,YAAYC,OAAOO,gBAAkBR,YAAYC,OAAOQ,eAAiBL,OAAOoS,2BCxB3H,MAAMC,EAAM,GACZ,IAAK,IAAIC,EAAE,EAAGA,EAAE,IAAKA,IAAOD,EAAIC,IAAMA,EAAE,GAAG,IAAI,IAAI,EAAIC,SAAS,IAEhE,MAAMC,EAAa,IAAIC,IAEjBC,EAAgB,GAEhBC,GAAkB,CACvBC,EAAI,EACJC,GAAI,KACJC,GAAI,GAAK,GACTC,GAAI,GAAK,GACTC,GAAItT,KAAKuT,IAAI,KAAM,GACnBC,GAAIxT,KAAKuT,IAAI,KAAM,IAGdE,GAAoB,gDAE1B,MAAMC,WAAqBhR,WAiC3B,MAAMiR,GAAQ,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,MACpCC,GAAW,CAAC,KAAgB,IAAW,IAAM,EAAG,KAAM,MAEtDC,GAAQ,CAEbC,WAAWC,GACW,mBAAPA,EAGfC,SAASC,GACY,iBAANA,GAAkBA,aAAaC,OAG9CC,SAASC,GACK,OAANA,GAA2B,iBAANA,KAAoBA,aAAaF,QAG9DG,cAAcD,GACF,MAAJA,IAAWE,OAAOC,eAAeH,KAAOE,OAAOE,WAA0C,OAA7BF,OAAOC,eAAeH,IAG1FK,QAAQC,GACAC,MAAMH,UAAUjE,OAAOqE,KAAKF,GAAK,CAACG,EAAG3B,IAAM2B,EAAEC,OAAO5B,IAAI,IAGhElV,SAAS+W,GACR,GAAa,MAATA,EAAe,MAAO,IAE1B,IAAK,IAAInC,EAAI,EAAGA,EAAIgB,GAASxD,OAAQwC,IAAK,CACzC,MAAMoC,EAAMD,EAAQnB,GAAShB,GAC7B,GAAIoC,GAAO,EACV,MAAO,GAAKhV,KAAKC,MAAM+U,GAAOrB,GAAMf,GAGtC,MAAO,OAIR5U,gBACC,MAAMiX,EAAmB,WAAdjV,KAAKkV,SAAoB,EAC9BC,EAAmB,WAAdnV,KAAKkV,SAAoB,EAC9BE,EAAmB,WAAdpV,KAAKkV,SAAoB,EAC9BG,EAAmB,WAAdrV,KAAKkV,SAAoB,EACpC,OAAOvC,EAAO,IAAHsC,GAAStC,EAAIsC,GAAI,EAAE,KAAMtC,EAAIsC,GAAI,GAAG,KAAMtC,EAAIsC,GAAI,GAAG,KAAM,IACrEtC,EAAO,IAAHwC,GAASxC,EAAIwC,GAAI,EAAE,KAAM,IAAIxC,EAAIwC,GAAI,GAAG,GAAK,IAAMxC,EAAIwC,GAAI,GAAG,KAAM,IACxExC,EAAO,GAAHyC,EAAQ,KAAMzC,EAAIyC,GAAI,EAAE,KAAM,IAAIzC,EAAIyC,GAAI,GAAG,KAAMzC,EAAIyC,GAAI,GAAG,KAClEzC,EAAO,IAAH0C,GAAS1C,EAAI0C,GAAI,EAAE,KAAM1C,EAAI0C,GAAI,GAAG,KAAM1C,EAAI0C,GAAI,GAAG,MAG3DrX,gBAAgB0W,EAAKY,GACpB,IAAKZ,GAAqB,GAAdA,EAAItE,OAAa,OAAOsE,EACpC,MAAMa,EAAMb,EAAIc,QAAQF,GAIxB,OAHa,IAATC,GACHb,EAAIe,OAAOF,EAAK,GAEVb,GAQRgB,UAAS,IACDC,EAAGzD,WAAW0D,cAAgB,IAAM3U,EAAQ9B,IAQpDnB,YACC,MAAM6X,EAAO,GACPC,EAAQ,GACRC,EAAaJ,EAAGK,oBACtB,IAAK,IAAIC,KAASF,EACjB,IAAK,IAAInD,KAAKmD,EAAWE,GAAQ,CAChC,MAAMC,EAAIH,EAAWE,GAAOrD,GAC5B,GAAiB,SAAbsD,EAAEC,OAAmB,CACxB,GAAID,EAAEE,SAAU,CACfN,EAAM5F,KAAKgG,EAAEG,SACb,MAEAR,EAAK3F,KAAKgG,EAAEG,SACZ,OAKJ,OAAOR,EAAKzF,OAAS,EAAIyF,EAAOC,GASjCQ,UAAUC,GACI,MAALA,GAA+B,mBAAXA,EAAEC,KAU/BxY,gBAAgByY,GACV5C,GAAMC,WAAW2C,EAAEC,UAEvBD,EAAEC,OAAS,SAAS3C,GACnB,OAAO,WACN,IACC,MAAMiB,EAAMjB,EAAG4C,MAAMzY,KAAM0Y,WAC3B,OAAOH,EAAEtF,QAAQ6D,GAChB,MAAOxQ,GACR,OAAOiS,EAAErF,OAAO5M,OAMfqP,GAAMC,WAAW2C,EAAEI,SAEvBJ,EAAEI,MAAQ,SAASC,GAClB,OAAO,IAAIL,GAAEtF,GAAW4F,aAAW5F,GAAU2F,MAE9CL,EAAEjC,UAAUqC,MAAQ,SAASC,GAC5B,OAAO5Y,KAAKsY,MAAKQ,GAAOP,EAAEI,MAAMC,GAAIN,MAAK,IAAMQ,QAK5CnD,GAAMC,WAAW2C,EAAEjC,UAAUyC,WACjCR,EAAE/C,aAAeA,GAEjB+C,EAAEjC,UAAUyC,QAAU,SAASH,EAAInU,GAClC,IAAIuU,EACJ,MAAMD,EAAU,IAAIR,GAAE,CAACtF,EAASC,KAC/B8F,EAAQH,cAAW,IAAM3F,EAAO,IAAIqF,EAAE/C,aAAa/Q,MAAYmU,MAGhE,OAAOL,EAAEU,KAAK,CACbF,EACA/Y,OAECsY,MAAK7F,IACLyG,aAAaF,GACNvG,KAEP0G,OAAM7S,IAEN,MADA4S,aAAaF,GACP1S,OAKLqP,GAAMC,WAAW2C,EAAEa,aAEvBb,EAAEa,UAAY,SAAS5C,EAAKX,GAC3B,MAAMwD,EAASrG,QAAQwF,OAAO3C,GACxBiD,EAAM,GAEZ,OAAOtC,EAAInE,QAAO,CAACgG,EAAGjB,EAAM1C,IACpB2D,EAAEC,MAAKgB,IACbR,EAAIpE,GAAK4E,EACFD,EAAOjC,EAAM1C,OAEnB6D,EAAEtF,WAAWqF,MAAKgB,IACpBR,EAAItC,EAAItE,QAAUoH,EACXR,EAAIS,MAAM,SAWrBzZ,kBAAkB0Z,GAEjBpD,OAAOqD,KAAKC,QAAQC,OAAOC,SAAQ,SAASC,GACvCA,GAAOL,UACHE,QAAQC,MAAME,OAYxB/Z,MAAMga,EAAMC,GAEX,IAA6B,GAAzBA,EAAQzC,QAAQ,KAAY,CAG/B,MAAM0C,EAAoBD,EAAQzC,QAAQ,KAC1C,IAA0B,GAAtB0C,EACH,OAAOD,IAAYD,EAIpB,MAAMG,EAAMF,EAAQ7H,OACpB,GAAI+H,EAAM,GAAKF,EAAQG,SAAS,OAASF,EAAoBC,EAAM,EAElE,OADAF,EAAUA,EAAQI,UAAU,EAAGF,EAAM,GAC9BH,EAAKM,WAAWL,GAIxB,GAAIE,EAAM,GAAKF,EAAQG,SAAS,MAAQF,EAAoBC,EAAM,EAEjE,OADAF,EAAUA,EAAQI,UAAU,EAAGF,EAAM,KACjCH,EAAKM,WAAWL,KACe,GAA3BD,EAAKxC,QAAQ,IAAK2C,GAM3B,GAAW,GAAPA,GAAiC,GAArBD,EACf,OAA6B,GAAtBF,EAAKxC,QAAQ,KAIrB,GAAW,GAAP2C,GAAiC,GAArBD,GAAsD,GAA5BD,EAAQM,YAAY,KAC7D,OAAO,EAKT,MAAMC,EAAcP,EACpB,IAAIQ,EAAQ3F,EAAW4F,IAAIF,GAgB3B,OAfa,MAATC,IACCR,EAAQK,WAAW,OACtBL,EAAU,KAAOA,GAOlBA,EAAU,KAFVA,GADAA,GADAA,GADAA,EAAUA,EAAQU,QAAQ,MAAO,MACfA,QAAQ,QAAS,QACjBA,QAAQ,MAAO,YACfA,QAAQ,OAAQ,OAER,IAG1BF,EAAQ,IAAIG,OAAOX,EAAS,IAC5BnF,EAAW+F,IAAIL,EAAaC,IAEtBA,EAAMK,KAAKd,IASnBha,UAAUkD,EAAMiC,GACS,GAApByT,UAAUxG,SACbjN,EAAMjC,IAE8B,IAAjC8R,EAAcwC,QAAQtU,KAEzB6X,QAAQC,KAAKC,UAAMC,SAASC,KAAK,uBAAuBhW,IACxD6P,EAAc9C,KAAKhP,KAYrBkY,aAAY,CAACC,EAAK3K,IACV4K,KAAKC,MAAMD,KAAKE,UAAUH,EApTnC,SAA0B3K,EAAU,CAAE+K,kBAAmBC,EAAAA,IACxD,MAAMC,EAAO,IAAIC,QACjB,OAAO,SAAS7B,EAAKpH,GACpB,GAAqB,iBAAVA,GAAgC,OAAVA,EAAgB,CAChD,MAAMkJ,EAAalJ,EAAMmJ,aAAenJ,EAAMmJ,YAAY5V,aAAeyM,EAEzE,GAAIjC,EAAQ+K,mBAAqB,WAAY9I,GAASA,EAAMP,OAAS1B,EAAQ+K,kBAC5E,MAAO,IAAII,KAAclJ,EAAMP,UAGhC,GAAI1B,EAAQ+K,mBAAqB,SAAU9I,GAASA,EAAMoJ,KAAOrL,EAAQ+K,kBACxE,MAAO,IAAII,KAAclJ,EAAMoJ,QAGhC,GAAIJ,EAAKK,IAAIrJ,GAEZ,OAEDgJ,EAAKM,IAAItJ,GAEV,OAAOA,GAgS+BuJ,CAAiBxL,KAWxD1Q,OAAOqb,EAAKc,EAAMxJ,GACjB,MAAMyJ,EAAQD,EAAKE,MAAM,KACnBC,EAAOF,EAAMG,QACnB,GAAIH,EAAMhK,OAAS,EAAG,CACrB,GAAKkE,OAAOE,UAAUgG,eAAe5F,KAAKyE,EAAKiB,IAExC,GAAiB,MAAbjB,EAAIiB,GACdjB,EAAIiB,GAAQ,QAEZ,GAAyB,iBAAdjB,EAAIiB,GACd,MAAM,IAAI1a,MAAM,iDALjByZ,EAAIiB,GAAQ,GASb,OADAjB,EAAIiB,GAAQzG,GAAM4G,OAAOpB,EAAIiB,GAAOF,EAAMM,KAAK,KAAM/J,GAC9C0I,EAGR,OADAA,EAAIc,GAAQxJ,EACL0I,GAORrb,SAASuY,GACRA,EAAE8D,MAAMF,UAAKQ,KACXpK,QAAO,CAACqK,EAAUC,KAClB,MAAMC,EAAcX,UAAKO,KAAKE,EAAUC,EAAQV,UAAKQ,KAIrD,OAHKI,UAAGC,WAAWF,IAClBC,UAAGE,UAAUH,GAEPA,IACL,KAUL9c,gBAAgBkd,GACf,GAAiB,iBAANA,IAAmBC,MAAMD,GACnC,OAAOA,EAGR,GAAiB,iBAANA,EACV,OAAO,KAIR,IACIE,EADAC,EAAU5H,GAAkB6H,KAAKJ,GAEjCK,EAAO,IAEX,GAAKF,EASJD,EAAaI,WAAWH,EAAQ,IAChCE,EAAOF,EAAQ,GAAGzF,kBAVL,CAGb,GADAwF,EAAaK,SAASP,EAAG,IACrB5a,OAAO6a,MAAMC,GAChB,OAAO,KAERG,EAAO,IAOR,OAAOvb,KAAKC,MAAMgT,GAAgBsI,GAAQH,KAI5C,OAAiBvH,GChQjB,OApKA,MASC7V,YAAY0d,EAAMC,GACjBzd,KAAKyd,SAAWA,EAChBzd,KAAKoE,KAAOoZ,EAAKpZ,KACjBpE,KAAKgG,KAAOwX,EAAKxX,KACjBhG,KAAK0d,YAAcF,EAAKE,YACxB1d,KAAK2d,WAAaH,EAAKG,YAAc,GACrC3d,KAAKqd,KAAOG,EAAKH,KACjBrd,KAAK4d,WAAaJ,EAAKI,YAAcH,EAASD,KAAKK,kBAEnD7d,KAAK8d,aAAe,KACpB9d,KAAK+d,OAAQ,EAEb/d,KAAKge,OAAS,IAAInJ,IAQnB/U,WACCE,KAAK+d,OAAQ,EAQdje,aACCE,KAAK+d,OAAQ,EAUdje,IAAIme,GACH,MAAMC,EAAOle,KAAKme,cAAcF,GAChC,OAAOje,KAAKge,OAAOxD,IAAI0D,GAQxBpe,QAEC,MAAM,IAAI4B,MAAM,mBAQjB5B,WAEC,MAAM,IAAI4B,MAAM,mBAQjB5B,QACCE,KAAKge,OAAS,IAAInJ,IAClB7U,KAAKoe,UAWNte,cAAcme,GACb,GAA8B,GAA1Bje,KAAK2d,WAAWzL,QAAyB,MAAV+L,GAAoC,iBAAXA,EAC3D,MAAO,GAER,MAAM/B,EAAQ,GACd,IAAK,IAAIxH,EAAI,EAAGA,EAAI1U,KAAK2d,WAAWzL,OAAQwC,IAAK,CAChD,MAAMsI,EAAIiB,EAAOje,KAAK2d,WAAWjJ,IACjB,iBAALsI,EACVd,EAAMlK,KAAKgL,GACU,iBAANA,EACfd,EAAMlK,KAAK,IAAOgL,EAAI,KACD,kBAANA,EACfd,EAAMlK,KAAK,GAAKgL,GAEhBd,EAAMlK,KAAK,IAEb,OAAOkK,EAAMM,KAAK,KASnB1c,WACC,OAAKE,KAAK+d,OAAS/d,KAAK8d,eAGxB9d,KAAK8d,aAAe9d,KAAKqe,mBACzBre,KAAKse,cAHGte,KAAK8d,aAadhe,mBAEC,MAAM,IAAI4B,MAAM,mBASjB5B,QAAQ2S,EAAOwL,EAAQM,GACtBve,KAAKwe,WACLxe,KAAKyd,SAASW,QAAQpe,KAAMyS,EAAOwL,EAAQM,GAM5Cze,WACC,MAAO,CACNsE,KAAMpE,KAAKoE,KACX4B,KAAMhG,KAAKgG,KACX0X,YAAa1d,KAAK0d,YAClBC,WAAY3d,KAAK2d,WACjBN,KAAMrd,KAAKqd,KAEXW,OAAQhe,KAAKye,cClGhB,OAxDA,MAEC3e,YAAY4e,EAAQtH,EAAMuH,GACzB3e,KAAK0e,OAASA,EACd1e,KAAKoX,KAAOA,EACZpX,KAAK2e,IAAMA,EAGX3e,KAAK4e,KAAO,EAEZ5e,KAAK6e,UAAY,EACjB7e,KAAK8e,aAAezd,KAAKC,MACzBtB,KAAKyS,MAAQ,KAEbzS,KAAKgZ,MAAQ+F,eAAY,IAAM/e,KAAK2Q,QAAQqO,KAAiBC,QAG9Dnf,OAAO2S,GACNzS,KAAKyS,MAAQA,EAGd3S,OAEC,MAAMwB,EAAMD,KAAKC,MACX4d,GAAc5d,EAAMtB,KAAK8e,cAAgB,IAC/C9e,KAAK8e,aAAexd,EAGpB,MAAM6d,EAAOnf,KAAKyS,MAAQzS,KAAK6e,UAC/B7e,KAAK6e,UAAY7e,KAAKyS,MAGtB,MAAM2M,EAAaD,EAAOD,EAzCD,GA4CzB,IAAIN,EAAO5e,KAAK4e,KAAkC,IAA1BQ,EAAapf,KAAK4e,MAItC9c,KAAKud,IAAIT,GAAQ,MAAMA,EAAO,GAClC,MAAMR,EAAUtc,KAAKud,IAAIT,EAAO5e,KAAK4e,MAAQ,IAE7C5e,KAAK4e,KAAOA,EAERR,GACHpe,KAAK0e,OAAON,QAAQpe,KAAKoX,KAAK3E,MAAOzS,KAAKoX,KAAK6G,OAAQ3c,GAGzDxB,QACCE,KAAK6e,UAAY,EACjB7e,KAAKyS,MAAQ,KAEbzS,KAAK4e,KAAO,IC9Dd,MAAMU,KAAEA,IAASC,UAwJjB,OA7IA,cAA0BC,GAQzB1f,YAAY0d,EAAMC,GACjB1d,MAAMyd,EAAMC,GACZzd,KAAKoE,KAAOqb,EAAO/Y,WACnB1G,KAAK4e,KAAOpB,EAAKoB,KAYlB9e,UAAUme,EAAQxL,EAAO8L,GACX,MAAT9L,IACHA,EAAQ,GAET,MAAM2E,EAAOpX,KAAKwa,IAAIyD,GACtB,OAAOje,KAAK2a,KAAKvD,EAAOA,EAAK3E,MAAQ,GAAKA,EAAOwL,EAAQM,GAY1Dze,UAAUme,EAAQxL,EAAO8L,GACX,MAAT9L,IACHA,EAAQ,GAET,MAAM2E,EAAOpX,KAAKwa,IAAIyD,GACtB,OAAOje,KAAK2a,KAAKvD,EAAOA,EAAK3E,MAAQ,GAAKA,EAAOwL,EAAQM,GAY1Dze,IAAI2S,EAAOwL,EAAQM,GAClB,MAAML,EAAOle,KAAKme,cAAcF,GAChC,IAAI7G,EAAOpX,KAAKge,OAAOxD,IAAI0D,GA2B3B,OA1BI9G,EACCA,EAAK3E,OAASA,IACjB2E,EAAK3E,MAAQA,EACb2E,EAAKmH,UAAyB,MAAbA,EAAoBld,KAAKC,MAAQid,EAE9CnH,EAAKwH,MACRxH,EAAKwH,KAAKc,OAAOjN,GAElBzS,KAAKoe,QAAQ3L,EAAOwL,EAAQM,KAG7BnH,EAAO,CACN3E,MAAAA,EACAwL,OAAQqB,GAAKrB,EAAQje,KAAK2d,YAC1BY,UAAwB,MAAbA,EAAoBld,KAAKC,MAAQid,GAE7Cve,KAAKge,OAAOrD,IAAIuD,EAAM9G,GAElBpX,KAAK4e,OACRxH,EAAKwH,KAAO,IAAIe,GAAW3f,KAAMoX,EAAM,GACvCA,EAAKwH,KAAKc,OAAOjN,IAGlBzS,KAAKoe,QAAQ3L,EAAOwL,EAAQM,IAGtBnH,EAWRtX,MAAMme,EAAQM,GACb,OAAOve,KAAK2a,IAAI,EAAGsD,EAAQM,GAS5Bze,SAASye,GACRve,KAAKge,OAAOpE,SAAQxC,IACnBA,EAAK3E,MAAQ,EACb2E,EAAKmH,UAAyB,MAAbA,EAAoBld,KAAKC,MAAQid,KAEnDve,KAAKoe,QAAQ,KAAM,KAAMG,GAS1Bze,mBAgBC,OAfiB2W,MAAMmJ,KAAK5f,KAAKge,OAAOvE,QAAQ9F,KAAIkG,IACnD,MAAMzC,EAAOpX,KAAKge,OAAOxD,IAAIX,GACvBf,EAAM,CACXe,IAAAA,EACApH,MAAO2E,EAAK3E,MACZwL,OAAQ7G,EAAK6G,OACbM,UAAWnH,EAAKmH,WAMjB,OAHInH,EAAKwH,OACR9F,EAAI8F,KAAOxH,EAAKwH,KAAKA,MAEf9F,OCjHV,OAvBA,cAA4B+G,GAQ3B/f,YAAY0d,EAAMC,GACjB1d,MAAMyd,EAAMC,GACZzd,KAAKoE,KAAOqb,EAAOhZ,aAQpB3G,YACC,MAAM,IAAI4B,MAAM,iCCxBlB,MAAMyU,cAAEA,IAAkBoJ,GACpBO,GAAgB,CAACnJ,EAAG3B,IAAM2B,EAAI3B,EAC9B+K,GAAU,CAAC7J,EAAG8J,EAAGhD,KACtB9G,EAAE8J,GAAKhD,EACA9G,GASR,MAAM+J,WAAwBT,GAQ7B1f,YAAY0d,EAAMC,GACjB1d,MAAMyd,EAAMC,GACZzd,KAAKoE,KAAOqb,EAAO9Y,eAGfwP,GAAcqH,EAAK0C,eACtBlgB,KAAKmgB,QAAUF,GAAgBG,sBAAsB5C,EAAK0C,cAAc1N,MAAOgL,EAAK0C,cAAcG,MAAO7C,EAAK0C,cAAcI,OAClHnK,GAAcqH,EAAK+C,oBAC7BvgB,KAAKmgB,QAAUF,GAAgBO,2BAA2BhD,EAAK+C,mBAAmB/N,MAAOgL,EAAK+C,mBAAmBE,OAAQjD,EAAK+C,mBAAmBD,OACvI7J,MAAMiK,QAAQlD,EAAK2C,SAC7BngB,KAAKmgB,QAAU1J,MAAMmJ,KAAKpC,EAAK2C,UACJ,IAAjB3C,EAAK2C,UACfngB,KAAKmgB,QAAUngB,KAAKyd,SAASD,KAAKmD,gBAE/B3gB,KAAKmgB,SACRngB,KAAKmgB,QAAQS,KAAKd,IAIfrJ,MAAMiK,QAAQlD,EAAKqD,WACtB7gB,KAAK6gB,UAAYpK,MAAMmJ,KAAKpC,EAAKqD,YACJ,IAAnBrD,EAAKqD,YACf7gB,KAAK6gB,UAAY7gB,KAAKyd,SAASD,KAAKsD,kBAEjC9gB,KAAK6gB,YACR7gB,KAAK6gB,UAAUD,KAAKd,IACpB9f,KAAK+gB,cAAgBvD,EAAKuD,eAAiB/gB,KAAKyd,SAASD,KAAKwD,qBAC9DhhB,KAAKihB,WAAazD,EAAKyD,YAAcjhB,KAAKyd,SAASD,KAAK0D,mBAGzDlhB,KAAK4e,KAAOpB,EAAKoB,KAYlB9e,QAAQ2S,EAAOwL,EAAQM,GACtB,MAAML,EAAOle,KAAKme,cAAcF,GAChC,IAAI7G,EAAOpX,KAAKge,OAAOxD,IAAI0D,GAiB3B,GAhBK9G,IACJA,EAAOpX,KAAKmhB,UAAU,CACrBlD,OAAQmD,UAAE9B,KAAKrB,EAAQje,KAAK2d,cAGzB3d,KAAK4e,OACRxH,EAAKwH,KAAO,IAAIe,GAAW3f,KAAMoX,EAAM,IAExCpX,KAAKge,OAAOrD,IAAIuD,EAAM9G,IAGvBA,EAAKmH,UAAyB,MAAbA,EAAoBld,KAAKC,MAAQid,EAClDnH,EAAK9E,KAAOG,EACZ2E,EAAKkJ,QACLlJ,EAAKyH,UAAYpM,EAEb2E,EAAKiK,aAAc,CACtB,MAAMpH,EAAMja,KAAKmgB,QAAQjO,OACzB,IAAK,IAAIwC,EAAI,EAAGA,EAAIuF,EAAKvF,IACpBjC,GAASzS,KAAKmgB,QAAQzL,KACzB0C,EAAKiK,aAAarhB,KAAKmgB,QAAQzL,KAAO,GAczC,OATI0C,EAAKkK,gBACRlK,EAAKkK,eAAevF,IAAItJ,GAGrB2E,EAAKwH,MACRxH,EAAKwH,KAAKc,OAAOtI,EAAKkJ,OAEvBtgB,KAAKoe,QAAQ3L,EAAOwL,EAAQM,GAErBnH,EASRtX,qBACC,OAAOE,KAAKmgB,QAAQ9N,QAAO,CAACsE,EAAG4K,IAAUxB,GAAQpJ,EAAG4K,EAAO,IAAI,IAShEzhB,mBACC,OAAO2W,MAAMmJ,KAAK5f,KAAKge,OAAOvE,QAAQ9F,KAAIkG,GAAO7Z,KAAKwhB,qBAAqBxhB,KAAKge,OAAOxD,IAAIX,GAAMA,KAWlG/Z,qBAAqBsX,EAAMyC,GAC1B,MAAM4E,EAAW,CAChB5E,IAAAA,EACAoE,OAAQ7G,EAAK6G,OACbqC,MAAOlJ,EAAKkJ,MACZhO,IAAK8E,EAAK9E,IACVuM,UAAWzH,EAAKyH,UAChBN,UAAWnH,EAAKmH,WAYjB,OATIve,KAAKmgB,UACR1B,EAAS0B,QAAUngB,KAAKmgB,QAAQ9N,QAAO,CAACsE,EAAG3B,IAAM+K,GAAQpJ,EAAG3B,EAAGoC,EAAKiK,aAAarM,KAAK,KAEnFhV,KAAK6gB,WACRzK,OAAOqL,OAAOhD,EAAUrH,EAAKkK,eAAe7C,YAEzCrH,EAAKwH,OACRH,EAASG,KAAOxH,EAAKwH,KAAKA,MAEpBH,EASR3e,UAAUsX,EAAMmH,GAcf,OAbAnH,EAAKmH,UAAyB,MAAbA,EAAoBld,KAAKC,MAAQid,EAClDnH,EAAK9E,IAAM,EACX8E,EAAKkJ,MAAQ,EACblJ,EAAKyH,UAAY,KAEb7e,KAAKmgB,UACR/I,EAAKiK,aAAerhB,KAAK0hB,sBAGtB1hB,KAAK6gB,YACRzJ,EAAKkK,eAAiB,IAAIK,GAAoB3hB,KAAMA,KAAK6gB,UAAW7gB,KAAK+gB,cAAe/gB,KAAKihB,aAGvF7J,EAWRtX,MAAMme,EAAQM,GACb,MAAML,EAAOle,KAAKme,cAAcF,GAC1B7G,EAAOpX,KAAKge,OAAOxD,IAAI0D,GACzB9G,IACHpX,KAAKmhB,UAAU/J,EAAMmH,GACrBve,KAAKoe,QAAQ,KAAMH,EAAQM,IAU7Bze,SAASye,GACRve,KAAKge,OAAOpE,SAAQxC,GAAQpX,KAAKmhB,UAAU/J,EAAMmH,KACjDve,KAAKoe,UAaNte,6BAA6B0S,EAAO6N,EAAOC,GAC1C,MAAMH,EAAU,GAChB,IAAK,IAAIzL,EAAI,EAAGA,EAAI4L,EAAO5L,IAC1ByL,EAAQnO,KAAKQ,EAAQkC,EAAI2L,GAE1B,OAAOF,EAaRrgB,kCAAkC0S,EAAOiO,EAAQH,GAChD,MAAMH,EAAU,GAChB,IAAK,IAAIzL,EAAI,EAAGA,EAAI4L,EAAO5L,IAC1ByL,EAAQzL,GAAKlC,EAAQ1Q,KAAKuT,IAAIoL,EAAQ/L,GAEvC,OAAOyL,GAST,MAAMwB,GAUL7hB,YAAY4e,EAAQmC,EAAWE,EAAeE,GAC7CjhB,KAAK0e,OAASA,EACd1e,KAAK6gB,UAAYpK,MAAMmJ,KAAKiB,GAC5B7gB,KAAK+gB,cAAgBA,EACrB/gB,KAAKihB,WAAaA,EAClBjhB,KAAK4hB,YAAc,GACnB,IAAI,IAAIlN,EAAI,EAAGA,EAAIuM,EAAYvM,IAC9B1U,KAAK4hB,YAAY5P,KAAK,IAAI6P,IAE3B7hB,KAAK+d,OAAQ,EAEb/d,KAAK8hB,eAAiB,EACtB9hB,KAAK+hB,SAEL/hB,KAAK8d,aAAe,KACpB9d,KAAKwe,WAQN1e,WACCE,KAAK+d,OAAQ,EACb/d,KAAK0e,OAAOF,WAQb1e,aACCE,KAAK+d,OAAQ,EAQdje,SACCE,KAAK8hB,eAAiB9hB,KAAK8hB,cAAgB,GAAK9hB,KAAKihB,WACrDjhB,KAAK4hB,YAAY5hB,KAAK8hB,eAAeE,QACrChiB,KAAKwe,WAEL3F,cAAW,IAAM7Y,KAAK+hB,UAAW/hB,KAAK+gB,cAAgB/gB,KAAKihB,WAAc,KAAMhC,QAShFnf,IAAI2S,GACHzS,KAAKwe,WACLxe,KAAK4hB,YAAY5hB,KAAK8hB,eAAe/F,IAAItJ,GAS1C3S,WACC,IAAKE,KAAK+d,OAAS/d,KAAK8d,aACvB,OAAO9d,KAAK8d,aAEb,MAAMmE,EAAUjiB,KAAK4hB,YAAYvP,QAAO,CAACsE,EAAG3B,IAAM2B,EAAEC,OAAO5B,EAAEiN,UAAU,IACvEA,EAAQrB,KAAKd,IAEb,MAAMoC,EAAOD,EAAQ/P,OAAS+P,EAAQ5P,QAAO,CAACsE,EAAG3B,IAAM2B,EAAI3B,GAAG,GAAKiN,EAAQ/P,OAAS,KAC9EiQ,EAAWF,EAAQ/P,OAAS,EAAI+P,EAAQ5P,QAAO,CAACsE,EAAG3B,IAAM2B,EAAI7U,KAAKuT,IAAIL,EAAIkN,EAAM,IAAI,IAAMD,EAAQ/P,OAAS,GAAK,KAChHkQ,EAASD,EAAWrgB,KAAKugB,KAAKF,GAAY,KAahD,OAXAniB,KAAK8d,aAAe,CACnBa,IAAKsD,EAAQ/P,OAAS+P,EAAQ,GAAK,KACnCC,KAAAA,EACAC,SAAAA,EACAC,OAAAA,EACAE,IAAKL,EAAQ/P,OAAS+P,EAAQA,EAAQ/P,OAAS,GAAK,KACpD2O,UAAW7gB,KAAK6gB,UAAUxO,QAAO,CAACsE,EAAG4L,IAAMxC,GAAQpJ,EAAG4L,EAAGN,EAAQngB,KAAK0gB,KAAKD,EAAIN,EAAQ/P,QAAU,KAAK,KAGvGlS,KAAKse,aAEEte,KAAK8d,cASd,MAAM+D,GAKL/hB,cACCE,KAAKsgB,MAAQ,EACbtgB,KAAKiiB,QAAU,GAShBniB,IAAI2S,GACHzS,KAAKiiB,QAAQjQ,KAAKS,GAClBzS,KAAKsgB,QAQNxgB,QACCE,KAAKsgB,MAAQ,EACbtgB,KAAKiiB,QAAQ/P,OAAS,GAIxB+N,GAAgB4B,OAASA,GACzB5B,GAAgB0B,oBAAsBA,GAEtC,OAAiB1B,GCzYjB,WAAQX,IAASC,UAqGjB,OA3FA,cAAyBC,GAQxB1f,YAAY0d,EAAMC,GACjB1d,MAAMyd,EAAMC,GACZzd,KAAKoE,KAAOqb,EAAO7Y,UAYpB9G,IAAI2S,EAAOwL,EAAQM,GAClB,MAAML,EAAOle,KAAKme,cAAcF,GAChC,IAAI7G,EAAOpX,KAAKge,OAAOxD,IAAI0D,GAiB3B,OAhBI9G,EACC3E,GAAS2E,EAAK3E,QACjB2E,EAAK3E,MAAQA,EACb2E,EAAKmH,UAAyB,MAAbA,EAAoBld,KAAKC,MAAQid,EAClDve,KAAKoe,QAAQ3L,EAAOwL,EAAQM,KAG7BnH,EAAO,CACN3E,MAAAA,EACAwL,OAAQqB,GAAKrB,EAAQje,KAAK2d,YAC1BY,UAAwB,MAAbA,EAAoBld,KAAKC,MAAQid,GAE7Cve,KAAKge,OAAOrD,IAAIuD,EAAM9G,GACtBpX,KAAKoe,QAAQ3L,EAAOwL,EAAQM,IAGtBnH,EAWRtX,MAAMme,EAAQM,GACb,OAAOve,KAAK2a,IAAI,KAAMsD,EAAQM,GAS/Bze,SAASye,GACRve,KAAKge,OAAOpE,SAAQxC,IACnBA,EAAK3E,MAAQ,KACb2E,EAAKmH,UAAyB,MAAbA,EAAoBld,KAAKC,MAAQid,KAEnDve,KAAKoe,UASNte,mBAWC,OAViB2W,MAAMmJ,KAAK5f,KAAKge,OAAOvE,QAAQ9F,KAAIkG,IACnD,MAAMzC,EAAOpX,KAAKge,OAAOxD,IAAIX,GAC7B,MAAO,CACNA,IAAAA,EACApH,MAAO2E,EAAK3E,MACZwL,OAAQ7G,EAAK6G,OACbM,UAAWnH,EAAKmH,gBC7FpB,MAAMzY,mBAAEA,IAAuByZ,EAEzBkD,GAAQ,CACbC,KAAMC,GACNC,QAASC,GACTC,MAAOC,GACPC,UAAWC,GACXC,KAAMC,IAsCP,OAAiB/M,OAAOqL,OAAOgB,GAAO,CAAExP,QAZxC,SAAiB7O,GAChB,MAAMgf,EAlBP,SAAmBpd,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIqd,EAAIjN,OAAOqD,KAAKgJ,IAAOa,MAAKD,GAAKA,EAAE3L,eAAiB1R,EAAK0R,gBAC7D,OAAI2L,EACIZ,GAAMY,QADd,EAYkBE,CAAUnf,GAC5B,IAAKgf,EACJ,MAAM,IAAItd,GAAmB,wBAAwB1B,MAAU,CAAEA,KAAAA,IAElE,OAAOgf,GAOyCI,SAJjD,SAAkBxd,EAAMyM,GACvBgQ,GAAMzc,GAAQyM,KCzCf,MAAMgR,MAAEA,GAAK3N,SAAEA,IAAayJ,GAsH5B,OA/GA,MAQCzf,YAAY0d,GACXxd,KAAKwd,KAAO4D,UAAEsC,aAAalG,EAAM,CAChCmG,SAAU,KACVC,SAAU,KAEVC,iBAAkB,KAClBC,iBAAkB,KAElBC,oBAAqB,KACrBC,mBAAoB,OAGjBlO,GAAS9V,KAAKwd,KAAKmG,YACtB3jB,KAAKwd,KAAKmG,SAAW,CAAC3jB,KAAKwd,KAAKmG,WAE7B7N,GAAS9V,KAAKwd,KAAKoG,YACtB5jB,KAAKwd,KAAKoG,SAAW,CAAC5jB,KAAKwd,KAAKoG,WASlC9jB,KAAK2d,GACJzd,KAAKyd,SAAWA,EAChBzd,KAAKikB,OAASjkB,KAAKyd,SAASwG,OAC5BjkB,KAAKkkB,OAASlkB,KAAKyd,SAASyG,OAQ7BpkB,OACC,OAAOkT,QAAQC,UAUhBnT,gBAAgBkG,GACf,QAAIyQ,MAAMiK,QAAQ1gB,KAAKwd,KAAKmG,YACtB3jB,KAAKwd,KAAKmG,SAASQ,MAAKpK,GAAW0J,GAAMzd,EAAM+T,SAIjDtD,MAAMiK,QAAQ1gB,KAAKwd,KAAKoG,YACtB5jB,KAAKwd,KAAKoG,SAASQ,OAAMrK,IAAY0J,GAAMzd,EAAM+T,MAcxDja,iBAAiBkG,GAEhB,OADAA,GAAQhG,KAAKwd,KAAKqG,iBAAmB7jB,KAAKwd,KAAKqG,iBAAmB,IAAM7d,GAAQhG,KAAKwd,KAAKsG,iBAAmB9jB,KAAKwd,KAAKsG,iBAAmB,IACtI9jB,KAAKwd,KAAKuG,oBACN/jB,KAAKwd,KAAKuG,oBAAoB/d,GAC/BA,EAURlG,gBAAgBkG,GACf,OAAIhG,KAAKwd,KAAKwG,mBACNhkB,KAAKwd,KAAKwG,mBAAmBhe,GAC9BA,EAaRlG,mBC9GD,MAAM8V,WAAEA,IAAe2J,GAgLvB,OAxKA,cAA8B8E,GAO7BvkB,YAAY0d,GACXzd,MAAMyd,GAENxd,KAAKwd,KAAO4D,UAAEsC,aAAa1jB,KAAKwd,KAAM,CACrC8G,SAAU,EACVJ,OAAQ,KACRK,QAAQ,EACRC,aAAa,IAGTxkB,KAAKwd,KAAK+G,SACdxJ,UAAMhJ,SAAU,GAEjB/R,KAAKykB,YAAc,IAAIC,IAQxB5kB,KAAK2d,GACJ1d,MAAM4S,KAAK8K,GAEPzd,KAAKwd,KAAK8G,SAAW,IACxBtkB,KAAKgZ,MAAQ+F,eAAY,IAAM/e,KAAK2kB,SAA8B,IAArB3kB,KAAKwd,KAAK8G,UACvDtkB,KAAKgZ,MAAMiG,SAWbnf,YAAYme,GACX,MAAMxE,EAAOrD,OAAOqD,KAAKwE,GACzB,OAAmB,GAAfxE,EAAKvH,OACD6I,UAAM6J,KAAK,MAEZ7J,UAAM6J,KAAK,KAAOnL,EAAK9F,KAAIkG,GAAO,GAAGkB,UAAM6J,KAAK5kB,KAAK6kB,gBAAgBhL,QAAUkB,UAAM+J,QAAQ,GAAK7G,EAAOpE,QAAS2C,KAAK,MAAQzB,UAAM6J,KAAK,KAQlJ9kB,QACC,IAAI6X,EAAO3X,KAAKyd,SAAS9F,KAAK,CAC7BgM,SAAU3jB,KAAKwd,KAAKmG,SACpBC,SAAU5jB,KAAKwd,KAAKoG,WAGjB5jB,KAAKwd,KAAKgH,cACb7M,EAAOA,EAAKoN,QAAOrG,GAAU1e,KAAKykB,YAAY3I,IAAI4C,EAAO1Y,SAEvC,GAAf2R,EAAKzF,SAGTlS,KAAKglB,IAAIjK,UAAM6J,KAAK,wCAAwCjN,EAAKzF,kCAEjEyF,EAAKiC,SAAQ8E,IAEZ,GADA1e,KAAKglB,IAAIjK,UAAMkK,OAAOhK,KAAKjb,KAAKklB,iBAAiBxG,EAAO1Y,OAAS,IAAM+U,UAAM6J,KAAK,IAAMlG,EAAOta,KAAO,MAC5E,GAAtBsa,EAAOV,OAAOnC,KACjB7b,KAAKglB,IAAIjK,UAAM6J,KAAK,sBACd,CACN,MAAMvH,EAAOqB,EAAOrB,KAAOtC,UAAM6J,KAAK5kB,KAAKyd,SAAS0H,cAAczG,EAAOrB,OAAS,GAClFqB,EAAOV,OAAOpE,SAAQxC,IACrB,IAAIN,EACJ,MAAMsO,EAAWplB,KAAKqlB,YAAYjO,EAAK6G,QACvC,OAAOS,EAAOta,MACb,KAAKqb,EAAOhZ,aACZ,KAAKgZ,EAAO/Y,WACZ,KAAK+Y,EAAO7Y,UACXkQ,EAAqB,KAAfM,EAAK3E,MAAesI,UAAMuK,KAAK,kBAAoBvK,UAAMwK,QAAQtK,KAAK7D,EAAK3E,OAChE,MAAb2E,EAAKwH,OASR9H,EAAMA,EAAMiE,UAAMuK,KAAK,cAA6B,MAAblO,EAAKwH,KAAe7D,UAAMwK,QAAQtK,KAAK7D,EAAKwH,KAAK4G,QAAQ,IAAM,MAGvG,MACD,KAAK/F,EAAO9Y,eAAgB,CAC3B,MAAMoP,EAAI,GACVA,EAAE/D,KAAK,UAAUoF,EAAKkJ,OAElBlJ,EAAK+I,SACR/J,OAAOqD,KAAKrC,EAAK+I,SAASvG,SAAQ5E,IACjCe,EAAE/D,KAAK,GAAGgD,MAAyB,MAAnBoC,EAAK+I,QAAQnL,GAAaoC,EAAK+I,QAAQnL,GAAK,UAI1DoC,EAAKyJ,YACR9K,EAAE/D,KAAK,SAAoB,MAAZoF,EAAKuH,IAAcvH,EAAKuH,IAAI6G,QAAQ,GAAK,MACxDzP,EAAE/D,KAAK,UAAsB,MAAboF,EAAK8K,KAAe9K,EAAK8K,KAAKsD,QAAQ,GAAK,MAC3DzP,EAAE/D,KAAK,SAAyB,MAAjBoF,EAAK+K,SAAmB/K,EAAK+K,SAASqD,QAAQ,GAAK,MAClEzP,EAAE/D,KAAK,YAA0B,MAAfoF,EAAKgL,OAAiBhL,EAAKgL,OAAOoD,QAAQ,GAAK,MACjEzP,EAAE/D,KAAK,SAAoB,MAAZoF,EAAKkL,IAAclL,EAAKkL,IAAIkD,QAAQ,GAAK,MAExDpP,OAAOqD,KAAKrC,EAAKyJ,WAAWjH,SAAQC,IACnC9D,EAAE/D,KAAK,GAAG6H,MAA+B,MAAvBzC,EAAKyJ,UAAUhH,GAAezC,EAAKyJ,UAAUhH,GAAK2L,QAAQ,GAAK,WAIlE,MAAbpO,EAAKwH,MACR7I,EAAE/D,KAAK,UAAsB,MAAboF,EAAKwH,KAAexH,EAAKwH,KAAK4G,QAAQ,GAAK,MAE5D1O,EAAMiE,UAAMwK,QAAQtK,KAAKlF,EAAEyG,KAAK,QAChC,OAGFxc,KAAKglB,IAAI,KAAKI,MAAatO,KAAOuG,QAGpCrd,KAAKglB,IAAI,OAGVhlB,KAAKglB,IAAIjK,UAAM6J,KAAK,uCAAuCjN,EAAKzF,mCAEhElS,KAAKykB,YAAYzC,SAQlBliB,OAAO6C,GACN,OAAIiT,GAAW5V,KAAKwd,KAAK0G,QACjBlkB,KAAKwd,KAAK0G,UAAUvhB,GAEpB3C,KAAKkkB,OAAOuB,QAAQ9iB,GAc7B7C,cAAc4e,GACR1e,KAAK0lB,gBAAgBhH,EAAO1Y,OAEjChG,KAAKykB,YAAY1I,IAAI2C,EAAO1Y,YCxLf,ECsGf,OArFA,cAA4Bqe,GAO3BvkB,YAAY0d,GACXzd,MAAMyd,GAENxd,KAAKwd,KAAO4D,UAAEsC,aAAa1jB,KAAKwd,KAAM,CACrCmI,UAAW,oBAEXC,WAAW,EACXC,OAAQ,KAERrB,aAAa,EAEbF,SAAU,IAGXtkB,KAAKykB,YAAc,IAAIC,IASxB5kB,KAAK2d,GACJ1d,MAAM4S,KAAK8K,GAEPzd,KAAKwd,KAAK8G,SAAW,IACxBtkB,KAAKgZ,MAAQ+F,eAAY,IAAM/e,KAAK8lB,aAAkC,IAArB9lB,KAAKwd,KAAK8G,UAC3DtkB,KAAKgZ,MAAMiG,SASbnf,YACC,IAAI6X,EAAO3X,KAAKyd,SAAS9F,KAAK,CAC7BgM,SAAU3jB,KAAKwd,KAAKmG,SACpBC,SAAU5jB,KAAKwd,KAAKoG,WAGjB5jB,KAAKwd,KAAKgH,cACb7M,EAAOA,EAAKoN,QAAOrG,GAAU1e,KAAKykB,YAAY3I,IAAI4C,EAAO1Y,SAEvC,GAAf2R,EAAKzF,SAGLlS,KAAKwd,KAAKoI,WACb5lB,KAAKkkB,OAAO6B,MAAM,0BAA0BpO,EAAKzF,qCACjDlS,KAAKikB,OAAO2B,UAAU5lB,KAAKwd,KAAKmI,UAAWhO,EAAM,CAAEkO,OAAQ7lB,KAAKwd,KAAKqI,WAErE7lB,KAAKkkB,OAAO6B,MAAM,0BAA0BpO,EAAKzF,2BACjDlS,KAAKikB,OAAOxiB,KAAKzB,KAAKwd,KAAKmI,UAAWhO,EAAM,CAAEkO,OAAQ7lB,KAAKwd,KAAKqI,UAGjE7lB,KAAKykB,YAAYzC,SAclBliB,cAAc4e,GACR1e,KAAK0lB,gBAAgBhH,EAAO1Y,OAEjChG,KAAKykB,YAAY1I,IAAI2C,EAAO1Y,QC1F9B,MAAMiQ,SAAEA,YAAUH,IAAayJ,uBACvBzZ,IAAuB6c,EAEzBqD,GAAY,CACjBtD,KAAMG,GACNoD,QAASlD,GACTmD,IAAKjD,GACLkD,MAAOhD,GACPiD,QAASC,GACTC,WAAYC,GACZC,OAAQC,IAGT,SAASlD,GAAUvd,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIqd,EAAIjN,OAAOqD,KAAKuM,IAAW1C,MAAKD,GAAKA,EAAE3L,eAAiB1R,EAAK0R,gBACjE,OAAI2L,EACI2C,GAAU3C,QADlB,EAkCD,OAAiBjN,OAAOqL,OAAOuE,GAAW,SAvB1C,SAAiBU,GAChB,GAAIA,aAAeV,GAAUtD,KAC5B,OAAOgE,EACD,GAAI5Q,GAAS4Q,GAAM,CACzB,IAAIC,EAAgBpD,GAAUmD,GAC9B,GAAIC,EACH,OAAO,IAAIA,OAEN,GAAI1Q,GAASyQ,GAAM,CACzB,IAAIC,EAAgBpD,GAAUmD,EAAItiB,MAClC,GAAIuiB,EACH,OAAO,IAAIA,EAAcD,EAAIlW,SAE7B,MAAM,IAAI1K,GAAmB,iCAAiC4gB,EAAItiB,SAAU,CAAEA,KAAMsiB,EAAItiB,OAG1F,MAAM,IAAI0B,GAAmB,iCAAiC4gB,MAAS,CAAEtiB,KAAMsiB,cAGhF,SAAkB1gB,EAAMyM,GACvBuT,GAAUhgB,GAAQyM,KC9CnB,IAAIhS,GAAImmB,GAGR,IACCnmB,GAAK8e,GACJ,MAAOsH,IAkGT,SAASC,KAER,IACC,MAAMC,EAAK,KAGPA,IAGH/mB,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOhX,gBAAiBrE,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAOtQ,iBAAkBuO,YAAa,YACnH1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO/W,sBAAuBtE,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAOpQ,kBAAmBqO,YAAa,qBAC1H1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO9W,0BAA2BvE,KAAMqb,EAAO/Y,WAAYiX,WAAY,CAAC,QAASN,KAAM,KAAMK,YAAa,0BAEhIqJ,EAAGC,GAAG,SAASC,IACdjnB,KAAK2a,IAAI8E,EAAOhX,gBAAiBwe,EAAMC,OACvClnB,KAAKmnB,UAAU1H,EAAO/W,sBAAuB,KAAMue,EAAMC,MAAQ,KAC7C,GAAhBD,EAAMG,QACTpnB,KAAKmnB,UAAU1H,EAAO9W,0BAA2B,CAAEvE,KAAM,aACtC,GAAhB6iB,EAAMG,QACTpnB,KAAKmnB,UAAU1H,EAAO9W,0BAA2B,CAAEvE,KAAM,cACtC,GAAhB6iB,EAAMG,QACTpnB,KAAKmnB,UAAU1H,EAAO9W,0BAA2B,CAAEvE,KAAM,gBACtC,GAAhB6iB,EAAMG,QACTpnB,KAAKmnB,UAAU1H,EAAO9W,0BAA2B,CAAEvE,KAAM,gBACtC,IAAhB6iB,EAAMG,SACTpnB,KAAKmnB,UAAU1H,EAAO9W,0BAA2B,CAAEvE,KAAM,aACzDpE,KAAKmnB,UAAU1H,EAAO9W,0BAA2B,CAAEvE,KAAM,cACzDpE,KAAKmnB,UAAU1H,EAAO9W,0BAA2B,CAAEvE,KAAM,gBACzDpE,KAAKmnB,UAAU1H,EAAO9W,0BAA2B,CAAEvE,KAAM,qBAI3D,MAAOyiB,KAKV,SAASQ,KAER,IACCT,GAAY/D,GACR+D,KACH5mB,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOpX,0BAA2BjE,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAOpQ,kBAAmBqO,YAAa,8BAC9H1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOnX,0BAA2BlE,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAOpQ,kBAAmBqO,YAAa,8BAC9H1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOlX,0BAA2BnE,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAOpQ,kBAAmBqO,YAAa,8BAC9H1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOjX,4BAA6BpE,KAAMqb,EAAO/Y,WAAYgX,YAAa,uCAEhG,MAAOmJ,KA4KV,OAAiB,CAChBS,sBAvTD,WACCtnB,KAAKkkB,OAAO6B,MAAM,iCASlB,MAAM3O,EAAOpX,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO5Y,kBAAmBzC,KAAMqb,EAAO7Y,UAAW+W,WAAY,CAAC,SAAUD,YAAa,sBACzH3a,EAAQ3C,KAAKuT,KAAI,CAAC4T,EAAKC,IAAUpQ,EAAKuD,IAAI4M,EAAK,CAAEC,MAAAA,MAEjDxnB,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO3Y,YAAa1C,KAAMqb,EAAO7Y,UAAW8W,YAAa,gBAAiB/C,IAAI5X,EAAQ9B,KAC5GjB,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO1Y,aAAc3C,KAAMqb,EAAO7Y,UAAW8W,YAAa,uBAAwB/C,IAAI5X,EAAQ0kB,MAEpHznB,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOzY,+BAAgC5C,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,sBAC3H1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOxY,8BAA+B7C,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,2BAC1H1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOvY,mBAAoB9C,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,qBAC/G1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOtY,wBAAyB/C,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,iCAEpH1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOrY,qCAAsChD,KAAMqb,EAAO/Y,WAAYiX,WAAY,CAAC,SAAUN,KAAMoC,EAAO7Q,UAAW8O,YAAa,kCACxJ1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOpY,oCAAqCjD,KAAMqb,EAAO/Y,WAAYiX,WAAY,CAAC,SAAUN,KAAMoC,EAAO7Q,UAAW8O,YAAa,iCACvJ1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOnY,yCAA0ClD,KAAMqb,EAAO/Y,WAAYiX,WAAY,CAAC,SAAUN,KAAMoC,EAAO7Q,UAAW8O,YAAa,sCAC5J1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOlY,wCAAyCnD,KAAMqb,EAAO/Y,WAAYiX,WAAY,CAAC,SAAUN,KAAMoC,EAAO7Q,UAAW8O,YAAa,qCAE3J1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOjY,yCAA0CpD,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,2BACrI1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOhY,+CAAgDrD,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,sCAC3I1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO/X,6CAA8CtD,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,oCACzI1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO9X,8CAA+CvD,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,qCAC1I1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO7X,wCAAyCxD,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,gCACpI1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO5X,yCAA0CzD,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,iCACrI1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO3X,2CAA4C1D,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,sCACvI1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO1X,gDAAiD3D,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,8CAC5I1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOzX,qCAAsC5D,KAAMqb,EAAO/Y,WAAYgX,YAAa,kCAEzG1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOxX,eAAgB7D,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAOnQ,aAAcoO,YAAa,mBAC9G1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOvX,gCAAiC9D,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO5P,YAAa6N,YAAa,sCAC9H1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOtX,iCAAkC/D,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAOzP,aAAc0N,YAAa,sCAEhI1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOrX,sBAAuBhE,KAAMqb,EAAO7Y,UAAW8W,YAAa,iBAAkB/C,IAAI5X,EAAQzC,SAASE,MAIhIR,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO7W,eAAgBxE,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,wBAC3G1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO5W,eAAgBzE,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,wBAC3G1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO3W,gBAAiB1E,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO7Q,UAAW8O,YAAa,yBAC5G1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO1W,UAAW3E,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAOnQ,aAAcoO,YAAa,cACzG1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOzW,QAAS5E,KAAMqb,EAAO7Y,UAAW8W,YAAa,YAAa/C,IAAIlD,EAAGrT,QAC/FpE,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOxW,WAAY7E,KAAMqb,EAAO7Y,UAAW8W,YAAa,eAAgB/C,IAAIlD,EAAGiQ,WACrG1nB,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOvW,YAAa9E,KAAMqb,EAAO7Y,UAAW8W,YAAa,aAAc/C,IAAIlD,EAAGzD,YACpGhU,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOtW,QAAS/E,KAAMqb,EAAO7Y,UAAW8W,YAAa,oBAAqB/C,IAAIlD,EAAGkQ,QACvG3nB,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOrW,YAAahF,KAAMqb,EAAO7Y,UAAW8W,YAAa,gBAAiB/C,IAAIlD,EAAGmQ,YAEvG,MAAMC,EAwOP,WACC,IACC,OAAOpQ,EAAGoQ,WACT,MAAOhB,GAER,MAAO,IA7OSiB,GACjB9nB,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOpW,YAAajF,KAAMqb,EAAO7Y,UAAW8W,YAAa,QAAS/C,IAAIkN,EAAS1T,KACrGnU,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOnW,YAAalF,KAAMqb,EAAO7Y,UAAW8W,YAAa,QAAS/C,IAAIkN,EAASzT,KACrGpU,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOlW,iBAAkBnF,KAAMqb,EAAO7Y,UAAW8W,YAAa,aAAc/C,IAAIkN,EAASxT,UAC/GrU,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOjW,gBAAiBpF,KAAMqb,EAAO7Y,UAAW8W,YAAa,0BAA2B/C,IAAIkN,EAASvT,SAE3HtU,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO5V,mBAAoBzF,KAAMqb,EAAO7Y,UAAW+W,WAAY,CAAC,YAAa,UAAWD,YAAa,oBAC3H1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO3V,eAAgB1F,KAAMqb,EAAO7Y,UAAW+W,WAAY,CAAC,YAAa,UAAWD,YAAa,gBAEvH1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOhW,iBAAkBrF,KAAMqb,EAAO/Y,WAAYgX,YAAa,oCACrF1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO/V,gBAAiBtF,KAAMqb,EAAO7Y,UAAW8W,YAAa,mCACnF1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO9V,gBAAiBvF,KAAMqb,EAAO7Y,UAAW8W,YAAa,yBACnF1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO7V,sBAAuBxF,KAAMqb,EAAO/Y,WAAYgX,YAAa,oBAE1F1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAO1V,cAAe3F,KAAMqb,EAAO/Y,WAAYgX,YAAa,cAClF1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOzV,cAAe5F,KAAMqb,EAAO/Y,WAAYgX,YAAa,cAClF1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOxV,eAAgB7F,KAAMqb,EAAO/Y,WAAYgX,YAAa,eACnF1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOvV,mBAAoB9F,KAAMqb,EAAO/Y,WAAYgX,YAAa,oBAEvF1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOtV,YAAa/F,KAAMqb,EAAO/Y,WAAYgX,YAAa,kBAChF1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOrV,cAAehG,KAAMqb,EAAO/Y,WAAYgX,YAAa,oBAElF1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOpV,aAAcjG,KAAMqb,EAAO/Y,WAAY2W,KAAMoC,EAAO3P,SAAU4N,YAAa,mBACxG1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOnV,kBAAmBlG,KAAMqb,EAAO7Y,UAAW+W,WAAY,CAAC,SAAUD,YAAa,cAC5G1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOlV,kBAAmBnG,KAAMqb,EAAO/Y,WAAYiX,WAAY,CAAC,SAAUN,KAAMoC,EAAO1P,SAAU2N,YAAa,cACpI1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOjV,uBAAwBpG,KAAMqb,EAAO/Y,WAAYiX,WAAY,CAAC,SAAUD,YAAa,kBAClH1d,KAAKwjB,SAAS,CAAExd,KAAMyZ,EAAOhV,sBAAuBrG,KAAMqb,EAAO/Y,WAAYiX,WAAY,CAAC,SAAUD,YAAa,oBAEjHoJ,GAAepQ,KAAK1W,MACpBqnB,GAAoB3Q,KAAK1W,MAEzBA,KAAKkkB,OAAO6B,MAAM,cAAc/lB,KAAK+nB,MAAMlM,yBAmO3CmM,oBApKD,WACChoB,KAAKkkB,OAAO6B,MAAM,kCAClB,MAAMkC,EAAMjoB,KAAKgZ,QAIXkP,EAAUnlB,EAAQolB,cAOxB,GALAnoB,KAAK2a,IAAI8E,EAAOzY,+BAAgCkhB,EAAQ/lB,WACxDnC,KAAK2a,IAAI8E,EAAOxY,8BAA+BihB,EAAQ5lB,UACvDtC,KAAK2a,IAAI8E,EAAOvY,mBAAoBghB,EAAQhmB,KAC5ClC,KAAK2a,IAAI8E,EAAOtY,wBAAyB+gB,EAAQ3lB,UAE7C9B,IAAMA,GAAG2nB,uBAAwB,CACvB3nB,GAAG2nB,yBACXxO,SAAQxC,IACZ,MAAMiR,EAAQjR,EAAKkR,WACnBtoB,KAAK2a,IAAI8E,EAAOrY,qCAAsCgQ,EAAKmR,WAAY,CAAEF,MAAAA,IACzEroB,KAAK2a,IAAI8E,EAAOpY,oCAAqC+P,EAAKoR,gBAAiB,CAAEH,MAAAA,IAC7EroB,KAAK2a,IAAI8E,EAAOnY,yCAA0C8P,EAAKqR,qBAAsB,CAAEJ,MAAAA,IACvFroB,KAAK2a,IAAI8E,EAAOlY,wCAAyC6P,EAAKsR,oBAAqB,CAAEL,MAAAA,OAIvF,GAAI5nB,IAAMA,GAAGkoB,kBAAmB,CAC/B,MAAMC,EAAOnoB,GAAGkoB,oBAChB3oB,KAAK2a,IAAI8E,EAAOjY,yCAA0CohB,EAAKC,iBAC/D7oB,KAAK2a,IAAI8E,EAAOhY,+CAAgDmhB,EAAKE,4BACrE9oB,KAAK2a,IAAI8E,EAAO/X,6CAA8CkhB,EAAKG,qBACnE/oB,KAAK2a,IAAI8E,EAAO9X,8CAA+CihB,EAAKI,sBACpEhpB,KAAK2a,IAAI8E,EAAO7X,wCAAyCghB,EAAKK,gBAC9DjpB,KAAK2a,IAAI8E,EAAO5X,yCAA0C+gB,EAAKM,iBAC/DlpB,KAAK2a,IAAI8E,EAAO3X,2CAA4C8gB,EAAKO,iBACjEnpB,KAAK2a,IAAI8E,EAAO1X,gDAAiD6gB,EAAKQ,sBACtEppB,KAAK2a,IAAI8E,EAAOzX,qCAAsC4gB,EAAKS,kBAG5DrpB,KAAK2a,IAAI8E,EAAOxX,eAAgBlF,EAAQumB,UACxCtpB,KAAK2a,IAAI8E,EAAOvX,gCAAiCnF,EAAQwmB,oBAAoBrX,QAC7ElS,KAAK2a,IAAI8E,EAAOtX,iCAAkCpF,EAAQymB,qBAAqBtX,QAI/E,MAAMuX,EAAUhS,EAAGiS,UACbC,EAAWlS,EAAGmS,WACdC,EAAUF,EAAWF,EAC3BzpB,KAAK2a,IAAI8E,EAAO7W,eAAgB6gB,GAChCzpB,KAAK2a,IAAI8E,EAAO5W,eAAgBghB,GAChC7pB,KAAK2a,IAAI8E,EAAO3W,gBAAiB6gB,GACjC3pB,KAAK2a,IAAI8E,EAAO1W,UAAW0O,EAAG6R,UAC9BtpB,KAAK2a,IAAI8E,EAAOzW,QAASyO,EAAGrT,QAC5BpE,KAAK2a,IAAI8E,EAAOxW,WAAYwO,EAAGiQ,WAC/B1nB,KAAK2a,IAAI8E,EAAOvW,YAAauO,EAAGzD,YAChChU,KAAK2a,IAAI8E,EAAOtW,QAASsO,EAAGkQ,QAC5B3nB,KAAK2a,IAAI8E,EAAOrW,YAAaqO,EAAGmQ,YAKhC,MAiBM/P,EAjBuB,MAC5B,MAAMF,EAAO,GACPC,EAAQ,GACRC,EAAaJ,EAAGK,oBACtB,IAAK,IAAIC,KAASF,EACjB,IAAK,IAAInD,KAAKmD,EAAWE,GAAQ,CAChC,MAAMC,EAAIH,EAAWE,GAAOrD,GACxBsD,EAAEE,SACLN,EAAM5F,KAAK,CAAEgG,EAAAA,EAAED,MAAAA,IAEfJ,EAAK3F,KAAK,CAAEgG,EAAAA,EAAED,MAAAA,IAIjB,OAAOJ,EAAKzF,OAAS,EAAIyF,EAAOC,GAGdkS,GACnB,IAAK,IAAI9R,EAAEA,EAACD,MAACA,KAAWF,EACvB7X,KAAK2a,IAAI8E,EAAO5V,mBAAoBmO,EAAEG,QAAS,CAAE4R,UAAWhS,EAAOE,OAAQD,EAAEC,SAC7EjY,KAAK2a,IAAI8E,EAAO3V,eAAgBkO,EAAEgS,IAAK,CAAED,UAAWhS,EAAOE,OAAQD,EAAEC,SAGtE,MAAMgS,EAAI,IAAI5oB,KACdrB,KAAK2a,IAAI8E,EAAOhW,iBAAkBwgB,EAAEC,WACpClqB,KAAK2a,IAAI8E,EAAO/V,gBAAiBugB,EAAEE,eACnCnqB,KAAK2a,IAAI8E,EAAO9V,gBAAiBsgB,EAAEG,eACnCpqB,KAAK2a,IAAI8E,EAAO7V,sBAAuBqgB,EAAEI,qBAEzC,MAAMC,EAAO7S,EAAG5D,UAKhB,GAJA7T,KAAK2a,IAAI8E,EAAO1V,cAAeugB,EAAK,IACpCtqB,KAAK2a,IAAI8E,EAAOzV,cAAesgB,EAAK,IACpCtqB,KAAK2a,IAAI8E,EAAOxV,eAAgBqgB,EAAK,IAEjC1D,IAAaA,GAAU2D,MAAO,CACjC,MAAM3B,EAAOhC,GAAU2D,QACvBvqB,KAAK2a,IAAI8E,EAAOpX,0BAA2BugB,EAAKjK,KAChD3e,KAAK2a,IAAI8E,EAAOnX,0BAA2BsgB,EAAK4B,IAAM5B,EAAKtW,IAAMsW,EAAK4B,IAAM,GAC5ExqB,KAAK2a,IAAI8E,EAAOlX,0BAA2BqgB,EAAKtG,KAChDtiB,KAAK2a,IAAI8E,EAAOjX,4BAA6BogB,EAAK4B,KAInD,MAAMC,EAAWxC,IAEjB,OAAOjoB,KAAKikB,OAAOjR,QAAQC,UACzBqF,MAAK,ICrQS,SAAqBxF,EAAa,KAClD,OAAO,IAAIE,SAAQ,CAACC,EAASC,KAC5B,IACC,MAAMwX,EAAQjT,EAAGlE,OAAOI,KAAIC,GAAOA,EAAI+W,QACvC9R,cAAW,KACV,IACC,MAAM+R,EAASnT,EAAGlE,OAAOI,KAAIC,GAAOA,EAAI+W,QACxC9R,cAAW,KACV,IACC,MAAMgS,EAAQpT,EAAGlE,OAAOI,KAAIC,GAAOA,EAAI+W,QAEjCjX,EAAS,GACf,IAAK,IAAIgB,EAAI,EAAGA,EAAIgW,EAAMxY,OAAQwC,IAAK,CACtC,MAAMoW,EAAaJ,EAAMhW,GAAGqW,KACtBC,EAAcN,EAAMhW,GAAGqW,KAAOL,EAAMhW,GAAGuW,KAAOP,EAAMhW,GAAGwW,KAAOR,EAAMhW,GAAGyW,IAAMT,EAAMhW,GAAG0W,IACtFC,EAAcT,EAAOlW,GAAGqW,KACxBO,EAAeV,EAAOlW,GAAGqW,KAAOH,EAAOlW,GAAGuW,KAAOL,EAAOlW,GAAGwW,KAAON,EAAOlW,GAAGyW,IAAMP,EAAOlW,GAAG0W,IAC5FG,EAAaV,EAAMnW,GAAGqW,KAItBS,GAFc,GAAKH,EAAcP,IAAeQ,EAAeN,IAChD,GAAKO,EAAaF,IAFnBR,EAAMnW,GAAGqW,KAAOF,EAAMnW,GAAGuW,KAAOJ,EAAMnW,GAAGwW,KAAOL,EAAMnW,GAAGyW,IAAMN,EAAMnW,GAAG0W,IAEvBE,KACpB,EAAI,IACrD5X,EAAO1B,KAAKwZ,GAGbvY,EAAQ,CACPL,IAAKc,EAAOrB,QAAO,CAACsE,EAAG3B,IAAM2B,EAAI3B,GAAG,GAAKtB,EAAOxB,OAChDwB,OAAAA,IAEA,MAAOpN,GACR4M,EAAO5M,MAENwM,GACF,MAAOxM,GACR4M,EAAO5M,MAENwM,GACF,MAAOxM,GACR4M,EAAO5M,OD+NIwN,GAAWwE,MAAKQ,IAC3B9Y,KAAK2a,IAAI8E,EAAOvV,mBAAoB4O,EAAIlG,KAExC,IACC,MAAMW,EAAOkE,EAAGlE,OAChBvT,KAAK2a,IAAI8E,EAAOpV,aAAckJ,EAAKrB,QACnClS,KAAK2a,IAAI8E,EAAOtV,YAAaoJ,EAAKlB,QAAO,CAACsE,EAAE3B,IAAM2B,EAAI3B,EAAE2V,MAAMM,MAAM,IACpEjrB,KAAK2a,IAAI8E,EAAOrV,cAAemJ,EAAKlB,QAAO,CAACsE,EAAE3B,IAAM2B,EAAI3B,EAAE2V,MAAMQ,KAAK,IAErE5X,EAAKqG,SAAQ,CAAChG,EAAK4T,KAClBxnB,KAAK2a,IAAI8E,EAAOnV,kBAAmBsJ,EAAI6X,MAAO,CAAEjE,MAAAA,IAChDxnB,KAAK2a,IAAI8E,EAAOlV,kBAAmBqJ,EAAI8X,MAAO,CAAElE,MAAAA,IAChDxnB,KAAK2a,IAAI8E,EAAOjV,uBAAwBoJ,EAAI+W,MAAMM,KAAM,CAAEzD,MAAAA,IAC1DxnB,KAAK2a,IAAI8E,EAAOhV,sBAAuBmJ,EAAI+W,MAAMQ,IAAK,CAAE3D,MAAAA,OAGxD,MAAMlhB,UAIR6S,OAAM,SAGNb,MAAK,KACLtY,KAAKkkB,OAAO6B,MAAM,qCAAqC0E,EAASjF,QAAQ,iBEpS3E,YAAQ/B,cAAO7N,iBAAYO,YAAeL,IAAayJ,0BAI/C+H,uBAAuBU,IAAwBrF,GAEjDgJ,GAAsB,8BACtBC,GAAuB,6BA2X7B,OCxXiB,CAChBnM,OAAQA,iBDCT,MASC3f,YAAYmkB,EAAQzG,GACnBxd,KAAKikB,OAASA,EACdjkB,KAAKkkB,OAASD,EAAO4H,UAAU,WAE/B7rB,KAAK+d,OAAQ,GAEA,IAATP,IAA0B,IAATA,IACpBA,EAAO,CAAEzL,QAASyL,IAEnBxd,KAAKwd,KAAO4D,UAAEsC,aAAa,GAAIlG,EAAM,CACpCzL,SAAS,EACT+Z,sBAAgD,SAAzB/oB,EAAQ5C,IAAI4rB,SACnCC,gBAAiB,EAEjBC,UAAU,EAEVtL,eAAgB,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAM,KAAM,IAAM,KACpEG,iBAAkB,CAAC,GAAK,GAAK,IAAM,IAAM,MACzCE,qBAAsB,GACtBE,kBAAmB,GACnBrD,kBAAmB,QAGpB7d,KAAK+nB,MAAQ,IAAIlT,IAEb7U,KAAKwd,KAAKzL,SACb/R,KAAKkkB,OAAOuB,KAAK,oBAMnB3lB,OACC,GAAIE,KAAKwd,KAAKzL,QAAS,CAGtB,GAAI/R,KAAKwd,KAAKyO,SAAU,CACvB,MAAMC,EAAYzV,MAAMiK,QAAQ1gB,KAAKwd,KAAKyO,UAAYjsB,KAAKwd,KAAKyO,SAAW,CAACjsB,KAAKwd,KAAKyO,UAEtFjsB,KAAKisB,SAAW7K,UAAE+K,QAAQD,GAAWvY,KAAI2F,IACxC,MAAM2S,EAAWjG,GAAU/S,QAAQqG,GAEnC,OADA2S,EAAStZ,KAAK3S,MACPisB,KAGR,MAAMG,EAAgBpsB,KAAKisB,SAAStY,KAAIsY,GAAYjsB,KAAKikB,OAAOoI,mBAAmBJ,KACnFjsB,KAAKkkB,OAAOuB,KAAK,kBAAkB2G,EAAcla,OAAS,EAAI,IAAM,OAAOka,EAAc5P,KAAK,SAI3Fxc,KAAKwd,KAAKsO,wBACb9rB,KAAKssB,aAAevN,eAAY,KAC/BiJ,GAAoBtR,KAAK1W,QACK,IAA5BA,KAAKwd,KAAKwO,iBACbhsB,KAAKssB,aAAarN,QAElBqI,GAAsB5Q,KAAK1W,MAC3BgoB,GAAoBtR,KAAK1W,QAQ5BF,OAKC,GAJIE,KAAKssB,cACRC,cAAcvsB,KAAKssB,cAGhBtsB,KAAKisB,SACR,OAAOjsB,KAAKikB,OAAOjR,QAAQwZ,IAAIxsB,KAAKisB,SAAStY,KAAI2F,GAAKA,EAAEjG,UAU1DvT,YACC,OAAOE,KAAKwd,KAAKzL,QAUlBjS,SAAS0d,GACR,IAAKrH,GAAcqH,GAClB,MAAM,IAAI9b,MAAM,sCAEjB,IAAK8b,EAAKpZ,KACT,MAAM,IAAI1C,MAAM,4CAEjB,IAAK8b,EAAKxX,KACT,MAAM,IAAItE,MAAM,4CAEjB,IAAKiqB,GAAmB/Q,KAAK4C,EAAKxX,MACjC,MAAM,IAAItE,MAAM,mCAAqC8b,EAAKxX,MAEvDyQ,MAAMiK,QAAQlD,EAAKG,aACtBH,EAAKG,WAAW/D,SAAQ5T,IACvB,IAAK4lB,GAAoBhR,KAAK5U,GAC7B,MAAM,IAAItE,MAAM,QAAQ8b,EAAKxX,yCAAyCA,QAKzE,MAAMymB,EAAchK,GAAMxP,QAAQuK,EAAKpZ,MAEvC,IAAKpE,KAAKwd,KAAKzL,QACd,OAAO,KAER,MAAMqF,EAAO,IAAIqV,EAAYjP,EAAMxd,MAEnC,OADAA,KAAK+nB,MAAMpN,IAAI6C,EAAKxX,KAAMoR,GACnBA,EAURtX,UAAUkG,GACT,OAAOhG,KAAK+nB,MAAMjM,IAAI9V,GAUvBlG,UAAUkG,GACT,MAAMoR,EAAOpX,KAAK+nB,MAAMvN,IAAIxU,GAC5B,OAAKoR,GACG,KAeTtX,UAAUkG,EAAMiY,EAAQxL,EAAQ,EAAG8L,GAClC,IAAKve,KAAKwd,KAAKzL,QACd,OAAO,KAER,MAAMqF,EAAOpX,KAAK0sB,UAAU1mB,GAC5B,IAAK4P,GAAWwB,EAAK+P,WACpB,MAAM,IAAIzlB,MAAM,mFAEjB,OAAO0V,EAAK+P,UAAUlJ,EAAQxL,EAAO8L,GAatCze,UAAUkG,EAAMiY,EAAQxL,EAAQ,EAAG8L,GAClC,IAAKve,KAAKwd,KAAKzL,QACd,OAAO,KAER,MAAMqF,EAAOpX,KAAK0sB,UAAU1mB,GAC5B,IAAK4P,GAAWwB,EAAKuV,WACpB,MAAM,IAAIjrB,MAAM,wEAEjB,OAAO0V,EAAKuV,UAAU1O,EAAQxL,EAAO8L,GAatCze,IAAIkG,EAAMyM,EAAOwL,EAAQM,GACxB,IAAKve,KAAKwd,KAAKzL,QACd,OAAO,KAER,MAAMqF,EAAOpX,KAAK0sB,UAAU1mB,GAC5B,IAAK4P,GAAWwB,EAAKuD,KACpB,MAAM,IAAIjZ,MAAM,0FAEjB,OAAO0V,EAAKuD,IAAIlI,EAAOwL,EAAQM,GAahCze,QAAQkG,EAAMyM,EAAOwL,EAAQM,GAC5B,IAAKve,KAAKwd,KAAKzL,QACd,OAAO,KAER,MAAMqF,EAAOpX,KAAK0sB,UAAU1mB,GAC5B,IAAK4P,GAAWwB,EAAKwV,SACpB,MAAM,IAAIlrB,MAAM,yEAEjB,OAAO0V,EAAKwV,QAAQna,EAAOwL,EAAQM,GAYpCze,MAAMkG,EAAMiY,EAAQM,GACnB,IAAKve,KAAKwd,KAAKzL,QACd,OAAO,KAEK/R,KAAK0sB,UAAU1mB,GACvB0K,MAAMuN,EAAQM,GAWpBze,SAASkG,EAAMuY,GACd,IAAKve,KAAKwd,KAAKzL,QACd,OAAO,KAEK/R,KAAK0sB,UAAU1mB,GACvB6mB,SAAStO,GAYfze,MAAMkG,EAAMiY,EAAQM,GACnB,IAAInH,EACJ,GAAIpR,GAAQhG,KAAKwd,KAAKzL,UACrBqF,EAAOpX,KAAK0sB,UAAU1mB,IACjB4P,GAAWwB,EAAKwV,WAAahX,GAAWwB,EAAKuD,MAEjD,MAAM,IAAIjZ,MAAM,+EAIlB,MAAM8Q,EAAQzP,EAAQ/B,SACtB,MAAO,KACN,MAAM8rB,EAAQ/pB,EAAQ/B,OAAOwR,GACvBiY,EAAyC,KAA7BqC,EAAM,GAAKA,EAAM,GAAK,KASxC,OAPI1V,IACCA,EAAKhT,MAAQqb,EAAO9Y,eACvByQ,EAAKwV,QAAQnC,EAAUxM,EAAQM,GACvBnH,EAAKhT,MAAQqb,EAAO/Y,YAC5B0Q,EAAKuD,IAAI8P,EAAUxM,EAAQM,IAGtBkM,GAcT3qB,QAAQ4e,EAAQjM,EAAOwL,EAAQM,GAC9Bve,KAAK+d,OAAQ,EACTtH,MAAMiK,QAAQ1gB,KAAKisB,WACtBjsB,KAAKisB,SAASrS,SAAQqS,GAAYA,EAASc,cAAcrO,EAAQjM,EAAOwL,EAAQM,KAWlFze,KAAK0d,GACJ,MAAM1E,EAAM,GAGNkU,EAAsB,OAF5BxP,EAAOA,GAAQ,IAEIwP,MAAiBlX,GAAS0H,EAAKwP,OAAS,CAACxP,EAAKwP,OAASxP,EAAKwP,MAAS,KAClFrJ,EAA4B,MAAjBnG,EAAKmG,SAAoB7N,GAAS0H,EAAKmG,UAAY,CAACnG,EAAKmG,UAAYnG,EAAKmG,SAAY,KACjGC,EAA4B,MAAjBpG,EAAKoG,SAAoB9N,GAAS0H,EAAKoG,UAAY,CAACpG,EAAKoG,UAAYpG,EAAKoG,SAAY,KAevG,OAbA5jB,KAAK+nB,MAAMnO,SAAQ8E,IACdsO,IAAUA,EAAM7I,MAAK/f,GAAQsa,EAAOta,MAAQA,KAG5Cuf,IAAaA,EAASQ,MAAKpK,GAAW0J,GAAM/E,EAAO1Y,KAAM+T,MAGzD6J,IAAaA,EAASQ,OAAMrK,IAAY0J,GAAM/E,EAAO1Y,KAAM+T,MAG/DjB,EAAI9G,KAAK0M,EAAOuO,eAGVnU,EAURhZ,cAAcud,GACb,OAAOA,GACN,KAAKoC,EAAO1P,SACX,OAAOsN,EAET,OAAOA,EAAO,iBC/WfmC,iBACA0N,eACArN,oBACAsN,cACAC,aAEApH,ICrBD,aAAQ7hB,IAAaoU,GAGf8U,UAAEA,IAAe9N,WACjBE,OAAEA,IAAYkD,GA6nCpB,OAtnCA,MAWC7iB,YAAYmkB,EAAQqJ,EAAa9P,GAChCxd,KAAKikB,OAASA,EACdjkB,KAAKgT,QAAUiR,EAAOjR,QACtBhT,KAAKkkB,OAASD,EAAO4H,UAAU,WAC/B7rB,KAAKkF,OAAS+e,EAAO/e,OACrBlF,KAAKutB,QAAUtJ,EAAOsJ,QACtBvtB,KAAKwtB,WAAavJ,EAAOuJ,WACzBxtB,KAAKytB,GAAKH,EACVttB,KAAKwd,KAAOA,EACZxd,KAAK0tB,WAAazJ,EAAOxG,SAASiQ,WAElC1tB,KAAK2tB,gBAAkB,IAAI9Y,IAC3B7U,KAAK4tB,kBAAoB,IAAI/Y,IAC7B7U,KAAK6tB,kBAAoB,IAAIhZ,IAG7B7U,KAAK4oB,KAAO,CACXkF,QAAS,CACRC,KAAM,CACLzN,MAAO,EACP0N,MAAO,GAERC,SAAU,CACT3N,MAAO,EACP0N,MAAO,KAKVhuB,KAAKmB,WAAY,EACjBnB,KAAKkuB,eAAgB,EACrBluB,KAAKmuB,SAAU,EAEf,MAAMC,EAAwB,CAACC,EAAKC,IAAWtuB,KAAKuuB,eAAeF,EAAKC,GAExEtuB,KAAKwuB,QAAUxuB,KAAKikB,OAAOwK,WAAW,iBAAkBzuB,KAAKwuB,QAASxuB,MACtEA,KAAKuuB,eAAiBvuB,KAAKikB,OAAOwK,WAAW,wBAAyBzuB,KAAKuuB,eAAgBvuB,MAGvFA,KAAKytB,KACRztB,KAAKytB,GAAG9a,KAAK3S,KAAMouB,EAAuBpuB,KAAK0uB,aAAazrB,KAAKjD,OAEjEA,KAAKytB,GAAGkB,KAAO3uB,KAAKikB,OAAOwK,WAAW,kBAAmBzuB,KAAKytB,GAAGkB,KAAM3uB,KAAKytB,IAC5EztB,KAAKytB,GAAGmB,QAAU5uB,KAAKikB,OAAOwK,WAAW,qBAAsBzuB,KAAKytB,GAAGmB,QAAS5uB,KAAKytB,GAAI,CAAEoB,SAAS,KAGrG7uB,KAAK8uB,iBAAmB,KAExB9uB,KAAK+uB,2BAMNjvB,2BACME,KAAKikB,OAAO+K,qBAEjBhvB,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO/S,wBAAyBtI,KAAMqb,GAAO/Y,WAAYgX,YAAa,qBAAsB/C,IAAI,GAC9H3a,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO9S,4BAA6BvI,KAAMqb,GAAO/Y,WAAYgX,YAAa,yBAA0B/C,IAAI,GAEtI3a,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO7S,4BAA6BxI,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,gBAAiBD,YAAa,cACtI1d,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO5S,oCAAqCzI,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,gBAAiBD,YAAa,yCAE9I1d,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO3S,wCAAyC1I,KAAMqb,GAAOhZ,aAAciX,YAAa,gCAWvH5d,aAAamvB,GACZ,OAAOjvB,KAAKgT,QAAQC,UAElBqF,MAAK,IACD2W,EAGIjvB,KAAK0tB,WAAWwB,oBAGhBlvB,KAAKmvB,sBAIb7W,MAAK,IAAMtY,KAAK0tB,WAAW0B,qBAC3BzW,MAAM,KAENL,MAAK,KACLtY,KAAKmB,WAAY,EACjBnB,KAAKutB,QAAQ5S,IAAI8E,GAAO9S,4BAA6B,GAErD3M,KAAKikB,OAAOoL,eAAe,yBAA0B,CAAEJ,eAAgBA,IAEnEjvB,KAAK8uB,mBACR9uB,KAAK8uB,mBACL9uB,KAAK8uB,iBAAmB,MAGlB,QASVhvB,UAEC,OADAE,KAAKkkB,OAAOuB,KAAK,oCACV,IAAIzlB,KAAKgT,SAAQC,IACvBjT,KAAK8uB,iBAAmB7b,EAExB,MAAMqc,EAAY,KACjB,IAAIC,GAAmB,EAGvB,MAAMC,EAAgBlpB,IACjBtG,KAAKkuB,eACLqB,IAEJvvB,KAAKkkB,OAAOpJ,KAAK,wBAAyBxU,GAAOA,EAAI7B,SAAW,iBAChEzE,KAAKkkB,OAAO6B,MAAMzf,GAEdtG,KAAKwd,KAAKiS,mBAIdF,GAAmB,EAEnB1W,cAAW,KACV7Y,KAAKkkB,OAAOuB,KAAK,mBACjB6J,MACE,QAGJtvB,KAAKytB,GAAGiC,QAAQF,GAAcrW,MAAMqW,IAGrCF,OAUFxvB,aAQC,OAPAE,KAAKmB,WAAY,EACjBnB,KAAKmuB,SAAU,EACfnuB,KAAKkuB,eAAgB,EACrBluB,KAAKutB,QAAQ5S,IAAI8E,GAAO9S,4BAA6B,GAErD3M,KAAKikB,OAAOoL,eAAe,4BAA6B,CAAEM,UAAU,IAE7D3vB,KAAKgT,QAAQC,UAClBqF,MAAK,KACL,GAAItY,KAAKytB,GAAGtsB,UACX,OAAOnB,KAAK0tB,WAAWkC,wBACrBtX,MAAK,IAAMtY,KAAKytB,GAAGoC,kBAGtBvX,MAAK,IAAMtY,KAAKkuB,eAAgB,IAOnCpuB,QACC,GAAIE,KAAKmB,UAGR,OAFAnB,KAAKmuB,SAAU,EACfnuB,KAAKutB,QAAQ5S,IAAI8E,GAAO/S,wBAAyB,GAC1C1M,KAAK0tB,WAAWoC,iBAWzBhwB,uBACC,OAAOE,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAE/U,oBAAoB2V,OAAiC7S,GAAOtG,KAAKkkB,OAAO6B,MAAM,oCAAqCzf,KAQrJxG,oBAqCC,OApCAE,KAAK+vB,YAAc/vB,KAAKytB,GAAG0B,kBAAkB,CAG5C,CAAEd,IAAK9V,EAAEpV,aAAc+B,OAAQlF,KAAKkF,QAGpC,CAAEmpB,IAAK9V,EAAEnV,eAAgB8B,OAAQlF,KAAKkF,QAGtC,CAAEmpB,IAAK9V,EAAElV,gBAAiB6B,OAAQlF,KAAKkF,QAGvC,CAAEmpB,IAAK9V,EAAEjV,iBACT,CAAE+qB,IAAK9V,EAAEjV,gBAAiB4B,OAAQlF,KAAKkF,QAGvC,CAAEmpB,IAAK9V,EAAEhV,aACT,CAAE8qB,IAAK9V,EAAEhV,YAAa2B,OAAQlF,KAAKkF,QAGnC,CAAEmpB,IAAK9V,EAAE/U,mBAGT,CAAE6qB,IAAK9V,EAAE9U,kBAGT,CAAE4qB,IAAK9V,EAAE7U,aACT,CAAE2qB,IAAK9V,EAAE7U,YAAawB,OAAQlF,KAAKkF,QAGnC,CAAEmpB,IAAK9V,EAAE5U,YAAauB,OAAQlF,KAAKkF,UAEjCoT,MAAK,KACPtY,KAAK+vB,YAAc,QAGb/vB,KAAK+vB,YAYbjwB,eAAeuuB,EAAKC,GACnB,IACC,MAAMhqB,EAAUgqB,EAAOhqB,QAGvB,IAAKA,EAEJ,MAAM,IAAI0rB,EAAEjrB,qBAAqB,4BAA6B,IAAK,mBAIpE,GAAIT,EAAQ2rB,MAAQjwB,KAAKikB,OAAOiM,mBAAqBlwB,KAAKwd,KAAK2S,oBAC9D,MAAM,IAAIH,EAAE/pB,6BAA6B,CACxCf,OAAQZ,EAAQ8rB,OAChBC,OAAQrwB,KAAKikB,OAAOiM,iBACpBjC,SAAU3pB,EAAQ2rB,MAIpB,GAAI3rB,EAAQ8rB,SAAWpwB,KAAKkF,OAAQ,CAGnC,GAAImpB,IAAQ9V,EAAEhV,aAAee,EAAQkpB,aAAextB,KAAKwtB,WACxD,OAAOxtB,KAAKikB,OAAOqM,MAAM,4FAI1B,GAAIjC,IAAQ9V,EAAEpV,cAAgBkrB,IAAQ9V,EAAEnV,gBAAkBirB,IAAQ9V,EAAElV,gBACnE,OAIF,OAAIgrB,IAAQ9V,EAAEnV,eACNpD,KAAKuwB,eAAejsB,IAInB+pB,IAAQ9V,EAAElV,gBAClBrD,KAAKwwB,gBAAgBlsB,GAIb+pB,IAAQ9V,EAAEpV,aAClBnD,KAAKywB,aAAansB,GAIV+pB,IAAQ9V,EAAEjV,gBAClBtD,KAAK0tB,WAAWwB,kBAAkB5qB,EAAQ8rB,QAIlC/B,IAAQ9V,EAAEhV,YAClBvD,KAAK0tB,WAAWgD,sBAAsBpsB,EAAQ8rB,OAAQ9rB,GAI9C+pB,IAAQ9V,EAAE/U,kBAClBxD,KAAK0tB,WAAWiD,uBAAuBrsB,EAAQ8rB,QAAQ,GAI/C/B,IAAQ9V,EAAE9U,iBAClBzD,KAAK0tB,WAAWkD,kBAAkBtsB,EAAQ8rB,OAAQ9rB,GAI1C+pB,IAAQ9V,EAAE7U,YAClB1D,KAAK6wB,SAASvsB,GAIN+pB,IAAQ9V,EAAE5U,aAClB3D,KAAK8wB,YAAYxsB,IAGX,GACN,MAAOgC,GACRtG,KAAKkkB,OAAO6M,MAAMzqB,EAAK+nB,EAAKC,GAE7B,OAAO,EASRxuB,aAAawE,GAGZ,GAFAtE,KAAKkkB,OAAO6B,MAAM,UAAUzhB,EAAQ0sB,yBAAyB1sB,EAAQ8rB,gBAAkB9rB,EAAQuhB,OAAS,QAAQvhB,EAAQuhB,OAAOrJ,KAAK,kBAAoB,IAAM,MAEzJxc,KAAKikB,OAAOgN,QAEhB,YADAjxB,KAAKkkB,OAAOpJ,KAAK,aAAaxW,EAAQ0sB,sBAAsB1sB,EAAQ8rB,uDAKrE,MAAMc,EAAM,IAAIlxB,KAAKikB,OAAOkN,eAAenxB,KAAKikB,QAChDiN,EAAIE,GAAK9sB,EAAQ8sB,GACjBF,EAAIvL,UAAYrhB,EAAQ0sB,MACxBE,EAAIG,UAAU/sB,EAAQI,KAAM1E,KAAKikB,OAAOzT,QAAQ8gB,sBAChDJ,EAAIK,YAAcjtB,EAAQuhB,OAC1BqL,EAAIM,UAAYltB,EAAQshB,UAAY,YAAc,OAClDsL,EAAIO,KAAOntB,EAAQmtB,MAAQ,GAC3BP,EAAItrB,MAAQtB,EAAQsB,MACpBsrB,EAAIQ,UAAYptB,EAAQotB,QACxBR,EAAIS,SAAWrtB,EAAQqtB,SACvBT,EAAI5f,UAAYhN,EAAQgN,UACxB4f,EAAIU,OAASttB,EAAQstB,OACrBV,EAAIhsB,OAASZ,EAAQ8rB,OAErBpwB,KAAKikB,OAAO4N,kBAAkBX,GAU/BpxB,eAAewE,GACdtE,KAAKkkB,OAAO6B,MAAM,eAAezhB,EAAQa,0BAA0Bb,EAAQ8rB,iBAE3E,IACC,IAAKpwB,KAAKikB,OAAOgN,QAEhB,MADAjxB,KAAKkkB,OAAOpJ,KAAK,aAAaxW,EAAQa,yBAAyBb,EAAQ8rB,sDACjE,IAAIJ,EAAE3qB,yBAAyB,CAAEF,OAAQb,EAAQa,OAAQD,OAAQlF,KAAKkF,SAG7E,IAAI4sB,EACJ,QAAuB1gB,IAAnB9M,EAAQytB,SACXD,EAAO9xB,KAAKgyB,6BAA6B1tB,GAC5B,OAATwtB,GACH,OAAO9xB,KAAKgT,QAAQC,UAGtB,MAAMgf,EAAWjyB,KAAKikB,OAAOiO,wBAAwB5tB,EAAQa,QAGvD+rB,EAAM,IAAIlxB,KAAKikB,OAAOkN,eAAenxB,KAAKikB,QAChDiN,EAAIiB,YAAYF,GAChBf,EAAIE,GAAK9sB,EAAQ8sB,GACjBF,EAAIG,UAAUS,GAAcxtB,EAAQ8tB,OAAQpyB,KAAKikB,OAAOzT,QAAQ8gB,sBAChEJ,EAAIS,SAAWrtB,EAAQqtB,SACvBT,EAAI5f,UAAYhN,EAAQgN,UACxB4f,EAAIU,OAASttB,EAAQstB,OACrBV,EAAIO,KAAOntB,EAAQmtB,MAAQ,GAC3BP,EAAItrB,MAAQtB,EAAQsB,MACpBsrB,EAAIQ,QAAUptB,EAAQotB,QACtBR,EAAIhsB,OAASZ,EAAQ8rB,OAEE,MAAnB9rB,EAAQyU,UACXmY,EAAI1gB,QAAQuI,QAAUzU,EAAQyU,SAE/B,MAAMV,EAAI4Z,EAAS9sB,OAAOzC,QAAQwuB,GAIlC,OAFA7Y,EAAE6Y,IAAMA,EAED7Y,EACLC,MAAKQ,GAAO9Y,KAAKqyB,aAAa/tB,EAAQ8rB,OAAQ9rB,EAAQ8sB,GAAIF,EAAIO,KAAM3Y,EAAK,QACzEK,OAAM7S,GAAOtG,KAAKqyB,aAAa/tB,EAAQ8rB,OAAQ9rB,EAAQ8sB,GAAIF,EAAIO,KAAM,KAAMnrB,KAE5E,MAAOA,GACR,OAAOtG,KAAKqyB,aAAa/tB,EAAQ8rB,OAAQ9rB,EAAQ8sB,GAAI9sB,EAAQmtB,KAAM,KAAMnrB,IAU3ExG,6BAA6BwE,GAC5B,IAAIwtB,EAAO9xB,KAAK4tB,kBAAkBpT,IAAIlW,EAAQ8sB,IAC1CkB,GAAQ,EAEZ,IAAKhuB,EAAQytB,SAAWD,EAEvB,OAAO,EAsBR,GAnBKA,IACJQ,GAAQ,EACRtyB,KAAKkkB,OAAO6B,MAAM,mCAAmCzhB,EAAQ8rB,iBAAiB9rB,EAAQiuB,OAGtFT,EAAO,IAAIzE,GAAU,CACpBmF,WAAYluB,EAAQmtB,MAAQntB,EAAQmtB,KAAwB,kBAC5DgB,UAAW,SAASC,EAAOC,EAAUC,GAEpC,OADA5yB,KAAKgS,KAAK0gB,GACHE,OAITd,EAAKe,UAAY,EACjBf,EAAKgB,MAAQ,IAAIje,IAEjB7U,KAAK4tB,kBAAkBjT,IAAIrW,EAAQ8sB,GAAIU,IAGpCxtB,EAAQiuB,IAAMT,EAAKe,SAAW,EAUjC,OARA7yB,KAAKkkB,OAAOuB,KAAK,kCAAkCqM,EAAKgB,MAAMjX,eAAevX,EAAQiuB,OAErFT,EAAKgB,MAAMnY,IAAIrW,EAAQiuB,IAAKjuB,GAMrBguB,EAAQR,EAAO,KAMvB,GAFAA,EAAKe,SAAWvuB,EAAQiuB,IAEpBT,EAAKe,SAAW,EAAG,CACtB,IAAKvuB,EAAQytB,OAeZ,OAZIztB,EAAQmtB,MAAQntB,EAAQmtB,KAAmB,cAC9CK,EAAKrwB,KAAK,QAASzB,KAAK+yB,sBAAsBzuB,EAAQmtB,KAAmB,aAAGntB,EAAQ8rB,SAGrFpwB,KAAKkkB,OAAO6B,MAAM,uCAAuCzhB,EAAQ8rB,iBAAiB9rB,EAAQiuB,OAG1FT,EAAK7J,MAGLjoB,KAAK4tB,kBAAkBoF,OAAO1uB,EAAQ8sB,IAE/B,KAGPpxB,KAAKkkB,OAAO6B,MAAM,qCAAqCzhB,EAAQ8rB,iBAAiB9rB,EAAQiuB,OACxFT,EAAKmB,MAA8B,WAAxB3uB,EAAQ8tB,OAAOhuB,KAAoB8uB,SAAOtT,KAAKtb,EAAQ8tB,OAAO1tB,MAAQJ,EAAQ8tB,QAK3F,GAAIN,EAAKgB,MAAMjX,KAAO,EAAG,CACxB7b,KAAKkkB,OAAOpJ,KAAK,6BAA6BgX,EAAKgB,MAAMjX,MACzD,MAAMsX,EAAUrB,EAAKe,SAAW,EAC1BO,EAAatB,EAAKgB,MAAMtY,IAAI2Y,GAC9BC,IACHtB,EAAKgB,MAAME,OAAOG,GAClBE,cAAa,IAAMrzB,KAAKuwB,eAAe6C,MAIzC,OAAOd,EAAQR,EAAO,KAQvBhyB,sBAAsBixB,EAAOX,GAC5B,IAAI9pB,EAAM0pB,EAAE3pB,cAAc0qB,GAc1B,OAbKzqB,IACJA,EAAM,IAAI5E,MAAMqvB,EAAMtsB,SACtB6B,EAAIN,KAAO+qB,EAAM/qB,KACjBM,EAAI9E,KAAOuvB,EAAMvvB,KACjB8E,EAAIlC,KAAO2sB,EAAM3sB,KACjBkC,EAAI5B,KAAOqsB,EAAMrsB,MAElB4B,EAAI3B,UAAYosB,EAAMpsB,UACtB2B,EAAIpB,OAAS6rB,EAAM7rB,QAAUkrB,EAEzBW,EAAM3qB,QACTE,EAAIF,MAAQ2qB,EAAM3qB,OAEZE,EAURxG,gBAAgBwuB,GACf,MAAM8C,EAAK9C,EAAO8C,GACZkC,EAAMtzB,KAAK2tB,gBAAgBnT,IAAI4W,GAGrC,GAAW,MAAPkC,EAGH,OAFAtzB,KAAKkkB,OAAO6B,MAAM,2EAA4EuI,EAAO8C,GAAI,YAAa9C,EAAO8B,aAC7HpwB,KAAKutB,QAAQpG,UAAU1H,GAAO3S,yCAI/B9M,KAAKkkB,OAAO6B,MAAM,gBAAgBuN,EAAInuB,OAAOa,2BAA2BsoB,EAAO8B,YAG/EkD,EAAIpC,IAAIhsB,OAASopB,EAAO8B,OAGxBha,OAAOqL,OAAO6R,EAAIpC,IAAIO,MAAQ,GAAInD,EAAOmD,MAAQ,IAG5B,MAAjBnD,EAAOyD,QACN/xB,KAAKuzB,8BAA8BjF,EAAQgF,KAKhDtzB,KAAKwzB,qBAAqBpC,GAErB9C,EAAOmF,QAGXH,EAAIrgB,QAAQqb,EAAO5pB,MAFnB4uB,EAAIpgB,OAAOlT,KAAK+yB,sBAAsBzE,EAAOyC,MAAOzC,EAAO8B,UAY7DtwB,8BAA8BwuB,EAAQgF,GACrC,IAAIxB,EAAO9xB,KAAK6tB,kBAAkBrT,IAAI8T,EAAO8C,IAC7C,IAAKU,IAASxD,EAAOyD,OACpB,OAAO,EAqBR,GAnBKD,IACJ9xB,KAAKkkB,OAAO6B,MAAM,mCAAmCuI,EAAO8B,iBAAiB9B,EAAOiE,OAEpFT,EAAO,IAAIzE,GAAU,CACpBmF,WAAYlE,EAAOmD,MAAQnD,EAAOmD,KAAwB,kBAC1DgB,UAAW,SAASC,EAAOC,EAAUC,GAEpC,OADA5yB,KAAKgS,KAAK0gB,GACHE,OAITd,EAAKe,UAAY,EACjBf,EAAKgB,MAAQ,IAAIje,IAEjB7U,KAAK6tB,kBAAkBlT,IAAI2T,EAAO8C,GAAIU,GAEtCwB,EAAIrgB,QAAQ6e,IAGTxD,EAAOiE,IAAMT,EAAKe,SAAW,EAUhC,OARA7yB,KAAKkkB,OAAOuB,KAAK,kCAAkCqM,EAAKgB,MAAMjX,eAAeyS,EAAOiE,OAEpFT,EAAKgB,MAAMnY,IAAI2T,EAAOiE,IAAKjE,IAMpB,EAMR,GAFAwD,EAAKe,SAAWvE,EAAOiE,IAEnBT,EAAKe,SAAW,EAAG,CAEtB,IAAKvE,EAAOyD,OAaX,OAXKzD,EAAOmF,SACX3B,EAAKrwB,KAAK,QAASzB,KAAK+yB,sBAAsBzE,EAAOyC,MAAOzC,EAAO8B,SAEpEpwB,KAAKkkB,OAAO6B,MAAM,uCAAuCuI,EAAO8B,iBAAiB9B,EAAOiE,OAGxFT,EAAK7J,MAGLjoB,KAAKwzB,qBAAqBlF,EAAO8C,KAE1B,EAIPpxB,KAAKkkB,OAAO6B,MAAM,qCAAqCuI,EAAO8B,iBAAiB9B,EAAOiE,OACtFT,EAAKmB,MAA2B,WAArB3E,EAAO5pB,KAAKN,KAAoB8uB,SAAOtT,KAAK0O,EAAO5pB,KAAKA,MAAM4pB,EAAO5pB,MAKlF,GAAIotB,EAAKgB,MAAMjX,KAAO,EAAG,CACxB7b,KAAKkkB,OAAOpJ,KAAK,6BAA6BgX,EAAKgB,MAAMjX,MACzD,MAAMsX,EAAUrB,EAAKe,SAAW,EAC1BO,EAAatB,EAAKgB,MAAMtY,IAAI2Y,GAC9BC,IACHtB,EAAKgB,MAAME,OAAOG,GAClBE,cAAa,IAAMrzB,KAAKwwB,gBAAgB4C,MAI1C,OAAO,EAaRtzB,QAAQoxB,GACP,OAAIlxB,KAAKwd,KAAKkW,cAAgB1zB,KAAK2tB,gBAAgB9R,MAAQ7b,KAAKwd,KAAKkW,aAE7D1zB,KAAKgT,QAAQE,OAAO,IAAI8c,EAAEtqB,iBAAiB,CACjDP,OAAQ+rB,EAAI/rB,OAAOa,KACnBd,OAAQlF,KAAKkF,OACb2W,KAAM7b,KAAK2tB,gBAAgB9R,KAC3B8X,MAAO3zB,KAAKwd,KAAKkW,gBAIZ,IAAI1zB,KAAKgT,SAAQ,CAACC,EAASC,IAAWlT,KAAK4zB,aAAa1C,EAAKje,EAASC,KAY9EpT,aAAaoxB,EAAKje,EAASC,GAC1B,MAAM2gB,EAAW3C,EAAIkB,SAAkC,IAAxBlB,EAAIkB,OAAO0B,UAA8C,mBAAlB5C,EAAIkB,OAAOpL,IAAgD,mBAApBkK,EAAIkB,OAAO2B,KAElHC,EAAU,CACf7uB,OAAQ+rB,EAAI/rB,OACZD,OAAQgsB,EAAIhsB,OACZgsB,IAAAA,EACAje,QAAAA,EACAC,OAAAA,EACA6e,OAAQ8B,GAGHvvB,EAAU,CACf8sB,GAAIF,EAAIE,GACRjsB,OAAQ+rB,EAAI/rB,OAAOa,KACnBosB,OAAQyB,EAAW,KAAO3C,EAAIkB,OAC9BX,KAAMP,EAAIO,KACV1Y,QAASmY,EAAI1gB,QAAQuI,QACrBnT,MAAOsrB,EAAItrB,MACX8rB,QAASR,EAAIQ,QACbC,SAAUT,EAAIS,SACdrgB,UAAW4f,EAAI5f,UACfsgB,OAAQV,EAAIU,OACZG,OAAQ8B,GAGLvvB,EAAQytB,WAC2B,IAAlCb,EAAIkB,OAAO6B,oBAAgC/C,EAAIkB,OAAO8B,iBAA2D,IAAzChD,EAAIkB,OAAO8B,eAAe1B,cACrGluB,EAAQmtB,KAAOntB,EAAQmtB,MAAQ,GAC/BntB,EAAQmtB,KAAwB,mBAAI,GAErCntB,EAAQiuB,IAAM,GAGf,MAAMjE,EAAS,IAAInqB,GAAOoU,EAAEnV,eAAgB8tB,EAAIhsB,OAAQZ,GAElD6vB,EAAWjD,EAAIhsB,OAAS,IAAIgsB,EAAIhsB,UAAY,UAClDlF,KAAKkkB,OAAO6B,MAAM,YAAYmL,EAAI/rB,OAAOa,oBAAoBmuB,WAE7D,MAAMC,EAA0C9tB,GAAOtG,KAAKkkB,OAAO6M,MAAM,mBAAmBG,EAAI/rB,OAAOa,oBAAoBmuB,UAAkB7tB,GAM7I,OAHAtG,KAAK2tB,gBAAgBhT,IAAIuW,EAAIE,GAAI4C,GAG1Bh0B,KAAKwuB,QAAQF,GAClBhW,MAAK,KACL,GAAIub,EAAU,CAEbvvB,EAAQmtB,KAAO,KAEuB,IAAlCP,EAAIkB,OAAO6B,oBAAgC/C,EAAIkB,OAAO8B,iBAA2D,IAAzChD,EAAIkB,OAAO8B,eAAe1B,cACrGluB,EAAQmtB,KAAwB,mBAAI,GAGrC,MAAMM,EAASb,EAAIkB,OACnBL,EAAO/K,GAAG,QAAS0L,IAClBX,EAAO7K,QACP,MAAMmN,EAAS,GACf,GAAI3B,aAAiBQ,UAAUlzB,KAAKwd,KAAK8W,aAAe,GAAK5B,EAAMxgB,OAASlS,KAAKwd,KAAK8W,aAAc,CACnG,IAAIra,EAAMyY,EAAMxgB,OACZwC,EAAI,EACR,KAAOA,EAAIuF,GACVoa,EAAOriB,KAAK0gB,EAAMnZ,MAAM7E,EAAGA,GAAK1U,KAAKwd,KAAK8W,oBAG3CD,EAAOriB,KAAK0gB,GAEb,IAAK,MAAM6B,KAAMF,EAAQ,CACxB,MAAMG,EAAOpe,OAAOqL,OAAO,GAAInd,GAC/BkwB,EAAKjC,MAAQjuB,EAAQiuB,IACrBiC,EAAKzC,QAAS,EACdyC,EAAKpC,OAASmC,EAEdv0B,KAAKkkB,OAAO6B,MAAM,2BAA2BoO,gBAAuBK,EAAKjC,OAEzEvyB,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAEnV,eAAgB8tB,EAAIhsB,OAAQsvB,IACpDrb,MAAMib,GAETrC,EAAO0C,YAIR1C,EAAO/K,GAAG,OAAO,KAChB,MAAMwN,EAAOpe,OAAOqL,OAAO,GAAInd,GAO/B,OANAkwB,EAAKjC,MAAQjuB,EAAQiuB,IACrBiC,EAAKpC,OAAS,KACdoC,EAAKzC,QAAS,EAEd/xB,KAAKkkB,OAAO6B,MAAM,6BAA6BoO,gBAAuBK,EAAKjC,OAEpEvyB,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAEnV,eAAgB8tB,EAAIhsB,OAAQsvB,IAC3Drb,MAAMib,MAGTrC,EAAO/K,GAAG,SAAS1gB,IAClB,MAAMkuB,EAAOpe,OAAOqL,OAAO,GAAInd,GAQ/B,OAPAkwB,EAAKjC,MAAQjuB,EAAQiuB,IACrBiC,EAAKzC,QAAS,EACdyC,EAAK/C,KAAmB,aAAIzxB,KAAK00B,yBAAyBpuB,GAC1DkuB,EAAKpC,OAAS,KAEdpyB,KAAKkkB,OAAO6B,MAAM,2BAA2BoO,UAAkBK,EAAK/C,KAAmB,cAEhFzxB,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAEnV,eAAgB8tB,EAAIhsB,OAAQsvB,IAC3Drb,MAAMib,UAIVjb,OAAM7S,IACN8tB,EAAa9tB,GACb4M,EAAO5M,MAYVxG,UAAUoxB,GACT,MAAMrL,EAASqL,EAAIK,YAMnB,OALIL,EAAIe,SACPjyB,KAAKkkB,OAAO6B,MAAM,YAAYmL,EAAIvL,wBAAwBuL,EAAIhsB,gBAAkB2gB,EAAS,QAAQA,EAAOrJ,KAAK,kBAAoB,IAAM,KAEvIxc,KAAKkkB,OAAO6B,MAAM,YAAYmL,EAAIvL,wBAAwBE,EAAOrJ,KAAK,oBAEhExc,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAEpV,aAAc+tB,EAAIe,SAAWf,EAAIhsB,OAAS,KAAM,CAChFksB,GAAIF,EAAIE,GACRJ,MAAOE,EAAIvL,UACXjhB,KAAMwsB,EAAIkB,OACVvM,OAAAA,EACAD,UAA4B,aAAjBsL,EAAIM,UACfC,KAAMP,EAAIO,KACV7rB,MAAOsrB,EAAItrB,MACX8rB,QAASR,EAAIQ,QACbC,SAAUT,EAAIS,SACdrgB,UAAW4f,EAAI5f,UACfsgB,OAAQV,EAAIU,OACZ+C,QAASzD,EAAIyD,WACVxb,OAAiC7S,GAAOtG,KAAKkkB,OAAO6M,MAAM,mBAAmBG,EAAIvL,8BAA+Brf,KAUrHxG,qBAAqBsxB,GACpBpxB,KAAK2tB,gBAAgBqF,OAAO5B,GAE5BpxB,KAAK4tB,kBAAkBoF,OAAO5B,GAC9BpxB,KAAK6tB,kBAAkBmF,OAAO5B,GAU/BtxB,6BAA6BoF,GAC5BlF,KAAKkkB,OAAO6B,MAAM,+BAA+B7gB,YACjDlF,KAAK2tB,gBAAgB/T,SAAQ,CAAC0Z,EAAKlC,KAC9BkC,EAAIpuB,SAAWA,IAClBlF,KAAK2tB,gBAAgBqF,OAAO5B,GAG5BkC,EAAIpgB,OAAO,IAAI8c,EAAEvqB,qBAAqB,CACrCN,OAAQmuB,EAAInuB,OAAOa,KACnBd,OAAQouB,EAAIpuB,UAGblF,KAAK4tB,kBAAkBoF,OAAO5B,GAC9BpxB,KAAK6tB,kBAAkBmF,OAAO5B,OAYjCtxB,yBAAyBwG,GACxB,MAAO,CACNN,KAAMM,EAAIN,KACVvB,QAAS6B,EAAI7B,QACbS,OAAQoB,EAAIpB,QAAUlF,KAAKkF,OAC3B1D,KAAM8E,EAAI9E,KACV4C,KAAMkC,EAAIlC,KACVO,UAAW2B,EAAI3B,UACfyB,MAAOE,EAAIF,MACX1B,KAAM4B,EAAI5B,MAeZ5E,aAAaoF,EAAQksB,EAAIK,EAAM/sB,EAAM4B,GAEpC,MAAMhC,EAAU,CACf8sB,GAAIA,EACJK,KAAMA,EACNgC,QAAgB,MAAPntB,EACT5B,KAAMA,GAGH4B,IACHhC,EAAQysB,MAAQ/wB,KAAK00B,yBAAyBpuB,IAE/C,MAAM8tB,EAA0C9tB,GAAOtG,KAAKkkB,OAAO6M,MAAM,mBAAmBK,mBAAoBlsB,WAAiBoB,GAEjI,GAAI5B,IAA0B,IAAlBA,EAAKovB,UAAwC,mBAAZpvB,EAAKsiB,IAA0C,mBAAdtiB,EAAKqvB,KAAqB,CAEvGzvB,EAAQytB,QAAS,IACe,IAA5BrtB,EAAKuvB,oBAAgCvvB,EAAKwvB,iBAAqD,IAAnCxvB,EAAKwvB,eAAe1B,cACnFluB,EAAQmtB,KAAOntB,EAAQmtB,MAAQ,GAC/BntB,EAAQmtB,KAAwB,mBAAI,GAErCntB,EAAQiuB,IAAM,EAEd,MAAMR,EAASrtB,EA0Df,OAzDAqtB,EAAO7K,QAEP6K,EAAO/K,GAAG,QAAS0L,IAClBX,EAAO7K,QACP,MAAMmN,EAAS,GACf,GAAI3B,aAAiBQ,UAAUlzB,KAAKwd,KAAK8W,aAAe,GAAK5B,EAAMxgB,OAASlS,KAAKwd,KAAK8W,aAAc,CACnG,IAAIra,EAAMyY,EAAMxgB,OACZwC,EAAI,EACR,KAAOA,EAAIuF,GACVoa,EAAOriB,KAAK0gB,EAAMnZ,MAAM7E,EAAGA,GAAK1U,KAAKwd,KAAK8W,oBAG3CD,EAAOriB,KAAK0gB,GAEb,IAAK,MAAM6B,KAAMF,EAAQ,CACxB,MAAMG,EAAOpe,OAAOqL,OAAO,GAAInd,GAC/BkwB,EAAKjC,MAAQjuB,EAAQiuB,IACrBiC,EAAKzC,QAAS,EACdyC,EAAK9vB,KAAO6vB,EAEZv0B,KAAKkkB,OAAO6B,MAAM,2BAA2B7gB,gBAAqBsvB,EAAKjC,OAEvEvyB,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAElV,gBAAiB6B,EAAQsvB,IACjDrb,MAAMib,GAETrC,EAAO0C,YAIR1C,EAAO/K,GAAG,OAAO,KAChB,MAAMwN,EAAOpe,OAAOqL,OAAO,GAAInd,GAO/B,OANAkwB,EAAKzC,QAAS,EACdyC,EAAKjC,MAAQjuB,EAAQiuB,IACrBiC,EAAK9vB,KAAO,KAEZ1E,KAAKkkB,OAAO6B,MAAM,6BAA6B7gB,gBAAqBsvB,EAAKjC,OAElEvyB,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAElV,gBAAiB6B,EAAQsvB,IACxDrb,MAAMib,MAGTrC,EAAO/K,GAAG,SAAS1gB,IAClB,MAAMkuB,EAAOpe,OAAOqL,OAAO,GAAInd,GAU/B,OATAkwB,EAAKzC,QAAS,EACdyC,EAAKjC,MAAQjuB,EAAQiuB,IACjBjsB,IACHkuB,EAAKf,SAAU,EACfe,EAAKzD,MAAQ/wB,KAAK00B,yBAAyBpuB,IAG5CtG,KAAKkkB,OAAO6B,MAAM,2BAA2B7gB,UAAgBsvB,EAAKzD,OAE3D/wB,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAElV,gBAAiB6B,EAAQsvB,IACxDrb,MAAMib,MAGT9vB,EAAQI,KAAO,KACR1E,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAElV,gBAAiB6B,EAAQZ,IACxDgU,MAAK,KACDhU,EAAQytB,QACXA,EAAO0C,YAERtb,MAAMib,GAIT,OAAOp0B,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAElV,gBAAiB6B,EAAQZ,IACxD6U,MAAMib,GAQTt0B,gBACC,OAAOE,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAEjV,kBAC/B6V,OAAiC7S,GAAOtG,KAAKkkB,OAAO6M,MAAM,kCAAmCzqB,KAQhGxG,aAAaoF,GACZ,OAAOlF,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAEjV,gBAAiB4B,IAChDiU,OAAiC7S,GAAOtG,KAAKkkB,OAAO6M,MAAM,sCAAsC7rB,WAAiBoB,KAQpHxG,aAAa2lB,EAAMvgB,GAClB,IAAKlF,KAAKmB,YAAcnB,KAAKmuB,QAAS,OAAOnuB,KAAKgT,QAAQC,UAG1D,QADW/N,GAAUlF,KAAKikB,OAAOzT,QAAQokB,gBAAkB50B,KAAKytB,GAAGoH,4BAA8B70B,KAAKgT,QAAQC,WACrGqF,MAAK,IAAMtY,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAEhV,YAAa2B,EAAQ,CAClE4vB,SAAUrP,EAAKqP,SACfC,OAAQtP,EAAKsP,OACb/gB,SAAUyR,EAAKzR,SACfghB,OAAQvP,EAAKuP,OACbC,OAAQxP,EAAKwP,OACbzH,WAAYxtB,KAAKikB,OAAOuJ,WACxB0H,SAAUzP,EAAKyP,SACf3C,IAAK9M,EAAK8M,SACNpZ,OAAiC7S,GAAOtG,KAAKkkB,OAAO6M,MAAM,kCAAkC7rB,WAAiBoB,KAYnHxG,SAASoF,EAAQksB,GAChB,OAAOpxB,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAE7U,YAAawB,EAAQ,CAAE0M,KAAMvQ,KAAKC,MAAO8vB,GAAIA,GAAMpxB,KAAKikB,OAAOkR,iBAC9Fhc,OAAiC7S,GAAOtG,KAAKkkB,OAAO6M,MAAM,kCAAkC7rB,WAAiBoB,KAUhHxG,SAASwE,GACR,OAAOtE,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAE5U,YAAaW,EAAQ8rB,OAAQ,CAC7Dxe,KAAMtN,EAAQsN,KACdwf,GAAI9sB,EAAQ8sB,GACZgE,QAAS/zB,KAAKC,SACX6X,OAAiC7S,GAAOtG,KAAKkkB,OAAO6M,MAAM,kCAAkCzsB,EAAQ8rB,gBAAiB9pB,KAU1HxG,YAAYwE,GACX,MAAMhD,EAAMD,KAAKC,MACX+zB,EAAc/zB,EAAMgD,EAAQsN,KAC5B0jB,EAAWxzB,KAAKyzB,MAAMj0B,EAAMgD,EAAQ8wB,QAAUC,EAAc,GAIlEr1B,KAAKikB,OAAOoL,eAAe,aAAc,CAAEnqB,OAAQZ,EAAQ8rB,OAAQiF,YAAAA,EAAaC,SAAAA,EAAUlE,GAAI9sB,EAAQ8sB,KAEtGpxB,KAAKutB,QAAQ5S,IAAI8E,GAAO7S,4BAA6ByoB,EAAa,CAAEG,aAAclxB,EAAQ8rB,SAC1FpwB,KAAKutB,QAAQ5S,IAAI8E,GAAO5S,oCAAqCyoB,EAAU,CAAEE,aAAclxB,EAAQ8rB,SAShGtwB,cAAc21B,GACb,OAAOz1B,KAAKwuB,QAAQ,IAAIrqB,GAAOoU,EAAE9U,iBAAkB,KAAM,CACxDmQ,IAAK6hB,EAAU7hB,OACZuF,OAAiC7S,GAAOtG,KAAKkkB,OAAO6M,MAAM,mCAAoCzqB,KAanGxG,UAAU41B,EAAOxwB,GAChB,OAAOlF,KAAKytB,GAAGkI,UAAUD,EAAOxwB,GAUjCpF,QAAQwuB,GACP,OAAItuB,KAAK+vB,YACD/vB,KAAK+vB,YACVzX,MAAK,IACEtY,KAAKytB,GAAGmI,WAAWtH,KAGtBtuB,KAAKytB,GAAGmI,WAAWtH,KC1lC5B,OA9BA,MASCxuB,YAAY2d,EAAUwG,EAAQzG,GAC7Bxd,KAAKyd,SAAWA,EAChBzd,KAAKikB,OAASA,EACdjkB,KAAKwd,KAAOA,GAAQ,GAWrB1d,SAEC,MAAM,IAAI4B,MAAM,6BCLlB,OAlBA,cAAiCm0B,GAEhC/1B,YAAY2d,EAAUwG,EAAQzG,GAC7Bzd,MAAM0d,EAAUwG,EAAQzG,GAExBxd,KAAK81B,QAAU,EAGhBh2B,OAAO6X,GAKN,OAHI3X,KAAK81B,SAAWne,EAAKzF,SACxBlS,KAAK81B,QAAU,GAETne,EAAK3X,KAAK81B,aCpBnB,MAAM9e,OAAEA,IAAWuI,UAcnB,OANA,cAA6BsW,GAC5B/1B,OAAO6X,GACN,OAAOA,EAAKX,GAAO,EAAGW,EAAKzF,OAAS,MCTtC,aAAQ8E,IAAWoK,UAoOnB,OAzMA,cAA8ByU,GAE7B/1B,YAAY2d,EAAUwG,EAAQzG,GAC7Bzd,MAAM0d,EAAUwG,EAAQzG,GAExBxd,KAAKwd,KAAO4D,UAAEsC,aAAalG,EAAM,CAChCuY,YAAa,EACbC,WAAY,GACZC,aAAc,EACdC,aAAc,KAGfl2B,KAAKm2B,eAAgB,EAErBn2B,KAAKo2B,eAAiB,IAAIvhB,IAQ1B7U,KAAKq2B,QAAU,IAAIxhB,IAGd7U,KAAKikB,OAAOqS,UAEiD,IAA9Dt2B,KAAKikB,OAAOsS,SAASC,cAAc,wBAEtCx2B,KAAKikB,OAAOsS,SAASvP,GAAG,uBAAuB,eAE/ChnB,KAAKikB,OAAOsS,SAASvP,GAAG,aAAchnB,KAAK8wB,YAAY7tB,KAAKjD,OAE5DA,KAAKikB,OAAOsS,SAASvP,GAAG,kBAAmBhnB,KAAKy2B,QAAQxzB,KAAKjD,OAE7DA,KAAKikB,OAAOsS,SAASvP,GAAG,qBAAsBhnB,KAAK02B,cAAczzB,KAAKjD,OAEtEA,KAAKikB,OAAOsS,SAASvP,GAAG,kBAAmBhnB,KAAK22B,UAAU1zB,KAAKjD,OAE/DA,KAAKikB,OAAOsS,SAASvP,GAAG,mBAAmB,IAAMhnB,KAAKm2B,eAAgB,KAGtEn2B,KAAKikB,OAAOsS,SAASvP,GAAG,gCAAiChnB,KAAK42B,kBAAkB3zB,KAAKjD,OAGtFA,KAAKikB,OAAOsS,SAASvP,GAAG,qBAAsBhnB,KAAK62B,cAAc5zB,KAAKjD,QAIvEF,YACC,OAAOE,KAAKikB,OAAOqS,QAAQQ,WAAWxe,MAAK,KAC5BO,cAAW,IAAM7Y,KAAK+2B,aAAa,IAAO/2B,KAAKwd,KAAK0Y,cAC5DjX,WAKRnf,YAGC,GAAIE,KAAKm2B,cAAe,OAOxB,MAAMa,EAAQvgB,MAAMmJ,KAAK5f,KAAKq2B,QAAQrY,UAEtC,OAAOhe,KAAKikB,OAAOjR,QAAQwZ,IAAIwK,EAAMrjB,KAAIsjB,IAExC,MAAM/xB,EAAS+xB,EAAKC,SAASlgB,GAAO,EAAGigB,EAAKC,SAAShlB,OAAS,IAC9D,OAAOlS,KAAKikB,OAAOqS,QAAQQ,SAAS5xB,OACjCoT,MAAK,KACMO,cAAW,IAAM7Y,KAAK+2B,aAAa,IAAO/2B,KAAKwd,KAAK0Y,cAC5DjX,WAKRnf,YAAYwE,GACX,IAAI9D,EAAOR,KAAKyd,SAAS0Z,MAAM3c,IAAIlW,EAAQY,QAG3C,IAAK1E,EAAM,OAEX,IAAIilB,EAAOzlB,KAAKo3B,eAAe52B,GAE3BilB,EAAK4R,gBAAgBnlB,OAAUlS,KAAKwd,KAAKyY,aAAe,GAC3DxQ,EAAK4R,gBAAgBhb,QAEtBoJ,EAAK4R,gBAAgBrlB,KAAK1N,EAAQ+wB,aAElC,MAAMiC,EAAa7R,EAAK4R,gBAAgBhlB,QAAO,CAACC,EAAKilB,IAAYjlB,EAAMilB,GAAS,GAAK9R,EAAK4R,gBAAgBnlB,OAE1GlS,KAAKikB,OAAOsS,SAAS90B,KAAK,qBAAsB,CAC/CuS,SAAUxT,EAAKwT,SACfsjB,WAAYA,IAKdx3B,eAAeU,GACd,IAAIilB,EAAOzlB,KAAKq2B,QAAQ7b,IAAIha,EAAKwT,UAQjC,YAPoB,IAATyR,IACVA,EAAO,CACN4R,gBAAiB,GACjBH,SAAU,CAAE12B,EAAK4wB,KAElBpxB,KAAKq2B,QAAQ1b,IAAIna,EAAKwT,SAAUyR,IAE1BA,EAIR3lB,QAAQwE,GACP,IAAI9D,EAAO8D,EAAQ9D,KAGfilB,EAAOzlB,KAAKo3B,eAAe52B,IACS,IAApCilB,EAAKyR,SAAS5f,QAAQ9W,EAAK4wB,KAC9B3L,EAAKyR,SAASllB,KAAKxR,EAAK4wB,IAK1BtxB,cAAcwE,GACb,IAAI9D,EAAO8D,EAAQ9D,KAEfilB,EAAOzlB,KAAKq2B,QAAQ7b,IAAIha,EAAKwT,eAIb,IAATyR,IAEXA,EAAKyR,SAAWzR,EAAKyR,SAASnS,QAAOqM,GAAMA,IAAO5wB,EAAK4wB,KAE3B,GAAxB3L,EAAKyR,SAAShlB,SAEjBlS,KAAKikB,OAAOsS,SAAS90B,KAAK,gCAAiCjB,EAAKwT,UAChEhU,KAAKq2B,QAAQrD,OAAOxyB,EAAKwT,YAK3BlU,cAAcwE,GACbtE,KAAKo2B,eAAezb,IAAIrW,EAAQ0P,SAAU1P,EAAQgzB,YAInDx3B,kBAAkBkU,GACjBhU,KAAKo2B,eAAepD,OAAOhf,GAU5BlU,OAAO6X,GACN,IAAI6f,EAAQ,KACRC,EAAa,KAEjB,MAAM1B,EAAc/1B,KAAKwd,KAAKuY,YACxBzV,EAAQyV,GAAe,GAAKA,EAAcpe,EAAKzF,OAASyF,EAAKzF,OAAS6jB,EAC5E,IAAK,IAAIrhB,EAAI,EAAGA,EAAI4L,EAAO5L,IAAK,CAC/B,IAAIgjB,EAGHA,EADGpX,GAAS3I,EAAKzF,OACZyF,EAAKjD,GAGLiD,EAAKX,GAAO,EAAGW,EAAKzF,OAAS,IAEnC,MAAMylB,EAAY33B,KAAKo2B,eAAe5b,IAAIkd,EAAGl3B,KAAKwT,UAGlD,QAAyB,IAAd2jB,EAA2B,CAErC,GAAIA,EAAY33B,KAAKwd,KAAKwY,WACzB,OAAO0B,IAEHF,IAAUC,GAAcE,EAAYF,KACxCA,EAAaE,EACbH,EAAQE,IAMX,OAAIF,GAKG7f,EAAKX,GAAO,EAAGW,EAAKzF,OAAS,MC7NtC,iBAAQ0D,IAAe2J,GA2JvB,OAlJA,cAA4BsW,GAE3B/1B,YAAY2d,EAAUwG,EAAQzG,GAC7Bzd,MAAM0d,EAAUwG,EAAQzG,GAExBxd,KAAKwd,KAAO4D,UAAEsC,aAAalG,EAAM,CAChCoa,SAAU,KACVC,OAAQ,GACRC,SAAU,KACVC,UAAW,MAGZ/3B,KAAK2Z,MAAQ,IAAIqe,UAAI,CACpB1V,IAAKtiB,KAAKwd,KAAKua,UACfE,OAAQ,OAGTj4B,KAAKk4B,aAAc,EACnBl4B,KAAKm4B,KAAO,GAEZlU,EAAOsS,SAASvP,GAAG,YAAY,IAAMhnB,KAAKk4B,aAAc,IAUzDp4B,kBAAkBoxB,GACjB,OAAKlxB,KAAKwd,KAAKoa,SAEXhiB,GAAW5V,KAAKwd,KAAKoa,UACjB53B,KAAKwd,KAAKoa,SAASlhB,KAAK1W,KAAMkxB,GAElClxB,KAAKwd,KAAKoa,SAASxd,WAAW,KAC1BgH,UAAE5G,IAAI0W,EAAIO,KAAMzxB,KAAKwd,KAAKoa,SAASre,MAAM,IAE1C6H,UAAE5G,IAAI0W,EAAIkB,OAAQpyB,KAAKwd,KAAKoa,UARF,KAmBlC93B,OAAO6X,EAAMuZ,GACZ,IAAIrX,EAAM7Z,KAAKo4B,kBAAkBlH,GACjC,GAAW,MAAPrX,EAAa,CACZ7Z,KAAKk4B,aACRl4B,KAAKq4B,QAAQ1gB,GAEd,MAAMzS,EAASlF,KAAKs4B,eAAeze,GACnC,GAAI3U,EACH,OAAOyS,EAAK2L,MAAKoU,GAAMA,EAAGtG,IAAMlsB,IAIlC,OAAOyS,EAAKyJ,UAAEpK,OAAO,EAAGW,EAAKzF,OAAS,IAUvCpS,eAAe+Z,GACd,GAAI7Z,KAAK2Z,MAAO,CACf,MAAM4e,EAASv4B,KAAK2Z,MAAMa,IAAIX,GAC9B,GAAI0e,EAAQ,OAAOA,EAGpB,MAAMC,EAAUx4B,KAAKy4B,QAAQ5e,EAAIlF,YAEjC,IAAI+jB,EACJ,MAAMC,EAAU34B,KAAKm4B,KAAKjmB,OAC1B,IAAI,IAAIwC,EAAI,EAAGA,EAAIikB,EAASjkB,IAC3B,GAAI8jB,GAAWx4B,KAAKm4B,KAAKzjB,GAAGmF,IAAK,CAChC6e,EAAQ14B,KAAKm4B,KAAKzjB,GAClB,MAIF,OAAIgkB,GACC14B,KAAK2Z,OACR3Z,KAAK2Z,MAAMgB,IAAId,EAAK6e,EAAMxzB,QACpBwzB,EAAMxzB,QAEP,KAURpF,QAAQ+Z,GACP,MAAMqE,EAAO0a,UAAOC,WAAW,OAAOnZ,OAAO7F,GAAKif,OAAO,OACnDN,EAAUjb,SAASW,EAAK/D,UAAU,EAAE,GAAI,IAC9C,OAAOna,KAAKwd,KAAKsa,SAAWU,EAAUx4B,KAAKwd,KAAKsa,SAAWU,EAS5D14B,QAAQ6X,GACP3X,KAAK2Z,MAAMjJ,QACX1Q,KAAKm4B,KAAO,GAEZ,MAAM3hB,EAAMmB,EACVhE,KAAI+jB,GAAMA,EAAGtG,KACbxQ,OAEImY,EAAQviB,EAAItE,OAASlS,KAAKwd,KAAKqa,OAC/BC,EAAW93B,KAAKwd,KAAKsa,SAAW93B,KAAKwd,KAAKsa,SAAWh2B,KAAKuT,IAAI,EAAG,IACjEkE,EAAQue,EAAWiB,EAEzB,IAAK,IAAIC,EAAI,EAAGA,EAAIh5B,KAAKwd,KAAKqa,OAAQmB,IACrC,IAAK,IAAItkB,EAAI,EAAGA,EAAI8B,EAAItE,OAAQwC,IAAK,CACpC,MAAMxP,EAASsR,EAAI9B,GACnB1U,KAAKm4B,KAAKnmB,KAAK,CACd6H,IAAK/X,KAAKC,MAAMwX,GAASvZ,KAAKm4B,KAAKjmB,OAAS,IAC5ChN,OAAQA,IAMXlF,KAAKm4B,KAAKn4B,KAAKm4B,KAAKjmB,OAAS,GAAG2H,IAAMie,EAEtC93B,KAAKk4B,aAAc,IC1JrB,eAAQjiB,YAAUH,IAAayJ,uBACvBzZ,IAAuB6c,EAEzBsW,GAAa,CAClBvW,KAAMG,GACNqW,WAAYnW,GACZoW,OAAQlW,GACRmW,SAAUjW,EACVkW,QAAShT,GACTiT,MAAO/S,IAGR,SAAShD,GAAUvd,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIqd,EAAIjN,OAAOqD,KAAKwf,IAAY3V,MAAKD,GAAKA,EAAE3L,eAAiB1R,EAAK0R,gBAClE,OAAI2L,EACI4V,GAAW5V,QADnB,EAqCD,OAAiBjN,OAAOqL,OAAOwX,GAAY,SA1B3C,SAAiBvS,GAChB,GAAItQ,OAAOE,UAAUijB,cAAc7iB,KAAKuiB,GAAWvW,KAAMgE,GACxD,OAAOA,EACD,GAAI5Q,GAAS4Q,GAAM,CACzB,IAAI8S,EAAgBjW,GAAUmD,GAC9B,GAAI8S,EACH,OAAOA,EAEP,MAAM,IAAI1zB,GAAmB,0BAA0B4gB,MAAS,CAAEtiB,KAAMsiB,IAEnE,GAAIzQ,GAASyQ,GAAM,CACzB,IAAI8S,EAAgBjW,GAAUmD,EAAItiB,MAAQ,cAC1C,GAAIo1B,EACH,OAAOA,EAEP,MAAM,IAAI1zB,GAAmB,0BAA0B4gB,EAAItiB,SAAU,CAAEA,KAAMsiB,EAAItiB,OAGnF,OAAO60B,GAAWC,qBAInB,SAAkBlzB,EAAMyM,GACvBwmB,GAAWjzB,GAAQyM,KC8OpB,OA3RA,MAOC3S,YAAY0d,GACXxd,KAAKgT,QAAUA,QAEfhT,KAAKwd,KAAO4D,UAAEsC,aAAa,GAAIlG,EAAM,CACpCic,kBAAmB,KACnBC,iBAAkB,KAElBC,wBAAwB,EACxBC,4BAA4B,EAC5BC,yBAA0B,MAI3B75B,KAAK85B,eAAiB,KACtB95B,KAAK+5B,gBAAkB,KACvB/5B,KAAKg6B,aAAe,KAGpBh6B,KAAKy1B,UAAY,KAQlB31B,KAAK2d,GACJzd,KAAKyd,SAAWA,EAChBzd,KAAKikB,OAASxG,EAASwG,OACvBjkB,KAAKgT,QAAUhT,KAAKikB,OAAOjR,QAEvBhT,KAAKikB,SACRjkB,KAAKkkB,OAASlkB,KAAKikB,OAAO4H,UAAU,aACpC7rB,KAAKs2B,QAAUt2B,KAAKikB,OAAOqS,QAGQ,MAA/Bt2B,KAAKwd,KAAKic,oBACbz5B,KAAKwd,KAAKic,kBAAoBz5B,KAAKikB,OAAOzT,QAAQipB,mBACjB,MAA9Bz5B,KAAKwd,KAAKkc,mBACb15B,KAAKwd,KAAKkc,iBAAmB15B,KAAKikB,OAAOzT,QAAQkpB,mBAG/C15B,KAAKs2B,UACRt2B,KAAKikB,OAAOsS,SAASvP,GAAG,0BAA0B,IAAMhnB,KAAKi6B,yBAC7Dj6B,KAAKikB,OAAOsS,SAASvP,GAAG,6BAA6B,IAAMhnB,KAAKk6B,yBAGjEl6B,KAAKy1B,UAAYz1B,KAAKyd,SAAS0Z,MAAM1B,UAErCz1B,KAAK+uB,2BAMNjvB,OAEC,OADAE,KAAKk6B,sBACEl6B,KAAKgT,QAAQC,UAMrBnT,4BAOAA,uBAGC,GAFAE,KAAKk6B,sBAEDl6B,KAAKwd,KAAKic,kBAAoB,EAAG,CAEpC,MAAM7nB,EAAqC,IAA9B5R,KAAKwd,KAAKic,mBAA4B33B,KAAKyzB,MAAsB,IAAhBzzB,KAAKkV,UAAmB,KACtFhX,KAAK85B,eAAiB/a,eAAY,IAAM/e,KAAKm6B,QAAQvoB,GACrD5R,KAAK85B,eAAe7a,QAGpBjf,KAAK+5B,gBAAkBhb,eAAY,IAAM/e,KAAKo6B,oBAAiD,IAA7Bp6B,KAAKwd,KAAKkc,kBAC5E15B,KAAK+5B,gBAAgB9a,QAGrBjf,KAAKg6B,aAAejb,eAAY,IAAM/e,KAAKq6B,qBAAqB,KAChEr6B,KAAKg6B,aAAa/a,SAOpBnf,sBACKE,KAAK85B,iBACRvN,cAAcvsB,KAAK85B,gBACnB95B,KAAK85B,eAAiB,MAGnB95B,KAAK+5B,kBACRxN,cAAcvsB,KAAK+5B,iBACnB/5B,KAAK+5B,gBAAkB,MAGpB/5B,KAAKg6B,eACRzN,cAAcvsB,KAAKg6B,cACnBh6B,KAAKg6B,aAAe,MAOtBl6B,mBACCE,KAAKwd,KAAKic,kBAAoB,EAC9Bz5B,KAAKk6B,sBAMNp6B,OAEC,OAAOE,KAAKy1B,UAAU6E,gBAAgBt6B,KAAKikB,OAAOpR,aAChDyF,MAAK,IAAMtY,KAAKu6B,kBAMnBz6B,mBACC,GAAIE,KAAK25B,uBAAwB,OAEjC,MAAMr4B,EAAMQ,KAAKyzB,MAAMxyB,EAAQumB,UAC/BtpB,KAAKyd,SAAS0Z,MAAMqD,UAAU5gB,SAAQpZ,KACjCA,EAAKi6B,OAAUj6B,EAAKk6B,YACnBl6B,EAAKm6B,kBAMNr5B,EAAMd,EAAKm6B,kBAAoB36B,KAAKikB,OAAOzT,QAAQkpB,mBACtD15B,KAAKkkB,OAAOpJ,KAAK,mCAAmCta,EAAK4wB,aACzDpxB,KAAKyd,SAAS0Z,MAAMyD,aAAap6B,EAAK4wB,IAAI,IAN1C5wB,EAAKm6B,kBAAoBr5B,MAc5BxB,oBACC,GAAIE,KAAK45B,6BAA+B55B,KAAKwd,KAAKqc,yBAA0B,OAE5E,MAAMv4B,EAAMQ,KAAKyzB,MAAMxyB,EAAQumB,UAC/BtpB,KAAKyd,SAAS0Z,MAAMqD,UAAU5gB,SAAQpZ,IACjCA,EAAKi6B,OAASj6B,EAAKk6B,YAClBl6B,EAAKm6B,kBAMNr5B,EAAMd,EAAKm6B,kBAAoB36B,KAAKwd,KAAKqc,2BAC5C75B,KAAKkkB,OAAOpJ,KAAK,qBAAqBta,EAAK4wB,uFAC3CpxB,KAAKyd,SAAS0Z,MAAMnE,OAAOxyB,EAAK4wB,KANhC5wB,EAAKm6B,kBAAoBr5B,MAiB5BxB,kBAAkBoF,EAAQZ,GACzB,MAAM9D,EAAOR,KAAKyd,SAAS0Z,MAAM3c,IAAItV,GACjC1E,GACEA,EAAKk6B,UAIU,MAAfp2B,EAAQiuB,KAAe/xB,EAAK+xB,MAAQjuB,EAAQiuB,IAE/CvyB,KAAK66B,aAAa31B,GACc,MAAtBZ,EAAQkpB,YAAuBhtB,EAAKgtB,WAAWpT,WAAW9V,EAAQkpB,YAI5EhtB,EAAKs6B,UAAUx2B,GAFftE,KAAK66B,aAAa31B,GAOpBlF,KAAK66B,aAAa31B,GAUpBpF,sBAAsBoF,EAAQZ,GAC7B,OAAOtE,KAAKikB,OAAOxG,SAASsd,gBAAgBz2B,GAM7CxE,gBACC,OAAKE,KAAKs2B,QACHt2B,KAAKs2B,QAAQiE,cAAcv6B,KAAKy1B,WADbz1B,KAAKgT,QAAQC,UASxCnT,eAEC,MAAM,IAAI4B,MAAM,mBAMjB5B,mBAEC,MAAM,IAAI4B,MAAM,mBAMjB5B,iBAGC,OAAOE,KAAKkvB,oBAQbpvB,oBAEC,MAAM,IAAI4B,MAAM,mBAOjB5B,wBACC,OAAKE,KAAKs2B,QACHt2B,KAAKs2B,QAAQ0E,uBADMh7B,KAAKgT,QAAQC,UAWxCnT,uBAAuBoF,EAAQ+1B,GAC9B,OAAOj7B,KAAKyd,SAAS0Z,MAAMyD,aAAa11B,EAAQ+1B,KChOlD,OAtDA,cAA8BC,GAO7Bp7B,YAAY0d,GACXzd,MAAMyd,GAUP1d,KAAK2d,GACJ1d,MAAM4S,KAAK8K,GAQZ3d,aAAaoF,GACZ,OAAKlF,KAAKs2B,QACHt2B,KAAKs2B,QAAQuE,aAAa31B,GADPlF,KAAKgT,QAAQC,UAOxCnT,mBACC,OAAKE,KAAKs2B,QACHt2B,KAAKs2B,QAAQ6E,gBADMn7B,KAAKgT,QAAQC,UASxCnT,kBAAkBoF,GACjB,IAAKlF,KAAKs2B,QAAS,OAAOt2B,KAAKgT,QAAQC,UAEvC,MAAMwS,EAAOzlB,KAAKikB,OAAOmX,mBACzB,OAAOp7B,KAAKs2B,QAAQ+E,aAAa5V,EAAMvgB,KCxDzC,yBAAQY,IAAuByZ,YACvBtJ,YAAUH,IAAa6M,GAEzB2Y,GAAc,CACnB5Y,KAAMG,GACN0Y,MAAOxY,GACPyY,MAAOvY,GACPwY,MAAOtY,IAGR,SAASI,GAAUvd,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIqd,EAAIjN,OAAOqD,KAAK6hB,IAAahY,MAAKD,GAAKA,EAAE3L,eAAiB1R,EAAK0R,gBACnE,OAAI2L,EACIiY,GAAYjY,QADpB,EA0CD,OAAiBjN,OAAOqL,OAAO6Z,GAAa,SA/B5C,SAAiB5U,GAChB,GAAIA,aAAe4U,GAAY5Y,KAC9B,OAAOgE,EACD,GAAI5Q,GAAS4Q,GAAM,CACzB,IAAIgV,EAAkBnY,GAAUmD,GAChC,GAAIgV,EACH,OAAO,IAAIA,EAEZ,GAAIhV,EAAItM,WAAW,YAClB,OAAO,IAAIkhB,GAAYG,MAAM/U,GAE9B,GAAIA,EAAItM,WAAW,YAClB,OAAO,IAAIkhB,GAAYE,MAAM9U,GAE9B,MAAM,IAAI5gB,GAAmB,4BAA4B4gB,MAAS,CAAEtiB,KAAMsiB,IAEpE,GAAIzQ,GAASyQ,GAAM,CACzB,IAAIgV,EAAkBnY,GAAUmD,EAAItiB,MAAQ,SAC5C,GAAIs3B,EACH,OAAO,IAAIA,EAAgBhV,EAAIlW,SAE/B,MAAM,IAAI1K,GAAmB,4BAA4B4gB,EAAItiB,SAAU,CAAEA,KAAMsiB,EAAItiB,OAGrF,OAAO,IAAIk3B,GAAYC,gBAGxB,SAAkBv1B,EAAMyM,GACvB6oB,GAAYt1B,GAAQyM,KC8DrB,OAhHA,MAQC3S,YAAYsxB,GACXpxB,KAAKoxB,GAAKA,EACVpxB,KAAKwtB,WAAa,KAClBxtB,KAAK06B,WAAY,EACjB16B,KAAKy6B,OAAQ,EACbz6B,KAAK26B,kBAAoB74B,KAAKyzB,MAAMxyB,EAAQumB,UAC5CtpB,KAAKi1B,OAAS,GACdj1B,KAAKg1B,OAAS,GACdh1B,KAAKk1B,SAAW,KAEhBl1B,KAAK+0B,OAAS,KACd/0B,KAAK27B,KAAO,KACZ37B,KAAKgU,SAAW,KAChBhU,KAAK47B,WAAa,KAElB57B,KAAK67B,QAAU,KACf77B,KAAK80B,SAAW,GAEhB90B,KAAK4T,IAAM,KACX5T,KAAK87B,OAAS,KAEd97B,KAAKuyB,IAAM,EACXvyB,KAAK+7B,aAAe,KAUrBj8B,OAAOwE,EAAS03B,GAEfh8B,KAAKk1B,SAAW5wB,EAAQ4wB,SACxBl1B,KAAK+0B,OAASzwB,EAAQywB,OACtB/0B,KAAKgU,SAAW1P,EAAQ0P,SACxBhU,KAAK27B,KAAOr3B,EAAQq3B,KACpB37B,KAAKg1B,OAAS1wB,EAAQ0wB,QAAU,GAChCh1B,KAAKi1B,OAAS3wB,EAAQ2wB,QAAU,GAChCj1B,KAAKwtB,WAAalpB,EAAQkpB,WAG1BxtB,KAAK80B,SAAWxwB,EAAQwwB,SACxB90B,KAAK67B,QAAUv3B,EAEf,MAAM23B,EAAS33B,EAAQiuB,KAAO,EAC9B,GAAI0J,EAASj8B,KAAKuyB,KAAOyJ,EAExB,OADAh8B,KAAKuyB,IAAM0J,GACJ,EAUTn8B,gBAAgBgU,GACf,OAAOA,IAAWwE,MAAKQ,IACtB,MAAMojB,EAASp6B,KAAKyzB,MAAMzc,EAAIlG,KAC1B5S,KAAK4T,KAAOsoB,IACfl8B,KAAK4T,IAAMsoB,EACXl8B,KAAK87B,aAEJ3iB,OAAM,SASVrZ,UAAUwE,GACJtE,KAAK06B,YACT16B,KAAK06B,WAAY,EACjB16B,KAAK+7B,aAAe,MAGF,MAAfz3B,EAAQsP,MACX5T,KAAK4T,IAAMtP,EAAQsP,IACnB5T,KAAK87B,OAASx3B,EAAQw3B,QAAU,GAGjC97B,KAAK26B,kBAAoB74B,KAAKyzB,MAAMxyB,EAAQumB,UAQ7CxpB,eACKE,KAAK06B,YACR16B,KAAK+7B,aAAej6B,KAAKyzB,MAAMxyB,EAAQumB,UACvCtpB,KAAKuyB,OAGNvyB,KAAK06B,WAAY,IC9GnB,MAAMyB,UAAEA,IAAc5c,GA+NtB,OAxNA,MAUCzf,YAAY2d,EAAUwG,GACrBjkB,KAAKyd,SAAWA,EAChBzd,KAAKikB,OAASA,EACdjkB,KAAKkkB,OAASzG,EAASyG,OAEvBlkB,KAAKm3B,MAAQ,IAAItiB,IAEjB7U,KAAKo8B,kBASNt8B,kBACC,MAAMU,EAAO,IAAI67B,GAAKr8B,KAAKikB,OAAO/e,QAgBlC,OAfA1E,EAAKi6B,OAAQ,EACbj6B,EAAKu0B,OAASoH,KACd37B,EAAKgtB,WAAaxtB,KAAKikB,OAAOuJ,WAC9BhtB,EAAKwT,SAAWyD,EAAGzD,WACnBxT,EAAKw0B,OAAS,CACb5wB,eACA/D,QAASL,KAAKikB,OAAOqY,kBACrBC,YAAax5B,EAAQ1C,SAEtBG,EAAK00B,SAAWl1B,KAAKikB,OAAOiR,SAC5B10B,EAAK+xB,IAAM,EAEXvyB,KAAK+b,IAAIvb,EAAK4wB,GAAI5wB,GAElBR,KAAKy1B,UAAYj1B,EACVA,EAURV,IAAIsxB,EAAI5wB,GACPR,KAAKm3B,MAAMxc,IAAIyW,EAAI5wB,GAUpBV,IAAIsxB,GACH,OAAOpxB,KAAKm3B,MAAMrb,IAAIsV,GAUvBtxB,IAAIsxB,GACH,OAAOpxB,KAAKm3B,MAAM3c,IAAI4W,GAUvBtxB,OAAOsxB,GACN,OAAOpxB,KAAKm3B,MAAMnE,OAAO5B,GAM1BtxB,QACC,OAAOE,KAAKm3B,MAAMtb,KAMnB/b,cACC,IAAIwgB,EAAQ,EAMZ,OALAtgB,KAAKm3B,MAAMvd,SAAQpZ,IACdA,EAAKk6B,WACRpa,OAGKA,EASRxgB,gBAAgBwE,GACf,MAAMY,EAASZ,EAAQ8rB,OAEvB,IAAI5vB,EAAOR,KAAKwa,IAAItV,GAChBotB,GAAQ,EACR0J,GAAgB,EAEfx7B,EAKOA,EAAKk6B,YAChBsB,GAAgB,EAChBx7B,EAAKm6B,kBAAoB74B,KAAKyzB,MAAMxyB,EAAQumB,UAC5C9oB,EAAKk6B,WAAY,EACjBl6B,EAAKu7B,aAAe,OARpBzJ,GAAQ,EACR9xB,EAAO,IAAI67B,GAAKn3B,GAEhBlF,KAAK+b,IAAI7W,EAAQ1E,IA8BlB,OArBqBA,EAAKkf,OAAOpb,EAAS03B,IAGtBx7B,EAAKs0B,UACxB90B,KAAKyd,SAAS+e,iBAAiBh8B,EAAMA,EAAKs0B,UAIvCxC,GACHtyB,KAAKikB,OAAOoL,eAAe,kBAAmB,MAAE7uB,EAAMi8B,aAAa,IACnEz8B,KAAKkkB,OAAOuB,KAAK,SAASvgB,iBAC1BlF,KAAKyd,SAASif,iBACJV,GACVh8B,KAAKikB,OAAOoL,eAAe,kBAAmB,MAAE7uB,EAAMi8B,aAAa,IACnEz8B,KAAKkkB,OAAOuB,KAAK,SAASvgB,mBAC1BlF,KAAKyd,SAASif,kBAEd18B,KAAKikB,OAAOoL,eAAe,gBAAiB,MAAE7uB,IAC9CR,KAAKkkB,OAAO6B,MAAM,SAAS7gB,gBAGrB1E,EAURV,aAAaoF,EAAQ+1B,GACpB,IAAIz6B,EAAOR,KAAKwa,IAAItV,GAChB1E,GAAQA,EAAKk6B,YAChBl6B,EAAKo6B,aAAaK,GAElBj7B,KAAKyd,SAASkf,yBAAyBn8B,EAAK4wB,IAE5CpxB,KAAKikB,OAAOoL,eAAe,qBAAsB,CAAE7uB,KAAAA,EAAMo8B,aAAc3B,IAEvEj7B,KAAKyd,SAASif,gBAEd18B,KAAKkkB,OAAOpJ,KAAK,SAASta,EAAK4wB,mBAAmB6J,EAAe,gBAAkB,OAE/Ej7B,KAAKikB,OAAOqS,SACft2B,KAAKikB,OAAOqS,QAAQuG,6BAA6B33B,IAYpDpF,MAAKg9B,cAAEA,GAAgB,EAAKC,aAAEA,GAAe,IAC5C,IAAIjkB,EAAM,GAWV,OAVA9Y,KAAKm3B,MAAMvd,SAAQpZ,IACds8B,IAAkBt8B,EAAKk6B,YAGvBqC,EACHjkB,EAAI9G,KAAKoP,UAAE4b,KAAKx8B,EAAM,CAAC,aAEvBsY,EAAI9G,KAAKoP,UAAE4b,KAAKx8B,EAAM,CAAC,WAAY,iBAG9BsY,EAMRhZ,UACC,OAAO2W,MAAMmJ,KAAK5f,KAAKm3B,MAAMnZ,YCnJ/B,OAtEA,MAUCle,YAAYU,EAAM4E,EAASq1B,GAC1Bz6B,KAAKQ,KAAOA,EACZR,KAAKgG,KAAOZ,EAAQY,KACpBhG,KAAKi9B,SAAW73B,EAAQ63B,SACxBj9B,KAAKK,QAAU+E,EAAQ/E,QACvBL,KAAKk9B,SAAW93B,EAAQ83B,SACxBl9B,KAAKk1B,SAAW9vB,EAAQ8vB,UAAY,GAEpCl1B,KAAKy6B,QAAUA,EAEfz6B,KAAKm9B,QAAU,GACfn9B,KAAKo9B,OAAS,GAWft9B,OAAOm9B,EAAU/3B,GAChB,OAAOlF,KAAKi9B,UAAYA,IAAuB,MAAV/3B,GAAkBlF,KAAKQ,KAAK4wB,IAAMlsB,GASxEpF,OAAOu9B,GACNr9B,KAAKi9B,SAAWI,EAAIJ,SACpBj9B,KAAKK,QAAUg9B,EAAIh9B,QACnBL,KAAKk9B,SAAWG,EAAIH,SACpBl9B,KAAKk1B,SAAWmI,EAAInI,UAAY,GASjCp1B,UAAUqF,GACTnF,KAAKm9B,QAAQh4B,EAAOa,MAAQb,EAS7BrF,SAASkxB,GACRhxB,KAAKo9B,OAAOpM,EAAMhrB,MAAQgrB,ICrE5B,MAAMsM,gBAAEA,IAAoB/d,GAwN5B,OAjNA,MASCzf,YAAY2d,EAAUwG,GACrBjkB,KAAKyd,SAAWA,EAChBzd,KAAKikB,OAASA,EACdjkB,KAAKkkB,OAASzG,EAASyG,OAEvBlkB,KAAK80B,SAAW,GAcjBh1B,IAAIU,EAAM4E,EAASq1B,GAClB,MAAMrjB,EAAO,IAAImmB,GAAY/8B,EAAM4E,EAASq1B,GAE5C,OADAz6B,KAAK80B,SAAS9iB,KAAKoF,GACZA,EAWRtX,IAAIm9B,EAAU/3B,GACb,OAAkE,MAA3DlF,KAAK80B,SAASxR,MAAK+Z,GAAOA,EAAIG,OAAOP,EAAU/3B,KAWvDpF,IAAIm9B,EAAU/3B,GACb,OAAOlF,KAAK80B,SAASxR,MAAK+Z,GAAOA,EAAIG,OAAOP,EAAU/3B,KAWvDpF,MAAK29B,UAAEA,GAAY,EAAKX,cAAEA,GAAgB,EAAKY,aAAEA,GAAe,EAAKC,YAAEA,GAAc,EAAKC,WAAEA,GAAa,EAAKC,SAAEA,GAAW,IAC1H,IAAI/kB,EAAM,GA6DV,OA5DA9Y,KAAK80B,SAASlb,SAAQxU,IACrB,GAAIs4B,GAAgB,MAAM9iB,KAAKxV,EAAQY,MACtC,OAED,GAAIy3B,IAAcr4B,EAAQq1B,MACzB,OAED,GAAIqC,IAAkB13B,EAAQ5E,KAAKk6B,UAClC,OAED,IAAItjB,EAIJ,GAHIymB,IACHzmB,EAAO0B,EAAIwK,MAAK+Z,GAAOA,EAAIJ,UAAY73B,EAAQ63B,YAE3C7lB,GAyCyC,IAAzCA,EAAK+f,MAAM7f,QAAQlS,EAAQ5E,KAAK4wB,KACnCha,EAAK+f,MAAMnlB,KAAK5M,EAAQ5E,KAAK4wB,QA1CpB,CACV,IAAIha,EAAO,CACVpR,KAAMZ,EAAQY,KACd3F,QAAS+E,EAAQ/E,QACjB48B,SAAU73B,EAAQ63B,SAClBC,SAAU93B,EAAQ83B,SAClBhI,SAAU9vB,EAAQ8vB,SAElBuF,MAAOr1B,EAAQq1B,MACfC,UAAWt1B,EAAQ5E,KAAKk6B,WAGrBmD,EACHzmB,EAAK+f,MAAQ,CAAC/xB,EAAQ5E,KAAK4wB,IAE3Bha,EAAKlS,OAASE,EAAQ5E,KAAK4wB,GAExBuM,IACHvmB,EAAK+lB,QAAU,GAEf/b,UAAE0c,MAAM14B,EAAQ+3B,SAASh4B,IACpBA,EAAO44B,YAEX3mB,EAAK+lB,QAAQh4B,EAAOa,MAAQob,UAAE4b,KAAK73B,EAAQ,CAAC,UAAW,gBAAiB,iBAItEy4B,IACHxmB,EAAKgmB,OAAS,GAEdhc,UAAE0c,MAAM14B,EAAQg4B,QAAQpM,IAEnB,MAAMpW,KAAKoW,EAAMhrB,QAErBoR,EAAKgmB,OAAOpM,EAAMhrB,MAAQob,UAAE4b,KAAKhM,EAAO,CAAC,UAAW,gBAAiB,iBAIvElY,EAAI9G,KAAKoF,OAQJ0B,EASRhZ,uBACC,IAAIgZ,EAAM,GAkCV,OAjCA9Y,KAAK80B,SAASlb,SAAQxU,IACrB,IAAKA,EAAQq1B,MACZ,OAED,IAAIrjB,EAAO,CACVpR,KAAMZ,EAAQY,KACd3F,QAAS+E,EAAQ/E,QACjB48B,SAAU73B,EAAQ63B,SAClBC,SAAU93B,EAAQ83B,SAClBhI,SAAU9vB,EAAQ8vB,SAClB8I,aAAc54B,EAAQ44B,aAGvBb,QAAe,IAEf/b,UAAE0c,MAAM14B,EAAQ+3B,SAASh4B,IACpBA,EAAO44B,YAEX3mB,EAAK+lB,QAAQh4B,EAAOa,MAAQob,UAAE4b,KAAK73B,EAAQ,CAAC,UAAW,gBAAiB,gBAGzEiS,EAAKgmB,OAAS,GAEdhc,UAAE0c,MAAM14B,EAAQg4B,QAAQpM,IAIvB5Z,EAAKgmB,OAAOpM,EAAMhrB,MAAQob,UAAE4b,KAAKhM,EAAO,CAAC,UAAW,gBAAiB,eAGtElY,EAAI9G,KAAKoF,MAGH0B,EASRhZ,kBAAkBoF,GACjBkc,UAAE6c,OAAOj+B,KAAK80B,UAAU1vB,IACvB,GAAIA,EAAQ5E,KAAK4wB,IAAMlsB,EAGtB,OAFAlF,KAAKyd,SAAS0f,QAAQe,gBAAgB94B,GACtCpF,KAAKyd,SAAS2f,OAAOc,gBAAgB94B,IAC9B,KAYVtF,OAAOm9B,EAAU/3B,GAChB,IAAIE,EAAUpF,KAAKwa,IAAIyiB,EAAU/3B,GAC7BE,IACHpF,KAAKyd,SAAS0f,QAAQe,gBAAgB94B,GACtCpF,KAAKyd,SAAS2f,OAAOc,gBAAgB94B,GAErCk4B,GAAgBt9B,KAAK80B,SAAU1vB,MCpNlC,MAAML,qBAAEA,IAAyBwa,EAsQjC,OA/PA,MAaCzf,YAAY2d,EAAUwG,EAAQje,EAAMm4B,EAAOC,EAAiBC,EAAiBC,GAC5Et+B,KAAKyd,SAAWA,EAChBzd,KAAKikB,OAASA,EACdjkB,KAAKkkB,OAASzG,EAASyG,OACvBlkB,KAAKu+B,SAAW,IAAIF,EAAgB5gB,EAAUwG,EAAQqa,GACtDt+B,KAAKgG,KAAOA,EACZhG,KAAKm+B,MAAQA,EACbn+B,KAAKkY,SAAWlS,EAAKoU,WAAW,KAEhCpa,KAAKo+B,gBAAkBA,EAEvBp+B,KAAKw+B,UAAY,GAEjBx+B,KAAKy+B,eAAiB,GAYvB3+B,IAAIU,EAAM4E,EAASV,GAClB,MAAMg0B,EAAQ14B,KAAKw+B,UAAUlb,MAAKoU,GAAMA,EAAGl3B,MAAQA,GAAQk3B,EAAGtyB,QAAQY,MAAQZ,EAAQY,OACtF,GAAI0yB,EAEH,OADAA,EAAMhZ,OAAOhb,GACNg0B,EAGR,MAAMhB,EAAK,IAAI13B,KAAKo+B,gBAAgBp+B,KAAKyd,SAAUzd,KAAKikB,OAAQzjB,EAAM4E,EAASV,GAK/E,OAJA1E,KAAKw+B,UAAUxsB,KAAK0lB,GAEpB13B,KAAK0+B,oBAEEhH,EASR53B,WACC,OAAIE,KAAKw+B,UAAUtsB,OAAS,EACpBlS,KAAKw+B,UAAU,GAEhB,KAWR1+B,OAAO6X,EAAMuZ,GACZ,MAAMyN,EAAM3+B,KAAKu+B,SAASK,OAAOjnB,EAAMuZ,GACvC,IAAKyN,EAEJ,MAAM,IAAI55B,GAAqB,yCAA0C,IAAK,mBAAoB,CAAEw5B,gBAAiBv+B,KAAa,WAEnI,OAAO2+B,EAUR7+B,KAAKoxB,GAEJ,GAA8B,IAA1BlxB,KAAKw+B,UAAUtsB,OAClB,OAAO,KAIR,GAAIlS,KAAKkY,UAAYlY,KAAK6+B,WACzB,OAAO7+B,KAAK8+B,YAIb,GAA8B,IAA1B9+B,KAAKw+B,UAAUtsB,OAAc,CAEhC,MAAMkF,EAAOpX,KAAKw+B,UAAU,GAC5B,OAAIpnB,EAAK2nB,YACD3nB,EAED,KAIR,IAAuC,IAAnCpX,KAAKyd,SAASD,KAAKwhB,aAAwBh/B,KAAK6+B,WAAY,CAC/D,MAAMnH,EAAK13B,KAAK8+B,UAAU5N,GAC1B,GAAIwG,GAAMA,EAAGqH,YACZ,OAAOrH,EAGT,MAAMuH,EAASj/B,KAAKw+B,UAAUzZ,QAAO2S,GAAMA,EAAGqH,cAC9C,OAAqB,GAAjBE,EAAO/sB,OACH,KAEDlS,KAAK4+B,OAAOK,EAAQ/N,GAU5BpxB,UAAUoxB,GAET,GAAmC,IAA/BlxB,KAAKy+B,eAAevsB,OACvB,OAAO,KAIR,GAAmC,IAA/BlS,KAAKy+B,eAAevsB,OAAc,CAErC,MAAMkF,EAAOpX,KAAKy+B,eAAe,GACjC,OAAIrnB,EAAK2nB,YACD3nB,EAED,KAGR,MAAM6nB,EAASj/B,KAAKy+B,eAAe1Z,QAAO2S,GAAMA,EAAGqH,cACnD,OAAqB,GAAjBE,EAAO/sB,OACH,KAEDlS,KAAK4+B,OAAOK,EAAQ/N,GAS5BpxB,eACC,OAAoD,MAA7CE,KAAKw+B,UAAUlb,MAAKoU,GAAMA,EAAGqH,cASrCj/B,WACC,OAAOE,KAAKy+B,eAAevsB,OAAS,EAQrCpS,oBACCE,KAAKy+B,eAAiBz+B,KAAKw+B,UAAUzZ,QAAO2S,GAAMA,EAAG+C,QAStD36B,QACC,OAAOE,KAAKw+B,UAAUtsB,OAUvBpS,oBAAoBoF,GACnB,MAAMwyB,EAAK13B,KAAKw+B,UAAUlb,MAAKoU,GAAMA,EAAGtG,IAAMlsB,IAC9C,OAAIwyB,GAAMA,EAAGqH,YACLrH,EAED,KAUR53B,UAAUoF,GACT,OAAqD,MAA9ClF,KAAKw+B,UAAUlb,MAAKoU,GAAMA,EAAGtG,IAAMlsB,IAS3CpF,gBAAgBsF,GACfgc,UAAE6c,OAAOj+B,KAAKw+B,WAAW9G,IACxB,GAAIA,EAAGtyB,SAAWA,EAEjB,OADAsyB,EAAGwH,WACI,KAITl/B,KAAK0+B,oBASN5+B,eAAeoF,GACdkc,UAAE6c,OAAOj+B,KAAKw+B,WAAW9G,IACxB,GAAIA,EAAGtG,IAAMlsB,EAEZ,OADAwyB,EAAGwH,WACI,KAITl/B,KAAK0+B,sBCxNP,OAtCA,MAQC5+B,YAAY2d,EAAUwG,EAAQzjB,GAC7BR,KAAKyd,SAAWA,EAChBzd,KAAKikB,OAASA,EAEdjkB,KAAKoxB,GAAK5wB,EAAK4wB,GACfpxB,KAAKQ,KAAOA,EAEZR,KAAKy6B,MAAQj6B,EAAK4wB,KAAOnN,EAAO/e,OAChClF,KAAKm/B,OAAQ,EAGdr/B,WAUAi/B,kBACC,OAAO/+B,KAAKm/B,MAGbr/B,YCDD,OA7BA,cAA4Bs/B,GAW3Bt/B,YAAY2d,EAAUwG,EAAQzjB,EAAM4E,EAAS4rB,GAC5CjxB,MAAM0d,EAAUwG,EAAQzjB,GAExBR,KAAKoF,QAAUA,EACfpF,KAAKgxB,MAAQA,EASdlxB,OAAOkxB,GACNhxB,KAAKgxB,MAAQA,ICuOf,OA7PA,MAUClxB,YAAY2d,EAAUwG,EAAQoa,GAC7Br+B,KAAKyd,SAAWA,EAChBzd,KAAKikB,OAASA,EACdjkB,KAAKkkB,OAASzG,EAASyG,OACvBlkB,KAAKq+B,gBAAkBA,EAEvBr+B,KAAKo9B,OAAS,GAEdp9B,KAAKq/B,gBAAkBC,GAYxBx/B,IAAIU,EAAM4E,EAAS4rB,GAClB,MAAMrL,EAAYqL,EAAMhrB,KAClBu5B,EAAYvO,EAAMmN,OAAS/4B,EAAQY,KACzC,IAAI2R,EAAO3X,KAAKwa,IAAImL,EAAW4Z,GAC/B,IAAK5nB,EAAM,CACV,MAAM6nB,EAAkBxO,EAAMuN,UAAYtF,GAAWhmB,QAAQ+d,EAAMuN,WAAqCv+B,KAAKq+B,gBACvGC,EAAkBtN,EAAMsN,gBAAkBtN,EAAMsN,gBAAkBt+B,KAAKyd,SAASD,KAAK8gB,gBAE3F3mB,EAAO,IAAI8nB,GAAaz/B,KAAKyd,SAAUzd,KAAKikB,OAAQ0B,EAAW4Z,EAAWv/B,KAAKq/B,gBAAiBG,EAAiBlB,GACjHt+B,KAAKo9B,OAAOprB,KAAK2F,GAKlB,OAFAA,EAAKoE,IAAIvb,EAAM4E,EAAS4rB,GAEjBrZ,EAWR7X,IAAI6lB,EAAW4Z,GACd,OAAOv/B,KAAKo9B,OAAO9Z,MAAK3L,GAAQA,EAAK3R,MAAQ2f,GAAahO,EAAKwmB,OAASoB,IAWzEz/B,qBAAqB6lB,EAAWE,GAC/B,MAAM/M,EAAM,GAYZ,OAVA9Y,KAAKo9B,OAAOxjB,SAAQjC,IACnB,GAAKhC,GAAM8N,MAAMkC,EAAWhO,EAAK3R,QACnB,MAAV6f,GAAmC,GAAjBA,EAAO3T,SAA8C,GAA/B2T,EAAOvO,QAAQK,EAAKwmB,QAAc,CAE7E,MAAMzG,EAAK/f,EAAK+nB,OACZhI,GAAMA,EAAGqH,aACZjmB,EAAI9G,KAAK,CAAC0lB,EAAI/f,EAAKwmB,YAIfrlB,EAURhZ,UAAU6lB,GACT,OAAOvE,UAAEue,KAAK3/B,KAAKo9B,OAAOrY,QAAOpN,GAAQhC,GAAM8N,MAAMkC,EAAWhO,EAAK3R,QAAO2N,KAAIyD,GAAQA,EAAK+mB,SAW9Fr+B,gBAAgB6lB,EAAWia,GAC1B,MAAM9mB,EAAM,GAWZ,OAVA9Y,KAAKo9B,OAAOxjB,SAAQjC,IACdhC,GAAM8N,MAAMkC,EAAWhO,EAAK3R,QACf,MAAd45B,GAA2C,GAArBA,EAAW1tB,SAAmD,IAApC0tB,EAAWtoB,QAAQK,EAAKwmB,QAC3ExmB,EAAK6mB,UAAU5kB,SAAQ8d,IAClBA,EAAGqH,aACNjmB,EAAI9G,KAAK0lB,UAKNtW,UAAEye,OAAO/mB,EAAK,MAetBhZ,kBAAkBoxB,GACjB,MAAM4O,GAA0E,IAA5D,CAAC,YAAa,kBAAkBxoB,QAAQ4Z,EAAIM,WAC1DpB,EAASc,EAAIhsB,OAEb66B,EAAW,GAwBjB,OAtBA//B,KAAKo9B,OAAOxjB,SAAQjC,IACnB,GAAKhC,GAAM8N,MAAMyN,EAAIvL,UAAWhO,EAAK3R,QACd,MAAnBkrB,EAAIK,aAAiD,GAA1BL,EAAIK,YAAYrf,SAAwD,IAAzCgf,EAAIK,YAAYja,QAAQK,EAAKwmB,QAC1F,GAAI2B,EACHnoB,EAAK6mB,UAAU5kB,SAAQ8d,IACtB,GAAIA,EAAG+C,OAAS/C,EAAG1G,MAAMtuB,QAAS,CACjC,MAAMs9B,EAAS9O,EAAIsD,KAAKkD,GACxBsI,EAAO96B,OAASkrB,EAChB2P,EAAS/tB,KAAKhS,KAAKigC,iBAAiBD,YAGhC,CACN,MAAMtI,EAAK/f,EAAKmnB,YAChB,GAAIpH,GAAMA,EAAG1G,MAAMtuB,QAAS,CAC3B,MAAMs9B,EAAS9O,EAAIsD,KAAKkD,GACxBsI,EAAO96B,OAASkrB,EAChB2P,EAAS/tB,KAAKhS,KAAKigC,iBAAiBD,SAMjChgC,KAAKikB,OAAOjR,QAAQwZ,IAAIuT,GAUhCjgC,iBAAiBoxB,GAChB,OAAOA,EAAIe,SAASjB,MAAMtuB,QAAQwuB,GASnCpxB,gBAAgBsF,GACfpF,KAAKo9B,OAAOxjB,SAAQjC,IACnBA,EAAKumB,gBAAgB94B,MAWvBtF,OAAO6lB,EAAWzgB,GACjBlF,KAAKo9B,OAAOxjB,SAAQjC,IACfA,EAAK3R,MAAQ2f,GAChBhO,EAAKuoB,eAAeh7B,MAYvBpF,MAAK29B,UAAEA,GAAY,EAAKX,cAAEA,GAAgB,EAAKY,aAAEA,GAAe,EAAKyC,cAAEA,GAAgB,IACtF,IAAIrnB,EAAM,GA2CV,OAzCA9Y,KAAKo9B,OAAOxjB,SAAQjC,IAEnB,GAAI+lB,GAAgB,MAAM9iB,KAAKjD,EAAK3R,MACnC,OAED,GAAIy3B,IAAc9lB,EAAKknB,WACtB,OAED,GAAI/B,IAAkBnlB,EAAKyoB,eAC1B,OAED,IAAIhpB,EAAO,CACVpR,KAAM2R,EAAK3R,KACXm4B,MAAOxmB,EAAKwmB,MACZ7d,MAAO3I,EAAK2I,QAEZue,SAAUlnB,EAAKknB,WACfnE,UAAW/iB,EAAKyoB,gBAGjB,GAAIhpB,EAAKkJ,MAAQ,EAAG,CACnB,MAAMoX,EAAK/f,EAAK6mB,UAAU,GACtB9G,IACHtgB,EAAK4Z,MAAQ5P,UAAE4b,KAAKtF,EAAG1G,MAAO,CAAC,UAAW,gBAAiB,aAGzDmP,GACC/oB,EAAKkJ,MAAQ,IAChBlJ,EAAKonB,UAAY7mB,EAAK6mB,UAAU7qB,KAAI+jB,IAC5B,CACNxyB,OAAQwyB,EAAGl3B,KAAK4wB,GAChB+N,MAAOzH,EAAGyH,MACVzE,UAAWhD,EAAGl3B,KAAKk6B,eAMvB5hB,EAAI9G,KAAKoF,MAGH0B,IC7NT,OA/BA,cAA6BsmB,GAW5Bt/B,YAAY2d,EAAUwG,EAAQzjB,EAAM4E,EAASD,GAC5CpF,MAAM0d,EAAUwG,EAAQzjB,GAExBR,KAAKoF,QAAUA,EACfpF,KAAKmF,OAASA,EAEdnF,KAAKgG,KAAO,GAAGhG,KAAKoxB,MAAMpxB,KAAKmF,OAAOa,OASvClG,OAAOqF,GACNnF,KAAKmF,OAASA,IC4HhB,OArJA,MAUCrF,YAAY2d,EAAUwG,EAAQoa,GAC7Br+B,KAAKyd,SAAWA,EAChBzd,KAAKikB,OAASA,EACdjkB,KAAKkkB,OAASzG,EAASyG,OACvBlkB,KAAKq+B,gBAAkBA,EAEvBr+B,KAAKm9B,QAAU,IAAItoB,IAEnB7U,KAAKq/B,gBAAkBgB,GAWxBvgC,IAAIU,EAAM4E,EAASD,GAClB,IAAIwS,EAAO3X,KAAKm9B,QAAQ3iB,IAAIrV,EAAOa,MACnC,IAAK2R,EAAM,CACV,MAAM6nB,EAAkBr6B,EAAOo5B,UAAYtF,GAAWhmB,QAAQ9N,EAAOo5B,WAAqCv+B,KAAKq+B,gBACzGC,EAAkBn5B,EAAOm5B,gBAAkBn5B,EAAOm5B,gBAAkBt+B,KAAKyd,SAASD,KAAK8gB,gBAE7F3mB,EAAO,IAAI8nB,GAAaz/B,KAAKyd,SAAUzd,KAAKikB,OAAQ9e,EAAOa,KAAM,KAAMhG,KAAKq/B,gBAAiBG,EAAiBlB,GAC9Gt+B,KAAKm9B,QAAQxiB,IAAIxV,EAAOa,KAAM2R,GAK/B,OAFAA,EAAKoE,IAAIvb,EAAM4E,EAASD,GAEjBwS,EAUR7X,IAAIwgC,GACH,OAAOtgC,KAAKm9B,QAAQ3iB,IAAI8lB,GAUzBxgC,YAAYwgC,GACX,MAAM3oB,EAAO3X,KAAKm9B,QAAQ3iB,IAAI8lB,GAC9B,QAAI3oB,GACIA,EAAKyoB,eAWdtgC,gBAAgBsF,GACfpF,KAAKm9B,QAAQvjB,SAAQjC,IACpBA,EAAKumB,gBAAgB94B,MAWvBtF,OAAOwgC,EAAYp7B,GAClB,MAAMyS,EAAO3X,KAAKm9B,QAAQ3iB,IAAI8lB,GAC1B3oB,GACHA,EAAKuoB,eAAeh7B,GAWtBpF,MAAK29B,UAAEA,GAAY,EAAKX,cAAEA,GAAgB,EAAKY,aAAEA,GAAe,EAAKyC,cAAEA,GAAgB,IACtF,IAAIrnB,EAAM,GAyCV,OAvCA9Y,KAAKm9B,QAAQvjB,SAAQ,CAACjC,EAAMkC,KAC3B,GAAI6jB,GAAgB,MAAM9iB,KAAKf,GAC9B,OAED,GAAI4jB,IAAc9lB,EAAKknB,WACtB,OAED,GAAI/B,IAAkBnlB,EAAKyoB,eAC1B,OAED,IAAIhpB,EAAO,CACVpR,KAAM6T,EACNyG,MAAO3I,EAAK2I,QACZue,SAAUlnB,EAAKknB,WACfnE,UAAW/iB,EAAKyoB,gBAGjB,GAAIhpB,EAAKkJ,MAAQ,EAAG,CACnB,MAAMoX,EAAK/f,EAAK6mB,UAAU,GACtB9G,IACHtgB,EAAKjS,OAASic,UAAE4b,KAAKtF,EAAGvyB,OAAQ,CAAC,UAAW,gBAAiB,aAE3DiS,EAAKjS,SAAoC,IAA1BiS,EAAKjS,OAAO44B,YAE3BoC,GACC/oB,EAAKkJ,MAAQ,IAChBlJ,EAAKonB,UAAY7mB,EAAK6mB,UAAU7qB,KAAI+jB,IAC5B,CACNxyB,OAAQwyB,EAAGl3B,KAAK4wB,GAChB+N,MAAOzH,EAAGyH,MACVzE,UAAWhD,EAAGl3B,KAAKk6B,eAMvB5hB,EAAI9G,KAAKoF,OAGH0B,ICjJT,aAAQ2G,IAAYF,GAkdpB,OA3cA,MAQCzf,YAAYmkB,GACXjkB,KAAKikB,OAASA,EACdjkB,KAAKutB,QAAUtJ,EAAOsJ,QACtBvtB,KAAKkkB,OAASD,EAAO4H,UAAU,YAE/B7rB,KAAKwd,KAAOpH,OAAOqL,OAAO,GAAIwC,EAAOzT,QAAQiN,UAE7Czd,KAAKq+B,gBAAkBpF,GAAWhmB,QAAQjT,KAAKwd,KAAK+gB,UACpDv+B,KAAKkkB,OAAOuB,KAAK,aAAazlB,KAAKq+B,gBAAgBr4B,MAEnDhG,KAAK0tB,WAAa4N,GAAYroB,QAAQjT,KAAKwd,KAAKkQ,YAChD1tB,KAAKkkB,OAAOuB,KAAK,eAAezlB,KAAKikB,OAAOoI,mBAAmBrsB,KAAK0tB,aAEpE1tB,KAAKm3B,MAAQ,IAAIoJ,GAAYvgC,KAAMikB,GACnCjkB,KAAK80B,SAAW,IAAI0L,GAAexgC,KAAMikB,GACzCjkB,KAAKm9B,QAAU,IAAIsD,GAAczgC,KAAMikB,EAAQjkB,KAAKq+B,iBACpDr+B,KAAKo9B,OAAS,IAAIsD,GAAa1gC,KAAMikB,EAAQjkB,KAAKq+B,iBAElDr+B,KAAK+uB,2BACL/uB,KAAK08B,gBAGN58B,KAAKmkB,GACJjkB,KAAK0tB,WAAW/a,KAAK3S,MAGtBF,OACC,OAAOE,KAAK0tB,WAAWra,OAMxBvT,2BACME,KAAKikB,OAAO+K,qBAEjBhvB,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOvU,+BAAgC9G,KAAMqb,GAAO/Y,WAAYgX,YAAa,+BAC3G1d,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOtU,sCAAuC/G,KAAMqb,GAAO/Y,WAAYgX,YAAa,2BAClH1d,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOrU,kCAAmChH,KAAMqb,GAAO/Y,WAAYgX,YAAa,kCAC9G1d,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOpU,2CAA4CjH,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,WAAYD,YAAa,gCAChJ1d,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOnU,iCAAkClH,KAAMqb,GAAO/Y,WAAYgX,YAAa,iCAC7G1d,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOlU,0CAA2CnH,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,UAAWD,YAAa,+BAC9I1d,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOjU,gCAAiCpH,KAAMqb,GAAO/Y,WAAYgX,YAAa,gCAC5G1d,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOhU,yCAA0CrH,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,SAAUD,YAAa,+BAM7I5d,gBACC,IAAKE,KAAKikB,OAAO+K,mBAAoB,OAErChvB,KAAKutB,QAAQ5S,IAAI8E,GAAOvU,+BAAgClL,KAAKm3B,MAAM7W,SACnEtgB,KAAKutB,QAAQ5S,IAAI8E,GAAOtU,sCAAuCnL,KAAKm3B,MAAMwJ,eAE1E,MAAM7L,EAAW90B,KAAK80B,SAASnd,KAAK,CAAEkmB,UAAU,EAAMJ,WAAW,EAAOX,eAAe,EAAOY,cAAc,EAAOC,aAAa,EAAOC,YAAY,IACnJ59B,KAAKutB,QAAQ5S,IAAI8E,GAAOrU,kCAAmC0pB,EAAS5iB,QACpE4iB,EAASlb,SAAQyjB,GAAOr9B,KAAKutB,QAAQ5S,IAAI8E,GAAOpU,2CAA4CgyB,EAAIlG,MAAQkG,EAAIlG,MAAMjlB,OAAS,EAAG,CAAE9M,QAASi4B,EAAIJ,aAE7I,MAAME,EAAUn9B,KAAKm9B,QAAQxlB,KAAK,CAAEwoB,eAAe,IACnDngC,KAAKutB,QAAQ5S,IAAI8E,GAAOnU,iCAAkC6xB,EAAQjrB,QAClEirB,EAAQvjB,SAAQxC,GAAQpX,KAAKutB,QAAQ5S,IAAI8E,GAAOlU,0CAA2C6L,EAAKonB,UAAYpnB,EAAKonB,UAAUtsB,OAAS,EAAG,CAAE/M,OAAQiS,EAAKpR,SAEtJ,MAAMo3B,EAASp9B,KAAKo9B,OAAOzlB,KAAK,CAAEwoB,eAAe,IACjDngC,KAAKutB,QAAQ5S,IAAI8E,GAAOjU,gCAAiC4xB,EAAOlrB,QAChEkrB,EAAOxjB,SAAQxC,GAAQpX,KAAKutB,QAAQ5S,IAAI8E,GAAOhU,yCAA0C2L,EAAKonB,UAAYpnB,EAAKonB,UAAUtsB,OAAS,EAAG,CAAE8e,MAAO5Z,EAAKpR,SASpJlG,qBAAqBu9B,GACpB,IAAKr9B,KAAK80B,SAAShZ,IAAIuhB,EAAIJ,SAAUj9B,KAAKikB,OAAO/e,QAAS,CACzD,MAAME,EAAUpF,KAAK80B,SAAS/Y,IAAI/b,KAAKm3B,MAAM1B,UAAW4H,GAAK,GAEzDA,EAAIF,SACPn9B,KAAK4gC,gBAAgB5gC,KAAKm3B,MAAM1B,UAAWrwB,EAASi4B,EAAIF,SAErDE,EAAID,QACPp9B,KAAK6gC,eAAe7gC,KAAKm3B,MAAM1B,UAAWrwB,EAASi4B,EAAID,QAExDp9B,KAAKm3B,MAAM1B,UAAUX,SAAS9iB,KAAK5M,GAEnCpF,KAAK8gC,uBAAuB9gC,KAAKikB,OAAOgN,SAExCjxB,KAAKkkB,OAAOuB,KAAK,IAAI4X,EAAIr3B,gCAEzBhG,KAAKikB,OAAO8c,iBAAgB,GAC5B/gC,KAAK08B,iBAWP58B,iBAAiBU,EAAMwgC,GACtBA,EAAYpnB,SAAQyjB,IAInB,IAAI4D,EAAaC,EAHZ7D,EAAIJ,WACRI,EAAIJ,SAAWj9B,KAAKikB,OAAOkd,eAAeC,qBAAqB/D,EAAIr3B,KAAMq3B,EAAIh9B,UAG9E,IAAI+E,EAAUpF,KAAK80B,SAASta,IAAI6iB,EAAIJ,SAAUz8B,EAAK4wB,IAC9ChsB,GAGJ67B,EAAc7qB,OAAOqL,OAAO,GAAIrc,EAAQ+3B,SACxC+D,EAAa9qB,OAAOqL,OAAO,GAAIrc,EAAQg4B,QACvCh4B,EAAQsa,OAAO2d,IAJfj4B,EAAUpF,KAAK80B,SAAS/Y,IAAIvb,EAAM68B,GAAK,GAQpCA,EAAIF,SACPn9B,KAAK4gC,gBAAgBpgC,EAAM4E,EAASi4B,EAAIF,SAIrC8D,GACH7f,UAAE0c,MAAMmD,GAAa,CAAC97B,EAAQa,KACxBq3B,EAAIF,SAAYE,EAAIF,QAAQn3B,IAChChG,KAAKqhC,iBAAiB7gC,EAAMwF,MAM3Bq3B,EAAID,QACPp9B,KAAK6gC,eAAergC,EAAM4E,EAASi4B,EAAID,QAIpC8D,GACH9f,UAAE0c,MAAMoD,GAAY,CAAClQ,EAAOhrB,KACtBq3B,EAAID,QAAWC,EAAID,OAAOp3B,IAC9BhG,KAAKshC,gBAAgB9gC,EAAMwF,SAQVyQ,MAAMmJ,KAAK5f,KAAK80B,SAASA,UACjClb,SAAQxU,IACpB,GAAIA,EAAQ5E,MAAQA,EAAM,OAE1B,IAAI+gC,GAAQ,EACZP,EAAYpnB,SAAQyjB,IACfj4B,EAAQo4B,OAAOH,EAAIJ,YACtBsE,GAAQ,MAILA,GACJvhC,KAAKwhC,kBAAkBp8B,EAAQ63B,SAAUz8B,EAAK4wB,OAIhDpxB,KAAKikB,OAAO8c,iBAAgB,GAC5B/gC,KAAK08B,gBAiBN58B,sBAAsBqF,EAAQ3E,GAC7B,OAAyB,MAArB2E,EAAOs8B,YAA2C,aAArBt8B,EAAOs8B,YAAkD,UAArBt8B,EAAOs8B,cAGnD,aAArBt8B,EAAOs8B,aAA6BjhC,EAAKi6B,OAc9C36B,gBAAgBU,EAAM4E,EAAS+3B,GAC9B/b,UAAE0c,MAAMX,GAASh4B,IAEXnF,KAAK0hC,sBAAsBv8B,EAAQ3E,KAGpCA,EAAKi6B,MACRt1B,EAAOzC,QAAU1C,KAAKikB,OAAO0d,YAAYC,YAAY,cAAez8B,EAAOzC,QAASyC,GAC1EnF,KAAKikB,OAAOqS,UACtBnxB,EAAOzC,QAAU1C,KAAKikB,OAAO0d,YAAYC,YAAY,eAAgB5hC,KAAKikB,OAAOqS,QAAQtC,QAAQ/wB,KAAKjD,KAAKikB,OAAOqS,SAAU,IAAKnxB,EAAQC,QAAAA,KAEtIpF,KAAKikB,OAAOzT,QAAQokB,iBAAmB50B,KAAKikB,OAAOqS,UACtDnxB,EAAO08B,cAAgB7hC,KAAKikB,OAAO0d,YAAYC,YAAY,eAAgB5hC,KAAKikB,OAAOqS,QAAQtC,QAAQ/wB,KAAKjD,KAAKikB,OAAOqS,SAAU,IAAKnxB,EAAQC,QAAAA,KAEhJpF,KAAKm9B,QAAQphB,IAAIvb,EAAM4E,EAASD,GAChCC,EAAQ08B,UAAU38B,OAWpBrF,4BAA4BqF,GAC3B,OAAO,IAAIk7B,GAAergC,KAAMA,KAAKikB,OAAQjkB,KAAKm3B,MAAM1B,UAAWtwB,EAAOC,QAASD,GAWpFrF,WAAWm9B,EAAU/3B,GACpB,OAAOlF,KAAK80B,SAAShZ,IAAImhB,EAAU/3B,GAUpCpF,mBAAmBwgC,GAClB,OAAOtgC,KAAKm9B,QAAQ3iB,IAAI8lB,GAWzBxgC,0BAA0BwgC,EAAYp7B,GACrC,MAAMyS,EAAO3X,KAAKm9B,QAAQ3iB,IAAI8lB,GAC9B,GAAI3oB,EACH,OAAOA,EAAKoqB,oBAAoB78B,GAUlCpF,kBAAkBm9B,EAAU/3B,GAC3BlF,KAAK80B,SAASmJ,OAAOhB,EAAU/3B,GAAUlF,KAAKikB,OAAO/e,QAEhDA,GAAUA,GAAUlF,KAAKikB,OAAO/e,QACpClF,KAAK8gC,wBAAuB,GAU9BhhC,yBAAyBoF,GACxBlF,KAAK80B,SAASkN,kBAAkB98B,GAUjCpF,iBAAiBU,EAAM8/B,GACtBtgC,KAAKm9B,QAAQc,OAAOqC,EAAY9/B,EAAK4wB,IAWtCtxB,eAAeU,EAAM4E,EAASg4B,GAC7Bhc,UAAE0c,MAAMV,GAAQpM,IAEXxwB,EAAKi6B,QACRzJ,EAAMtuB,QAAU1C,KAAKikB,OAAO0d,YAAYC,YAAY,aAAc5Q,EAAMtuB,QAASsuB,IAElFhxB,KAAKo9B,OAAOrhB,IAAIvb,EAAM4E,EAAS4rB,GAC/B5rB,EAAQ68B,SAASjR,MAWnBlxB,gBAAgBU,EAAMmlB,GACrB3lB,KAAKo9B,OAAOa,OAAOtY,EAAWnlB,EAAK4wB,IAQpCtxB,uBAAuBoiC,GACtB,IAAI1hC,EAAOR,KAAKm3B,MAAM1B,UAClByM,GACH1hC,EAAK+xB,MAEN,MAAMsJ,EAAUza,UAAE9B,KAAK9e,EAAM,CAAC,SAAU,WAAY,aAAc,SAAU,SAAU,OAAQ,MAAO,aASrG,OARIR,KAAKikB,OAAOgN,QACf4K,EAAQ/G,SAAW90B,KAAK80B,SAASqN,uBAEjCtG,EAAQ/G,SAAW,GAGpBt0B,EAAKq7B,QAAUlmB,GAAMuF,aAAa2gB,EAAS77B,KAAKikB,OAAOzT,SAEhDhQ,EAAKq7B,QASb/7B,iBAAiBsiC,GAChB,OAAIA,IAAUpiC,KAAKm3B,MAAM1B,UAAUoG,QAC3B77B,KAAK8gC,yBAEN9gC,KAAKm3B,MAAM1B,UAAUoG,QAS7B/7B,YAAYoF,GACX,MAAM1E,EAAOR,KAAKm3B,MAAM3c,IAAItV,GAC5B,OAAK1E,EAGDA,EAAKi6B,MACDz6B,KAAKo7B,mBAEN56B,EAAKq7B,QALJ,KAeT/7B,gBAAgBwE,GACf,OAAOtE,KAAKm3B,MAAM4D,gBAAgBz2B,GAUnCxE,YAAY0d,GACX,OAAOxd,KAAKm3B,MAAMxf,KAAK6F,GAUxB1d,eAAe0d,GACd,OAAOxd,KAAK80B,SAASnd,KAAK6F,GAU3B1d,cAAc0d,GACb,OAAOxd,KAAKm9B,QAAQxlB,KAAK6F,GAU1B1d,aAAa0d,GACZ,OAAOxd,KAAKo9B,OAAOzlB,KAAK6F,GASzB1d,iBACC,OAAOE,KAAKm3B,MAAMqD,UAAU7mB,KAAInT,GAAQA,EAAKq7B,eCpdrBtc,kBCH1B,YAAQkE,YAAOxN,YAAUH,IAAayJ,GAStC,MAAM8iB,GAQLviC,YAAY0d,GACXxd,KAAKwd,KAAO4D,UAAEsC,aAAalG,EAAM,CAChC5X,MAAO,OACP08B,aAAc,OAEftiC,KAAKgT,QAAUA,QAQhBlT,KAAKyiC,GACJviC,KAAKuiC,cAAgBA,EACrBviC,KAAKikB,OAASjkB,KAAKuiC,cAActe,OACjCjkB,KAAKgT,QAAUhT,KAAKikB,OAAOjR,QAM5BlT,OACC,OAAOE,KAAKgT,QAAQC,UAGrBnT,YAAY0iC,GACXA,EAAMA,EAAMA,EAAIC,cAAgB,GAEhC,MAAM78B,EAAQ5F,KAAKwd,KAAK5X,MACxB,GAAIkQ,GAASlQ,GACZ,OAAOA,EAER,GAAIqQ,GAASrQ,GAAQ,CACpB,GAAIA,EAAM48B,GACT,OAAO58B,EAAM48B,GAGd,MAAM3oB,EAAMzD,OAAOqD,KAAK7T,GAAO0d,MAAKof,GAAKjf,GAAM+e,EAAKE,IAAY,OAANA,IAC1D,GAAI7oB,EACH,OAAOjU,EAAMiU,GACT,GAAIjU,EAAM,MACd,OAAOA,EAAM,MAKf,OAAO,KAGR9F,gBACC,OAAO,MAITuiC,GAAWM,OAtEI,CAAC,QAAS,QAAS,OAAQ,OAAQ,QAAS,SAwE3D,OAAiBN,GCrEjB,eAAQpsB,cAAUL,IAAe2J,GA0LjC,OAtKA,cAA8B8iB,GAO7BviC,YAAY0d,GACXzd,MAAMyd,GAENxd,KAAKwd,KAAO4D,UAAEsC,aAAa1jB,KAAKwd,KAAM,CACrC+G,QAAQ,EACRqe,cAAc,EACdC,UAAW,OACXC,cAAe,KACfC,aAAa,IAGd/iC,KAAKgjC,gBAAkB,EAGxBljC,KAAKyiC,GACJxiC,MAAM4S,KAAK4vB,GAENviC,KAAKwd,KAAK+G,SACdxJ,UAAMhJ,SAAU,GAEjB/R,KAAK8iC,cAAgB9iC,KAAKwd,KAAKslB,cAAgB9iC,KAAKwd,KAAKslB,cAAgB5sB,GAAK+sB,UAAKC,QAAQhtB,EAAG,CAAEitB,YAAY,EAAOC,MAAO,EAAG7e,OAAQxJ,UAAMhJ,QAASsxB,YAAajhC,OAAOkhC,oBAGxKtjC,KAAKujC,cAAgBlB,GAAWM,OAAOtwB,QAAO,CAACsE,EAAG/Q,KACjD+Q,EAAE/Q,GAhDL,SAAkBxB,GACjB,OAAOA,GACN,IAAK,QAAS,OAAO2W,UAAMyoB,MAAMC,QACjC,IAAK,QAAS,OAAO1oB,UAAMyoB,IAC3B,IAAK,OAAQ,OAAOzoB,UAAMC,OAC1B,IAAK,QAAS,OAAOD,UAAM+J,QAC3B,IAAK,QAAS,OAAO/J,UAAM6J,KAC3B,QAAS,OAAO7J,UAAMwK,OAyCVme,CAAS99B,EAAT89B,CAAgBtiB,UAAEuiB,OAAO/9B,EAAM68B,cAAe,IAClD9rB,IACL,IAEC3W,KAAKwd,KAAK+G,SAAqC,IAA3BvkB,KAAKwd,KAAKolB,eACjC5iC,KAAKwd,KAAKolB,aAAe,CACxB,SAAU,cACV,OAAQ,YACR,QAAS,aACT,UAAW,eACX,OAAQ,cAWX9iC,aAAa0iC,GACZ,GAAIxiC,KAAKwd,KAAK+G,QAAU9N,MAAMiK,QAAQ1gB,KAAKwd,KAAKolB,cAAe,CAE9D,IAAI1kB,EAAO,EAEX,IAAK,IAAIxJ,EAAI,EAAGA,EAAI8tB,EAAItwB,OAAQwC,IAC/BwJ,GAASA,GAAQ,GAAKA,EAAQskB,EAAIoB,WAAWlvB,GAC7CwJ,GAAQ,EAGT,OAAOle,KAAKwd,KAAKolB,aAAa9gC,KAAKud,IAAInB,GAAQle,KAAKwd,KAAKolB,aAAa1wB,QAGvE,MAAO,OAGRpS,QAAQma,GACP,OAAIja,KAAKwd,KAAKulB,YACN,IAAIc,OAAO7jC,KAAKgjC,gBAAkB/oB,GAEnC,GAORna,aAAagkC,GACZ,MAAMjB,EAAY7iC,KAAKwd,KAAKqlB,UAEtBL,EAAOsB,GAAYA,EAAStB,IAAOsB,EAAStB,IAAIC,cAAgB,GAEhEsB,EADI/jC,KAAKgkC,aAAaxB,GACLrmB,MAAM,KAAK9J,QAAO,CAACsE,EAAE3B,IAAM2B,EAAE3B,IAAM2B,IAAI3B,IAAI+F,UAA7CkpB,CAAoDzB,GACnE0B,EAAkBJ,EAAW/oB,UAAMuK,KAAKwe,EAAS5+B,OAAS,KAAO6+B,EAAe,GAEhFI,EAAYxhC,GACVA,EAAKgR,KAAI0E,GACXpC,GAASoC,IAAM5B,MAAMiK,QAAQrI,GACzBrY,KAAK8iC,cAAczqB,GACpBA,IAIT,GAAIzC,GAAWitB,GACd,MAAO,CAACz+B,EAAMzB,IAASkgC,EAAUnsB,KAAK1W,KAAMoE,EAAMzB,EAAMmhC,EAAU,CAAEK,UAAAA,IAE9D,GAAiB,QAAbtB,EAGV,OADA9nB,UAAMhJ,SAAU,EACT,CAAC3N,EAAMzB,IAAS,CAACyY,KAAKE,UAAU,CAAE8oB,GAAI/iC,KAAKC,MAAOsE,MAAOxB,EAAMa,IAAKk/B,EAAUxhC,GAAM6Z,KAAK,QAASsnB,KACnG,GAAiB,WAAbjB,EAGV,OADA9nB,UAAMhJ,SAAU,EACT,CAAC3N,EAAMzB,KACb,MAAMmW,EAAM,CACXlH,MAAM,IAAIvQ,MAAO8oB,cACjBvkB,MAAOxB,EACPK,QAAS,MACNq/B,GAUJ,OARInhC,EAAKuP,OAAS,IACM,iBAAZvP,EAAK,IACfyT,OAAOqL,OAAO3I,EAAKnW,EAAK,IACxBmW,EAAIrU,QAAU0/B,EAAUxhC,EAAK4W,MAAM,IAAIiD,KAAK,MAE5C1D,EAAIrU,QAAU0/B,EAAUxhC,GAAM6Z,KAAK,MAG9B,CAACpB,KAAKE,UAAUxC,KAElB,GAAiB,UAAb+pB,EAEV,MAAO,CAACz+B,EAAMzB,IAAS,CAAC3C,KAAKujC,cAAcn/B,GAAO,OAAQ+/B,EAAUxhC,IAC9D,GAAiB,SAAbkgC,EAAsB,CAEhC,MAAMwB,EAAY,GAAKP,EAAStB,IAAItwB,OAEpC,OADAlS,KAAKgjC,gBAAkBlhC,KAAKwgB,IAAI+hB,EAAWrkC,KAAKgjC,iBACzC,CAAC5+B,EAAMzB,IAAS,CAACoY,UAAMuK,KAAK,KAAI,IAAIjkB,MAAO8oB,cAAcma,OAAO,QAAStkC,KAAKujC,cAAcn/B,GAAO2/B,EAAe/jC,KAAKukC,QAAQF,GAAatpB,UAAMuK,KAAK,QAAS6e,EAAUxhC,IAC3K,GAAiB,QAAbkgC,EAAqB,CAE/B,MAAMwB,EAAY,GAAKP,EAAS5+B,OAAOgN,OAAS4xB,EAAStB,IAAItwB,OAE7D,OADAlS,KAAKgjC,gBAAkBlhC,KAAKwgB,IAAI+hB,EAAWrkC,KAAKgjC,iBACzC,CAAC5+B,EAAMzB,IAAS,CAACoY,UAAMuK,KAAK,KAAI,IAAIjkB,MAAO8oB,kBAAmBnqB,KAAKujC,cAAcn/B,GAAO8/B,EAAkBlkC,KAAKukC,QAAQF,GAAatpB,UAAMuK,KAAK,QAAS6e,EAAUxhC,IAIzK,MAAO,CAACyB,EAAMzB,KACb,MAAM4b,GAAY,IAAIld,MAAO8oB,cAC7B,MAAO,CAACnqB,KAAKwkC,OAAO3B,EAAW,CAC9BtkB,UAAWxD,UAAMuK,KAAK/G,GACtB3M,KAAMmJ,UAAMuK,KAAK/G,EAAU+lB,OAAO,KAElC1+B,MAAO5F,KAAKujC,cAAcn/B,GAC1Bc,OAAQ6V,UAAMuK,KAAKwe,EAAS5+B,QAC5Bs9B,IAAKuB,EACL9+B,IAAKk/B,EAAUxhC,GAAM6Z,KAAK,SAa9B1c,OAAO2kC,EAAKtpB,GACX,OAAOspB,EAAIhqB,QAAQ,oBAAoB,CAACgJ,EAAOzG,IAAM7B,EAAI6B,IAAM,OChIjE,OAhDA,cAA4B0nB,GAO3B5kC,YAAY0d,GACXzd,MAAMyd,GAENxd,KAAKgjC,gBAAkB,EAGxBljC,KAAKyiC,GACJxiC,MAAM4S,KAAK4vB,GAENviC,KAAKwd,KAAK+G,SACdxJ,UAAMhJ,SAAU,GAOlBjS,cAAcgkC,GACb,MAAMl+B,EAAQk+B,EAAW9jC,KAAK2kC,YAAYb,EAAStB,KAAO,KAC1D,IAAK58B,EACJ,OAAO,KAER,MAAMg/B,EAAWF,GAAgB/B,OAAOrrB,QAAQ1R,GAC1Ci9B,EAAY7iC,KAAK6kC,aAAaf,GAEpC,MAAO,CAAC1/B,EAAMzB,KAEb,GADgB+hC,GAAgB/B,OAAOrrB,QAAQlT,GACjCwgC,EAAU,OAExB,MAAME,EAAQjC,EAAUz+B,EAAMzB,GAC9B,OAAOyB,GACN,IAAK,QACL,IAAK,QAAS,OAAOyW,QAAQkW,SAAS+T,GACtC,IAAK,OAAQ,OAAOjqB,QAAQC,QAAQgqB,GACpC,QAAS,OAAOjqB,QAAQmK,OAAO8f,OCpDnC,eAAQ7uB,YAAUH,IAAayJ,uBACvBzZ,IAAuB6c,EAGzBoiB,GAAU,MACfriB,GACAsiB,UAAWniB,GAEXoiB,OAAQliB,GACRkD,QAAShD,GACTmD,QAASjD,GACT+hB,MAAO7e,GACP8e,KAAM5e,GACN6e,OAAQ3e,GACR4e,KAAMC,GACNC,QAASC,GAET7C,OAAQjgB,GAAKigB,QAGd,SAASpf,GAAUvd,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIqd,EAAIjN,OAAOqD,KAAKsrB,IAASzhB,MAAKD,GAAKA,EAAE3L,eAAiB1R,EAAK0R,gBAC/D,OAAI2L,EACI0hB,GAAQ1hB,QADhB,EAkCD,OAAiBjN,OAAOqL,OAAOsjB,GAAS,SAvBxC,SAAiBre,GAChB,GAAIA,aAAeqe,GAAQriB,KAC1B,OAAOgE,EACD,GAAI5Q,GAAS4Q,GAAM,CACzB,IAAI+e,EAAcliB,GAAUmD,GAC5B,GAAI+e,EACH,OAAO,IAAIA,OAEN,GAAIxvB,GAASyQ,GAAM,CACzB,IAAI+e,EAAcliB,GAAUmD,EAAItiB,MAChC,GAAIqhC,EACH,OAAO,IAAIA,EAAY/e,EAAIlW,SAE3B,MAAM,IAAI1K,GAAmB,wCAAwC4gB,EAAItiB,QAAS,CAAEA,KAAMsiB,EAAItiB,OAGhG,MAAM,IAAI0B,GAAmB,kCAAkC4gB,KAAQ,CAAEtiB,KAAMsiB,cAGhF,SAAkB1gB,EAAMyM,GACvBsyB,GAAQ/+B,GAAQyM,KCxDjB,oBAAQ0D,YAAeL,IAAayJ,GAG9BmmB,GAAO,OACPC,GAAM5iC,EAAQ4iC,MA4JpB,OArJA,MAKC7lC,YAAYmkB,GACXjkB,KAAKikB,OAASA,EACdjkB,KAAK4lC,UAAY,GACjB5lC,KAAK2Z,MAAQ,IAAI9E,IAMlB/U,KAAK0d,GACJxd,KAAKwd,KAAOA,EAEZ,MAAMqoB,EAAiB7lC,KAAKikB,OAAOzT,QAAQs1B,UAAY,QAE1C,IAATtoB,GAA0B,MAARA,EAErBxd,KAAK4lC,UAAY,IAEE,IAATpoB,GAAiBA,IAAS3C,QAEpC7a,KAAK4lC,UAAY,CAACb,GAAQ9xB,QAAQ,CACjC7O,KAAM,UACNoM,QAAS,CACR5K,MAAOigC,OAKJpvB,MAAMiK,QAAQlD,KAClBA,EAAO,CAACA,IAGTxd,KAAK4lC,UAAYxkB,UAAE+K,QAAQ3O,GAAM7J,KAAIuC,GAEhCJ,GAASI,GACL6uB,GAAQ9xB,QAAQ,CAAE7O,KAAM8R,EAAG1F,QAAS,CAAE5K,MAAOigC,KAGjD1vB,GAAcD,GACV6uB,GAAQ9xB,QAAQmO,UAAEsC,aAAa,GAAIxN,EAAG,CAAE1F,QAAS,CAAE5K,MAAOigC,MAG3Dd,GAAQ9xB,QAAQiD,MAKzBlW,KAAK4lC,UAAUhsB,SAAQmsB,GAAOA,EAAIpzB,KAAK3S,QAMxCF,OACC,OAAOE,KAAKikB,OAAOjR,QAAQwZ,IAAIxsB,KAAK4lC,UAAUjyB,KAAIqyB,GAAYA,EAAS3yB,UAMxEvT,qBACC,MAAMmmC,EAAqBvkC,MAAMwkC,kBACjCxkC,MAAMwkC,kBAAoB,CAAC9kB,EAAGhb,IAAUA,EACxC,MAAMA,GAAQ,IAAI1E,OAAQ0E,MAG1B,GAFA1E,MAAMwkC,kBAAoBD,EAEtB7/B,EAAM8L,OAAS,EAAG,CACrB,MAAMi0B,EAAO//B,EAAM,GACnB,MAAO,CACNoT,SAAU2sB,EAAKC,cAAcjsB,UAAUwrB,GAAIzzB,OAAS,GACpDm0B,WAAYF,EAAKG,gBACjBC,aAAcJ,EAAKK,kBACnBC,WAAYN,EAAKO,gBACjBC,aAAcR,EAAKS,oBAatB9mC,UAAUgkC,GACT,IAAI5f,EAASlkB,KAAK2Z,MAAMa,IAAIxa,KAAK6mC,eAAe/C,IAChD,GAAI5f,EAAQ,OAAOA,EAEnBA,EAAS,GACT,MAAMD,EAASjkB,KAAKikB,OACd2hB,EAAY5lC,KAAK4lC,UAEjBkB,EAAc1lB,UAAE+K,QAAQyZ,EAAUjyB,KAAIoyB,GAAOA,EAAIgB,cAAcjD,MA+BrE,OA7BAiB,GAAQpC,OAAO/oB,SAASxV,IACvB,GAA0B,GAAtB0iC,EAAY50B,OACf,OAAOgS,EAAO9f,GAAQshC,GAEvBxhB,EAAO9f,GAAQ,YAAYzB,GAI1B,GAHIshB,EAAO0d,aAAe1d,EAAO0d,YAAYqF,gBAAgBC,aAC5DhjB,EAAO0d,YAAYuF,iBAAiB,cAAe,CAAC9iC,EAAMzB,EAAMmhC,GAAW,IAElD,GAAtBgD,EAAY50B,OAEhB,IAAI,IAAIwC,EAAI,EAAGA,EAAIoyB,EAAY50B,OAAQwC,IACtCoyB,EAAYpyB,GAAGtQ,EAAMzB,OAaxBuhB,EAAO0hB,UAAYA,EAGnB5lC,KAAK2Z,MAAMgB,IAAI3a,KAAK6mC,eAAe/C,GAAW5f,GAEvCA,EASRpkB,eAAegkC,GACd,OAAKA,EAEE,CAAC,SAAU,KAAM,OACtBnwB,KAAIkG,GAAOiqB,EAASjqB,KACpB2C,KAAK,KAJe,KCxJxB,MAAMlX,gBAAEA,IAAoBia,EA8F5B,OA3FA,MAECzf,YAAY0d,GACXxd,KAAKwd,KAAO4D,UAAEsC,aAAalG,EAAM,CAChC2pB,UAAW,WAIbrnC,KAAKmkB,GACJjkB,KAAKikB,OAASA,EAQfnkB,UACC,MAAM,IAAI4B,MAAM,mBASjB5B,WACC,MAAM,IAAI4B,MAAM,mBAUjB5B,2BACC,MAAM,IAAI4B,MAAM,mBAQjB5B,WAAWmkB,GACV,MAAMvkB,EAAOM,KACPmnC,EAAYnnC,KAAKwd,KAAK2pB,UAE5B,MAAO,CACNnhC,KAAM,YACNohC,YAAa,SAA6B1kC,EAASyC,GAElD,GAAIA,EAAOgiC,IAA2C,iBAAtBhiC,EAAOgiC,GAAyB,CAC/D,MAAME,EAAQ3nC,EAAK4nC,QAAQniC,EAAOgiC,IAClC,OAAO,SAA+BjW,GACrC,IAAIpY,EAAMuuB,EAAoB,MAAdnW,EAAIkB,OAAiBlB,EAAIkB,OAAS,IAClD,OAAY,IAARtZ,EACIpW,EAAQwuB,IAEfpY,EAAMA,EAAInF,KAAIjP,GAAQ0R,OAAOqL,OAAO/c,EAAM,CAAEQ,OAAQgsB,EAAIhsB,OAAQC,OAAQ+rB,EAAI/rB,OAAOa,SAC5Eie,EAAOjR,QAAQE,OAAO,IAAI5N,GAAgB,+BAAgC,KAAMwT,MAI1F,OAAOpW,GAGR6kC,WAAY,SAA6B7kC,EAASsuB,GAEjD,GAAIA,EAAMmW,IAA0C,iBAArBnW,EAAMmW,GAAyB,CAC7D,MAAME,EAAQ3nC,EAAK4nC,QAAQtW,EAAMmW,IACjC,OAAO,SAA+BjW,GACrC,IAAIpY,EAAMuuB,EAAoB,MAAdnW,EAAIkB,OAAiBlB,EAAIkB,OAAS,IAClD,OAAY,IAARtZ,EACIpW,EAAQwuB,IAEfpY,EAAMA,EAAInF,KAAIjP,GAAQ0R,OAAOqL,OAAO/c,EAAM,CAAEQ,OAAQgsB,EAAIhsB,OAAQ8rB,MAAOE,EAAIF,MAAMhrB,SAC1Eie,EAAOjR,QAAQE,OAAO,IAAI5N,GAAgB,+BAAgC,KAAMwT,MAI1F,OAAOpW,MCtFX,sBAAQ4C,IAAoBia,EA6C5B,OA1CA,cAAgCioB,GAE/B1nC,YAAY0d,GACXzd,MAAMyd,GACNxd,KAAKynC,UAAY,IAAIC,UAAU1nC,KAAKwd,MAQrC1d,QAAQ6nC,GACP,OAAO3nC,KAAKynC,UAAUH,QAAQK,GAS/B7nC,SAASsyB,EAAQuV,GAChB,MAAM7uB,EAAM9Y,KAAKynC,UAAUG,SAASxV,EAAQuV,GAC5C,IAAY,IAAR7uB,EACH,MAAM,IAAIxT,GAAgB,+BAAgC,KAAMwT,GAEjE,OAAO,EAURhZ,yBAAyB6nC,GACxB,OAAOA,IC1CT,yBAAQ7hC,IAAuByZ,YACvBtJ,YAAUH,IAAa6M,GAEzBklB,GAAa,CAClBnlB,KAAMG,GACNilB,QAAS/kB,IAGV,SAASQ,GAAUvd,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIqd,EAAIjN,OAAOqD,KAAKouB,IAAYvkB,MAAKD,GAAKA,EAAE3L,eAAiB1R,EAAK0R,gBAClE,OAAI2L,EACIwkB,GAAWxkB,QADnB,EAoCD,OAAiBjN,OAAOqL,OAAOomB,GAAY,SAzB3C,SAAiBnhB,GAChB,GAAIA,aAAemhB,GAAWnlB,KAC7B,OAAOgE,EACD,GAAI5Q,GAAS4Q,GAAM,CACzB,IAAIqhB,EAAiBxkB,GAAUmD,GAC/B,GAAIqhB,EACH,OAAO,IAAIA,EAEZ,MAAM,IAAIjiC,GAAmB,2BAA2B4gB,MAAS,CAAEtiB,KAAMsiB,IAEnE,GAAIzQ,GAASyQ,GAAM,CACzB,IAAIqhB,EAAiBxkB,GAAUmD,EAAItiB,MAAQ,WAC3C,GAAI2jC,EACH,OAAO,IAAIA,EAAerhB,EAAIlW,SAE9B,MAAM,IAAI1K,GAAmB,2BAA2B4gB,EAAItiB,SAAU,CAAEA,KAAMsiB,EAAItiB,OAGpF,OAAO,IAAIyjC,GAAWC,kBAGvB,SAAkB9hC,EAAMyM,GACvBo1B,GAAW7hC,GAAQyM,KC7CpB,aAAQgN,IAAWF,aACXtJ,cAAUL,IAAe+M,GAyVjC,OAlVA,MASC7iB,YAAY0d,GACXxd,KAAKwd,KAAO4D,UAAEsC,aAAalG,EAAM,CAChCwqB,IAAK,KACLC,OAAQ,KACRC,gBAAiB,OAWnBpoC,KAAKmkB,GACJjkB,KAAKikB,OAASA,EACdjkB,KAAKutB,QAAUtJ,EAAOsJ,QAElBvtB,KAAKikB,SACRjkB,KAAKkkB,OAASD,EAAO4H,UAAU,UAE3B7rB,KAAKwd,KAAK2qB,OACbnoC,KAAKmoC,OAASnoC,KAAKwd,KAAK2qB,OAAS,KAEjCnoC,KAAKmoC,OAAS,OACVnoC,KAAKikB,OAAOmkB,YACfpoC,KAAKmoC,QAAUnoC,KAAKikB,OAAOmkB,UAAY,MAGzCpoC,KAAK+uB,4BAOPjvB,2BACCE,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO5R,2BAA4BzJ,KAAMqb,GAAOhZ,aAAcmY,MAAM,IAClG5e,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO3R,0BAA2B1J,KAAMqb,GAAO9Y,eAAgBka,WAAW,EAAMxD,KAAMoC,GAAOpQ,oBAE3HrP,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO1R,6BAA8B3J,KAAMqb,GAAOhZ,aAAcmY,MAAM,IAEpG5e,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOzR,2BAA4B5J,KAAMqb,GAAOhZ,aAAcmY,MAAM,IAClG5e,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOxR,0BAA2B7J,KAAMqb,GAAO9Y,eAAgBka,WAAW,EAAMxD,KAAMoC,GAAOpQ,oBAE3HrP,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOvR,2BAA4B9J,KAAMqb,GAAOhZ,aAAcmY,MAAM,IAClG5e,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOtR,0BAA2B/J,KAAMqb,GAAO9Y,eAAgBka,WAAW,EAAMxD,KAAMoC,GAAOpQ,oBAE3HrP,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOrR,6BAA8BhK,KAAMqb,GAAOhZ,aAAcmY,MAAM,IACpG5e,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOpR,4BAA6BjK,KAAMqb,GAAO9Y,eAAgBka,WAAW,EAAMxD,KAAMoC,GAAOpQ,oBAE7HrP,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOnR,+BAAgClK,KAAMqb,GAAOhZ,aAAcmY,MAAM,IAQvG9e,QAEC,OAAOkT,QAAQC,UAUhBnT,MAEC,MAAM,IAAI4B,MAAM,2BAUjB5B,aAEC,MAAM,IAAI4B,MAAM,2BAYjB5B,MAEC,MAAM,IAAI4B,MAAM,2BAUjB5B,MAEC,MAAM,IAAI4B,MAAM,2BAWjB5B,QAEC,MAAM,IAAI4B,MAAM,2BAajB5B,kBAAkB+Z,EAAKuY,EAAQX,GAC9B,OAAI5X,EAAIO,WAAW,MAAgB,MAARqX,EACnBrQ,UAAE5G,IAAIiX,EAAM5X,EAAIN,MAAM,IACX,MAAV6Y,EACDhR,UAAE5G,IAAI4X,EAAQvY,QADjB,EAcN/Z,cAAcwgC,EAAYlO,EAAQX,EAAMhY,GACvC,GAAI2Y,GAAUX,EAAM,CACnB,MAAM4W,EAAY/H,EAAa,IAC/B,IAAI7mB,EAeH,OAAO4uB,EAAYroC,KAAKsoC,WAAWtoC,KAAKuoC,uBAAuBnW,IAd/D,GAAmB,GAAf3Y,EAAKvH,OAAa,CAErB,MAAM4E,EAAM9W,KAAKwoC,kBAAkB/uB,EAAK,GAAI2Y,EAAQX,GACpD,OAAO4W,EAAYroC,KAAKsoC,WAAWryB,GAASa,GAAO9W,KAAKsoC,WAAWtoC,KAAKuoC,uBAAuBzxB,IAAQA,GAGxG,GAAI2C,EAAKvH,OAAS,EACjB,OAAOm2B,EAAYroC,KAAKsoC,WAAW7uB,EAAKpH,QAAO,CAACsE,EAAGkD,EAAKnF,KACvD,MAAMoC,EAAM9W,KAAKwoC,kBAAkB3uB,EAAKuY,EAAQX,GAChD,OAAO9a,GAAKjC,EAAI,IAAM,KAAOuB,GAASa,IAAQL,MAAMiK,QAAQ5J,GAAO9W,KAAKsoC,WAAWtoC,KAAKuoC,uBAAuBzxB,IAAQA,KACrH,KAON,OAAOwpB,EAGRxgC,WAAW+Z,GACV,MAAMquB,EAAkBloC,KAAKwd,KAAK0qB,gBAClC,IAAKA,GAAmBA,EAAkB,IAAMruB,EAAI3H,QAAUg2B,EAC7D,OAAOruB,EAER,MAAM4uB,EAAeP,EAAkB,GAEjCQ,EAAa9P,UAAOC,WAAW,UAAUnZ,OAAO7F,GAAKif,OAAO,UAClE,OAAI2P,EAAe,EACXC,EAED7uB,EAAIM,UAAU,EAAGsuB,GAAgBC,EAGzC5oC,uBAAuBqb,GACtB,OAAI1E,MAAMiK,QAAQvF,GACVA,EAAIxH,KAAIuC,GAAKlW,KAAKuoC,uBAAuBryB,KAAIsG,KAAK,KAEjDvG,GAASkF,GACV/E,OAAOqD,KAAK0B,GAAKxH,KAAIkG,GAAO,CAACA,EAAK7Z,KAAKuoC,uBAAuBptB,EAAItB,KAAO2C,KAAK,OAAMA,KAAK,KAEjF,MAAPrB,EACDA,EAAIxG,WAEJ,OAcT7U,YAAYwgC,EAAYlO,EAAQX,EAAMhY,GACrC,OAAI7D,GAAW5V,KAAKwd,KAAKyqB,QACjBjoC,KAAKwd,KAAKyqB,OAAOvxB,KAAK1W,KAAMsgC,EAAYlO,EAAQX,EAAMhY,GAEtDzZ,KAAK2oC,cAAcrI,EAAYlO,EAAQX,EAAMhY,GAQtD3Z,aACC,MAAO,CAAC4C,EAASyC,KAChB,MAAMqY,EAAO4D,UAAEsC,aAAa,GAAIzN,GAAS9Q,EAAOwU,OAASxU,EAAOwU,MAAQ,CAAE5H,UAAW5M,EAAOwU,QAE5F,GADA6D,EAAKorB,KAAOxnB,UAAEsC,aAAa,GAAIzN,GAASuH,EAAKorB,MAAQprB,EAAKorB,KAAO,CAAE72B,UAAWyL,EAAKorB,QAC9D,IAAjBprB,EAAKzL,QAAmB,CAC3B,MAAM82B,EAAoBjzB,GAAW4H,EAAKzL,SAE1C,OAAO,SAA0Bmf,GAChC,GAAI2X,IACErrB,EAAKzL,QAAQ2E,KAAKwa,EAAI9rB,QAAS8rB,GAEnC,OAAOxuB,EAAQwuB,GAKjB,IAA2B,IAAvBA,EAAIO,KAAa,OACpB,OAAO/uB,EAAQwuB,GAEhB,MAAM4X,EAAW9oC,KAAK+oC,YAAY5jC,EAAOa,KAAMkrB,EAAIkB,OAAQlB,EAAIO,KAAMjU,EAAK/D,MAE1E,IAAyB,IAAtB+D,EAAKorB,KAAK72B,QAAkB,CAC9B,IAAIi3B,EAuBJ,OArBCA,EADExrB,EAAKorB,KAAKK,WAAajpC,KAAKkpC,WACflpC,KAAKkpC,WAAWJ,GAAUxwB,MAAK,EAAG5T,KAAAA,EAAMsjC,IAAAA,MAC1C,MAARtjC,GACA8Y,EAAKorB,KAAKK,WAAajB,GAAOA,EAAMxqB,EAAKorB,KAAKK,WAEhDjpC,KAAKmpC,QAAQL,EAAUtrB,EAAKorB,KAAKZ,KAAK1vB,MAAK8wB,GACnC1mC,EAAQwuB,GAAK5Y,MAAK+wB,GAEjBrpC,KAAK2a,IAAImuB,EAAUO,EAAQ7rB,EAAKwqB,KAAK1vB,MAAK,IAAI8wB,QACnDjwB,OAAM,IACDnZ,KAAKspC,IAAIR,GAAUxwB,MAAK,IAAI8wB,UAElCjwB,OAAM,SAKJzU,KAGO1E,KAAKwa,IAAIsuB,GAElBE,EAAa1wB,MAAK5T,GACZ,MAARA,GAEHwsB,EAAIqY,cAAe,EACZ7kC,GAGD1E,KAAK4oC,KAAKE,EAAUtrB,EAAKorB,KAAKZ,KAAK1vB,MAAK8wB,GACvCppC,KAAKwa,IAAIsuB,GAAUxwB,MAAKkxB,GACf,MAAXA,GAEHtY,EAAIqY,cAAe,EACZH,IAAS9wB,MAAK,IACbkxB,KAIF9mC,EAAQwuB,GAAK5Y,MAAK+wB,IAExBrpC,KAAK2a,IAAImuB,EAAUO,EAAQ7rB,EAAKwqB,KAAK1vB,MAAK,IAAI8wB,MACvCC,KACLlwB,OAAM0N,GACDuiB,IAAS9wB,MAAK,IACbtF,QAAQE,OAAO2T,aAQ5B,OAAO7mB,KAAKwa,IAAIsuB,GAAUxwB,MAAKkxB,GACf,MAAXA,GAEHtY,EAAIqY,cAAe,EACZC,GAID9mC,EAAQwuB,GAAK5Y,MAAK+wB,IAExBrpC,KAAK2a,IAAImuB,EAAUO,EAAQ7rB,EAAKwqB,KAEzBqB,QAGRpmC,KAAKjD,MAGR,OAAO0C,KCrTV,OAjCA,MACC5C,cACCE,KAAKypC,OAAS,IAAI50B,IAGnB/U,QAAQ+Z,GACP,IAAI4vB,EAASzpC,KAAKypC,OAAOjvB,IAAIX,GAC7B,OAAK4vB,EAKG,IAAIz2B,SAAQC,GAAWw2B,EAAOz3B,KAAKiB,MAJ1Cw2B,EAAS,GACTzpC,KAAKypC,OAAO9uB,IAAId,EAAK4vB,GACdz2B,QAAQC,WAMjBnT,SAAS+Z,GACR,QAAS7Z,KAAKypC,OAAOjvB,IAAIX,GAG1B/Z,QAAQ+Z,GACP,IAAI4vB,EAASzpC,KAAKypC,OAAOjvB,IAAIX,GAQ7B,OAPG4vB,IACCA,EAAOv3B,OAAS,EAClBu3B,EAAOptB,OAAPotB,GAEAzpC,KAAKypC,OAAOzW,OAAOnZ,IAGd7G,QAAQC,YC1BjB,aAAQwM,IAAWF,GA2PnB,OAnPA,cAA2BmqB,GAS1B5pC,YAAY0d,GACXzd,MAAMyd,GAGNxd,KAAK2Z,MAAQ,IAAI9E,IAEjB7U,KAAK2pC,MAAQ,IAAIC,GAEjB5pC,KAAKgZ,MAAQ+F,eAAY,KAExB/e,KAAK6pC,aACH,KACH7pC,KAAKgZ,MAAMiG,QAGXjf,KAAK8pC,OAA4B,IAApB9pC,KAAKwd,KAAKssB,MAAiB1oB,UAAE2oB,UAAY/pC,KAAKwd,KAAKssB,MAUjEhqC,KAAKmkB,GACJlkB,MAAM4S,KAAKsR,GAEXA,EAAOsS,SAASvP,GAAG,0BAA0B,IAErChnB,KAAKgqC,UASdlqC,QAEC,OADAysB,cAAcvsB,KAAKgZ,OACZhG,QAAQC,UAWhBnT,IAAI+Z,GACH7Z,KAAKkkB,OAAO6B,MAAM,OAAOlM,GACzB7Z,KAAKutB,QAAQpG,UAAU1H,GAAO5R,4BAC9B,MAAMo8B,EAAUjqC,KAAKutB,QAAQvU,MAAMyG,GAAO3R,2BAE1C,GAAI9N,KAAK2Z,MAAMmC,IAAIjC,GAAM,CACxB7Z,KAAKkkB,OAAO6B,MAAM,SAASlM,GAC3B7Z,KAAKutB,QAAQpG,UAAU1H,GAAO1R,8BAE9B,IAAIqJ,EAAOpX,KAAK2Z,MAAMa,IAAIX,GAC1B,GAAIzC,EAAK8yB,QAAU9yB,EAAK8yB,OAAS7oC,KAAKC,MAKrC,OAJAtB,KAAKkkB,OAAO6B,MAAM,WAAWlM,GAC7B7Z,KAAKutB,QAAQpG,UAAU1H,GAAOnR,gCAC9BtO,KAAK2Z,MAAMqZ,OAAOnZ,GAClBowB,IACOjqC,KAAKikB,OAAOjR,QAAQC,QAAQ,MAEpC,MAAM6F,EAAM9Y,KAAK8pC,MAAQ9pC,KAAK8pC,MAAM1yB,EAAK1S,MAAQ0S,EAAK1S,KAGtD,OAFAulC,IAEOjqC,KAAKikB,OAAOjR,QAAQC,QAAQ6F,GAIpC,OAFCmxB,IAEMjqC,KAAKikB,OAAOjR,QAAQC,QAAQ,MAapCnT,IAAI+Z,EAAKnV,EAAMsjC,GACdhoC,KAAKutB,QAAQpG,UAAU1H,GAAOzR,4BAC9B,MAAMi8B,EAAUjqC,KAAKutB,QAAQvU,MAAMyG,GAAOxR,2BAa1C,OAXW,MAAP+5B,IACHA,EAAMhoC,KAAKwd,KAAKwqB,KAEjBhoC,KAAK2Z,MAAMgB,IAAId,EAAK,CACnBnV,KAAAA,EACAwlC,OAAQlC,EAAM3mC,KAAKC,MAAc,IAAN0mC,EAAa,OAGzCiC,IACAjqC,KAAKkkB,OAAO6B,MAAM,OAAOlM,GAElB7Z,KAAKikB,OAAOjR,QAAQC,QAAQvO,GAWpC5E,IAAI2Z,GACHzZ,KAAKutB,QAAQpG,UAAU1H,GAAOvR,4BAC9B,MAAM+7B,EAAUjqC,KAAKutB,QAAQvU,MAAMyG,GAAOtR,2BAS1C,OAPAsL,EAAOhD,MAAMiK,QAAQjH,GAAQA,EAAO,CAACA,IAChCG,SAAQC,IACZ7Z,KAAK2Z,MAAMqZ,OAAOnZ,GAClB7Z,KAAKkkB,OAAO6B,MAAM,UAAUlM,MAE7BowB,IAEOjqC,KAAKikB,OAAOjR,QAAQC,UAU5BnT,MAAM2jB,EAAQ,MACbzjB,KAAKutB,QAAQpG,UAAU1H,GAAOrR,8BAC9B,MAAM67B,EAAUjqC,KAAKutB,QAAQvU,MAAMyG,GAAOpR,6BAEpC87B,EAAU1zB,MAAMiK,QAAQ+C,GAASA,EAAQ,CAACA,GAWhD,OAVAzjB,KAAKkkB,OAAO6B,MAAM,SAASokB,EAAQ3tB,KAAK,OAExCxc,KAAK2Z,MAAMC,SAAQ,CAACnH,EAAOoH,KACtBswB,EAAQhmB,MAAKV,GAAS9N,GAAM8N,MAAM5J,EAAK4J,OAC1CzjB,KAAKkkB,OAAO6B,MAAM,UAAUlM,GAC5B7Z,KAAK2Z,MAAMqZ,OAAOnZ,OAGpBowB,IAEOjqC,KAAKikB,OAAOjR,QAAQC,UAW5BnT,WAAW+Z,GACV7Z,KAAKkkB,OAAO6B,MAAM,OAAOlM,GACzB,IAAInV,EAAO,KACPsjC,EAAM,KACV,GAAIhoC,KAAK2Z,MAAMmC,IAAIjC,GAAM,CACxB7Z,KAAKkkB,OAAO6B,MAAM,SAASlM,GAE3B,IAAIzC,EAAOpX,KAAK2Z,MAAMa,IAAIX,GACtBvY,EAAMD,KAAKC,MACf0mC,GAAO5wB,EAAK8yB,OAAS5oC,GAAK,IAC1B0mC,EAAMA,EAAM,EAAIA,EAAM,KAClBhoC,KAAKwd,KAAKwqB,MAEb5wB,EAAK8yB,OAAS5oC,EAAsB,IAAhBtB,KAAKwd,KAAKwqB,KAE/BtjC,EAAO1E,KAAK8pC,MAAQ9pC,KAAK8pC,MAAM1yB,EAAK1S,MAAQ0S,EAAK1S,KAElD,OAAO1E,KAAKikB,OAAOjR,QAAQC,QAAQ,CAAEvO,KAAAA,EAAMsjC,IAAAA,IAY5CloC,KAAK+Z,EAAKmuB,GACT,OAAOhoC,KAAK2pC,MAAMS,QAAQvwB,EAAKmuB,GAAK1vB,MAAK,IACjC,IAAItY,KAAK2pC,MAAMjiB,QAAQ7N,KAahC/Z,QAAQ+Z,EAAKmuB,GACZ,OAAGhoC,KAAK2pC,MAAMU,SAASxwB,GACf7Z,KAAKikB,OAAOjR,QAAQE,OAAO,IAAIxR,MAAM,YAEtC1B,KAAK2pC,MAAMS,QAAQvwB,EAAKmuB,GAAK1vB,MAAK,IACjC,IAAItY,KAAK2pC,MAAMjiB,QAAQ7N,KAShC/Z,WACC,IAAIwB,EAAMD,KAAKC,MACftB,KAAK2Z,MAAMC,SAAQ,CAACnH,EAAOoH,KAC1B,IAAIzC,EAAOpX,KAAK2Z,MAAMa,IAAIX,GAEtBzC,EAAK8yB,QAAU9yB,EAAK8yB,OAAS5oC,IAChCtB,KAAKkkB,OAAO6B,MAAM,WAAWlM,GAC7B7Z,KAAKutB,QAAQpG,UAAU1H,GAAOnR,gCAC9BtO,KAAK2Z,MAAMqZ,OAAOnZ,SCpPtB,aAAQ4F,IAAWF,GAoOnB,OA5NA,cAA8BmqB,GAS7B5pC,YAAY0d,GACXzd,MAAMyd,GAGNxd,KAAK2Z,MAAQ,IAAIqe,UAAI,CACpB1V,IAAKtiB,KAAKwd,KAAK8E,IACf2V,OAAQj4B,KAAKwd,KAAKwqB,IAAsB,IAAhBhoC,KAAKwd,KAAKwqB,IAAa,KAC/CsC,iBAAkBtqC,KAAKwd,KAAKwqB,MAG7BhoC,KAAK2pC,MAAQ,IAAIC,GAEjB5pC,KAAKgZ,MAAQ+F,eAAY,KAExB/e,KAAK6pC,aACH,KACH7pC,KAAKgZ,MAAMiG,QAGXjf,KAAK8pC,OAA4B,IAApB9pC,KAAKwd,KAAKssB,MAAiB1oB,UAAE2oB,UAAY/pC,KAAKwd,KAAKssB,MAUjEhqC,KAAKmkB,GACJlkB,MAAM4S,KAAKsR,GAEXA,EAAOsS,SAASvP,GAAG,0BAA0B,IAErChnB,KAAKgqC,UAEVhqC,KAAKwd,KAAKorB,OAAmC,IAA3B5oC,KAAKwd,KAAKorB,KAAK72B,SAAqB/R,KAAKwd,KAAKorB,KAAKK,WAEvEjpC,KAAKkkB,OAAOpJ,KAAK,iEASnBhb,QAEC,OADAysB,cAAcvsB,KAAKgZ,OACZhG,QAAQC,UAWhBnT,IAAI+Z,GACH7Z,KAAKkkB,OAAO6B,MAAM,OAAOlM,GACzB7Z,KAAKutB,QAAQpG,UAAU1H,GAAO5R,4BAC9B,MAAMo8B,EAAUjqC,KAAKutB,QAAQvU,MAAMyG,GAAO3R,2BAE1C,GAAI9N,KAAK2Z,MAAMmC,IAAIjC,GAAM,CACxB7Z,KAAKkkB,OAAO6B,MAAM,SAASlM,GAC3B7Z,KAAKutB,QAAQpG,UAAU1H,GAAO1R,8BAE9B,IAAIqJ,EAAOpX,KAAK2Z,MAAMa,IAAIX,GAC1B,MAAMf,EAAM9Y,KAAK8pC,MAAQ9pC,KAAK8pC,MAAM1yB,GAAQA,EAG5C,OAFA6yB,IAEOjqC,KAAKikB,OAAOjR,QAAQC,QAAQ6F,GAIpC,OAFCmxB,IAEMjqC,KAAKikB,OAAOjR,QAAQC,QAAQ,MAapCnT,IAAI+Z,EAAKnV,EAAMsjC,GACdhoC,KAAKutB,QAAQpG,UAAU1H,GAAOzR,4BAC9B,MAAMi8B,EAAUjqC,KAAKutB,QAAQvU,MAAMyG,GAAOxR,2BAU1C,OARW,MAAP+5B,IACHA,EAAMhoC,KAAKwd,KAAKwqB,KAEjBhoC,KAAK2Z,MAAMgB,IAAId,EAAKnV,EAAMsjC,EAAY,IAANA,EAAa,MAE7CiC,IACAjqC,KAAKkkB,OAAO6B,MAAM,OAAOlM,GAElB7Z,KAAKikB,OAAOjR,QAAQC,QAAQvO,GAWpC5E,IAAI2Z,GACHzZ,KAAKutB,QAAQpG,UAAU1H,GAAOvR,4BAC9B,MAAM+7B,EAAUjqC,KAAKutB,QAAQvU,MAAMyG,GAAOtR,2BAS1C,OAPAsL,EAAOhD,MAAMiK,QAAQjH,GAAQA,EAAO,CAACA,IAChCG,SAAQC,IACZ7Z,KAAK2Z,MAAM2vB,IAAIzvB,GACf7Z,KAAKkkB,OAAO6B,MAAM,UAAUlM,MAE7BowB,IAEOjqC,KAAKikB,OAAOjR,QAAQC,UAU5BnT,MAAM2jB,EAAQ,MACbzjB,KAAKutB,QAAQpG,UAAU1H,GAAOrR,8BAC9B,MAAM67B,EAAUjqC,KAAKutB,QAAQvU,MAAMyG,GAAOpR,6BAEpC87B,EAAU1zB,MAAMiK,QAAQ+C,GAASA,EAAQ,CAACA,GAWhD,OAVAzjB,KAAKkkB,OAAO6B,MAAM,SAASokB,EAAQ3tB,KAAK,OAExCxc,KAAK2Z,MAAMF,OAAOG,SAAQC,IACrBswB,EAAQhmB,MAAKV,GAAS9N,GAAM8N,MAAM5J,EAAK4J,OAC1CzjB,KAAKkkB,OAAO6B,MAAM,UAAUlM,GAC5B7Z,KAAK2Z,MAAM2vB,IAAIzvB,OAGjBowB,IAEOjqC,KAAKikB,OAAOjR,QAAQC,UAU5BnT,WAAW+Z,GAEV,OAAO7Z,KAAKwa,IAAIX,GAAKvB,MAAK5T,IAClB,CAAEA,KAAAA,EAAMsjC,IAAK,SActBloC,KAAK+Z,EAAKmuB,GACT,OAAOhoC,KAAK2pC,MAAMS,QAAQvwB,EAAKmuB,GAAK1vB,MAAK,IACjC,IAAItY,KAAK2pC,MAAMjiB,QAAQ7N,KAahC/Z,QAAQ+Z,EAAKmuB,GACZ,OAAGhoC,KAAK2pC,MAAMU,SAASxwB,GACf7Z,KAAKikB,OAAOjR,QAAQE,OAAO,IAAIxR,MAAM,YAEtC1B,KAAK2pC,MAAMS,QAAQvwB,EAAKmuB,GAAK1vB,MAAK,IACjC,IAAItY,KAAK2pC,MAAMjiB,QAAQ7N,KAUhC/Z,WACCE,KAAK2Z,MAAM4wB,UCpOb,eAAQt0B,YAAUH,IAAayJ,uBACvBzZ,IAAuB6c,EAEzB6nB,GAAU,CACf9nB,KAAMG,GACN4nB,OAAQ1nB,GACR2nB,UAAWznB,GACXwY,MAAOtY,IAGR,SAASI,GAAUvd,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIqd,EAAIjN,OAAOqD,KAAK+wB,IAASlnB,MAAKD,GAAKA,EAAE3L,eAAiB1R,EAAK0R,gBAC/D,OAAI2L,EACImnB,GAAQnnB,QADhB,EA2CD,OAAiBjN,OAAOqL,OAAO+oB,GAAS,SAjCxC,SAAiB9jB,GAChB,GAAIA,aAAe8jB,GAAQ9nB,KAC1B,OAAOgE,EACD,IAAY,IAARA,EACV,OAAO,IAAI8jB,GAAQC,OACb,GAAI30B,GAAS4Q,GAAM,CACzB,IAAIikB,EAAcpnB,GAAUmD,GAC5B,GAAIikB,EACH,OAAO,IAAIA,EAKZ,GAHIjkB,EAAItM,WAAW,cAClBuwB,EAAcH,GAAQ/O,OAEnBkP,EACH,OAAO,IAAIA,EAAYjkB,GAEvB,MAAM,IAAI5gB,GAAmB,wBAAwB4gB,MAAS,CAAEtiB,KAAMsiB,IAEjE,GAAIzQ,GAASyQ,GAAM,CACzB,IAAIikB,EAAcpnB,GAAUmD,EAAItiB,MAAQ,UACxC,GAAIumC,EACH,OAAO,IAAIA,EAAYjkB,EAAIlW,SAE3B,MAAM,IAAI1K,GAAmB,wBAAwB4gB,EAAItiB,SAAU,CAAEA,KAAMsiB,EAAItiB,OAGjF,OAAO,eAGR,SAAkB4B,EAAMyM,GACvB+3B,GAAQxkC,GAAQyM,KCtDjB,MAAM8D,QAAEA,IAAYgJ,IACdpZ,wBAAEA,IAA4Bwc,EA4VpC,OArVA,MASC7iB,YAAY0d,GACXxd,KAAKwd,KAAOA,EACZxd,KAAKmB,WAAY,EACjBnB,KAAK4qC,oBAAqB,EAY3B9qC,KAAKw2B,EAAS/H,EAAgBG,GACzB4H,IACHt2B,KAAKs2B,QAAUA,EACft2B,KAAKikB,OAASqS,EAAQrS,OACtBjkB,KAAKkF,OAASoxB,EAAQpxB,OACtBlF,KAAKkkB,OAASlkB,KAAKikB,OAAO4H,UAAU,eAEpC7rB,KAAKmoC,OAAS,MACVnoC,KAAKikB,OAAOmkB,YACfpoC,KAAKmoC,QAAU,IAAMnoC,KAAKikB,OAAOmkB,YAGnCpoC,KAAKuuB,eAAiBA,EACtBvuB,KAAK0uB,aAAeA,EAQrB5uB,UAEC,MAAM,IAAI4B,MAAM,oBAWjB5B,YAAYmvB,GAEX,OADAjvB,KAAKmB,WAAY,EACbnB,KAAK0uB,aACD1uB,KAAK0uB,aAAaO,GAGnBjvB,KAAKikB,OAAOjR,QAAQC,UAQ5BnT,aAEC,MAAM,IAAI4B,MAAM,oBAUjB5B,kBAAkB+qC,GACjB,OAAO7qC,KAAKikB,OAAOjR,QAAQwZ,IAAIqe,EAAOl3B,KAAI,EAAG0a,IAAAA,EAAKnpB,OAAAA,KAAalF,KAAK21B,UAAUtH,EAAKnpB,MAWpFpF,gBAAgBuuB,EAAKppB,GACpB,GAAKA,EACL,IACC,MAAMqpB,EAAStuB,KAAK8qC,YAAYzc,EAAKppB,GACrC,OAAOjF,KAAKuuB,eAAeF,EAAKC,GAC/B,MAAMhoB,GACPtG,KAAKkkB,OAAOpJ,KAAK,iCAAkCuT,EAAK/nB,GACxDtG,KAAKkkB,OAAO6B,MAAM,WAAY9gB,EAAI0P,SAAW1P,EAAI0P,WAAa1P,IAShEnF,QAAQuuB,EAAK3pB,GACZ,OAAO1E,KAAK+qC,gBAAgB1c,EAAK3pB,GAWlC5E,YAEC,MAAM,IAAI4B,MAAM,oBASjB5B,2BAEC,MAAM,IAAI4B,MAAM,oBAUjB5B,yBAEC,MAAM,IAAI4B,MAAM,oBAQjB5B,kCAEC,OAAOE,KAAKikB,OAAOjR,QAAQC,UAW5BnT,QAAQwuB,GACP,MAAMoH,EAAQ11B,KAAKgrC,aAAa1c,EAAOlqB,KAAMkqB,EAAOjqB,QAC9CK,EAAO1E,KAAKirC,UAAU3c,GAE5B,OAAOtuB,KAAK2uB,KAAK+G,EAAOhxB,EAAM,CAAE4pB,OAAAA,IAYjCxuB,qBAAqBwuB,EAAQ6P,GAC5B,MAAMzI,EAAQ,GAAG11B,KAAKmoC,UAAU5vB,EAAEpV,iBAAiBg7B,KAAS7P,EAAOhqB,QAAQ0sB,QACrEtsB,EAAO1E,KAAKirC,UAAU3c,GAE5B,OAAOtuB,KAAK2uB,KAAK+G,EAAOhxB,EAAM,CAAE4pB,OAAAA,EAAQ4c,UAAU,IAWnDprC,uBAAuBwuB,GACtB,MAAMoH,EAAQ,GAAG11B,KAAKmoC,UAAU5vB,EAAEnV,mBAAmBkrB,EAAOhqB,QAAQa,SAC9DT,EAAO1E,KAAKirC,UAAU3c,GAE5B,OAAOtuB,KAAK2uB,KAAK+G,EAAOhxB,EAAM,CAAE4pB,OAAAA,EAAQ4c,UAAU,IAYnDprC,OACC,MAAM,IAAI4B,MAAM,oBAWjB5B,aAAauuB,EAAKnpB,GACjB,OAAOlF,KAAKmoC,OAAS,IAAM9Z,GAAOnpB,EAAS,IAAMA,EAAS,IAQ3DpF,4BACC,OAAKE,KAAK4qC,mBAEH5qC,KAAKmrC,kCAAkC7yB,MAAK,KAClD,MAAMwc,EAAW90B,KAAKikB,OAAOmX,mBAAmBtG,SAChD,OAAO90B,KAAKikB,OAAOjR,QAAQwZ,IAAIsI,EAASnhB,KAAIvO,IAC3C,MAAMiT,EAAI,GAeV,OAZIjT,EAAQ+3B,SAAsC,iBAApB/3B,EAAe,SAC5CiT,EAAErG,KAAKoE,OAAOqD,KAAKrU,EAAQ+3B,SAASxpB,KAAIxO,GAAUnF,KAAKorC,yBAAyBjmC,MAI7EC,EAAQg4B,QAAoC,iBAAnBh4B,EAAc,QAC1CiT,EAAErG,KAAKoE,OAAOqD,KAAKrU,EAAQg4B,QAAQzpB,KAAIqd,IACtC,MAAMmN,EAAQ/4B,EAAQg4B,OAAOpM,GAAOmN,OAAS/4B,EAAQY,KACrDhG,KAAKqrC,uBAAuBra,EAAOmN,OAI9Bn+B,KAAKikB,OAAOjR,QAAQwZ,IAAIpL,UAAE+K,QAAQ5V,GAAQ8B,GAAG,YApBjBrY,KAAKikB,OAAOjR,QAAQC,UAgC1DnT,WAAWwuB,GAEV,IAAKtuB,KAAKmB,UAET,MAAI,CAACoX,EAAEnV,eAAgBmV,EAAEpV,aAAcoV,EAAE7U,aAAaigB,SAAS2K,EAAOlqB,MAC9DpE,KAAKikB,OAAOjR,QAAQE,OAAO,IAAI/M,IAK/BnG,KAAKikB,OAAOjR,QAAQC,UAI7B,GAAIqb,EAAOlqB,OAASmU,EAAEpV,cAAiC,MAAjBmrB,EAAOjqB,QAAkBiqB,EAAOhqB,QAAQuhB,OAAQ,CACrF,MAAMA,EAASyI,EAAOhqB,QAAQuhB,OAI9B,GAAIA,EAAO3T,OAAS,EAMnB,OALA2T,EAAOjM,SAAQukB,IAEd7P,EAAOhqB,QAAQuhB,OAAS,CAACsY,GACzBn+B,KAAKsrC,qBAAqBhd,EAAQ6P,MAE5Bn+B,KAAKikB,OAAOjR,QAAQC,eAKtB,GAAIqb,EAAOlqB,OAASmU,EAAEnV,gBAAmC,MAAjBkrB,EAAOjqB,OACrD,OAAOrE,KAAKurC,uBAAuBjd,GAIpC,OAAOtuB,KAAKwuB,QAAQF,GAWrBxuB,UAAUwuB,GAGT,OAFAA,EAAOhqB,QAAQ2rB,IAAMjwB,KAAKikB,OAAOiM,iBACjC5B,EAAOhqB,QAAQ8rB,OAASpwB,KAAKkF,OACtBlF,KAAKikB,OAAOunB,WAAWP,UAAU3c,EAAOhqB,QAASgqB,EAAOlqB,MAYhEtE,YAAYsE,EAAMqnC,GACjB,GAAW,MAAPA,EAAa,OAAO,KAExB,MAAMxmC,EAAMjF,KAAKikB,OAAOunB,WAAWV,YAAYW,EAAKrnC,GACpD,OAAO,IAAImU,EAAEpU,OAAOC,EAAM,KAAMa,KCxVlC,MAAMymC,GAAgBnsB,UAAyBmsB,gBAGxCC,IAAM,IAAID,GAAc,CAC9BE,UAAU,EACVC,aAAc,MAuGf,OA9FA,cAA8BC,GAS7BhsC,YAAY0d,GACXzd,MAAMyd,GAGNxd,KAAK2rC,IAAMlsC,EAAOksC,IAClB3rC,KAAK4qC,oBAAqB,EAE1B5qC,KAAK+rC,cAAgB,GAQtBjsC,UACC,OAAOE,KAAKgsC,cAQblsC,aAKC,OAJAE,KAAKmB,WAAY,EACjBnB,KAAK+rC,cAAcnyB,SAAQ,EAAG8b,MAAAA,EAAOhzB,QAAAA,KAAc1C,KAAK2rC,IAAIM,IAAIvW,EAAOhzB,KACvE1C,KAAK+rC,cAAgB,GAEd/rC,KAAKikB,OAAOjR,QAAQC,UAW5BnT,UAAUuuB,EAAKnpB,GACd,MAAMgnC,EAAIlsC,KAAKgrC,aAAa3c,EAAKnpB,GAC3BxC,EAAUuC,GAAOjF,KAAK4uB,QAAQP,EAAKppB,GAIzC,OAHAjF,KAAK+rC,cAAc/5B,KAAK,CAAE0jB,MAAOwW,EAAGxpC,QAAAA,IAEpC1C,KAAK2rC,IAAI3kB,GAAGklB,EAAGxpC,GACR1C,KAAKikB,OAAOjR,QAAQC,UAS5BnT,2BACC,OAAOE,KAAKikB,OAAOjR,QAAQC,UAU5BnT,yBACC,OAAOE,KAAKikB,OAAOjR,QAAQC,UAY5BnT,KAAK41B,EAAOhxB,GAEX,OADA1E,KAAK2rC,IAAIlqC,KAAKi0B,EAAOhxB,GACd1E,KAAKikB,OAAOjR,QAAQC,YC1G7B,eAAQgD,YAAUH,IAAayJ,uBACvBzZ,IAAuB6c,EAEzBwpB,GAAe,CACpBzpB,KAAMG,GACNupB,KAAMrpB,GACNspB,KAAMppB,GACNqpB,KAAMnpB,GACNsY,MAAOpV,GACPkmB,KAAMhmB,GACNimB,OAAQ/lB,GACRgmB,MAAOnH,GACPoH,KAAMlH,GACNmH,IAAKC,IAGN,SAASrpB,GAAUvd,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIqd,EAAIjN,OAAOqD,KAAK0yB,IAAc7oB,MAAKD,GAAKA,EAAE3L,eAAiB1R,EAAK0R,gBACpE,OAAI2L,EACI8oB,GAAa9oB,QADrB,EAyDD,OAAiBjN,OAAOqL,OAAO0qB,GAAc,SA/C7C,SAAiBzlB,GAChB,GAAIA,aAAeylB,GAAazpB,KAC/B,OAAOgE,EACD,GAAI5Q,GAAS4Q,GAAM,CACzB,IAAImmB,EAAmBtpB,GAAUmD,GACjC,GAAImmB,EACH,OAAO,IAAIA,EAmBZ,GAjBInmB,EAAItM,WAAW,WAClByyB,EAAmBV,GAAaE,KACxB3lB,EAAItM,WAAW,YAAcsM,EAAItM,WAAW,YACpDyyB,EAAmBV,GAAaG,KACxB5lB,EAAItM,WAAW,aAAesM,EAAItM,WAAW,aACrDyyB,EAAmBV,GAAa1Q,MACxB/U,EAAItM,WAAW,YAAcsM,EAAItM,WAAW,YACpDyyB,EAAmBV,GAAaI,KACxB7lB,EAAItM,WAAW,aACvByyB,EAAmBV,GAAaK,OACxB9lB,EAAItM,WAAW,YACvByyB,EAAmBV,GAAaM,MACxB/lB,EAAItM,WAAW,WACvByyB,EAAmBV,GAAaO,KACxBhmB,EAAItM,WAAW,YACvByyB,EAAmBV,GAAaQ,KAE7BE,EACH,OAAO,IAAIA,EAAiBnmB,GAE5B,MAAM,IAAI5gB,GAAmB,6BAA6B4gB,MAAS,CAAEtiB,KAAMsiB,IAEtE,GAAIzQ,GAASyQ,GAAM,CACzB,IAAImmB,EAAmBtpB,GAAUmD,EAAItiB,MAAQ,QAE7C,GAAIyoC,EACH,OAAO,IAAIA,EAAiBnmB,EAAIlW,SAEhC,MAAM,IAAI1K,GAAmB,6BAA6B4gB,EAAItiB,SAAU,CAAEA,KAAMsiB,EAAItiB,OAGtF,OAAO,eAGR,SAAkB4B,EAAMyM,GACvB05B,GAAanmC,GAAQyM,KCqItB,OAzMA,MAOC3S,eAUAA,KAAKmkB,GACJjkB,KAAKikB,OAASA,EAefnkB,YAEC,MAAM,IAAI4B,MAAM,2BAYjB5B,cAEC,MAAM,IAAI4B,MAAM,2BAWjB5B,sBAAsBsE,EAAM+W,GAC3B,OAAQ/W,GACP,KAAKmU,EAAEhV,YACN4X,EAAI2Z,SAAW1Z,KAAKE,UAAUH,EAAI2Z,UAC9B3Z,EAAI8Z,SACP9Z,EAAI8Z,OAAS7Z,KAAKE,UAAUH,EAAI8Z,SAC7B9Z,EAAI+Z,WACP/Z,EAAI+Z,SAAW9Z,KAAKE,UAAUH,EAAI+Z,WACnC,MAED,KAAK3c,EAAEpV,aACNnD,KAAK8sC,uBAAuB3xB,EAAK,OAAQ,YACzCA,EAAIsW,KAAOrW,KAAKE,UAAUH,EAAIsW,MAC9B,MAED,KAAKlZ,EAAEnV,eACNpD,KAAK8sC,uBAAuB3xB,EAAK,SAAU,cAC3CA,EAAIsW,KAAOrW,KAAKE,UAAUH,EAAIsW,MAC9B,MAED,KAAKlZ,EAAElV,gBACNrD,KAAK8sC,uBAAuB3xB,EAAK,OAAQ,YACzCA,EAAIsW,KAAOrW,KAAKE,UAAUH,EAAIsW,MAC1BtW,EAAI4V,QACP5V,EAAI4V,MAAQ3V,KAAKE,UAAUH,EAAI4V,QAChC,MAED,KAAKxY,EAAE3U,kBAOP,KAAK2U,EAAE1U,kBACFsX,EAAI4xB,SACP5xB,EAAI4xB,OAAS3xB,KAAKE,UAAUH,EAAI4xB,SAC7B5xB,EAAI6xB,UACP7xB,EAAI6xB,QAAU5xB,KAAKE,UAAUH,EAAI6xB,UAKpC,OAAO7xB,EAWRrb,wBAAwBsE,EAAM+W,GAC7B,OAAQ/W,GACP,KAAKmU,EAAEhV,YACN4X,EAAI2Z,SAAW1Z,KAAKC,MAAMF,EAAI2Z,UAC1B3Z,EAAI8Z,SACP9Z,EAAI8Z,OAAS7Z,KAAKC,MAAMF,EAAI8Z,SACzB9Z,EAAI+Z,WACP/Z,EAAI+Z,SAAW9Z,KAAKC,MAAMF,EAAI+Z,WAC/B,MAED,KAAK3c,EAAEpV,aACNnD,KAAKitC,yBAAyB9xB,EAAK,OAAQ,YAC3CA,EAAIsW,KAAOrW,KAAKC,MAAMF,EAAIsW,MAC1B,MAED,KAAKlZ,EAAEnV,eACNpD,KAAKitC,yBAAyB9xB,EAAK,SAAU,cAC7CA,EAAIsW,KAAOrW,KAAKC,MAAMF,EAAIsW,MAC1B,MAED,KAAKlZ,EAAElV,gBACNrD,KAAKitC,yBAAyB9xB,EAAK,OAAQ,YAC3CA,EAAIsW,KAAOrW,KAAKC,MAAMF,EAAIsW,MACtBtW,EAAI4V,QACP5V,EAAI4V,MAAQ3V,KAAKC,MAAMF,EAAI4V,QAC5B,MAED,KAAKxY,EAAE3U,kBAOP,KAAK2U,EAAE1U,kBACFsX,EAAI4xB,SACP5xB,EAAI4xB,OAAS3xB,KAAKC,MAAMF,EAAI4xB,SACzB5xB,EAAI6xB,UACP7xB,EAAI6xB,QAAU5xB,KAAKC,MAAMF,EAAI6xB,UAKhC,OAAO7xB,EAGRrb,uBAAuBqb,EAAK+xB,EAAOC,QACf/7B,IAAf+J,EAAI+xB,GACP/xB,EAAIgyB,GAAa50B,EAAExU,mBACM,OAAfoX,EAAI+xB,GACd/xB,EAAIgyB,GAAa50B,EAAEvU,cACTkvB,SAAOka,SAASjyB,EAAI+xB,IAC9B/xB,EAAIgyB,GAAa50B,EAAErU,iBAGnBiX,EAAIgyB,GAAa50B,EAAEtU,cACnBkX,EAAI+xB,GAASha,SAAOtT,KAAKxE,KAAKE,UAAUH,EAAI+xB,MAI9CptC,yBAAyBqb,EAAK+xB,EAAOC,GAEpC,OADahyB,EAAIgyB,IAEhB,KAAK50B,EAAExU,mBACNoX,EAAI+xB,QAAS97B,EACb,MAED,KAAKmH,EAAEvU,cACNmX,EAAI+xB,GAAS,KACb,MAED,KAAK30B,EAAErU,gBACDgvB,SAAOka,SAASjyB,EAAI+xB,MACxB/xB,EAAI+xB,GAASha,SAAOtT,KAAKzE,EAAI+xB,KAC9B,MAED,QAEC/xB,EAAI+xB,GAAS9xB,KAAKC,MAAMF,EAAI+xB,WAKvB/xB,EAAIgyB,KChKb,OAtCA,cAA6BE,GAO5BvtC,cACCC,QAYDD,UAAUqb,GACT,OAAO+X,SAAOtT,KAAKxE,KAAKE,UAAUH,IAYnCrb,YAAY2rC,GACX,OAAOrwB,KAAKC,MAAMowB,KCxCpB,eAAQx1B,YAAUH,IAAayJ,uBACvBzZ,IAAuB6c,EAEzB2qB,GAAc,CACnB5qB,KAAMG,GACNzH,KAAM2H,GACNwqB,KAAMtqB,GACNuqB,QAASrqB,GACTsqB,SAAUpnB,GACVqnB,OAAQnnB,GACRonB,SAAUlnB,IAGX,SAASlD,GAAUvd,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIqd,EAAIjN,OAAOqD,KAAK6zB,IAAahqB,MAAKD,GAAKA,EAAE3L,eAAiB1R,EAAK0R,gBACnE,OAAI2L,EACIiqB,GAAYjqB,QADpB,EAoCD,OAAiBjN,OAAOqL,OAAO6rB,GAAa,SAzB5C,SAAiB5mB,GAChB,GAAIA,aAAe4mB,GAAY5qB,KAC9B,OAAOgE,EACD,GAAI5Q,GAAS4Q,GAAM,CACzB,IAAIknB,EAAkBrqB,GAAUmD,GAChC,GAAIknB,EACH,OAAO,IAAIA,EAEX,MAAM,IAAI9nC,GAAmB,4BAA4B4gB,MAAS,CAAEtiB,KAAMsiB,IAErE,GAAIzQ,GAASyQ,GAAM,CACzB,IAAIknB,EAAkBrqB,GAAUmD,EAAItiB,MAAQ,QAC5C,GAAIwpC,EACH,OAAO,IAAIA,EAAgBlnB,EAAIlW,SAE/B,MAAM,IAAI1K,GAAmB,4BAA4B4gB,EAAItiB,SAAU,CAAEA,KAAMsiB,EAAItiB,OAGrF,OAAO,IAAIkpC,GAAYlyB,eAGxB,SAAkBpV,EAAMyM,GACvB66B,GAAYtnC,GAAQyM,kBCnDrB,gBAAQ0pB,IAAc5c,GAChB+c,GAAoB3Z,GAEpBkrB,GAAgB,KACd,CACNzpC,eACA/D,QAASi8B,GACTC,YAAax5B,EAAQ1C,UAIjBytC,GAAa,KAClB,MAAMv6B,EAAOkE,EAAGlE,OACV+W,EAAO7S,EAAG5D,UACVD,EAAM,CACXm6B,MAAOzjB,EAAK,GACZ0jB,MAAO1jB,EAAK,GACZ2jB,OAAQ3jB,EAAK,GACb4jB,MAAOz3B,MAAMiK,QAAQnN,GAAQkE,EAAGlE,OAAOrB,OAAS,MAIjD,OAFA0B,EAAIu6B,YAAcrsC,KAAK6c,IAAI7c,KAAKC,MAAgB,IAAVuoB,EAAK,GAAW1W,EAAIs6B,OAAQ,KAE3Dt6B,GAGFw6B,GAAgB,KACrB,MAAMC,EAAM,CACXC,KAAM72B,EAAGiS,UACTqP,MAAOthB,EAAGmS,YAIX,OAFAykB,EAAIE,QAAsB,IAAXF,EAAIC,KAAaD,EAAItV,MAE7BsV,GAGFvmB,GAAc,KACnB,IACC,OAAOrQ,EAAGoQ,WACT,MAAOhB,GACR,MAAO,KAIH2nB,GAAY,KACV,CACNllB,OAAQ7R,EAAG6R,SACXllB,KAAMqT,EAAGrT,OACTsjB,QAASjQ,EAAGiQ,UACZ1T,SAAUyD,EAAGzD,WACb2T,KAAMlQ,EAAGkQ,OACTC,SAAUnQ,EAAGmQ,WACbqD,KAAMnD,OAIF2mB,GAAiB,KACf,CACNxtC,IAAK8B,EAAQ9B,IACbgB,OAAQc,EAAQolB,cAChBmB,OAAQvmB,EAAQumB,SAChBlpB,KAAM2C,EAAQ3C,OAIVsuC,GAA2B,KACzB,CACNC,GAAKxS,OAIDyS,GAAkB,KAChB,CACNttC,IAAKD,KAAKC,MACVutC,KAAK,IAAIxtC,MAAO8oB,cAChB2kB,KAAK,IAAIztC,MAAO+oB,gBAgBlB,OAZwB,KAChB,CACNxW,IAAKk6B,KACLO,IAAKD,KACL32B,GAAI+2B,KACJzrC,QAAS0rC,KACTzZ,OAAQ6Y,KACRkB,IAAKL,KACL98B,KAAMg9B,OCtFR,iBAAQh5B,YAAYE,IAAayJ,GCDjC,MAAM7Z,iBAAEA,IAAqB6Z,UACrBE,IAAWkD,GCDnB,MAAM5c,yBAAEA,IAA6BwZ,ECCrC,aAAQE,IAAWF,GCDnB,MAAMha,oBAAEA,IAAwBga,UACxBE,IAAWkD,GCDnB,aAAQlD,IAAWF,GCAnB,MAAMhb,eAAEA,IAAmBgb,UACnBE,IAAWkD,eACX/M,YAAYE,IAAa+M,GCFjC,qBAAQte,IAAmBgb,EAE3B,SAASyvB,GAAuBtsC,GAC/B,OAAO,SAAgCwuB,GAEtC,OAAOxuB,EAAQwuB,GACb/X,OAAM7S,IACAA,aAAe5E,QACpB4E,EAAM,IAAI/B,GAAe+B,EAAK,MAE3B4qB,EAAIhsB,SAAWlF,KAAKkF,QAEnBlF,KAAKs2B,SACRt2B,KAAKs2B,QAAQ9C,qBAAqBtC,EAAIE,IAGxCpxB,KAAKkkB,OAAO6B,MAAM,QAAQmL,EAAI/rB,OAAOa,6BAA8B,CAAEsL,UAAW4f,EAAI5f,WAAahL,GAEjG8P,OAAO64B,eAAe3oC,EAAK,MAAO,CACjCmM,MAAOye,EACPge,UAAU,EACVC,YAAY,IAINje,EAAIjN,OAAOuL,aAAalpB,EAAK,CACnC4qB,IAAAA,EACA9rB,QAAS8rB,EAAI9rB,QACbD,OAAQ+rB,EAAI/rB,aAIdlC,KAAKjD,MAGR,SAASovC,GAAsB1sC,GAC9B,OAAO,SAAgCwuB,GAEtC,OAAOxuB,EAAQwuB,GACb/X,OAAM7S,IACAA,aAAe5E,QACpB4E,EAAM,IAAI/B,GAAe+B,EAAK,MAE/BtG,KAAKkkB,OAAO6B,MAAM,yBAAyBmL,EAAIF,MAAMhrB,+BAA+BkrB,EAAI9rB,QAAQ63B,qBAAsB,CAAE3rB,UAAW4f,EAAI5f,WAAahL,GAEpJ8P,OAAO64B,eAAe3oC,EAAK,MAAO,CACjCmM,MAAOye,EACPge,UAAU,EACVC,YAAY,IAINje,EAAIjN,OAAOuL,aAAalpB,EAAK,CACnC4qB,IAAAA,EACA9rB,QAAS8rB,EAAI9rB,QACb4rB,MAAOE,EAAIF,WAEV7X,OAAM7S,IAER4qB,EAAIjN,OAAOC,OAAO6M,MAAMzqB,OAGzBrD,KAAKjD,MC9DR,aAAQyf,IAAWF,GCCnB,iBAAQ3J,iBAAYO,IAAkBoJ,mDCPZ,IAAI5c,IAAS0sC,iBAAsB1sC,cACnC,IAAIA,IAAS2sC,iBAAsB3sC,QACzC,IAAIA,IAAS4sC,UAAe5sC,UAC1B,IAAIA,IAAS6sC,YAAiB7sC,WAC7B,IAAIA,IAAS8sC,cAAmB9sC,WAChC,IAAIA,IAAS+sC,gBAAqB/sC,KCCzD,MAAM+gB,aAAEA,IAAiBnE,WACnBowB,gBAAEA,IAAoBhtB,IAEtBitB,UAAEA,IAAc/sB,UCCtB,MAAMgtB,SAAEA,IAAatwB,GCArB,eAAQswB,SAAUpsB,YAAOxN,IAAasJ,GCwBtC,OA5BoB,CACnBuwB,WdEgB,SAA8B7rB,GAE9C,SAAS8rB,EAASC,EAAM5qC,EAAS8rB,EAAKpY,GACrC,OAAIlD,GAAWo6B,GACPA,EAAKt5B,KAAKtR,EAAS8rB,EAAKpY,GACrBrC,MAAMiK,QAAQsvB,GACjBA,EAAK39B,QAAO,CAACgG,EAAGxC,IAAOwC,EAAEC,MAAKQ,GAAOjD,EAAGa,KAAKtR,EAAS8rB,EAAKpY,MAAOmL,EAAOjR,QAAQC,QAAQ6F,SAD1F,EAKR,SAASm3B,EAAcD,EAAM5qC,EAAS8rB,EAAK5qB,GAC1C,OAAIsP,GAAWo6B,GACPA,EAAKt5B,KAAKtR,EAAS8rB,EAAK5qB,GACrBmQ,MAAMiK,QAAQsvB,GACjBA,EAAK39B,QAAO,CAACgG,EAAGxC,IAAOwC,EAAEc,OAAM7S,GAAOuP,EAAGa,KAAKtR,EAAS8rB,EAAK5qB,MAAO2d,EAAOjR,QAAQE,OAAO5M,SAD1F,EAYR,SAAS4pC,EAAcC,EAAO/qC,GAC7B,OAAI0Q,GAASq6B,GACL/qC,GAAWwQ,GAAWxQ,EAAQ+qC,IAAU/qC,EAAQ+qC,GAAS,KAE7D15B,MAAMiK,QAAQyvB,GACV/uB,UAAE+K,QAAQgkB,EAAMx8B,KAAIy8B,GACtBt6B,GAASs6B,GACLhrC,GAAWwQ,GAAWxQ,EAAQgrC,IAAMhrC,EAAQgrC,GAAK,KAElDA,KAIFD,EA2ER,MAAO,CACNnqC,KAAM,aACNohC,YA1ED,SAAkC1kC,EAASyC,GAC1C,MAAMa,EAAOb,EAAOkrC,SAAWlrC,EAAOa,KAChCmqC,EAAQhrC,EAAOC,SAAWD,EAAOC,QAAQuiC,OAASxiC,EAAOC,QAAQuiC,OAAOwI,MAAQ,KACtF,GAAIA,GAAShrC,EAAOgrC,MAAO,CAE1B,MAAMG,EAAgBH,GAASA,EAAMI,OAASL,EAAcC,EAAMI,OAAO,KAAMprC,EAAOC,SAAW,KAC3ForC,EAAeL,GAASA,EAAMM,MAAQP,EAAcC,EAAMM,MAAM,KAAMtrC,EAAOC,SAAW,KACxFsrC,EAAeP,GAASA,EAAMpf,MAAQmf,EAAcC,EAAMpf,MAAM,KAAM5rB,EAAOC,SAAW,KAGxFurC,EAAaR,GAASA,EAAMI,OAASL,EAAcC,EAAMI,OAAOvqC,GAAOb,EAAOC,SAAW,KACzFwrC,EAAYT,GAASA,EAAMM,MAAQP,EAAcC,EAAMM,MAAMzqC,GAAOb,EAAOC,SAAW,KACtFyrC,EAAYV,GAASA,EAAMpf,MAAQmf,EAAcC,EAAMpf,MAAM/qB,GAAOb,EAAOC,SAAW,KAGtF0rC,EAAmB3rC,EAAOgrC,OAAShrC,EAAOgrC,MAAMI,OAASL,EAAc/qC,EAAOgrC,MAAMI,OAAQprC,EAAOC,SAAW,KAC9G2rC,EAAkB5rC,EAAOgrC,OAAShrC,EAAOgrC,MAAMM,MAAQP,EAAc/qC,EAAOgrC,MAAMM,MAAOtrC,EAAOC,SAAW,KAC3G4rC,EAAkB7rC,EAAOgrC,OAAShrC,EAAOgrC,MAAMpf,MAAQmf,EAAc/qC,EAAOgrC,MAAMpf,MAAO5rB,EAAOC,SAAW,KAEjH,GAAIkrC,GAAiBK,GAAcG,GAC/BN,GAAgBI,GAAaG,GAC7BL,GAAgBG,GAAaG,EAChC,OAAO,SAA8B9f,GACpC,IAAI7Y,EAAI4L,EAAOjR,QAAQC,UAyCvB,OAtCIq9B,IACHj4B,EAAIA,EAAEC,MAAK,IAAMy3B,EAASO,EAAepf,EAAI9rB,QAAS8rB,MAGnDyf,IACHt4B,EAAIA,EAAEC,MAAK,IAAMy3B,EAASY,EAAYzf,EAAI9rB,QAAS8rB,MAGhD4f,IACHz4B,EAAIA,EAAEC,MAAK,IAAMy3B,EAASe,EAAkB5f,EAAI9rB,QAAS8rB,MAG1D7Y,EAAIA,EAAEC,MAAK,IAAM5V,EAAQwuB,KAGrB6f,IACH14B,EAAIA,EAAEC,MAAKQ,GAAOi3B,EAASgB,EAAiB7f,EAAI9rB,QAAS8rB,EAAKpY,MAG3D83B,IACHv4B,EAAIA,EAAEC,MAAKQ,GAAOi3B,EAASa,EAAW1f,EAAI9rB,QAAS8rB,EAAKpY,MAGrD03B,IACHn4B,EAAIA,EAAEC,MAAKQ,GAAOi3B,EAASS,EAActf,EAAI9rB,QAAS8rB,EAAKpY,MAGxDk4B,IACH34B,EAAIA,EAAEc,OAAM7S,GAAO2pC,EAAce,EAAiB9f,EAAI9rB,QAAS8rB,EAAK5qB,MAGjEuqC,IACHx4B,EAAIA,EAAEc,OAAM7S,GAAO2pC,EAAcY,EAAW3f,EAAI9rB,QAAS8rB,EAAK5qB,MAG3DoqC,IACHr4B,EAAIA,EAAEc,OAAM7S,GAAO2pC,EAAcS,EAAcxf,EAAI9rB,QAAS8rB,EAAK5qB,MAE3D+R,GAKV,OAAO3V,Kc/GRuuC,SbCgB,SAA4BhtB,GAiK5C,MAAO,CACNje,KAAM,WAENlG,UACKmkB,EAAO+K,qBACV/K,EAAOsJ,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOlS,oCAAqCnJ,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,SAAU,aAC5HsG,EAAOsJ,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOjS,sCAAuCpJ,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,SAAU,aAE9HsG,EAAOsJ,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOhS,kCAAmCrJ,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,QAAS,aACzHsG,EAAOsJ,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO/R,oCAAqCtJ,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,QAAS,eAI7HypB,YA5KD,SAAsC1kC,EAASyC,GAC9C,MAAMC,EAAUD,EAAOC,QAEjBoY,EAAOpH,OAAOqL,OAAO,GAAIzhB,KAAKwQ,QAAQ0gC,UAAY,GAAI/rC,EAAO+rC,UAAY,IAC/E,GAAI1zB,EAAKzL,QAAS,CACjB,MAAMo/B,EAAQ,GACd,IAAIC,EAAkB,EAGtB,MAAMC,EAAW,SAASA,IAEzB,GAAoB,GAAhBF,EAAMj/B,OAAa,OAGvB,GAAIk/B,GAAmB5zB,EAAK8zB,YAAa,OAEzC,MAAMl6B,EAAO+5B,EAAM90B,QAEnB+0B,IACAntB,EAAOsJ,QAAQ5S,IAAI8E,GAAOlS,oCAAqC6jC,EAAiB,CAAEjsC,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WACxHhZ,EAAOsJ,QAAQ5S,IAAI8E,GAAOjS,sCAAuC2jC,EAAMj/B,OAAQ,CAAE/M,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WAEvHv6B,EAAQ0U,EAAK8Z,KACX5Y,MAAKQ,IACLs4B,IACAntB,EAAOsJ,QAAQ5S,IAAI8E,GAAOlS,oCAAqC6jC,EAAiB,CAAEjsC,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WACxHhZ,EAAOsJ,QAAQ5S,IAAI8E,GAAOjS,sCAAuC2jC,EAAMj/B,OAAQ,CAAE/M,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WACvH7lB,EAAKnE,QAAQ6F,GACbu4B,OAEAl4B,OAAM7S,IACN8qC,IACAntB,EAAOsJ,QAAQ5S,IAAI8E,GAAOlS,oCAAqC6jC,EAAiB,CAAEjsC,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WACxHhZ,EAAOsJ,QAAQ5S,IAAI8E,GAAOjS,sCAAuC2jC,EAAMj/B,OAAQ,CAAE/M,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WACvH7lB,EAAKlE,OAAO5M,GACZ+qC,QAIH,OAAO,SAA4BngB,GAElC,GAAIkgB,EAAkB5zB,EAAK8zB,YAI1B,OAHAF,IACAntB,EAAOsJ,QAAQ5S,IAAI8E,GAAOlS,oCAAqC6jC,EAAiB,CAAEjsC,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WACxHhZ,EAAOsJ,QAAQ5S,IAAI8E,GAAOjS,sCAAuC2jC,EAAMj/B,OAAQ,CAAE/M,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WAChHv6B,EAAQwuB,GACb5Y,MAAKQ,IACLs4B,IACAntB,EAAOsJ,QAAQ5S,IAAI8E,GAAOlS,oCAAqC6jC,EAAiB,CAAEjsC,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WACxHhZ,EAAOsJ,QAAQ5S,IAAI8E,GAAOjS,sCAAuC2jC,EAAMj/B,OAAQ,CAAE/M,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WACvHoU,IACOv4B,KAEPK,OAAM7S,IACN8qC,IACAntB,EAAOsJ,QAAQ5S,IAAI8E,GAAOlS,oCAAqC6jC,EAAiB,CAAEjsC,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WACxHhZ,EAAOsJ,QAAQ5S,IAAI8E,GAAOjS,sCAAuC2jC,EAAMj/B,OAAQ,CAAE/M,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WACvHoU,IACOptB,EAAOjR,QAAQE,OAAO5M,MAKhC,GAAIkX,EAAKkW,cAAgByd,EAAMj/B,QAAUsL,EAAKkW,aAC7C,OAAOzP,EAAOjR,QAAQE,OAAO,IAAIxN,GAAiB,CAAEP,OAAQ+rB,EAAI/rB,OAAOa,KAAMd,OAAQgsB,EAAIhsB,UAI1F,MAAMmT,EAAI,IAAIrF,SAAQ,CAACC,EAASC,IAAWi+B,EAAMn/B,KAAK,CAAEiB,QAAAA,EAASC,OAAAA,EAAQge,IAAAA,MAGzE,OAFAjN,EAAOsJ,QAAQ5S,IAAI8E,GAAOjS,sCAAuC2jC,EAAMj/B,OAAQ,CAAE/M,OAAQA,EAAOa,KAAMZ,QAASA,EAAQ63B,WAEhH5kB,GAENpV,KAAKjD,MAGR,OAAO0C,GAiGP6kC,WA9FD,SAAqC7kC,EAASsuB,GAC7C,MAAM5rB,EAAU4rB,EAAM5rB,QAEhBoY,EAAOpH,OAAOqL,OAAO,GAAIzhB,KAAKwQ,QAAQ0gC,UAAY,GAAIlgB,EAAMkgB,UAAY,IAC9E,GAAI1zB,EAAKzL,QAAS,CACjB,MAAMo/B,EAAQ,GACd,IAAIC,EAAkB,EAGtB,MAAMC,EAAW,SAASA,IAEzB,GAAoB,GAAhBF,EAAMj/B,OAAa,OAGvB,GAAIk/B,GAAmB5zB,EAAK8zB,YAAa,OAEzC,MAAMl6B,EAAO+5B,EAAM90B,QAEnB+0B,IACAntB,EAAOsJ,QAAQ5S,IAAI8E,GAAOhS,kCAAmC2jC,EAAiB,CAAEpgB,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WACpHhZ,EAAOsJ,QAAQ5S,IAAI8E,GAAO/R,oCAAqCyjC,EAAMj/B,OAAQ,CAAE8e,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WAEnHv6B,EAAQ0U,EAAK8Z,KACX5Y,MAAKQ,IACLs4B,IACAntB,EAAOsJ,QAAQ5S,IAAI8E,GAAOhS,kCAAmC2jC,EAAiB,CAAEpgB,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WACpHhZ,EAAOsJ,QAAQ5S,IAAI8E,GAAO/R,oCAAqCyjC,EAAMj/B,OAAQ,CAAE8e,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WACnH7lB,EAAKnE,QAAQ6F,GACbu4B,OAEAl4B,OAAM7S,IACN8qC,IACAntB,EAAOsJ,QAAQ5S,IAAI8E,GAAOhS,kCAAmC2jC,EAAiB,CAAEpgB,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WACpHhZ,EAAOsJ,QAAQ5S,IAAI8E,GAAO/R,oCAAqCyjC,EAAMj/B,OAAQ,CAAE8e,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WACnH7lB,EAAKlE,OAAO5M,GACZ+qC,QAIH,OAAO,SAA4BngB,GAElC,GAAIkgB,EAAkB5zB,EAAK8zB,YAI1B,OAHAF,IACAntB,EAAOsJ,QAAQ5S,IAAI8E,GAAOhS,kCAAmC2jC,EAAiB,CAAEpgB,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WACpHhZ,EAAOsJ,QAAQ5S,IAAI8E,GAAO/R,oCAAqCyjC,EAAMj/B,OAAQ,CAAE8e,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WAC5Gv6B,EAAQwuB,GACb5Y,MAAKQ,IACLs4B,IACAntB,EAAOsJ,QAAQ5S,IAAI8E,GAAOhS,kCAAmC2jC,EAAiB,CAAEpgB,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WACpHhZ,EAAOsJ,QAAQ5S,IAAI8E,GAAO/R,oCAAqCyjC,EAAMj/B,OAAQ,CAAE8e,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WACnHoU,IACOv4B,KAEPK,OAAM7S,IACN8qC,IACAntB,EAAOsJ,QAAQ5S,IAAI8E,GAAOhS,kCAAmC2jC,EAAiB,CAAEpgB,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WACpHhZ,EAAOsJ,QAAQ5S,IAAI8E,GAAO/R,oCAAqCyjC,EAAMj/B,OAAQ,CAAE8e,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WACnHoU,IACOptB,EAAOjR,QAAQE,OAAO5M,MAKhC,GAAIkX,EAAKkW,cAAgByd,EAAMj/B,QAAUsL,EAAKkW,aAC7C,OAAOzP,EAAOjR,QAAQE,OAAO,IAAIxN,GAAiB,CAAEsrB,MAAOE,EAAIvL,UAAWvgB,QAASA,EAAQ63B,SAAU/3B,OAAQgsB,EAAIhsB,UAIlH,MAAMmT,EAAI,IAAIrF,SAAQ,CAACC,EAASC,IAAWi+B,EAAMn/B,KAAK,CAAEiB,QAAAA,EAASC,OAAAA,EAAQge,IAAAA,MAGzE,OAFAjN,EAAOsJ,QAAQ5S,IAAI8E,GAAO/R,oCAAqCyjC,EAAMj/B,OAAQ,CAAE8e,MAAOA,EAAMhrB,KAAMZ,QAASA,EAAQ63B,WAE5G5kB,GAENpV,KAAKjD,MAGR,OAAO0C,Ka7JR6uC,eZDgB,SAAkCttB,GAYlD,SAASutB,EAActgB,GACtB,GAAIA,EAAI9rB,QAAS,CAChB,MAAMiS,EAAM6Z,EAAI9rB,QAAQqsC,iBAAiBn6B,QAAQ4Z,IACpC,IAAT7Z,GACH6Z,EAAI9rB,QAAQqsC,iBAAiBl6B,OAAOF,EAAK,OACpC,CACN,MAAMA,EAAM6Z,EAAIjN,OAAOwtB,iBAAiBn6B,QAAQ4Z,IACnC,IAAT7Z,GACH6Z,EAAIjN,OAAOwtB,iBAAiBl6B,OAAOF,EAAK,IAI3C,SAASq6B,EAAsBhvC,GAC9B,OAAI1C,KAAKwQ,QAAQmhC,UAAY3xC,KAAKwQ,QAAQmhC,SAAS5/B,QAE3C,SAAkCmf,GAKxC,KAHwC,MAAxBA,EAAI1gB,QAAQmhC,SAAmBzgB,EAAI1gB,QAAQmhC,SAAW3xC,KAAKwQ,QAAQmhC,SAAS5/B,SAI3F,OAAOrP,EAAQwuB,IA/BnB,SAAoBA,GACfA,EAAI9rB,QAEP8rB,EAAI9rB,QAAQqsC,iBAAiBz/B,KAAKkf,GAGlCA,EAAIjN,OAAOwtB,iBAAiBz/B,KAAKkf,GA4BhC0gB,CAAW1gB,GAGX,IAAI7Y,EAAI3V,EAAQwuB,GAUhB,OARA7Y,EAAIA,EAAEC,MAAKQ,IACV04B,EAActgB,GACPpY,KACLK,OAAM7S,IAER,MADAkrC,EAActgB,GACR5qB,KAGA+R,GACNpV,KAAKjD,MAGD0C,EAGR,SAASmvC,EAAyBl6B,EAAMuM,EAAQtS,EAAMxM,GACrD,OAAKuS,GAAwB,IAAhBA,EAAKzF,OAGX,IAAI+R,EAAOjR,SAASC,IAC1B,IAAI6+B,GAAW,EACf,MAAM/4B,EAAUF,cAAW,KAC1Bi5B,GAAW,EACX5tB,EAAO6M,MAAM,IAAIhrB,GAAyB,CAAEX,QAAAA,KAC5CuS,EAAKzF,OAAS,EACde,MACErB,GAEH,IAAI8Y,GAAQ,EACZ,MAAMqnB,EAAmB,KACJ,IAAhBp6B,EAAKzF,QACRgH,aAAaH,GACb9F,MAEIyX,IACHxG,EAAOpJ,KAAK,eAAenD,EAAKzF,gCAChCwY,GAAQ,GAEJonB,GACJj5B,aAAWk5B,EAAkB,OAGhC1e,aAAa0e,MAzBN9tB,EAAOjR,QAAQC,UA6BxB,MAAO,CACNjN,KAAM,iBAENohC,YAAasK,EACbM,aAAcN,EAEdnK,WAAYmK,EAGZ5xC,QAAQmkB,GACPA,EAAOwtB,iBAAmB,IAI3B3xC,gBAAgBsF,GACfA,EAAQqsC,iBAAmB,IAI5BQ,gBAAgB7sC,GACRysC,EAAyBzsC,EAAQqsC,iBAAkBrsC,EAAQ8e,OAAQ9e,EAAQ83B,SAASgV,kBAAoB9sC,EAAQ6e,OAAOzT,QAAQmhC,SAASQ,gBAAiB/sC,GAIjKgtC,SAASnuB,GACD4tB,EAAyB5tB,EAAOwtB,iBAAkBxtB,EAAOC,OAAQD,EAAOzT,QAAQmhC,SAASQ,mBY9GlGE,eXDgB,SAAkCpuB,GAElD,IAAIquB,EACJ,MAAMvqB,EAAQ,IAAIlT,IAClB,IAAIqP,EAOJ,SAASquB,EAAkBC,GACrBF,IACJA,EAAcvzB,eAAY,IAQ5B,WACC,IAAKmF,EAAQ,OAEbA,EAAO6B,MAAM,4CACbgC,EAAMnO,SAAQ,CAACxC,EAAMyC,KACpB,GAAkB,GAAdzC,EAAKkJ,MAGR,OAFA4D,EAAO6B,MAAM,WAAWlM,iDACxBkO,EAAMiL,OAAOnZ,GAIdqK,EAAO6B,MAAM,UAAUlM,sBACvBzC,EAAKkJ,MAAQ,EACblJ,EAAKq7B,SAAW,KArBgBC,IAAmC,KAApBF,GAAc,KAC7DF,EAAYrzB,SAgCd,SAAS0zB,EAAWjb,EAAItyB,EAASoY,GAChC,IAAIpG,EAAO2Q,EAAMvN,IAAIkd,EAAG1xB,MAaxB,OAZKoR,IACJA,EAAO,CACNsgB,GAAAA,EACAtyB,QAAAA,EACAoY,KAAAA,EACA8C,MAAO,EACPmyB,SAAU,EACVtT,MAAOyT,EAAEvzC,cACTwzC,QAAS,MAEV9qB,EAAMpN,IAAI+c,EAAG1xB,KAAMoR,IAEbA,EAuBR,SAASqc,EAAQrc,EAAM8Z,GACtB9Z,EAAKkJ,QAEDlJ,EAAK+nB,QAAUyT,EAAErzC,uBAkGtB,SAAsB6X,GACrBA,EAAK+nB,MAAQyT,EAAEvzC,cACf+X,EAAKsgB,GAAGyH,OAAQ,EAChB/nB,EAAKq7B,SAAW,EAChBr7B,EAAKkJ,MAAQ,EAEb,MAAMnb,EAASiS,EAAKsgB,GAAGvyB,OACjBC,EAAUgS,EAAKhS,QAAQ63B,SAE7B/Y,EAAO6B,MAAM,uCAAuC3O,EAAKsgB,GAAG1xB,kBAAmB,CAAEd,OAAQkS,EAAKsgB,GAAGtG,GAAIhsB,QAAAA,EAASD,OAAQA,EAAOa,OAE7Hie,EAAO2B,UAAU,0BAA2B,CAAE1gB,OAAQkS,EAAKsgB,GAAGtG,GAAIhsB,QAAAA,EAASD,OAAQA,EAAOa,OAE1Fie,EAAOsJ,QAAQ5S,IAAI8E,GAAOtS,wCAAyC,EAAG,CAAE2lC,eAAgB17B,EAAKsgB,GAAGtG,GAAIhsB,QAAAA,EAASD,OAAQA,EAAOa,OAC5Hie,EAAOsJ,QAAQ5S,IAAI8E,GAAOpS,6CAA8C,EAAG,CAAEylC,eAAgB17B,EAAKsgB,GAAGtG,GAAIhsB,QAAAA,EAASD,OAAQA,EAAOa,OAE7HoR,EAAKy7B,UACR35B,aAAa9B,EAAKy7B,SAClBz7B,EAAKy7B,QAAU,MAnHfE,CAAa37B,GAEb47B,EAAe57B,GASjB,SAAS47B,EAAe57B,EAAM8Z,GAC7B,GAAI9Z,EAAKkJ,OAASlJ,EAAKoG,KAAKy1B,gBAAiB,CAC/B77B,EAAKq7B,SAAWr7B,EAAKkJ,OACtBlJ,EAAKoG,KAAK01B,WAWxB,SAAc97B,EAAM8Z,GACnB,GAAI9Z,EAAK+nB,OAASyT,EAAEpzC,aAAc,OAElC4X,EAAK+nB,MAAQyT,EAAEpzC,aACf4X,EAAKsgB,GAAGyH,OAAQ,EAEZ/nB,EAAKy7B,UACR35B,aAAa9B,EAAKy7B,SAClBz7B,EAAKy7B,QAAU,MAGhBz7B,EAAKy7B,QAAUh6B,cAAW,IAAMs6B,EAAS/7B,IAAYA,EAAKoG,KAAK41B,cAC/Dh8B,EAAKy7B,QAAQ5zB,QAEb,MAAM9Z,EAASiS,EAAKsgB,GAAGvyB,OACjBC,EAAUgS,EAAKhS,QAAQ63B,SAEvBre,EAAOxH,EAAKkJ,MAAQ,EAAIlJ,EAAKq7B,SAAWr7B,EAAKkJ,MAAQ,EAC3D4D,EAAO6B,MAAM,uCAAuC3O,EAAKsgB,GAAG1xB,kBAAmB,CAAEd,OAAQkS,EAAKsgB,GAAGtG,GAAIhsB,QAAAA,EAASD,OAAQA,EAAOa,KAAMysC,SAAUr7B,EAAKq7B,SAAUnyB,MAAOlJ,EAAKkJ,MAAO1B,KAAAA,IAC/KqF,EAAO2B,UAAU,0BAA2B,CAAE1gB,OAAQkS,EAAKsgB,GAAGtG,GAAIhsB,QAAAA,EAASD,OAAQA,EAAOa,KAAMysC,SAAUr7B,EAAKq7B,SAAUnyB,MAAOlJ,EAAKkJ,MAAO1B,KAAAA,IAE5IqF,EAAOsJ,QAAQ5S,IAAI8E,GAAOtS,wCAAyC,EAAG,CAAE2lC,eAAgB17B,EAAKsgB,GAAGtG,GAAIhsB,QAAAA,EAASD,OAAQA,EAAOa,OAC5Hie,EAAOsJ,QAAQpG,UAAU1H,GAAOrS,uCAAwC,CAAE0lC,eAAgB17B,EAAKsgB,GAAGtG,GAAIhsB,QAAAA,EAASD,OAAQA,EAAOa,OAhC5HqtC,CAAKj8B,IAyCR,SAAS+7B,EAAS/7B,GACjBA,EAAK+nB,MAAQyT,EAAEtzC,kBACf8X,EAAKsgB,GAAGyH,OAAQ,EAEhB,MAAMh6B,EAASiS,EAAKsgB,GAAGvyB,OACjBC,EAAUgS,EAAKhS,QAAQ63B,SAE7B/Y,EAAO6B,MAAM,4CAA4C3O,EAAKsgB,GAAG1xB,kBAAmB,CAAEd,OAAQkS,EAAKsgB,GAAGtG,GAAIhsB,QAAAA,EAASD,OAAQA,EAAOa,OAElIie,EAAO2B,UAAU,+BAAgC,CAAE1gB,OAAQkS,EAAKsgB,GAAGtG,GAAIhsB,QAAAA,EAASD,OAAQA,EAAOa,OAE/Fie,EAAOsJ,QAAQ5S,IAAI8E,GAAOtS,wCAAyC,EAAG,CAAE2lC,eAAgB17B,EAAKsgB,GAAGtG,GAAIhsB,QAAAA,EAASD,OAAQA,EAAOa,OAC5Hie,EAAOsJ,QAAQ5S,IAAI8E,GAAOpS,6CAA8C,EAAG,CAAEylC,eAAgB17B,EAAKsgB,GAAGtG,GAAIhsB,QAAAA,EAASD,OAAQA,EAAOa,OAE7HoR,EAAKy7B,UACR35B,aAAa9B,EAAKy7B,SAClBz7B,EAAKy7B,QAAU,MAsDjB,SAASS,EAAiB5wC,EAASyC,GAClC,MAAMC,EAAUD,EAAOC,QAEjBoY,EAAOpH,OAAOqL,OAAO,GAAIzhB,KAAKwQ,QAAQ+iC,gBAAkB,GAAIpuC,EAAOouC,gBAAkB,IAC3F,OAAI/1B,EAAKzL,QACD,SAAkCmf,GAExC,MAAMwG,EAAKxG,EAAIe,SACT7a,EAAOu7B,EAAWjb,EAAItyB,EAASoY,GAQrC,OALIpG,EAAK+nB,OAASyT,EAAEtzC,mBAvDvB,SAAsB8X,EAAM8Z,GAC3B9Z,EAAK+nB,MAAQyT,EAAErzC,uBACf6X,EAAKsgB,GAAGyH,OAAQ,EAGhB/nB,EAAKy7B,QAAUh6B,cAAW,IAAMs6B,EAAS/7B,IAAYA,EAAKoG,KAAK41B,cAC/Dh8B,EAAKy7B,QAAQ5zB,QAkDVu0B,CAAap8B,GAIP1U,EAAQwuB,GAAK5Y,MAAKQ,IAExB2a,EADakf,EAAWjb,EAAItyB,EAASoY,IAG9B1E,KACLK,OAAM7S,IACR,GAAIkX,EAAK6pB,OAAS7pB,EAAK6pB,MAAM/gC,IAExB8Q,KAAU9Q,EAAIpB,QAAUoB,EAAIpB,QAAUgsB,EAAIhsB,QAAS,EAvK5D,SAAiBkS,EAAM9Q,EAAK4qB,GAC3B9Z,EAAKkJ,QACLlJ,EAAKq7B,WAELO,EAAe57B,GAqKVq8B,CADad,EAAWjb,EAAItyB,EAASoY,IAKvC,OAAOxd,KAAKgT,QAAQE,OAAO5M,OAE3BrD,KAAKjD,MAGD0C,EAIR,MAAO,CACNsD,KAAM,iBAENlG,QAAQmkB,GACPC,EAASD,EAAO4H,UAAU,mBAG1B5H,EAAOyvB,oBAAsB3rB,EAE7B,MAAMvK,EAAOyG,EAAOzT,QAAQ+iC,eACxB/1B,EAAKzL,UACRwgC,EAAkB/0B,EAAKg1B,YAEnBvuB,EAAO+K,qBACV/K,EAAOsJ,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOtS,wCAAyC/I,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,iBAAkB,UAAW,UAAWD,YAAa,6CAC3KuG,EAAOsJ,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOrS,uCAAwChJ,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,iBAAkB,UAAW,UAAWD,YAAa,sCAC5KuG,EAAOsJ,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOpS,6CAA8CjJ,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,iBAAkB,UAAW,UAAWD,YAAa,qDAKnL0pB,YAAakM,EACbtB,aAAcsB,EAEdxzC,UACKwyC,GACH/lB,cAAc+lB,UAGRruB,EAAOyvB,uBWvRhBC,QVFgB,SAAS1vB,GAEzB,SAAS2vB,EAAsBlxC,EAASyC,GACvC,MAAM0uC,EAAgB1uC,EAAO4T,QACvBunB,EAAan7B,EAAOa,KACpBZ,EAAUD,EAAOC,QAAUD,EAAOC,QAAQ63B,SAAW,KAE3D,OAAO,SAA2B/L,GAGN,MAAvBA,EAAI1gB,QAAQuI,UAEdmY,EAAI1gB,QAAQuI,QADQ,MAAjB86B,EACmBA,EAEA5vB,EAAOzT,QAAQsjC,gBAGnC5iB,EAAI1gB,QAAQuI,QAAU,IAAMmY,EAAI6iB,cAEnC7iB,EAAI6iB,YAAchxC,EAAQ/B,UAI3B,MAAMqX,EAAI3V,EAAQwuB,GAClB,OAAIA,EAAI1gB,QAAQuI,QAAU,GAAKV,EAAEU,QACzBV,EAAEU,QAAQmY,EAAI1gB,QAAQuI,SAC3BI,OAAM7S,IACN,GAAIA,aAAe2d,EAAOjR,QAAQwC,aAAc,CAC/C,MAAMtQ,EAASgsB,EAAIhsB,OACnBlF,KAAKkkB,OAAOpJ,KAAK,YAAYwlB,mBAA6B,CAAEhvB,UAAW4f,EAAI5f,UAAWpM,OAAAA,EAAQ6T,QAASmY,EAAI1gB,QAAQuI,UACnHzS,EAAM,IAAIf,GAAoB,CAAEJ,OAAQm7B,EAAYp7B,OAAAA,IAEpD+e,EAAOsJ,QAAQpG,UAAU1H,GAAO7R,gCAAiC,CAAExI,QAAAA,EAASD,OAAQm7B,IAErF,MAAMh6B,KAIF+R,GAENpV,KAAKjD,MAGR,MAAO,CACNgG,KAAM,UAENlG,QAAQmkB,GACHA,EAAO+K,oBACV/K,EAAOsJ,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO7R,gCAAiCxJ,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,UAAW,UAAWD,YAAa,+BAAgCkB,MAAM,KAI3LwoB,YAAawM,EACb5B,aAAc4B,IUlDfI,MTJgB,SAAyB/vB,GAEzC,SAASgwB,EAAoBvxC,EAASyC,GACrC,MAAMm7B,EAAan7B,EAAOa,KACpBZ,EAAUD,EAAOC,QAAUD,EAAOC,QAAQ63B,SAAW,KAErDzf,EAAOpH,OAAOqL,OAAO,GAAIzhB,KAAKwQ,QAAQ0jC,YAAa/uC,EAAO+uC,aAAe,IAC/E,OAAI12B,EAAKzL,QACD,SAAyBmf,GAC/B,MAAMijB,EAA0C,iBAAxBjjB,EAAI1gB,QAAQ4jC,QAAuBljB,EAAI1gB,QAAQ4jC,QAAU52B,EAAK42B,QAKtF,OAJ0B,MAAtBljB,EAAImjB,iBACPnjB,EAAImjB,eAAiB,GAGf3xC,EAAQwuB,GAAK/X,OAAM7S,IAIzB,GAAI4qB,EAAIhsB,QAAU+e,EAAO/e,QAAUgsB,EAAIe,SAASwI,MAC/C,OAAOznB,QAAQE,OAAO5M,GAGvB,GAAIkX,EAAK6pB,MAAM/gC,KACd2d,EAAOsJ,QAAQpG,UAAU1H,GAAO9R,uCAAwC,CAAEvI,QAAAA,EAASD,OAAQA,EAAOa,OAE9FkrB,EAAImjB,eAAiBF,GAAU,CAElCjjB,EAAImjB,iBAGAnjB,EAAIojB,OACPpjB,EAAIojB,KAAKC,SAASjuC,GAClB4qB,EAAIojB,KAAKE,QAAQ,CAAEC,cAAevjB,EAAImjB,iBACtCnjB,EAAIwjB,WAAWxjB,EAAIojB,OAIpB,MAAM37B,EAAQ7W,KAAK6c,IAAInB,EAAK7E,MAAQ7W,KAAKuT,IAAImI,EAAKiD,OAAQyQ,EAAImjB,eAAiB,GAAI72B,EAAKm3B,UAKxF,OAHA1wB,EAAOC,OAAOpJ,KAAK,kBAAkBwlB,mBAA4B3nB,UAAe,CAAErH,UAAW4f,EAAI5f,UAAW6iC,SAAUjjB,EAAImjB,iBAGnHpwB,EAAOjR,QAAQ2F,MAAMA,GAC1BL,MAAK,KACL,MAAM0nB,EAAS9O,EAAIsD,OAGnB,OAFAwL,EAAOqU,eAAiBnjB,EAAImjB,eAEH,WAArBlvC,EAAOs8B,WACHvQ,EAAI9rB,QAAQ+3B,QAAQh4B,EAAOkrC,SAASnf,EAAIkB,OAAQ,CAAElB,IAAK8O,IAExD/b,EAAOvN,KAAK4pB,EAAYpP,EAAIkB,OAAQ,CAAElB,IAAK8O,OAMtD,OAAOhtB,QAAQE,OAAO5M,OAEtBrD,KAAKjD,MAGD0C,EAGR,MAAO,CACNsD,KAAM,QAENlG,UACKmkB,EAAO+K,oBACV/K,EAAOsJ,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO9R,uCAAwCvJ,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,UAAW,UAAWD,YAAa,oBAAqBkB,MAAM,KAIvLwoB,YAAa6M,EACbjC,aAAciC,ISrEfW,SRHgB,SAA4B3wB,GAa5C,SAAS4wB,EAAuBnyC,EAASyC,GACxC,OAAO,SAA4B+rB,GAElC,OAAOxuB,EAAQwuB,GAAK/X,OAAM7S,IAGzB,GAAI4qB,EAAI1gB,QAAQskC,iBACf,OAlBJ,SAA+B5jB,EAAK5qB,GAKnC,OAJA2d,EAAOC,OAAOpJ,KAAK,QAAQoW,EAAI/rB,OAAOa,qDAAsD,CAAEsL,UAAW4f,EAAI5f,UAAWhL,IAAKA,EAAI7B,UACjIwf,EAAOsJ,QAAQpG,UAAU1H,GAAOnS,iCAAkC,CAAEnI,OAAQ+rB,EAAI/rB,OAAOa,OACvFkrB,EAAI6jB,gBAAiB,EAEjBn/B,GAAWsb,EAAI1gB,QAAQskC,kBACnB5jB,EAAI1gB,QAAQskC,iBAAiB5jB,EAAK5qB,GAElC0M,QAAQC,QAAQie,EAAI1gB,QAAQskC,kBAU1BE,CAAsB9jB,EAAK5qB,GAInC,GAAInB,EAAO8vC,UAAY9vC,EAAOC,QAAS,CACtC,MAAMi4B,EAAMl4B,EAAOC,QAEb6vC,EAAWn/B,GAAS3Q,EAAO8vC,UAAY5X,EAAIl4B,EAAO8vC,UAAY9vC,EAAO8vC,SAC3E,IAAKr/B,GAAWq/B,GAEf,MAAM,IAAI1wC,GAAe,sBAAsBY,EAAOa,wDAAwDb,EAAO8vC,YAOtH,OAJA5X,EAAInZ,OAAOpJ,KAAK,QAAQoW,EAAI/rB,OAAOa,qDAAsD,CAAEsL,UAAW4f,EAAI5f,UAAWhL,IAAKA,EAAI7B,UAC9Hwf,EAAOsJ,QAAQpG,UAAU1H,GAAOnS,iCAAkC,CAAElI,QAASi4B,EAAIJ,SAAU93B,OAAQA,EAAOa,OAC1GkrB,EAAI6jB,gBAAiB,EAEdE,EAASv+B,KAAK2mB,EAAKnM,EAAK5qB,GAGhC,OAAO0M,QAAQE,OAAO5M,OAEtBrD,KAAKjD,MAGR,MAAO,CACNgG,KAAM,WAENlG,QAAQmkB,GACHA,EAAO+K,oBACV/K,EAAOsJ,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOnS,iCAAkClJ,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,UAAW,UAAWD,YAAa,gCAAiCkB,MAAM,KAI7LwoB,YAAayN,EACb7C,aAAc6C,IQnDfK,aPyDgB,WAChB,MAAO,CACNlvC,KAAM,eAENohC,YAAa4H,GACbgD,aAAchD,GAEdzH,WAAY6H,KO/Db+F,QNPgB,SAA2BlxB,GAC3C,MAAMsJ,EAAUtJ,EAAOsJ,QAEvB,SAAS6nB,EAAiBhxC,EAAMixC,EAAW3V,GAC1C,MAAMv6B,EAASkwC,EAAUrvC,KACnBZ,EAAUiwC,EAAUjwC,QAAUiwC,EAAUjwC,QAAQ63B,SAAW,KAEjE,OAAO,SAA2B/L,GACjC,MAAMU,EAASV,EAAIU,OAEnBrE,EAAQpG,UAAU1H,GAAO/T,wBAAyB,CAAEtG,QAAAA,EAASD,OAAAA,EAAQysB,OAAAA,EAAQxtB,KAAAA,IAC7EmpB,EAAQpG,UAAU1H,GAAO9T,yBAA0B,CAAEvG,QAAAA,EAASD,OAAAA,EAAQysB,OAAAA,EAAQxtB,KAAAA,IAC9EmpB,EAAQpG,UAAU1H,GAAO3T,yBAA0B,CAAE1G,QAAAA,EAASD,OAAAA,EAAQysB,OAAAA,EAAQhsB,MAAOsrB,EAAItrB,QACzF,MAAMqkC,EAAU1c,EAAQvU,MAAMyG,GAAO5T,uBAAwB,CAAEzG,QAAAA,EAASD,OAAAA,EAAQysB,OAAAA,EAAQxtB,KAAAA,IAGxF,OAAOs7B,EAAKxO,GAAK5Y,MAAKQ,IACrBmxB,IACA1c,EAAQZ,UAAUlN,GAAO9T,yBAA0B,CAAEvG,QAAAA,EAASD,OAAAA,EAAQysB,OAAAA,EAAQxtB,KAAAA,IACvE0U,KACLK,OAAM7S,IAYR,MAXA2jC,IACA1c,EAAQZ,UAAUlN,GAAO9T,yBAA0B,CAAEvG,QAAAA,EAASD,OAAAA,EAAQysB,OAAAA,EAAQxtB,KAAAA,IAC9EmpB,EAAQpG,UAAU1H,GAAO7T,8BAA+B,CACvDxG,QAAAA,EACAD,OAAAA,EACAysB,OAAAA,EACAxtB,KAAAA,EACAkxC,UAAWhvC,EAAMA,EAAIN,KAAO,KAC5BuvC,UAAWjvC,EAAMA,EAAI9E,KAAO,KAC5Bg0C,UAAWlvC,EAAMA,EAAIlC,KAAO,OAEvBkC,MAMT,MAAO,CACNN,KAAM,UAENlG,UACKmkB,EAAO+K,qBAEVzB,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO/T,wBAAyBtH,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,UAAW,SAAU,OAAQ,UAAWN,KAAMoC,GAAOzP,aAAc0N,YAAa,qBAAsBkB,MAAM,IAC7M2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO9T,yBAA0BvH,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,UAAW,SAAU,OAAQ,UAAWN,KAAMoC,GAAOzP,aAAc0N,YAAa,8BAChL6P,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO7T,8BAA+BxH,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,UAAW,SAAU,OAAQ,SAAU,YAAa,YAAa,aAAcN,KAAMoC,GAAOzP,aAAc0N,YAAa,2BAA4BkB,MAAM,IAChQ2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO5T,uBAAwBzH,KAAMqb,GAAO9Y,eAAgBgX,WAAY,CAAC,UAAW,SAAU,OAAQ,UAAWkD,WAAW,EAAMV,SAAS,EAAM9C,KAAMoC,GAAOpQ,kBAAmBqO,YAAa,gCAAiCkB,MAAM,IAC9P2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO3T,yBAA0B1H,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,SAAUN,KAAMoC,GAAOzP,aAAc0N,YAAa,wCAKpJ6P,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO1T,2BAA4B3H,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,QAAS,UAAWN,KAAMoC,GAAOpP,WAAYqN,YAAa,2BAA4BkB,MAAM,IAChM2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOzT,gCAAiC5H,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,QAAS,UAAWN,KAAMoC,GAAOpP,WAAYqN,YAAa,6BAA8BkB,MAAM,IACvM2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOxT,qCAAsC7H,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,QAAS,UAAWN,KAAMoC,GAAOpP,WAAYqN,YAAa,mCAAoCkB,MAAM,IAElN2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOvT,+BAAgC9H,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,UAAW,QAAS,QAAS,UAAWN,KAAMoC,GAAOpP,WAAYqN,YAAa,4BAA6BkB,MAAM,IACzN2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOtT,gCAAiC/H,KAAMqb,GAAO/Y,WAAYiX,WAAY,CAAC,UAAW,QAAS,QAAS,UAAWN,KAAMoC,GAAOzP,aAAc0N,YAAa,sCACvL6P,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOrT,qCAAsChI,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,UAAW,QAAS,QAAS,SAAU,YAAa,YAAa,aAAcN,KAAMoC,GAAOzP,aAAc0N,YAAa,mCAAoCkB,MAAM,IAC/Q2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOpT,8BAA+BjI,KAAMqb,GAAO9Y,eAAgBgX,WAAY,CAAC,UAAW,QAAS,QAAS,UAAWkD,WAAW,EAAMV,SAAS,EAAM9C,KAAMoC,GAAOpQ,kBAAmBqO,YAAa,2CAA4CkB,MAAM,IAIhR2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOnT,gCAAiClI,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,QAASN,KAAMoC,GAAOvP,YAAawN,YAAa,8BAA+BkB,MAAM,IAC9L2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOlT,gCAAiCnI,KAAMqb,GAAOhZ,aAAckX,WAAY,CAAC,QAASN,KAAMoC,GAAOvP,YAAawN,YAAa,6BAA8BkB,MAAM,IAE7L2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOjT,kCAAmCpI,KAAMqb,GAAO/Y,WAAY2W,KAAMoC,GAAOzP,aAAc0N,YAAa,8BACpI6P,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOhT,sCAAuCrI,KAAMqb,GAAO/Y,WAAY2W,KAAMoC,GAAOrP,YAAasN,YAAa,kCAKvI6P,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO1S,yCAA0C3I,KAAMqb,GAAOhZ,aAAc4W,KAAMoC,GAAOvP,YAAawN,YAAa,yBAA0BkB,MAAM,IAC5K2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOzS,yCAA0C5I,KAAMqb,GAAOhZ,aAAc4W,KAAMoC,GAAO7Q,UAAW8O,YAAa,uBAAwBkB,MAAM,IACxK2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOxS,6CAA8C7I,KAAMqb,GAAOhZ,aAAc4W,KAAMoC,GAAOvP,YAAawN,YAAa,6BAA8BkB,MAAM,IACpL2O,EAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOvS,6CAA8C9I,KAAMqb,GAAOhZ,aAAc4W,KAAMoC,GAAO7Q,UAAW8O,YAAa,2BAA4BkB,MAAM,MAIlLwoB,YAAW,CAAC1H,EAAMv6B,IACb8e,EAAO+K,mBACHomB,EAAiB,QAASjwC,EAAQu6B,GAEnCA,EAGRsS,aAAY,CAACtS,EAAMv6B,IACd8e,EAAO+K,mBACHomB,EAAiB,SAAUjwC,EAAQu6B,GAEpCA,EAIR5/B,WAAW4/B,EAAM1O,GAChB,MAAM5rB,EAAU4rB,EAAM5rB,QAAU4rB,EAAM5rB,QAAQY,KAAO,KACrD,OAAIie,EAAO+K,mBACH,SAA2BkC,GACjC,MAAMiN,EAAQnN,EAAMmN,OAAS/4B,EAC7BmoB,EAAQpG,UAAU1H,GAAOvT,+BAAgC,CAAE9G,QAAAA,EAAS4rB,MAAOE,EAAIvL,UAAWwY,MAAAA,EAAOvM,OAAQV,EAAIU,SAC7GrE,EAAQpG,UAAU1H,GAAOtT,gCAAiC,CAAE/G,QAAAA,EAAS4rB,MAAOE,EAAIvL,UAAWwY,MAAAA,EAAOvM,OAAQV,EAAIU,SAC9G,MAAMqY,EAAU1c,EAAQvU,MAAMyG,GAAOpT,8BAA+B,CAAEjH,QAAAA,EAAS4rB,MAAOE,EAAIvL,UAAWwY,MAAAA,EAAOvM,OAAQV,EAAIU,SACxH,OAAO8N,EAAKjnB,MAAMzY,KAAM0Y,WAAWJ,MAAKQ,IACvCmxB,IACA1c,EAAQZ,UAAUlN,GAAOtT,gCAAiC,CAAE/G,QAAAA,EAAS4rB,MAAOE,EAAIvL,UAAWwY,MAAAA,EAAOvM,OAAQV,EAAIU,SACvG9Y,KACLK,OAAM7S,IASR,MARA2jC,IACA1c,EAAQZ,UAAUlN,GAAOtT,gCAAiC,CAAE/G,QAAAA,EAAS4rB,MAAOE,EAAIvL,UAAWwY,MAAAA,EAAOvM,OAAQV,EAAIU,SAC9GrE,EAAQpG,UAAU1H,GAAOrT,qCAAsC,CAC9DhH,QAAAA,EAAS4rB,MAAOE,EAAIvL,UAAWwY,MAAAA,EAAOvM,OAAQV,EAAIU,OAClD0jB,UAAWhvC,EAAMA,EAAIN,KAAO,KAC5BuvC,UAAWjvC,EAAMA,EAAI9E,KAAO,KAC5Bg0C,UAAWlvC,EAAMA,EAAIlC,KAAO,OAEvBkC,MAENrD,KAAKjD,MAGD0/B,GAIRj+B,KAAKi+B,GACAzb,EAAO+K,mBACH,WAEN,OADAzB,EAAQpG,UAAU1H,GAAO1T,2BAA4B,CAAEilB,MAAOtY,UAAU,KACjEgnB,EAAKjnB,MAAMzY,KAAM0Y,YAGnBgnB,EAIR9Z,UAAU8Z,GACLzb,EAAO+K,mBACH,WAEN,OADAzB,EAAQpG,UAAU1H,GAAOzT,gCAAiC,CAAEglB,MAAOtY,UAAU,KACtEgnB,EAAKjnB,MAAMzY,KAAM0Y,YAGnBgnB,EAIRrQ,eAAeqQ,GACVzb,EAAO+K,mBACH,WAEN,OADAzB,EAAQpG,UAAU1H,GAAOxT,qCAAsC,CAAE+kB,MAAOtY,UAAU,KAC3EgnB,EAAKjnB,MAAMzY,KAAM0Y,YAGnBgnB,EAIR5/B,eAAe4/B,GACd,MAAMpJ,EAAUt2B,KAChB,OAAIikB,EAAO+K,mBACH,WACNzB,EAAQpG,UAAU1H,GAAOnT,gCAAiC,CAAElI,KAAMsU,UAAU,GAAGtU,OAE/E,MAAMiU,EAAIqnB,EAAKjnB,MAAMzY,KAAM0Y,WAM3B,OAJA6U,EAAQpG,UAAU1H,GAAOjT,kCAAmC,KAAM8pB,EAAQ3I,gBAAgB9R,MAE1F0R,EAAQpG,UAAU1H,GAAOhT,sCAAuC,KAAM6pB,EAAQ1I,kBAAkB/R,KAAO7b,KAAK6tB,kBAAkBhS,MAEvHxD,GAGFqnB,GAIR+V,sBAAsB/V,GACjBzb,EAAO+K,mBACH,WAEN,OADAzB,EAAQpG,UAAU1H,GAAOlT,gCAAiC,CAAEnI,KAAMsU,UAAU,KACrEgnB,EAAKjnB,MAAMzY,KAAM0Y,YAGnBgnB,EAIRgW,gBAAgBhW,GACXzb,EAAO+K,mBACH,WACN,MAAMtqB,EAAOgU,UAAU,GAGvB,OAFA6U,EAAQpG,UAAU1H,GAAO1S,0CACzBwgB,EAAQpG,UAAU1H,GAAOzS,yCAA0C,KAAMtI,GAAQA,EAAKwN,OAASxN,EAAKwN,OAAS,GACtGwtB,EAAKjnB,MAAMzY,KAAM0Y,YAGnBgnB,EAIRiW,mBAAmBjW,GACdzb,EAAO+K,mBACH,WACN,MAAMtqB,EAAOgU,UAAU,GAGvB,OAFA6U,EAAQpG,UAAU1H,GAAOxS,8CACzBsgB,EAAQpG,UAAU1H,GAAOvS,6CAA8C,KAAMxI,GAAQA,EAAKwN,OAASxN,EAAKwN,OAAS,GAC1GwtB,EAAKjnB,MAAMzY,KAAM0Y,YAGnBgnB,IM1MTkW,QLPgB,SAA2B3xB,GAE3C,MAAM4xB,EAAS5xB,EAAO4xB,OAsOtB,MAAO,CACN7vC,KAAM,UAENohC,YAAanjB,EAAO6xB,oBAAsBD,EAAOr4B,KAAK2f,QAvOvD,SAAsCz6B,EAASyC,GAC9C,IAAIqY,EAAOrY,EAAOusB,QAKlB,OAJa,IAATlU,IAA0B,IAATA,IACpBA,EAAO,CAAEzL,UAAWyL,IACrBA,EAAO4D,UAAEsC,aAAa,GAAIlG,EAAM,CAAEzL,SAAS,IAEvCyL,EAAKzL,QACD,SAAsCmf,GAE5CA,EAAI5f,UAAY4f,EAAI5f,WAAaukC,EAAOE,oBACxC7kB,EAAIS,SAAWT,EAAIS,UAAYkkB,EAAOG,kBAEtC,MAAMC,EAAO,CACZC,aAAchlB,EAAItrB,MAClBT,OAAQ+rB,EAAI/rB,OAAS,CACpBa,KAAMkrB,EAAI/rB,OAAOa,KACjBqqC,QAASnf,EAAI/rB,OAAOkrC,SACjB,KACJ8F,WAAYjlB,EAAIhsB,SAAWgsB,EAAIjN,OAAO/e,OACtCkxC,aAAcllB,EAAIhsB,OAClBA,OAAQgsB,EAAIjN,OAAO/e,OACnBsL,QAAS,CACRuI,QAASmY,EAAI1gB,QAAQuI,QACrBq7B,QAASljB,EAAI1gB,QAAQ4jC,SAEtB9iC,UAAW4f,EAAI5f,WAEV+kC,EAAmBR,EAAOr4B,KAAKy4B,KAAK9wC,OAC1C,IAAImxC,EAWJ,GARCA,EADG1gC,GAAW4H,EAAKy4B,MACNz4B,EAAKy4B,MACPz4B,EAAKy4B,MAAQrgC,GAAWygC,GACtBA,EAGA,CAAOjkB,QAAQ,KAAWikB,KAAqB74B,EAAKy4B,MAG9DrgC,GAAW0gC,GAAa,CAC3B,MAAMx9B,EAAMw9B,EAAW5/B,KAAKwa,EAAI9rB,QAAS8rB,GACrCpY,GACH1C,OAAOqL,OAAOw0B,EAAMn9B,QAEX3C,GAAcmgC,MACE,IAAtBA,EAAWlkB,OACd6jB,EAAK7jB,OAAuB,MAAdlB,EAAIkB,QAAkBjc,GAAc+a,EAAIkB,QAAUhc,OAAOqL,OAAO,GAAIyP,EAAIkB,QAAUlB,EAAIkB,OAC5F3b,MAAMiK,QAAQ41B,EAAWlkB,UACjC6jB,EAAK7jB,OAAShR,UAAE9B,KAAK4R,EAAIkB,OAAQkkB,EAAWlkB,UAErB,IAApBkkB,EAAW7kB,KACdwkB,EAAKxkB,KAAmB,MAAZP,EAAIO,KAAerb,OAAOqL,OAAO,GAAIyP,EAAIO,MAAQP,EAAIO,KACzDhb,MAAMiK,QAAQ41B,EAAW7kB,QACjCwkB,EAAKxkB,KAAOrQ,UAAE9B,KAAK4R,EAAIO,KAAM6kB,EAAW7kB,QAG1C,IAAI8kB,EAAW,WAAWrlB,EAAI/rB,OAAOa,QACrC,GAAIwX,EAAK+4B,SACR,cAAc/4B,EAAK+4B,UAClB,IAAK,SACJA,EAAW/4B,EAAK+4B,SAChB,MACD,IAAK,WACJA,EAAW/4B,EAAK+4B,SAAS7/B,KAAKwa,EAAI9rB,QAAS8rB,GAK9C,MAAMojB,EAAOpjB,EAAIslB,UAAUD,EAAU,CACpCnlB,GAAIF,EAAIE,GACRhtB,KAAM,SACNqyC,QAASvlB,EAAI5f,UACbqgB,SAAUT,EAAIS,SACdvsB,QAAS8rB,EAAI9rB,QACbsxC,QAASxlB,EAAIQ,QACbukB,KAAAA,IAMD,OAHA/kB,EAAIQ,QAAU4iB,EAAKoC,QAGZh0C,EAAQwuB,GAAK5Y,MAAKQ,IACxB,MAAMm9B,EAAO,CACZU,UAAWzlB,EAAIqY,cAGhB,GAAI3zB,GAAW0gC,GAAa,CAC3B,MAAMh9B,EAAIg9B,EAAW5/B,KAAKwa,EAAI9rB,QAAS8rB,EAAKpY,GACxCQ,GACHlD,OAAOqL,OAAOw0B,EAAM38B,QAEXnD,GAAcmgC,MACI,IAAxBA,EAAWM,SACdX,EAAKW,SAAkB,MAAP99B,GAAe3C,GAAc2C,GAAO1C,OAAOqL,OAAO,GAAI3I,GAAOA,EACrErC,MAAMiK,QAAQ41B,EAAWM,YACjCX,EAAKW,SAAWx1B,UAAE9B,KAAKxG,EAAKw9B,EAAWM,YAQzC,OALAtC,EAAKE,QAAQyB,GACb/kB,EAAIwjB,WAAWJ,GAIRx7B,KACLK,OAAM7S,IAIR,MAHAguC,EAAKC,SAASjuC,GACd4qB,EAAIwjB,WAAWJ,GAEThuC,MAGNrD,KAAKjD,MAGD0C,GAqHwF,KAC/F6kC,WAAYtjB,EAAO6xB,oBAAsBD,EAAOr4B,KAAK4f,OAnHtD,SAAqC16B,EAASsuB,GAC7C,MAAM5rB,EAAU4rB,EAAM5rB,QAEtB,IAAIoY,EAAOwT,EAAMU,QAKjB,OAJa,IAATlU,IAA0B,IAATA,IACpBA,EAAO,CAAEzL,UAAWyL,IACrBA,EAAO4D,UAAEsC,aAAa,GAAIlG,EAAM,CAAEzL,SAAS,IAEvCyL,EAAKzL,QACD,SAAqCmf,GAE3CA,EAAI5f,UAAY4f,EAAI5f,WAAaukC,EAAOE,oBACxC7kB,EAAIS,SAAWT,EAAIS,UAAYkkB,EAAOG,kBAEtC,MAAMC,EAAO,CACZjlB,MAAO,CACNhrB,KAAMgrB,EAAMhrB,KACZm4B,MAAOnN,EAAMmN,OAEdxY,UAAWuL,EAAIvL,UACf6L,UAAWN,EAAIM,UACf4kB,aAAcllB,EAAIhsB,OAClBgxC,aAAchlB,EAAItrB,MAClBuwC,WAAYjlB,EAAIhsB,SAAW+e,EAAO/e,OAClCA,OAAQ+e,EAAO/e,OACfoM,UAAW4f,EAAI5f,WAGVulC,EAAkBhB,EAAOr4B,KAAKy4B,KAAKjlB,MACzC,IAAI8lB,EAWJ,GARCA,EADGlhC,GAAW4H,EAAKy4B,MACPz4B,EAAKy4B,MACNz4B,EAAKy4B,MAAQrgC,GAAWihC,GACvBA,EAGA,CAAOzkB,QAAQ,KAAWykB,KAAoBr5B,EAAKy4B,MAG5DrgC,GAAWkhC,GAAY,CAC1B,MAAMh+B,EAAMg+B,EAAUpgC,KAAKtR,EAAS8rB,GAChCpY,GACH1C,OAAOqL,OAAOw0B,EAAMn9B,QAEX3C,GAAc2gC,MACC,IAArBA,EAAU1kB,OACb6jB,EAAK7jB,OAAuB,MAAdlB,EAAIkB,QAAkBjc,GAAc+a,EAAIkB,QAAUhc,OAAOqL,OAAO,GAAIyP,EAAIkB,QAAUlB,EAAIkB,OAC5F3b,MAAMiK,QAAQo2B,EAAU1kB,UAChC6jB,EAAK7jB,OAAShR,UAAE9B,KAAK4R,EAAIkB,OAAQ0kB,EAAU1kB,UAErB,IAAnB0kB,EAAUrlB,KACbwkB,EAAKxkB,KAAmB,MAAZP,EAAIO,KAAerb,OAAOqL,OAAO,GAAIyP,EAAIO,MAAQP,EAAIO,KACzDhb,MAAMiK,QAAQo2B,EAAUrlB,QAChCwkB,EAAKxkB,KAAOrQ,UAAE9B,KAAK4R,EAAIO,KAAMqlB,EAAUrlB,QAGzC,IAAI8kB,EAAW,UAAUrlB,EAAIvL,kBAAkBvgB,EAAQ63B,YACvD,GAAIzf,EAAK+4B,SACR,cAAc/4B,EAAK+4B,UAClB,IAAK,SACJA,EAAW/4B,EAAK+4B,SAChB,MACD,IAAK,WACJA,EAAW/4B,EAAK+4B,SAAS7/B,KAAKtR,EAAS8rB,GAK1C,MAAMojB,EAAOpjB,EAAIslB,UAAUD,EAAU,CACpCnlB,GAAIF,EAAIE,GACRhtB,KAAM,QACNqyC,QAASvlB,EAAI5f,UACbqgB,SAAUT,EAAIS,SACdvsB,QAAAA,EACAsxC,QAASxlB,EAAIQ,QACbukB,KAAAA,IAMD,OAHA/kB,EAAIQ,QAAU4iB,EAAKoC,QAGZh0C,EAAQ+V,MAAMrT,EAASsT,WAAWJ,MAAK,KAC7C4Y,EAAIwjB,WAAWJ,MACbn7B,OAAM7S,IAGR,MAFAguC,EAAKC,SAASjuC,GACd4qB,EAAIwjB,WAAWJ,GACThuC,MAGNrD,KAAKjD,MAGD0C,GAsBqF,OKnO7Fq0C,SCZgB,SAA4B9yB,GAqB5C,MAAO,CACNje,KAAM,WAENuhC,WAtBD,SAAqC7kC,EAASsuB,GAC7C,GAAIA,EAAMgmB,SAAW,EAAG,CACvB,IAAIh+B,EAEJ,OAAO,SAA4BkY,GASlC,OARIlY,GACHE,aAAaF,GAEdA,EAAQH,cAAW,KAClBG,EAAQ,KACDtW,EAAQwuB,KACbF,EAAMgmB,UAEF/yB,EAAOjR,QAAQC,WACrBhQ,KAAKjD,MAER,OAAO0C,KDLRu0C,SEbgB,SAA4BhzB,GAkB5C,MAAO,CACNje,KAAM,WAENuhC,WAnBD,SAAqC7kC,EAASsuB,GAC7C,GAAIA,EAAMkmB,SAAW,EAAG,CACvB,IAAIC,EAAa,EAEjB,OAAO,SAA4BjmB,GAClC,MAAM5vB,EAAMD,KAAKC,MACjB,OAAIA,EAAM61C,EAAanmB,EAAMkmB,SACrBjzB,EAAOjR,QAAQC,WAEvBkkC,EAAa71C,EACNoB,EAAQwuB,KACdjuB,KAAKjD,MAER,OAAO0C,KFAR00C,UAAWC,GAEXC,SAAU,CACTC,WGRe,SAA8BC,EAAUC,EAAY,cAAeC,GACnF,IAAKF,GAA+B,GAAnBA,EAAStlC,OAEzB,MAAM,IAAIxQ,MAAM,yCAGjB,MAAO,CACNsE,KAAM,aAENlG,UAECE,KAAKkkB,OAAOuB,KAAK,qCAAqCgyB,QAGvD/B,gBAAgBhW,GACR,CAAChK,EAAOhxB,EAAM+sB,KACpB,MAAMkmB,EAAYD,EAAK9e,UAAOgf,eAAeH,EAAWD,EAAUE,GAAM9e,UAAOif,aAAaJ,EAAWD,GACjG1+B,EAAMoa,SAAOtc,OAAO,CAAC+gC,EAAUj4B,OAAOhb,GAAOizC,EAAUG,UAC7D,OAAOpY,EAAKhK,EAAO5c,EAAK2Y,IAI1BkkB,mBAAmBjW,GACX,CAACrR,EAAK3pB,EAAMqR,KAClB,MAAMgiC,EAAYL,EAAK9e,UAAOof,iBAAiBP,EAAWD,EAAUE,GAAM9e,UAAOqf,eAAeR,EAAWD,GACrG1+B,EAAMoa,SAAOtc,OAAO,CAACmhC,EAAUr4B,OAAOhb,GAAOqzC,EAAUD,UAC7D,OAAOpY,EAAKrR,EAAKvV,EAAK/C,MHjBxBmiC,YHPe,SAA+B16B,GAG/C,IAAI26B,EAAUC,EAFd56B,EAAOkG,GAAalG,EAAM,CAAEhF,OAAQ,UAAW06B,UAAW,QAG1D,MAAMA,EAAYvD,GAAgBnyB,EAAK01B,WAEvC,OAAO11B,EAAKhF,QACX,IAAK,UACJ2/B,EAAWvI,GAAUjvC,GAAK03C,SAC1BD,EAAaxI,GAAUjvC,GAAK23C,SAC5B,MACD,IAAK,aACJH,EAAWvI,GAAUjvC,GAAK43C,YAC1BH,EAAaxI,GAAUjvC,GAAK63C,YAC5B,MACD,IAAK,OACJL,EAAWvI,GAAUjvC,GAAK83C,MAC1BL,EAAaxI,GAAUjvC,GAAK+3C,QAC5B,MACD,QAEC,MAAM,IAAIh3C,MAAM,8BAAgC8b,EAAKhF,QAGvD,IAAI0L,EAEJ,MAAO,CACNle,KAAM,cAENlG,QAAQmkB,GACPC,EAASD,EAAO4H,UAAU,eAE1B3H,EAAOuB,KAAK,sCAAsCjI,EAAKhF,uBAAqC,MAAb06B,EAAoB11B,EAAK01B,UAAY,WAGrHwC,gBAAgBhW,GACR,CAAChK,EAAOhxB,EAAM+sB,IACH,MAAbyhB,GAAqBxuC,EAAKwN,OAASghC,GACtChvB,EAAO6B,MAAM,WAAW2P,yCAA6ChxB,EAAKwN,UACnEwtB,EAAKhK,EAAOxC,SAAOtc,OAAO,CAACsc,SAAOtT,KAAK,CAAC,IAAQlb,IAAQ+sB,IAEzD0mB,EAASzzC,GACd4T,MAAKQ,IACLoL,EAAO6B,MAAM,WAAW2P,0BAA8BtzB,OAA0C,KAAlC,EAAK0W,EAAI5G,OAASxN,EAAKwN,SAAgBsT,QAAQ,MAAO9gB,EAAKwN,OAAQ4G,EAAI5G,QAC9HwtB,EAAKhK,EAAOxC,SAAOtc,OAAO,CAACsc,SAAOtT,KAAK,CAAC,IAAQ9G,IAAO2Y,MAKlEkkB,mBAAmBjW,GACX,CAACrR,EAAK3pB,EAAMqR,IAEE,GADCrR,EAAKi0C,SAAS,IAElCz0B,EAAO6B,MAAM,WAAWsI,yCAA2C3pB,EAAKwN,UACjEwtB,EAAKrR,EAAK3pB,EAAK6U,MAAM,GAAIxD,IAEzBqiC,EAAW1zC,EAAK6U,MAAM,IAC3BjB,MAAKQ,IACLoL,EAAO6B,MAAM,WAAWsI,4BAA8BjsB,OAA0C,KAAlC,EAAKsC,EAAKwN,OAAS4G,EAAI5G,SAAgBsT,QAAQ,MAAO1M,EAAI5G,OAAQxN,EAAKwN,QAC9HwtB,EAAKrR,EAAKvV,EAAK/C,SGjD5B6iC,UAAW,CACVC,cFjBe,SAAiCr7B,GAiBjD,IAAI0G,EACAhf,EAEA4zC,EAEJ,SAASC,EAAWv/B,EAAUlV,GAC7B,MAAMI,EAAO0W,KAAKE,UAAUhX,EAASA,aAAmB5C,MAAQ0U,OAAO4iC,oBAAoB10C,GAAW,KAAM,GAC5GuY,UAAGo8B,UAAUh9B,UAAKO,KAAKs8B,EAAct/B,GAAW9U,GAAM,SAGvD,MAAMw0C,GA1BN17B,EAAO4D,UAAEsC,aAAalG,EAAM,CAC3B0G,OAAQ,KACR4hB,SAAU,OACVqT,eAAe,EAEfx8B,OAAQ,KACRy8B,UAAW,QAEX70B,OAAQ,CACPqK,QAAS,OACTD,KAAM,QAGP0qB,aAAc,CAAC,gBAaU90B,QAAU/G,EAAK+G,OAAOoK,KAAOnR,EAAK+G,OAAOoK,KAAKxS,MAAM,KAAK9J,QAAO,CAACsE,EAAE3B,IAAM2B,EAAE3B,IAAM2B,IAAI3B,IAAI+F,WAAShF,GAAKA,EAC3HujC,EAAkB97B,EAAK+G,QAAU/G,EAAK+G,OAAOqK,QAAUpR,EAAK+G,OAAOqK,QAAQzS,MAAM,KAAK9J,QAAO,CAACsE,EAAE3B,IAAM2B,EAAE3B,IAAM2B,IAAI3B,IAAI+F,WAAShF,GAAKA,EAE1I,IAAIwjC,EAEJ,MAAO,CACNvzC,KAAM,gBACNlG,QAAQmkB,GACPC,EAAS1G,EAAK0G,QAAUD,EAAO4H,UAAU,SACzC3mB,EAAS+e,EAAO/e,OAEZsY,EAAKb,SACRm8B,EAAe78B,UAAKO,KAAKgB,EAAKb,OAAQzX,GACtC2qC,GAASiJ,IAGVS,EAAQ/7B,EAAKsoB,SAAW5hB,EAAO1G,EAAKsoB,UAAY,MAGjD0T,eAAe9Z,GACPpR,IAEN,GAAI9Q,EAAK67B,aAAa11B,SAAS2K,EAAOlqB,MACrC,OAAOs7B,EAAKpR,GAGb,MAAMhqB,EAAUgqB,EAAOhqB,QAcvB,OAXIi1C,IACHA,EAAML,EAAa,WAAW5qB,EAAOlqB,mBAAmBkqB,EAAOjqB,QAAU,mBACrEmZ,EAAK27B,eACRI,EAAM,KAAMj1C,IAIVw0C,GACHC,EAAW,GAAG13C,KAAKC,cAAcgtB,EAAOlqB,WAAWkqB,EAAOjqB,QAAU,QAAQmZ,EAAK47B,YAAa90C,GAGxFo7B,EAAKpR,IAIdmnB,sBAAsB/V,GACd,CAACrR,EAAKC,KAEZ,GAAI9Q,EAAK67B,aAAa11B,SAAS0K,GAC9B,OAAOqR,EAAKrR,EAAKC,GAGlB,MAAMhqB,EAAUgqB,EAAOhqB,QAavB,OAXIi1C,IACHA,EAAMD,EAAgB,cAAcjrB,kBAAoB/pB,EAAQ8rB,YAC5D5S,EAAK27B,eACRI,EAAM,KAAMjrB,EAAOhqB,UAIjBw0C,GACHC,EAAW,GAAG13C,KAAKC,iBAAiB+sB,UAAY/pB,EAAQ8rB,SAAS5S,EAAK47B,YAAa90C,GAG7Eo7B,EAAKrR,EAAKC,MEzEnBmrB,aDlBe,SAAgCj8B,GAmBhD,IAAI0G,EACAhf,EAEA4zC,EAEJ,SAASC,EAAWv/B,EAAUlV,GAC7B,MAAMI,EAAO0W,KAAKE,UAAUhX,EAASA,aAAmB5C,MAAQ0U,OAAO4iC,oBAAoB10C,GAAW,KAAM,GAC5GuY,UAAGo8B,UAAUh9B,UAAKO,KAAKs8B,EAAct/B,GAAW9U,GAAM,SAOvD,MAAMg1C,GAhCNl8B,EAAO4D,UAAEsC,aAAalG,EAAM,CAC3B0G,OAAQ,KACR4hB,SAAU,OACV6T,WAAW,EACXC,aAAa,EACbC,SAAS,EAETl9B,OAAQ,KACRy8B,UAAW,QAEX70B,OAAQ,CACPyP,QAAS,SACT4iB,SAAU,OACV7lB,MAAO,OAER+oB,UAAW,CAAC,SAiBgBv1B,QAAU/G,EAAK+G,OAAOyP,QAAUxW,EAAK+G,OAAOyP,QAAQ7X,MAAM,KAAK9J,QAAO,CAACsE,EAAE3B,IAAM2B,EAAE3B,IAAM2B,IAAI3B,IAAI+F,WAAShF,GAAKA,EACpIgkC,EAAmBv8B,EAAK+G,QAAU/G,EAAK+G,OAAOqyB,SAAWp5B,EAAK+G,OAAOqyB,SAASz6B,MAAM,KAAK9J,QAAO,CAACsE,EAAE3B,IAAM2B,EAAE3B,IAAM2B,IAAI3B,IAAI+F,WAAShF,GAAKA,EACvIikC,EAAgBx8B,EAAK+G,QAAU/G,EAAK+G,OAAOwM,MAAQvT,EAAK+G,OAAOwM,MAAM5U,MAAM,KAAK9J,QAAO,CAACsE,EAAE3B,IAAM2B,EAAE3B,IAAM2B,IAAI3B,IAAI+F,WAAShF,GAAKA,EAEpI,IAAIwjC,EAEJ,MAAO,CACNvzC,KAAM,eACNlG,QAAQmkB,GACPC,EAAS1G,EAAK0G,QAAUD,EAAO4H,UAAU,SACzC3mB,EAAS+e,EAAO/e,OAEZsY,EAAKb,SACRm8B,EAAe78B,UAAKO,KAAKgB,EAAKb,OAAQzX,GACtC2qC,GAASiJ,IAGVS,EAAQ/7B,EAAKsoB,SAAW5hB,EAAO1G,EAAKsoB,UAAY,MAGjDpvB,KAAKgpB,GACG,CAACY,EAAYlO,EAAQ6nB,KAE3B,IA3BH,SAAuB3Z,GACtB,QAAS9iB,EAAKs8B,UAAUx2B,MAAKvJ,GAAW0J,GAAM6c,EAAYvmB,KA0BnDmgC,CAAcjkC,GAASqqB,GAAcA,EAAWn7B,OAAOa,KAAOs6B,GAClE,OAAOZ,EAAKY,EAAYlO,EAAQ6nB,GAIjC,GAAIV,EAAO,CACV,MAAMt0C,EAAMy0C,EAAgB,YAAYpZ,MAAiB9iB,EAAKm8B,UAAY,gBAAkB,MAC5Fn8B,EAAKm8B,UAAYJ,EAAMt0C,EAAKmtB,GAAUmnB,EAAMt0C,GACxCuY,EAAKq8B,SAAWI,GAAeA,EAAYxoB,MAC9C8nB,EAAM,QAASU,EAAYxoB,MAKzBqnB,IACCt7B,EAAKm8B,WACRZ,EAAW,GAAG13C,KAAKC,cAAcg/B,YAAqB9iB,EAAK47B,YAAahnB,GAGrE5U,EAAKq8B,SAAWI,GAAeA,EAAYxoB,MAC9CsnB,EAAW,GAAG13C,KAAKC,cAAcg/B,SAAkB9iB,EAAK47B,YAAaa,EAAYxoB,OAKnF,MAAMpZ,EAAIqnB,EAAKY,EAAYlO,EAAQ6nB,GAE7BE,EAAK9hC,EACTC,MAAKs+B,IAGL,GAAI2C,EAAO,CACV,MAAMt0C,EAAM80C,EAAiB,iBAAiBzZ,kBAA6B9iB,EAAKo8B,YAAc,IAAM,MACpGp8B,EAAKo8B,YAAcL,EAAMt0C,EAAK2xC,GAAY2C,EAAMt0C,GAOjD,OAHI6zC,GAAgBt7B,EAAKo8B,aACxBb,EAAW,GAAG13C,KAAKC,cAAcg/B,aAAsB9iB,EAAK47B,YAAaxC,GAEnEA,KAEPz9B,OAAM7S,IAWN,MARIizC,GACHA,EAAMS,EAAc,cAAc1Z,mBAA6Bh6B,GAI5DwyC,GAAgBt7B,EAAKo8B,aACxBb,EAAW,GAAG13C,KAAKC,cAAcg/B,UAAmB9iB,EAAK47B,YAAa9yC,GAEjEA,KAMR,OAFA6zC,EAAGjpB,IAAM7Y,EAAE6Y,IAEJipB,OKvHX,yBAAQr0C,IAAuByZ,YACvBtJ,cAAUL,YAAYE,IAAa6M,GA6H3C,OA3HA,MAEC7iB,YAAYmkB,GACXjkB,KAAKikB,OAASA,EAEdjkB,KAAK2X,KAAO,GAEZ3X,KAAKgnC,gBAAkB,GAGxBlnC,IAAIs6C,GACH,GAAKA,EAAL,CAEA,GAAItkC,GAASskC,GAAK,CACjB,MAAM1hB,EAAQtX,UAAE5G,IAAI6/B,GAAaD,GACjC,IAAK1hB,EACJ,MAAM,IAAI5yB,GAAmB,qCAAqCs0C,MAAQ,CAAEh2C,KAAMg2C,IACnFA,EAAK1hB,EAMN,GAHI9iB,GAAWwkC,KACdA,EAAKA,EAAG1jC,KAAK1W,KAAKikB,OAAQjkB,KAAKikB,UAE3BhO,GAASmkC,GACb,MAAM,IAAIt0C,GAAmB,mCAAmCs0C,wCAA0C,CAAEh2C,YAAag2C,IAE1HhkC,OAAOqD,KAAK2gC,GAAIxgC,SAAQC,IACnBjE,GAAWwkC,EAAGvgC,MACbpD,MAAMiK,QAAQ1gB,KAAKgnC,gBAAgBntB,IACtC7Z,KAAKgnC,gBAAgBntB,GAAK7H,KAAKooC,EAAGvgC,IAElC7Z,KAAKgnC,gBAAgBntB,GAAO,CAACugC,EAAGvgC,QAInC7Z,KAAK2X,KAAK3F,KAAKooC,IAYhBt6C,YAAY0Y,EAAQ9V,EAAS43C,GAO5B,OANIt6C,KAAKgnC,gBAAgBxuB,IAAWxY,KAAKgnC,gBAAgBxuB,GAAQtG,SAChExP,EAAU1C,KAAKgnC,gBAAgBxuB,GAAQnG,QAAO,CAAC3P,EAASmT,IAChDA,EAAGa,KAAK1W,KAAKikB,OAAQvhB,EAAS43C,IACnC53C,IAGGA,EAYR5C,aAAa0Y,EAAQ7V,EAAM6a,EAAO,IACjC,GAAIxd,KAAKgnC,gBAAgBxuB,IAAWxY,KAAKgnC,gBAAgBxuB,GAAQtG,OAAQ,CAExE,OADasL,EAAKqR,QAAUpY,MAAMmJ,KAAK5f,KAAKgnC,gBAAgBxuB,IAASqW,UAAY7uB,KAAKgnC,gBAAgBxuB,IAC1FnG,QAAO,CAACgG,EAAGxC,IAAOwC,EAAEC,MAAK,IAAMzC,EAAG4C,MAAMzY,KAAKikB,OAAQthB,MAAQ3C,KAAKikB,OAAOjR,QAAQC,WAG9F,OAAOjT,KAAKikB,OAAOjR,QAAQC,UAY5BnT,iBAAiB0Y,EAAQ7V,EAAM6a,EAAO,IACrC,GAAIxd,KAAKgnC,gBAAgBxuB,IAAWxY,KAAKgnC,gBAAgBxuB,GAAQtG,OAAQ,CAExE,OADasL,EAAKqR,QAAUpY,MAAMmJ,KAAK5f,KAAKgnC,gBAAgBxuB,IAASqW,UAAY7uB,KAAKgnC,gBAAgBxuB,IAC1F7E,KAAIkC,GAAMA,EAAG4C,MAAMzY,KAAKikB,OAAQthB,MAW9C7C,QACC,OAAOE,KAAK2X,KAAKzF,OAalBpS,WAAW0Y,EAAQ9V,EAAS63C,EAASv6C,KAAKikB,OAAQzG,EAAO,IACxD,GAAIxd,KAAKgnC,gBAAgBxuB,IAAWxY,KAAKgnC,gBAAgBxuB,GAAQtG,OAAQ,CAExExP,GADa8a,EAAKqR,QAAUpY,MAAMmJ,KAAK5f,KAAKgnC,gBAAgBxuB,IAASqW,UAAY7uB,KAAKgnC,gBAAgBxuB,IACvFnG,QAAO,CAACqtB,EAAM7pB,IAAOA,EAAGa,KAAK6jC,EAAQ7a,IAAOh9B,EAAQO,KAAKs3C,IAGzE,OAAO73C,IChIT,eAAQuT,IAAasJ,GAmHrB,OA5GA,MAOCzf,YAAY0d,GACXxd,KAAKwd,KAAOA,GAAQ,GACpBxd,KAAKgT,QAAUA,QAShBlT,KAAK+1C,GACJ71C,KAAK61C,OAASA,EACd71C,KAAKikB,OAAS4xB,EAAO5xB,OACrBjkB,KAAKgT,QAAUhT,KAAKikB,OAAOjR,QAC3BhT,KAAKkkB,OAASlkB,KAAKwd,KAAK0G,QAAUlkB,KAAK61C,OAAO3xB,OAM/CpkB,QAUAA,eAUAA,gBA6BAA,YAAYqb,EAAKq/B,GAAkB,EAAOv+B,EAAO,IAChD,OAAKd,EAEE/E,OAAOqD,KAAK0B,GAAK9I,QAAO,CAACyG,EAAKkH,KACpC,MAAM9J,EAAIiF,EAAI6E,GACRy6B,GAAMx+B,EAAOA,EAAO,IAAM,IAAM+D,EAQtC,OANI/J,GAASC,GACZE,OAAOqL,OAAO3I,EAAK9Y,KAAK06C,YAAYxkC,EAAGskC,EAAiBC,SAC1CrpC,IAAN8E,IACR4C,EAAI2hC,GAAMD,EAAkBxkC,OAAOE,GAAKA,GAGlC4C,IACL,IAbc,KAuBlBhZ,cAAcwG,GACb,OAAKA,EAEE8a,UAAE9B,KAAKhZ,EAAKtG,KAAK61C,OAAOr4B,KAAKm9B,aAFnB,OC7GnB,MAAMrhC,GAAU8H,UAAEyiB,QAEZ+W,SAAEA,cAAUhlC,IAAgB2J,GAuSlC,OA9RA,cAAmCs7B,GAOlC/6C,YAAY0d,GACXzd,MAAMyd,GAENxd,KAAKwd,KAAO4D,UAAEsC,aAAa1jB,KAAKwd,KAAM,CACrC0G,OAAQ,KACRK,QAAQ,EACRlE,MAAO,IACPy6B,WAAY,KAGR96C,KAAKwd,KAAK+G,SACdxJ,UAAMhJ,SAAU,GAEjB/R,KAAK+6C,MAAQ,GASdj7C,KAAK+1C,GACJ91C,MAAM4S,KAAKkjC,GAMZ/1C,OAGC,OAFAE,KAAK+6C,MAAQ,GAEN/6C,KAAKikB,OAAOjR,QAAQC,UAS5BnT,YAAYw0C,GAMX,GALAt0C,KAAK+6C,MAAMzG,EAAKljB,IAAM,CACrBkjB,KAAAA,EACA0G,SAAU,IAGP1G,EAAK3iB,SAAU,CAClB,MAAMspB,EAAaj7C,KAAK+6C,MAAMzG,EAAK3iB,UAC/BspB,GACHA,EAAWD,SAAShpC,KAAKsiC,EAAKljB,KAUjCtxB,aAAaw0C,GAEPt0C,KAAK+6C,MAAMzG,EAAK3iB,YACpB3xB,KAAKk7C,aAAa5G,EAAKljB,IAGvBpxB,KAAKm7C,uBAAuB7G,EAAKljB,KAUnCtxB,uBAAuBs7C,GACtB,MAAM9G,EAAOt0C,KAAK+6C,MAAMK,GACpB9G,IACCA,EAAK0G,UAAY1G,EAAK0G,SAAS9oC,OAAS,GAC3CoiC,EAAK0G,SAASphC,SAAQyhC,GAASr7C,KAAKm7C,uBAAuBE,YAErDr7C,KAAK+6C,MAAMK,IAIpBt7C,eACCE,KAAKglB,IAAIjK,UAAMuK,KAAK,IAAMhM,GAAE,IAAKtZ,KAAKwd,KAAK6C,MAAQ,GAAK,MAGzDvgB,oBACCE,KAAKglB,IAAIjK,UAAMuK,KAAK,IAAMhM,GAAE,IAAKtZ,KAAKwd,KAAK6C,MAAQ,GAAK,MAGzDvgB,SAASga,GACR9Z,KAAKglB,IAAIjK,UAAMuK,KAAK,MAAQxL,EAAOiB,UAAMuK,KAAK,OAG/CxlB,kBACCE,KAAKglB,IAAIjK,UAAMuK,KAAK,IAAMhM,GAAE,IAAKtZ,KAAKwd,KAAK6C,MAAQ,GAAK,MAGzDvgB,gBAAgB2kC,EAAKpc,GACpB,MAAMpO,EAAMwqB,EAAIvyB,OAEhB,IAAIopC,EAQJ,OAPIrhC,GAAOoO,EACVizB,EAAO7W,EAAMnrB,GAAE,IAAK+O,EAAQpO,IAE5BqhC,EAAO7W,EAAIlrB,MAAM,EAAGzX,KAAKwgB,IAAI+F,EAAQ,EAAG,IACxCizB,GAAQhiC,GAAE,IAAKxX,KAAK6c,IAAI,EAAG0J,KAGrBizB,EAGRx7C,UAAUy7C,EAAQC,GACjB,MAAMC,EAAKz7C,KAAKwd,KAAKs9B,WACfY,EAAK55C,KAAKC,MAAM05C,EAAKF,EAAS,KAC9BpB,EAAKr4C,KAAKwgB,IAAIxgB,KAAKC,MAAM05C,EAAKD,EAAQ,KAAOE,EAAI,GACjDC,EAAK75C,KAAKwgB,IAAIm5B,GAAMC,EAAKvB,GAAK,GAEpC,MAAO,CACNp/B,UAAMuK,KAAK,KACXvK,UAAMuK,KAAKhM,GAAE,IAAKoiC,IAClBpiC,GAAE,IAAK6gC,GACPp/B,UAAMuK,KAAKhM,GAAE,IAAKqiC,IAClB5gC,UAAMuK,KAAK,MACV9I,KAAK,IAGR1c,WAAWw0C,GACV,IAAIsH,EAAUtH,EAAKtuC,KASnB,OAPIsuC,EAAK2B,KAAKU,YACbiF,GAAW,MACRtH,EAAK2B,KAAKE,aACbyF,GAAW,MACRtH,EAAKvjB,QACR6qB,GAAW,MAELA,EAGR97C,SAASw0C,GACR,IAAIrQ,EAAIlpB,UAAME,KAUd,OATIq5B,EAAK2B,KAAKU,YACb1S,EAAIA,IAAIjpB,QACLs5B,EAAK2B,KAAKE,aACblS,EAAIA,IAAIhf,MACY,MAAjBqvB,EAAK7pB,WACRwZ,EAAIA,IAAI3e,MACLgvB,EAAKvjB,QACRkT,EAAIA,IAAIT,KAEFS,EAGRnkC,aAAa+7C,GACZ,IAAIzY,EAAQ,EACRrK,EAAQ,EACRsO,EAAQ,CAACjwB,EAAMxR,EAAOk2C,KACzB1kC,EAAKxR,MAAQA,EACbwR,EAAK0kC,QAAUA,GAAW,GAC1B/iB,IACInzB,EAAQw9B,IACXA,EAAQx9B,GAELwR,EAAK4jC,SAAS9oC,OAAS,GAC1BkF,EAAK4jC,SAASphC,SAAQ,CAACwhC,EAAQ/jC,KAC9B,MAAMi9B,EAAOt0C,KAAK+6C,MAAMK,GACxB9G,EAAK5pB,MAAe,GAAPrT,EACbi9B,EAAKyH,KAAO1kC,GAAOD,EAAK4jC,SAAS9oC,OAAS,EAC1Cm1B,EAAMiN,EAAMl9B,EAAKxR,MAAQ,EAAG,GAAGgR,OAAOQ,EAAK0kC,QAAS,CAAC1kC,SAOxD,OAFAiwB,EAAMwU,EAAM,GAEL,CAAEzY,MAAAA,EAAOrK,MAAAA,GAGjBj5B,cAAck8C,GACb,GAAIA,EAASp2C,MAAQ,EAAG,CACvB,IAAImQ,EAAIimC,EAASF,QAAQnoC,KAAI,CAACyD,EAAMC,IAC/BA,EAAM,EACFD,EAAK2kC,KAAO,KAAO,KAEpB,KACLv/B,KAAK,IAIR,OAFAzG,GAAKimC,EAASD,KAAO,KAAO,KAErBhmC,GAAKimC,EAAShB,SAAS9oC,OAAS,EAAI,KAAO,MAAQ,IAG3D,MAAO,GASRpS,cAAck8C,EAAUC,EAAUr2C,GACjC,MAAM0uC,EAAO0H,EAAS1H,KAChB4H,EAAWD,EAAS3H,KAEpB6H,GAAKn8C,KAAKwd,KAAK6C,OAAS,IADf,EAETo7B,EAAKz7C,KAAKwd,KAAKs9B,YAAc,GAE7BlpC,EAAwB,MAAjB0iC,EAAK7pB,SAAmB,IAAMmwB,GAAStG,EAAK7pB,UACnD2xB,EAASp8C,KAAKq8C,cAAcL,GAC5BJ,EAAU57C,KAAKs8C,WAAWhI,GAC1B7uB,EAAO1K,UAAMuK,KAAK82B,GAAUp8C,KAAKu8C,gBAAgBX,EAASO,EAAIV,EAAK,EAAI7pC,EAAKM,OAAS,EAAIkqC,EAAOlqC,QAAU,IAAMN,EAEhHZ,EAAYsjC,EAAKtjC,WAAakrC,EAASlrC,UACvCwrC,EAAalI,EAAKkI,YAAcN,EAASM,WAE/C,IAAIjB,GAAUvqC,EAAYkrC,EAASlrC,YAAckrC,EAASM,WAAaN,EAASlrC,WAAa,IACzFwqC,GAASgB,EAAaN,EAASlrC,YAAckrC,EAASM,WAAaN,EAASlrC,WAAa,IAEzF5O,OAAO6a,MAAMs+B,IAAWn5C,OAAO6a,MAAMu+B,KACxCD,EAAS,EACTC,EAAQ,KAELA,EAAQ,MACXA,EAAQ,KAET,MAAMvX,EAAIjkC,KAAK0jC,SAAS4Q,GACxBt0C,KAAKy8C,SAASxY,EAAExe,EAAO,IAAMzlB,KAAK08C,UAAUnB,EAAQC,KAEhDQ,EAAShB,SAAS9oC,OAAS,GAC9B8pC,EAAShB,SAASphC,SAAQ,CAACwhC,EAAQ/jC,IAClCrX,KAAK28C,cAAc38C,KAAK+6C,MAAMK,GAASa,EAAUr2C,EAAQ,EAAGo2C,EAAU,CACrEtxB,MAAc,GAAPrT,EACP0kC,KAAM1kC,GAAO2kC,EAAShB,SAAS9oC,OAAS,MAU5CpS,aAAasxB,GACZ,MAAMyqB,EAAO77C,KAAK+6C,MAAM3pB,GACxB,IAAKyqB,EAAM,OAEX,MACMM,EAAIn8C,KAAKwd,KAAK6C,MADL,EAGfrgB,KAAK48C,eAEL,MAAM7jB,MAAEA,EAAKqK,MAAEA,GAAUpjC,KAAK68C,aAAahB,GAErCiB,EAAc98C,KAAKu8C,gBAAgBnrB,EAAI+qB,EAAI,OAAOjqC,OAAS,UAAUA,QAAU,GAAGkxB,GAAOlxB,OAAS,UAAUA,QAAU,GAAG6mB,GAAO7mB,OAAS,GACzI6qC,EAAOhiC,UAAMuK,KAAK,QAAUvK,UAAME,KAAK6hC,GAAe,IAAM/hC,UAAMuK,KAAK,WAAavK,UAAME,KAAKmoB,GAAS,IAAMroB,UAAMuK,KAAK,WAAavK,UAAME,KAAK8d,GACvJ/4B,KAAKy8C,SAASM,GAEd/8C,KAAKg9C,oBAELh9C,KAAK28C,cAAcd,EAAMA,EAAM,EAAG,KAAM,IAExC77C,KAAKi9C,kBAGNn9C,OAAO6C,GACN,OAAIiT,GAAW5V,KAAKwd,KAAK0G,QACjBlkB,KAAKwd,KAAK0G,UAAUvhB,GAEpB3C,KAAKkkB,OAAOuB,QAAQ9iB,KCnS9B,iBAAQiT,IAAiB2J,GAyIzB,OAlIA,cAAiCs7B,GAOhC/6C,YAAY0d,GACXzd,MAAMyd,GAENxd,KAAKwd,KAAO4D,UAAEsC,aAAa1jB,KAAKwd,KAAM,CAErCmI,UAAW,iBAEXu3B,eAAe,EACfC,gBAAgB,EAEhBv3B,WAAW,EAEXC,OAAQ,KAGRvB,SAAU,EAEV84B,cAAe,KAGfC,YAAa,OAGdr9C,KAAKmxC,MAAQ,GASdrxC,KAAK+1C,GACJ91C,MAAM4S,KAAKkjC,GAEP71C,KAAKwd,KAAK8G,SAAW,IACxBtkB,KAAKgZ,MAAQ+F,eAAY,IAAM/e,KAAKs9C,SAA8B,IAArBt9C,KAAKwd,KAAK8G,UACvDtkB,KAAKgZ,MAAMiG,SAGZjf,KAAKq9C,YAAcznC,GAAW5V,KAAKwd,KAAK6/B,aAAer9C,KAAKwd,KAAK6/B,YAAY3mC,KAAK1W,KAAM61C,GAAU71C,KAAKwd,KAAK6/B,YAM7Gv9C,OAKC,OAJIE,KAAKgZ,QACRuT,cAAcvsB,KAAKgZ,OACnBhZ,KAAKgZ,MAAQ,MAEPhZ,KAAKgT,QAAQC,UASrBnT,YAAYw0C,GACPt0C,KAAKwd,KAAK0/B,gBACbl9C,KAAKmxC,MAAMn/B,KAAKsiC,GACXt0C,KAAKgZ,OACThZ,KAAKs9C,SAURx9C,aAAaw0C,GACRt0C,KAAKwd,KAAK2/B,iBACbn9C,KAAKmxC,MAAMn/B,KAAKsiC,GACXt0C,KAAKgZ,OACThZ,KAAKs9C,SASRx9C,QACC,GAAyB,GAArBE,KAAKmxC,MAAMj/B,OAAa,OAE5B,MAAMxN,EAAO1E,KAAKu9C,sBAClBv9C,KAAKmxC,MAAMj/B,OAAS,EAEhBlS,KAAKwd,KAAKoI,WACb5lB,KAAKkkB,OAAO6B,MAAM,uBAAuBrhB,EAAKwN,mCAC9ClS,KAAKikB,OAAO2B,UAAU5lB,KAAKwd,KAAKmI,UAAWjhB,EAAM,CAAEmhB,OAAQ7lB,KAAKwd,KAAKqI,WAErE7lB,KAAKkkB,OAAO6B,MAAM,uBAAuBrhB,EAAKwN,yBAC9ClS,KAAKikB,OAAOxiB,KAAKzB,KAAKwd,KAAKmI,UAAWjhB,EAAM,CAAEmhB,OAAQ7lB,KAAKwd,KAAKqI,UAUlE/lB,sBACC,OAAI8V,GAAW5V,KAAKwd,KAAK4/B,eACjBp9C,KAAKmxC,MAAMx9B,KAAI2gC,GAAQt0C,KAAKwd,KAAK4/B,cAAc1mC,KAAK1W,KAAMs0C,KAE3D79B,MAAMmJ,KAAK5f,KAAKmxC,OAAOx9B,KAAI2gC,IACjC,MAAMkJ,EAAUpnC,OAAOqL,OAAO,GAAI6yB,GAIlC,OAHIkJ,EAAQzsB,QACXysB,EAAQzsB,MAAQ/wB,KAAKy9C,cAAcnJ,EAAKvjB,QAElCysB,OCnIV,eAAQvnC,cAAUL,IAAe2J,GAyIjC,OAlIA,cAAuCs7B,GAOtC/6C,YAAY0d,GACXzd,MAAMyd,GAENxd,KAAKwd,KAAO4D,UAAEsC,aAAa1jB,KAAKwd,KAAM,IAUvC1d,KAAK+1C,GACJ91C,MAAM4S,KAAKkjC,GACX71C,KAAKikB,OAAS4xB,EAAO5xB,OAStBnkB,YAAYw0C,GACX,MAAMhwC,EAAUtE,KAAK09C,sBAAsBpJ,GAC3Ct0C,KAAKikB,OAAOxiB,KAAK,2BAA4B6C,GAS9CxE,aAAaw0C,GACZ,MAAMhwC,EAAUtE,KAAK09C,sBAAsBpJ,GAC3Ct0C,KAAKikB,OAAOxiB,KAAK,4BAA6B6C,GAS/CxE,sBAAsBw0C,GACrB,IAAIhwC,EAAU,CACb8sB,GAAIkjB,EAAKljB,GACT9f,UAAWgjC,EAAKmC,QAChB7wC,MAAO0uC,EAAK2B,KAAKC,aACjBllC,UAAWsjC,EAAKtjC,UAChBmlC,WAAY7B,EAAK2B,KAAKE,YA2BvB,OAvBI7B,EAAK92B,KAAK0T,KACblxB,KAAK29C,oBAAoBrJ,EAAK92B,KAAK0T,IAAK5sB,GAEzCA,EAAQa,OAASmvC,EAAK2B,KAAK9wC,OAC3Bb,EAAQc,QAAUkvC,EAAKlvC,QAEnBkvC,EAAK3iB,WACRrtB,EAAQs5C,OAAStJ,EAAK3iB,UAEvBrtB,EAAQY,OAASlF,KAAKikB,OAAO/e,OACzBZ,EAAQ6xC,aACX7xC,EAAQ8xC,aAAe9B,EAAK2B,KAAKG,cAE9B9B,EAAKkI,aACRl4C,EAAQu5C,QAAUvJ,EAAKkI,WACvBl4C,EAAQmmB,SAAW6pB,EAAK7pB,SACxBnmB,EAAQqyC,UAAYrC,EAAK2B,KAAKU,UAE1BrC,EAAKvjB,QACRzsB,EAAQysB,MAAQ/wB,KAAKy9C,cAAcnJ,EAAKvjB,SAInCzsB,EAYRxE,mBAAmBoxB,EAAKlrB,EAAM1B,GAC7B,IAAIg2C,EAAMppB,EAAI/rB,OAAOooB,QAAQvnB,IAEjB,IAARs0C,EACHh2C,EAAQ0B,GAAQkrB,EAAIlrB,GACVyQ,MAAMiK,QAAQ45B,GACxBh2C,EAAQ0B,GAAQob,UAAE9B,KAAK4R,EAAIlrB,GAAOs0C,GACxB1kC,GAAW0kC,KACrBh2C,EAAQ0B,GAAQs0C,EAAIppB,EAAIlrB,KAY1BlG,oBAAoBoxB,EAAK5sB,GAEpB2R,GAASib,EAAI/rB,OAAOooB,WAEvBvtB,KAAK89C,mBAAmB5sB,EAAK,SAAU5sB,GACvCtE,KAAK89C,mBAAmB5sB,EAAK,OAAQ5sB,MCpIxC,MAAMy5C,GAA2B,oBAAXt+C,QAA0BA,QACnB,oBAATC,MAAwBA,MAChCC,cAEG,IAAIgD,IAASo7C,GAAMC,SAASr7C,GCD3C,iBAAQiT,IAAiB2J,GAgNzB,OAlMA,cAAkCs7B,GAOjC/6C,YAAY0d,GACXzd,MAAMyd,GAENxd,KAAKwd,KAAO4D,UAAEsC,aAAa1jB,KAAKwd,KAAM,CAErCygC,QAASl7C,EAAQ5C,IAAI+9C,YAAc,wBAMnC55B,SAAU,EAGV65B,eAAgB,CAGfp4B,OAAO,EAGPq4B,QAAQ,GAITf,YAAa,OAGdr9C,KAAKmxC,MAAQ,GASdrxC,KAAK+1C,GACJ91C,MAAM4S,KAAKkjC,GAEXmI,GAAMhrC,QAAUhT,KAAKikB,OAAOjR,QAExBhT,KAAKwd,KAAK8G,SAAW,IACxBtkB,KAAKgZ,MAAQ+F,eAAY,IAAM/e,KAAKs9C,SAA8B,IAArBt9C,KAAKwd,KAAK8G,UACvDtkB,KAAKgZ,MAAMiG,SAGZjf,KAAKq9C,YAAcznC,GAAW5V,KAAKwd,KAAK6/B,aAAer9C,KAAKwd,KAAK6/B,YAAY3mC,KAAK1W,KAAM61C,GAAU71C,KAAKwd,KAAK6/B,YACxGr9C,KAAKq9C,cACRr9C,KAAKq9C,YAAcr9C,KAAK06C,YAAY16C,KAAKq9C,aAAa,IAOxDv9C,OAKC,OAJIE,KAAKgZ,QACRuT,cAAcvsB,KAAKgZ,OACnBhZ,KAAKgZ,MAAQ,MAEPhZ,KAAKikB,OAAOjR,QAAQC,UAS5BnT,aAAaw0C,GACZt0C,KAAKmxC,MAAMn/B,KAAKsiC,GAQjBx0C,QACC,GAAyB,GAArBE,KAAKmxC,MAAMj/B,OAAa,OAE5B,MAAMxN,EAAO1E,KAAKu9C,sBAClBv9C,KAAKmxC,MAAMj/B,OAAS,EAEpB8rC,GAASh+C,KAAKwd,KAAKygC,QAAb,gBAAqC,CAC1CzlC,OAAQ,OACR6lC,KAAMjjC,KAAKE,UAAU5W,GACrB45C,QAAS,CACRC,eAAgB,sBAEfjmC,MAAKQ,IACHA,EAAI0lC,QAAU,IACjBx+C,KAAKkkB,OAAOpJ,KAAK,qDAAqDhC,EAAI0lC,UAAU1lC,EAAI2lC,cAExFz+C,KAAKkkB,OAAO6B,MAAM,kBAAkBrhB,EAAKwN,iDAAiD4G,EAAI2lC,iBAE7FtlC,OAAM7S,IACRtG,KAAKkkB,OAAOpJ,KAAK,mDAAqDxU,EAAI7B,QAAS6B,MAUrFxG,sBACC,OAAOE,KAAKmxC,MAAMx9B,KAAI2gC,GAAQt0C,KAAK0+C,YAAYpK,KAShDx0C,YAAYw0C,GACX,MAAMqK,EAAcrK,EAAKlvC,QAAUkvC,EAAKlvC,QAAQ63B,SAAW,KACrD34B,EAAU,CACf0B,KAAMsuC,EAAKtuC,KACX44C,KAAM,SAGNC,QAAS7+C,KAAK8+C,UAAUxK,EAAKmC,SAC7BrlB,GAAIpxB,KAAK8+C,UAAUxK,EAAKljB,IACxB2tB,SAAU/+C,KAAK8+C,UAAUxK,EAAK3iB,UAE9BqtB,cAAe,CAAEL,YAAAA,GACjBM,eAAgB,CAAEN,YAAAA,GAElBO,YAAa,GAEb3gC,UAAWve,KAAKm/C,YAAY7K,EAAKtjC,WACjCyZ,SAAUzqB,KAAKm/C,YAAY7K,EAAK7pB,UAEhCwrB,KAAM,CACL7wC,QAASu5C,EACTS,YAAa9K,EAAKlwC,MAGnB2hB,MAAO/lB,KAAKwd,KAAK2gC,eAAep4B,MAChCq4B,OAAQp+C,KAAKwd,KAAK2gC,eAAeC,QAoBlC,OAjBI9J,EAAKvjB,QACRzsB,EAAQ2xC,KAAY,MAAI3B,EAAKvjB,MAAMtsB,QAEnCH,EAAQ46C,YAAYltC,KAAK,CACxBS,MAAO,QACPwf,SAAU,CAAE0sB,YAAaA,EAAaU,KAAM,GAAI1jB,KAAM,GACtDpd,UAAWve,KAAKm/C,YAAY7K,EAAKkI,eAInCpmC,OAAOqL,OACNnd,EAAQ2xC,KACRj2C,KAAKq9C,aAAe,GACpBr9C,KAAK06C,YAAYpG,EAAK2B,MAAM,GAC5Bj2C,KAAK06C,YAAY16C,KAAKy9C,cAAcnJ,EAAKvjB,QAAQ,EAAM,UAAY,IAG7DzsB,EASRxE,UAAUsxB,GACT,OAAOA,EAAKA,EAAG3W,QAAQ,KAAM,IAAIN,UAAU,EAAG,IAAM,KASrDra,YAAYskC,GACX,OAAa,MAANA,EAAatiC,KAAKyzB,MAAW,IAAL6O,GAAa,OC3M9C,iBAAQxuB,IAAiB2J,GAmNzB,OAzMA,cAAoCs7B,GAOnC/6C,YAAY0d,GACXzd,MAAMyd,GAENxd,KAAKwd,KAAO4D,UAAEsC,aAAa1jB,KAAKwd,KAAM,CAErCygC,QACAl7C,EAAQ5C,IAAIm/C,yBAA2B,iCAGtCC,UAAW,GAGXj7B,SAAU,EAGV65B,eAAgB,CAEhBp4B,OAAO,EAGPq4B,QAAQ,GAIRf,YAAa,OAGfr9C,KAAKmxC,MAAQ,GASdrxC,KAAK+1C,GACJ91C,MAAM4S,KAAKkjC,GAEXmI,GAAMhrC,QAAUhT,KAAKikB,OAAOjR,QAExBhT,KAAKwd,KAAK8G,SAAW,IACxBtkB,KAAKgZ,MAAQ+F,eAAY,IAAM/e,KAAKs9C,SAA8B,IAArBt9C,KAAKwd,KAAK8G,UACvDtkB,KAAKgZ,MAAMiG,SAGZjf,KAAKq9C,YAAcznC,GAAW5V,KAAKwd,KAAK6/B,aAAer9C,KAAKwd,KAAK6/B,YAAY3mC,KAAK1W,KAAM61C,GAAU71C,KAAKwd,KAAK6/B,YACxGr9C,KAAKq9C,cACRr9C,KAAKq9C,YAAcr9C,KAAK06C,YAAY16C,KAAKq9C,aAAa,IAOxDv9C,OAKC,OAJIE,KAAKgZ,QACRuT,cAAcvsB,KAAKgZ,OACnBhZ,KAAKgZ,MAAQ,MAEPhZ,KAAKikB,OAAOjR,QAAQC,UAS5BnT,aAAaw0C,GACZt0C,KAAKmxC,MAAMn/B,KAAKsiC,GAQjBx0C,QACC,GAAyB,GAArBE,KAAKmxC,MAAMj/B,OAAa,OAE5B,MAAMxN,EAAO1E,KAAKu9C,sBAClBv9C,KAAKmxC,MAAMj/B,OAAS,EAEpB8rC,GAASh+C,KAAKwd,KAAKygC,QAAb,YACL,CACCzlC,OAAQ,OACR6lC,KAAMjjC,KAAKE,UAAU5W,GACrB45C,QAAS,CACRC,eAAgB,mBAChBiB,UAAWx/C,KAAKwd,KAAK+hC,UACrBE,cAAe,SACfC,sBAAuB,OAEtBpnC,MAAKQ,IACJA,EAAI0lC,QAAU,IACjBx+C,KAAKkkB,OAAOpJ,KAAK,uDAAuDhC,EAAI0lC,UAAU1lC,EAAI2lC,cAE1Fz+C,KAAKkkB,OAAO6B,MAAM,kBAAkBrhB,EAAKwN,+CAA+C4G,EAAI2lC,iBAE3FtlC,OAAM7S,IACRtG,KAAKkkB,OAAOpJ,KAAK,qDAAuDxU,EAAI7B,QAAS6B,MAUvFxG,sBACC,OAAOE,KAAKmxC,MAAMx9B,KAAI2gC,GAAQt0C,KAAK0+C,YAAYpK,KAShDx0C,YAAYw0C,GACX,MAAMqK,EAAcrK,EAAKlvC,QAAUkvC,EAAKlvC,QAAQ63B,SAAW,KACrD34B,EAAU,CACf0B,KAAMsuC,EAAKtuC,KACX44C,KAAM,WAGNC,QAAS7+C,KAAK8+C,UAAUxK,EAAKmC,SAC7BrlB,GAAIpxB,KAAK8+C,UAAUxK,EAAKljB,IACxB2tB,SAAU/+C,KAAK8+C,UAAUxK,EAAK3iB,UAE9BqtB,cAAe,CAAEL,YAAAA,GACjBM,eAAgB,CAAEN,YAAAA,GAElBO,YAAa,CACZ,CAAE3gC,UAAWve,KAAKm/C,YAAY7K,EAAKtjC,WAAYyB,MAAO,MACtD,CAAE8L,UAAWve,KAAKm/C,YAAY7K,EAAKkI,YAAa/pC,MAAO,OAGxD8L,UAAWve,KAAKm/C,YAAY7K,EAAKtjC,WACjCyZ,SAAUzqB,KAAKm/C,YAAY7K,EAAK7pB,UAEhCwrB,KAAM,CACL7wC,QAASu5C,EACTS,YAAa9K,EAAKlwC,MAGnB2hB,MAAO/lB,KAAKwd,KAAK2gC,eAAep4B,MAChCq4B,OAAQp+C,KAAKwd,KAAK2gC,eAAeC,QAoBlC,OAjBI9J,EAAKvjB,QACRzsB,EAAQ2xC,KAAY,MAAI3B,EAAKvjB,MAAMtsB,QAEnCH,EAAQ46C,YAAYltC,KAAK,CACxBS,MAAO,QACPwf,SAAU,CAAE0sB,YAAaA,EAAaU,KAAM,GAAI1jB,KAAM,GACtDpd,UAAWve,KAAKm/C,YAAY7K,EAAKkI,eAInCpmC,OAAOqL,OACNnd,EAAQ2xC,KACRj2C,KAAKq9C,aAAe,GACpBr9C,KAAK06C,YAAYpG,EAAK2B,MAAM,GAC5Bj2C,KAAK06C,YAAY16C,KAAKy9C,cAAcnJ,EAAKvjB,QAAQ,EAAM,UAAY,IAG7DzsB,EASRxE,UAAUsxB,GACT,OAAOA,EAAKA,EAAG3W,QAAQ,KAAM,IAAIN,UAAU,EAAG,IAAM,KASrDra,YAAYskC,GACX,OAAa,MAANA,EAAatiC,KAAKyzB,MAAW,IAAL6O,GAAa,OC3M9C,eAAQnuB,YAAUH,IAAayJ,uBACvBzZ,IAAuB6c,EAEzBg9B,GAAY,CACjBj9B,KAAMG,GACNoD,QAASlD,GACTqD,QAASnD,GAETkD,MAAOhD,GACPy8B,YAAav5B,GACbw5B,OAAQt5B,GACRu5B,OAAQr5B,GACRs5B,SAAUza,IAGX,SAAS/hB,GAAUvd,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIqd,EAAIjN,OAAOqD,KAAKkmC,IAAWr8B,MAAKD,GAAKA,EAAE3L,eAAiB1R,EAAK0R,gBACjE,OAAI2L,EACIs8B,GAAUt8B,QADlB,EAoCD,OAAiBjN,OAAOqL,OAAOk+B,GAAW,SAzB1C,SAAiBj5B,GAChB,GAAIA,aAAei5B,GAAUj9B,KAC5B,OAAOgE,EACD,GAAI5Q,GAAS4Q,GAAM,CACzB,IAAIs5B,EAAgBz8B,GAAUmD,GAC9B,GAAIs5B,EACH,OAAO,IAAIA,EAEX,MAAM,IAAIl6C,GAAmB,kCAAkC4gB,MAAS,CAAEtiB,KAAMsiB,IAE3E,GAAIzQ,GAASyQ,GAAM,CACzB,IAAIs5B,EAAgBz8B,GAAUmD,EAAItiB,MAClC,GAAI47C,EACH,OAAO,IAAIA,EAAct5B,EAAIlW,SAE7B,MAAM,IAAI1K,GAAmB,kCAAkC4gB,EAAItiB,SAAU,CAAEA,KAAMsiB,EAAItiB,OAG3F,MAAM,IAAI0B,GAAmB,kCAAkC4gB,MAAS,CAAEtiB,KAAMsiB,cAGjF,SAAkB1gB,EAAMyM,GACvBktC,GAAU35C,GAAQyM,KCfnB,OA7BA,MACC3S,YAAY0d,GACXxd,KAAKwd,KAAO4D,UAAEsC,aAAalG,EAAM,CAChCyiC,gBAAiB,IAGlBjgD,KAAKkgD,SAAW7+C,KAAKC,MACrBtB,KAAKmgD,QAAU,EACfngD,KAAKogD,WAAapgD,KAAKwd,KAAKyiC,gBAAkB,EAAI,EAAIjgD,KAAKwd,KAAKyiC,gBAGjEngD,MAAMugD,EAAO,GACZ,MAAM/+C,EAAMD,KAAKC,MACX+zB,GAAe/zB,EAAMtB,KAAKkgD,UAAY,IAO5C,OANAlgD,KAAKkgD,SAAW5+C,EAEhBtB,KAAKmgD,SAAW9qB,EAAcr1B,KAAKwd,KAAKyiC,gBACpCjgD,KAAKmgD,QAAUngD,KAAKogD,aACvBpgD,KAAKmgD,QAAUngD,KAAKogD,YAEjBpgD,KAAKmgD,SAAWE,IACnBrgD,KAAKmgD,SAAWE,GACT,KCxCV,MACMC,GADWC,KACkC,IAAnBx9C,EAAQumB,SAExC,SAASi3B,KACR,MAAM3uC,EAAO7O,EAAQ/B,SACrB,OAAiB,IAAV4Q,EAAK,GAAWA,EAAK,GAG7B,SAAStQ,KACR,OAAQi/C,KAAmBD,IAAgB,IAG5C,MAAME,GAASl/C,KACTm/C,GAASp/C,KAAKC,MAEpB,OAAiB,IAAMm/C,GAASn/C,KAAQk/C,GCXxC,SAASE,GAAQC,EAAUC,EAAUnuC,EAAOouC,GAAW,GACtDzqC,OAAO64B,eAAe0R,EAAUC,EAAU,CACzCnuC,MAAAA,EACAy8B,WAAY2R,EACZ1R,YAAY,IAsLd,OA7KA,MAUCrvC,YAAY+1C,EAAQ7vC,EAAMwX,GACzBkjC,GAAQ1gD,KAAM,SAAU61C,GAAQ,GAChC6K,GAAQ1gD,KAAM,SAAUA,KAAK61C,OAAO3xB,QAAQ,GAC5Cw8B,GAAQ1gD,KAAM,OAAQwd,GAAQ,IAC9BkjC,GAAQ1gD,KAAM,OAAQ,IAEtBA,KAAKgG,KAAOA,EACZhG,KAAKoE,KAAOpE,KAAKwd,KAAKpZ,MAAQ,SAC9BpE,KAAKoxB,GAAKpxB,KAAKwd,KAAK4T,IAAMpxB,KAAK61C,OAAO5xB,OAAOkR,cAC7Cn1B,KAAKy2C,QAAUz2C,KAAKwd,KAAKi5B,SAAWz2C,KAAKoxB,GACzCpxB,KAAK2xB,SAAW3xB,KAAKwd,KAAKmU,SAEtB3xB,KAAKwd,KAAKpY,UACmB,iBAArBpF,KAAKwd,KAAKpY,QACpBpF,KAAKoF,QAAU,CACdY,KAAMhG,KAAKwd,KAAKpY,QAChB63B,SAAUj9B,KAAKwd,KAAKpY,SAGrBpF,KAAKoF,QAAU,CACdY,KAAMhG,KAAKwd,KAAKpY,QAAQY,KACxB3F,QAASL,KAAKwd,KAAKpY,QAAQ/E,QAC3B48B,SAAUj9B,KAAKwd,KAAKpY,QAAQ63B,WAK/Bj9B,KAAK8gD,SAAiC,MAAtB9gD,KAAKwd,KAAKsjC,SAAmB9gD,KAAKwd,KAAKsjC,SAAW,EAClE9gD,KAAK02C,QAA+B,MAArB12C,KAAKwd,KAAKk5B,QAAkB12C,KAAKwd,KAAKk5B,QAAU12C,KAAK61C,OAAOkL,aAAa/gD,MAExFA,KAAKgR,UAAY,KACjBhR,KAAKw8C,WAAa,KAClBx8C,KAAKyqB,SAAW,KAEhBzqB,KAAK+wB,MAAQ,KAEb/wB,KAAKghD,KAAO,GACZhhD,KAAKi2C,KAAO,GAERj2C,KAAKwd,KAAK6/B,aACbr9C,KAAKw0C,QAAQx0C,KAAKwd,KAAK6/B,aAEpBr9C,KAAKwd,KAAKy4B,MACbj2C,KAAKw0C,QAAQx0C,KAAKwd,KAAKy4B,MAUzBn2C,MAAM8R,GAQL,OAPA5R,KAAKkkB,OAAO6B,MAAM,IAAI/lB,KAAKoxB,aAAapxB,KAAKgG,qBAE7ChG,KAAKgR,UAAYY,GAAQtQ,KAGzBtB,KAAK61C,OAAOoL,YAAYjhD,MAEjBA,KAWRF,QAAQqb,GAGP,OAFA/E,OAAOqL,OAAOzhB,KAAKi2C,KAAM96B,GAElBnb,KAYRF,IAAIkG,EAAMk7C,EAAQtvC,GAYjB,OAXAA,EAAOA,GAAQtQ,KAEftB,KAAKghD,KAAKhvC,KAAK,CACdhM,KAAAA,EACAk7C,OAAQA,GAAU,GAClBtvC,KAAAA,EACAuvC,QAASvvC,EAAO5R,KAAKgR,YAGtBhR,KAAKkkB,OAAO6B,MAAM,IAAI/lB,KAAKoxB,aAAapxB,KAAKgG,8BAA8BA,MAEpEhG,KASRF,SAASwG,GAGR,OAFAtG,KAAK+wB,MAAe,MAAPzqB,GAAcA,EAEpBtG,KAURF,OAAO8R,GAUN,OATA5R,KAAKw8C,WAAa5qC,GAActQ,KAChCtB,KAAKyqB,SAAWzqB,KAAKw8C,WAAax8C,KAAKgR,UAIvChR,KAAKkkB,OAAO6B,MAAM,IAAI/lB,KAAKoxB,aAAapxB,KAAKgG,gCAAgC5D,OAAOpC,KAAKyqB,UAAUjF,QAAQ,QAASxlB,KAAKi2C,MAEzHj2C,KAAK61C,OAAOuL,aAAaphD,MAElBA,KAQRF,WACC,OAA0B,MAAnBE,KAAKw8C,WAWb18C,UAAUkG,EAAMwX,GACf,MAAMlE,EAAI,CACTm9B,QAASz2C,KAAKy2C,QACd9kB,SAAU3xB,KAAKoxB,GACfslB,QAAS12C,KAAK02C,QACdtxC,QAASpF,KAAKoF,SAEf,OAAOpF,KAAK61C,OAAOW,UAAUxwC,EAAMwX,EAAOpH,OAAOqL,OAAOnI,EAAGkE,GAAQlE,KC5KrE,iBAAQ1D,IAAe2J,GA+SvB,OCpTiB,CAChB8hC,ODSD,MASCvhD,YAAYmkB,EAAQzG,GACnBxd,KAAKikB,OAASA,EACdjkB,KAAKkkB,OAASD,EAAO4H,UAAU,WAElB,IAATrO,IAA0B,IAATA,IACpBA,EAAO,CAAEzL,QAASyL,IAEnBxd,KAAKwd,KAAO4D,UAAEsC,aAAa,GAAIlG,EAAM,CACpCzL,SAAS,EAETuvC,SAAU,KAEVC,SAAU,CAET3iC,KAAM,EAGNqhC,gBAAiB,KAEjBuB,YAAa,MAGdrkB,SAAS,EACTC,QAAQ,EAERud,YAAa,CAAC,OAAQ,UAAW,OAAQ,OAAQ,QACjD8G,YAAY,EAEZpE,YAAa,KAEbpH,KAAM,CACL9wC,OAAQ,KACR6rB,MAAO,QAILhxB,KAAKwd,KAAKikC,aAA0D,IAA5CzhD,KAAKwd,KAAKm9B,YAAYrjC,QAAQ,UACzDtX,KAAKwd,KAAKm9B,YAAY3oC,KAAK,SAE5BhS,KAAK0hD,cAAgB,EAEqB,MAAtC1hD,KAAKwd,KAAK+jC,SAAStB,iBAA2BjgD,KAAKwd,KAAK+jC,SAAStB,gBAAkB,IACtFjgD,KAAK2hD,YAAc,IAAIC,GAAY,CAClC3B,gBAAiBjgD,KAAKwd,KAAK+jC,SAAStB,mBAQlCjgD,KAAKwd,KAAKzL,SACb/R,KAAKkkB,OAAOuB,KAAK,oBAMnB3lB,OACC,GAAIE,KAAKwd,KAAKzL,UAEb/R,KAAKq9C,YAAcznC,GAAW5V,KAAKwd,KAAK6/B,aAAer9C,KAAKwd,KAAK6/B,YAAY3mC,KAAK1W,KAAMA,MAAQA,KAAKwd,KAAK6/B,YAGtGr9C,KAAKwd,KAAK8jC,UAAU,CACvB,MAAMO,EAAYprC,MAAMiK,QAAQ1gB,KAAKwd,KAAK8jC,UAAYthD,KAAKwd,KAAK8jC,SAAW,CAACthD,KAAKwd,KAAK8jC,UAEtFthD,KAAKshD,SAAWlgC,UAAE+K,QAAQ01B,GAAWluC,KAAI2F,IACxC,MAAMgoC,EAAW3B,GAAU1sC,QAAQqG,GAEnC,OADAgoC,EAAS3uC,KAAK3S,MACPshD,KAGR,MAAMQ,EAAgB9hD,KAAKshD,SAAS3tC,KAAI2tC,GAAYthD,KAAKikB,OAAOoI,mBAAmBi1B,KACnFthD,KAAKkkB,OAAOuB,KAAK,mBAAmBq8B,EAAc5vC,OAAS,EAAI,IAAK,OAAO4vC,EAActlC,KAAK,UASjG1c,OACC,OAAIE,KAAKshD,SACDthD,KAAKikB,OAAOjR,QAAQwZ,IAAIxsB,KAAKshD,SAAS3tC,KAAI2F,GAAKA,EAAEjG,UAElDrT,KAAKikB,OAAOjR,QAAQC,UAS5BnT,YACC,OAAOE,KAAKwd,KAAKzL,QAkClBjS,aAAaw0C,GACZ,QAAsC,MAAlCt0C,KAAKwd,KAAK+jC,SAASC,aAClBlN,EAAKwM,SAAW9gD,KAAKwd,KAAK+jC,SAASC,eAIpCxhD,KAAK2hD,YACD3hD,KAAK2hD,YAAYta,QAGM,GAA3BrnC,KAAKwd,KAAK+jC,SAAS3iC,OAGQ,GAA3B5e,KAAKwd,KAAK+jC,SAAS3iC,QAGjB5e,KAAK0hD,cAAgB1hD,KAAKwd,KAAK+jC,SAAS3iC,MAAQ,IACrD5e,KAAK0hD,cAAgB,GACd,KAeT5hD,UAAUkG,EAAMwX,EAAO,IACtB,IAAIukC,EAAa,GACbvkC,EAAKwkC,aACRD,EAAWtL,QAAUj5B,EAAKwkC,WAAWvL,QACrCsL,EAAWpwB,SAAWnU,EAAKwkC,WAAW5wB,GACtC2wB,EAAWrL,QAAUl5B,EAAKwkC,WAAWtL,SAGtC,MAAMpC,EAAO,IAAI2N,GAAKjiD,KAAMgG,EAAMoQ,OAAOqL,OAAO,CAC/Crd,KAAM,SACNi5C,YAAar9C,KAAKq9C,aAChB0E,EAAYvkC,EAAM,CAAEwkC,gBAAY5wC,KAInC,OAFAkjC,EAAK9hC,QAEE8hC,EAURx0C,eAAe0Y,EAAQ7V,GAClB3C,KAAKshD,UACRthD,KAAKshD,SAAS1nC,SAAQ0nC,GAAYA,EAAS9oC,GAAQC,MAAM6oC,EAAU3+C,KAqDrE7C,oBACC,OAAO,KAWRA,kBACC,OAAO,KAWRA,YAAYw0C,GAGPA,EAAKoC,SACR12C,KAAKkiD,eAAe,cAAe,CAAC5N,IAStCx0C,aAAaw0C,GAGRA,EAAKoC,SACR12C,KAAKkiD,eAAe,eAAgB,CAAC5N,MC9SvC2N,KAAMt/B,GACNg9B,UAAW98B,ICDZ,MAAMhd,mBAAEA,kBAAoBtB,IAAoBgb,YACxCtJ,cAAUL,WAAYW,IAAYoM,GAQ1C,SAASw/B,GAAajsC,GACrB,OAAON,GAAWM,GAAK,CAAExT,QAASwT,GAAMA,EAQzC,SAASksC,GAAYlsC,GACpB,OAAOO,MAAMiK,QAAQxK,GAAKA,EAAI,CAACA,GAGhC,SAASmsC,GAAe1/C,GACvB,OAAOA,EAAKuP,OAAS,IAA4D,IAAvD,CAAC,MAAO,WAAWoF,QAAQ3U,EAAK,GAAG+U,eAS9D,MAAM4qC,GAULxiD,YAAYmkB,EAAQ0jB,GACnB,IAAK1xB,GAASgO,GACb,MAAM,IAAIpe,GAAmB,sCAE9B7F,KAAKikB,OAASA,EAEVA,IACHjkB,KAAKgT,QAAUiR,EAAOjR,SAEnB20B,GACH3nC,KAAKuiD,mBAAmB5a,GAQ1B7nC,mBAAmB6nC,GAClB,IAAK1xB,GAAS0xB,GACb,MAAM,IAAI9hC,GAAmB,uEAgB9B,GAdA7F,KAAKwiD,eAAiBphC,UAAE2oB,UAAUpC,GAE9BA,EAAO8a,SACV9a,EAAS2a,GAAQI,YAAY/a,IAG1B/xB,GAAW+xB,EAAOgb,QACrBhb,EAAOgb,OAAOjsC,KAAK1W,KAAM2nC,GACflxB,MAAMiK,QAAQinB,EAAOgb,SAC/Bhb,EAAOgb,OAAO/oC,SAAQ/D,GAAMA,EAAGa,KAAK1W,KAAM2nC,KAG3C3nC,KAAKikB,OAAO2+B,uBAAuB,kBAAmB,CAAC5iD,KAAM2nC,KAExDA,EAAO3hC,KAGX,MADA6U,QAAQkW,MAAM,yGAA0G,CAAE4W,OAAAA,IACpH,IAAI9hC,GAAmB,yGAA0G,CAAE8hC,OAAAA,IAG1I3nC,KAAKgG,KAAO2hC,EAAO3hC,KACnBhG,KAAKK,QAAUsnC,EAAOtnC,QACtBL,KAAKk9B,SAAWyK,EAAOzK,UAAY,GACnCl9B,KAAKk1B,SAAWyS,EAAOzS,UAAY,GACnCl1B,KAAK2nC,OAASA,EAEd3nC,KAAKi9B,SAAWqlB,GAAQlhB,qBAAqBphC,KAAKgG,MAAyC,IAAnChG,KAAKk9B,SAAS2lB,iBAA4B7iD,KAAKK,aAAU+Q,GAEjHpR,KAAKkkB,OAASlkB,KAAKikB,OAAO4H,UAAU7rB,KAAKi9B,SAAU,CAClDI,IAAKr9B,KAAKgG,KACViqB,IAAKjwB,KAAKK,UAGXL,KAAKm9B,QAAU,GACfn9B,KAAKo9B,OAAS,GAGd,MAAM0lB,EAAuB,CAC5B98C,KAAMhG,KAAKgG,KACX3F,QAASL,KAAKK,QACd48B,SAAUj9B,KAAKi9B,SACfC,SAAUl9B,KAAK+iD,mBAAmB/iD,KAAKk9B,UACvChI,SAAUl1B,KAAKk1B,SACfiI,QAAS,GACTC,OAAQ,IAILnnB,GAAS0xB,EAAOqb,UAEnB5hC,UAAE0c,MAAM6J,EAAOqb,SAAS,CAACxqC,EAAQxS,KAEhC,IAAwL,GAApL,CAAC,OAAQ,UAAW,WAAY,WAAY,eAAgB,SAAU,SAAU,UAAW,SAAU,UAAW,UAAW,UAAW,SAAU,QAAS,SAASsR,QAAQtR,GAC7K,MAAM,IAAIH,GAAmB,wBAAwBG,UAAahG,KAAKgG,kBAGxEhG,KAAKijD,cAAczqC,EAAQxS,MAKzBiQ,GAAS0xB,EAAOxK,UACnB/b,UAAE0c,MAAM6J,EAAOxK,SAAS,CAACh4B,EAAQa,KAChC,IAAe,IAAXb,EACH,OAED,IAAI+9C,EAAcljD,KAAKmjD,cAAch+C,EAAQa,GAE7C88C,EAAqB3lB,QAAQ+lB,EAAYl9C,MAAQk9C,EAEjD,MAAME,EAAiBpjD,KAAKikB,OAAO0d,YAAYC,YAAY,cAAeshB,EAAYxgD,QAASwgD,GAGzFxrB,EAAK13B,KAAKikB,OAAOxG,SAAS4lC,4BAA4BH,GAC5DljD,KAAKm9B,QAAQn3B,GAAQ,CAACosB,EAAQ5U,KAC7B,IAAI0T,EAOJ,OAJCA,EAFG1T,GAAQA,EAAK0T,IAEV1T,EAAK0T,IAELlxB,KAAKikB,OAAOkN,eAAemyB,OAAOtjD,KAAKikB,OAAQyT,EAAItF,EAAQ5U,GAAQ,IAEnE4lC,EAAelyB,OAOrBjb,GAAS0xB,EAAOvK,SACnBhc,UAAE0c,MAAM6J,EAAOvK,QAAQ,CAACpM,EAAOhrB,KAC9B,MAAMu9C,EAAavjD,KAAKwjD,aAAaxyB,EAAOhrB,GAC5C88C,EAAqB1lB,OAAOmmB,EAAWv9C,MAAQu9C,EAG/CvjD,KAAKo9B,OAAOmmB,EAAWv9C,MAAQ,CAACosB,EAAQ5U,KACvC,IAAI0T,EACJ,GAAI1T,GAAQA,EAAK0T,IAEhBA,EAAM1T,EAAK0T,QACL,CACN,MAAMwG,EAAK,CACVtG,GAAIpxB,KAAKikB,OAAO/e,OAChB8rB,MAAOuyB,GAERryB,EAAMlxB,KAAKikB,OAAOkN,eAAemyB,OAAOtjD,KAAKikB,OAAQyT,EAAItF,EAAQ5U,GAAQ,IAM1E,OAJA0T,EAAIvL,UAAY3f,EAChBkrB,EAAIM,UAAY,OAChBN,EAAIK,YAAc,CAACgyB,EAAWplB,OAASn+B,KAAKgG,MAErCu9C,EAAW7gD,QAAQwuB,OAK7BlxB,KAAKyjD,sBAAwBX,EAG7B9iD,KAAK0jD,QAQN5jD,mBAAmBo9B,GAClB,OAAIA,GAAYzmB,MAAMiK,QAAQwc,EAASymB,iBAC/BviC,UAAE4b,KAAKE,EAAU,GAAGtmB,OAAOsmB,EAASymB,gBAAiB,CAAC,qBAGvDzmB,EASRp9B,QACCE,KAAKkkB,OAAO6B,MAAM,YAAY/lB,KAAKi9B,4BAC/BrnB,GAAW5V,KAAK2nC,OAAOic,SAC1B5jD,KAAK2nC,OAAOic,QAAQltC,KAAK1W,MACfyW,MAAMiK,QAAQ1gB,KAAK2nC,OAAOic,UACpC5jD,KAAK2nC,OAAOic,QAAQhqC,SAAQ/D,GAAMA,EAAGa,KAAK1W,QAG3CA,KAAKikB,OAAO4/B,gBAAgB7jD,MAE5BA,KAAKikB,OAAO2+B,uBAAuB,iBAAkB,CAAC5iD,OAEtDA,KAAKkkB,OAAO6B,MAAM,YAAY/lB,KAAKi9B,sBAUpCn9B,SAEC,OADAE,KAAKkkB,OAAO6B,MAAM,YAAY/lB,KAAKi9B,4BAC5Bj9B,KAAKgT,QAAQC,UAClBqF,MAAK,IACEtY,KAAKikB,OAAO6/B,mBAAmB,kBAAmB,CAAC9jD,SAE1DsY,MAAK,KAEL,GAAItY,KAAK2nC,OAAO3J,aACf,OAAOh+B,KAAK+jD,gBAAgB/jD,KAAK2nC,OAAO3J,aAAch+B,KAAKk9B,SAAS8mB,oBAAsB,EAAGhkD,KAAKk9B,SAAS+mB,qBAAuBjkD,KAAKikB,OAAOzT,QAAQ0zC,uBAEvJ5rC,MAAK,IACD1C,GAAW5V,KAAK2nC,OAAO1W,SACnBjxB,KAAKgT,QAAQwF,OAAOxY,KAAK2nC,OAAO1W,SAASva,KAAK1W,MAElDyW,MAAMiK,QAAQ1gB,KAAK2nC,OAAO1W,SACtBjxB,KAAK2nC,OAAO1W,QACjBtd,KAAIkC,GAAM7V,KAAKgT,QAAQwF,OAAO3C,EAAG5S,KAAKjD,SACtCqS,QAAO,CAACgG,EAAGxC,IAAOwC,EAAEC,MAAK,IAAMzC,OAAO7V,KAAKgT,QAAQC,gBAHtD,IAMAqF,MAAK,KAELtY,KAAKikB,OAAOkgC,qBAAqBnkD,KAAKyjD,uBAC/B,QAEPnrC,MAAK,IACEtY,KAAKikB,OAAO6/B,mBAAmB,iBAAkB,CAAC9jD,SAEzDsY,MAAK,IAAMtY,KAAKkkB,OAAOuB,KAAK,YAAYzlB,KAAKi9B,wBAUhDn9B,QAEC,OADAE,KAAKkkB,OAAO6B,MAAM,YAAY/lB,KAAKi9B,4BAC5Bj9B,KAAKgT,QAAQC,UAClBqF,MAAK,IACEtY,KAAKikB,OAAO6/B,mBAAmB,kBAAmB,CAAC9jD,MAAO,CAAE6uB,SAAS,MAE5EvW,MAAK,KACL,GAAI1C,GAAW5V,KAAK2nC,OAAOyc,SAC1B,OAAOpkD,KAAKgT,QAAQwF,OAAOxY,KAAK2nC,OAAOyc,SAAS1tC,KAAK1W,MAEtD,GAAIyW,MAAMiK,QAAQ1gB,KAAK2nC,OAAOyc,SAAU,CAEvC,OADY3tC,MAAMmJ,KAAK5f,KAAK2nC,OAAOyc,SAASv1B,UAE1Clb,KAAIkC,GAAM7V,KAAKgT,QAAQwF,OAAO3C,EAAG5S,KAAKjD,SACtCqS,QAAO,CAACgG,EAAGxC,IAAOwC,EAAEC,MAAK,IAAMzC,OAAO7V,KAAKgT,QAAQC,WAGtD,OAAOjT,KAAKgT,QAAQC,aAEpBqF,MAAK,IACEtY,KAAKikB,OAAO6/B,mBAAmB,iBAAkB,CAAC9jD,MAAO,CAAE6uB,SAAS,MAE3EvW,MAAK,IAAMtY,KAAKkkB,OAAOuB,KAAK,YAAYzlB,KAAKi9B,wBAahDn9B,cAAcu1C,EAAWrvC,GACxB,IAAIb,EACJ,GAAIyQ,GAAWy/B,GAEdlwC,EAAS,CACRzC,QAAS2yC,OAEJ,CAAA,IAAIp/B,GAASo/B,GAGnB,MAAM,IAAIxvC,GAAmB,iCAAiCG,iBAAoBhG,KAAKi9B,sBAFvF93B,EAASic,UAAE2oB,UAAUsL,GAKtB,IAAI3yC,EAAUyC,EAAOzC,QACrB,IAAKkT,GAAWlT,GACf,MAAM,IAAImD,GAAmB,8BAA8BG,iBAAoBhG,KAAKi9B,sBAgBrF,OAbA93B,EAAOkrC,QAAUlrC,EAAOa,MAAQA,GACW,IAAvChG,KAAKk9B,SAASmnB,qBACjBl/C,EAAOa,KAAOhG,KAAKi9B,SAAW,IAAM93B,EAAOkrC,QAE3ClrC,EAAOa,KAAOb,EAAOkrC,aAEDj/B,IAAjBjM,EAAOwU,YAAgDvI,IAAzBpR,KAAKk9B,SAASonB,SAC/Cn/C,EAAOwU,MAAQ3Z,KAAKk9B,SAASonB,QAG9Bn/C,EAAOC,QAAUpF,KACjBmF,EAAOzC,QAAU1C,KAAKgT,QAAQwF,OAAO9V,EAAQO,KAAKjD,OAE3CmF,EAURrF,cAAcykD,EAAWv+C,GACxB,IAAIwS,EACJ,GAAI5C,GAAW2uC,GAEd/rC,EAAS,CACR9V,QAAS6hD,OAEJ,CAAA,IAAItuC,GAASsuC,GAGnB,MAAM,IAAI1+C,GAAmB,iCAAiCG,iBAAoBhG,KAAKi9B,sBAFvFzkB,EAAS+rC,EAKV,IAAK3uC,GAAW4C,EAAO9V,SACtB,MAAM,IAAImD,GAAmB,8BAA8BG,iBAAoBhG,KAAKi9B,sBASrF,OANAzkB,EAAOxS,KAAOA,EACdwS,EAAOpT,QAAUpF,KACjBwY,EAAO9V,QAAU8V,EAAO9V,QAAQO,KAAKjD,MAErCA,KAAKgG,GAAQhG,KAAKikB,OAAO0d,YAAYC,YAAY,cAAeppB,EAAO9V,QAAS8V,GAEzEA,EAaR1Y,aAAa0kD,EAAUx+C,GACtB,IAAIgrB,EAkBAtuB,EAjBJ,GAAIkT,GAAW4uC,IAAa/tC,MAAMiK,QAAQ8jC,GACzCxzB,EAAQ,CACPtuB,QAAS8hD,OAEJ,CAAA,IAAIvuC,GAASuuC,GAGnB,MAAM,IAAI3+C,GAAmB,gCAAgCG,gBAAmBhG,KAAKi9B,sBAFrFjM,EAAQ5P,UAAE2oB,UAAUya,GAKrB,IAAK5uC,GAAWob,EAAMtuB,WAAa+T,MAAMiK,QAAQsQ,EAAMtuB,SACtD,MAAM,IAAImD,GAAmB,6BAA6BG,gBAAmBhG,KAAKi9B,sBAOnF,GAAIrnB,GAAWob,EAAMtuB,SAAU,CAC9B,MAAMC,EAAO8hD,UAAkBzzB,EAAMtuB,SACrCA,EAAU1C,KAAKgT,QAAQwF,OAAOwY,EAAMtuB,SACpCA,EAAQgiD,gBAAmC,IAAlB1zB,EAAM2zB,SAAoBtC,GAAe1/C,QACxD8T,MAAMiK,QAAQsQ,EAAMtuB,WAC9BA,EAAUsuB,EAAMtuB,QAAQiR,KAAIy8B,IAC3B,MAAMztC,EAAO8hD,UAAkBrU,GAG/B,OAFAA,EAAIpwC,KAAKgT,QAAQwF,OAAO43B,IACtBsU,gBAAmC,IAAlB1zB,EAAM2zB,SAAoBtC,GAAe1/C,GACrDytC,MAIJpf,EAAMhrB,OACVgrB,EAAMhrB,KAAOA,GAEdgrB,EAAM5rB,QAAUpF,KAChB,MAAMN,EAAOM,KAab,OAZI4V,GAAWlT,GAEdsuB,EAAMtuB,QAAU,SAASwuB,GACxB,OAAOxuB,EAAQ+V,MAAM/Y,EAAMgD,EAAQgiD,eAAiB,CAACxzB,GAAO,CAACA,EAAIkB,OAAQlB,EAAIhsB,OAAQgsB,EAAIvL,UAAWuL,KAE3Fza,MAAMiK,QAAQhe,KAExBsuB,EAAMtuB,QAAU,SAASwuB,GACxB,OAAOxxB,EAAKsT,QAAQwZ,IAAI9pB,EAAQiR,KAAIkC,GAAMA,EAAG4C,MAAM/Y,EAAMmW,EAAG6uC,eAAiB,CAACxzB,GAAO,CAACA,EAAIkB,OAAQlB,EAAIhsB,OAAQgsB,EAAIvL,UAAWuL,SAIxHF,EAURlxB,sBAAsB6lB,EAAWyM,EAAQ5U,GACxC,OAAKxd,KAAKo9B,OAAOzX,GAGV3lB,KAAKo9B,OAAOzX,GAAWyM,EAAQ5U,GAF9BxK,QAAQE,OAAO,IAAI3O,GAAe,OAAOohB,oCAA6C,IAAK,kBAAmB,CAAEA,UAAAA,KAiCzH7lB,gBAAgB8kD,EAAc7rC,EAASuL,GACtC,OAAOtkB,KAAKikB,OAAO8/B,gBAAgBa,EAAc7rC,EAASuL,EAAUtkB,KAAKkkB,QAY1EpkB,mBAAmB6nC,GAClB,GAAIA,EAAO8a,OAAQ,CAClB,MAAMA,EAAShsC,MAAMiK,QAAQinB,EAAO8a,QAAU9a,EAAO8a,OAAS,CAAC9a,EAAO8a,QACtE,GAAIA,EAAOvwC,OAAS,EAAG,CACtB,MAAM2yC,EAAcpuC,MAAMmJ,KAAK6iC,GAAQ5zB,UAAUxc,QAAO,CAAC0D,EAAG+uC,KACvDA,EAAMrC,SACTqC,EAAQxC,GAAQI,YAAYoC,IAEtB/uC,EAAIusC,GAAQyC,aAAahvC,EAAG+uC,GAASA,IAC1C,MAEH,OAAOxC,GAAQyC,aAAaF,EAAald,IAK3C,OAAOA,EAaR7nC,oBAAoBklD,EAAaC,GAChC,MAAMnsC,EAAMsI,UAAE2oB,UAAUib,GAClBE,EAAO9jC,UAAE2oB,UAAUkb,GAoDzB,OAlDA7uC,OAAOqD,KAAKyrC,GAAMtrC,SAAQC,IACzB,IAA0C,IAAtC,CAAC,OAAQ,WAAWvC,QAAQuC,SAA6BzI,IAAd8zC,EAAKrrC,GAEnDf,EAAIe,GAAOqrC,EAAKrrC,QACV,GAAW,YAAPA,EAEVf,EAAIe,GAAOyoC,GAAQ6C,oBAAoBD,EAAKrrC,GAAMf,EAAIe,SAEhD,GAAW,YAAPA,EAEVf,EAAIe,GAAOyoC,GAAQ8C,oBAAoBF,EAAKrrC,GAAMf,EAAIe,SAEhD,GAAW,SAAPA,EAEVf,EAAIe,GAAOyoC,GAAQ+C,iBAAiBH,EAAKrrC,GAAMf,EAAIe,IAAQ,SAErD,GAAW,WAAPA,EAEVf,EAAIe,GAAOyoC,GAAQgD,mBAAmBJ,EAAKrrC,GAAMf,EAAIe,IAAQ,SAEvD,GAAW,WAAPA,EAEVf,EAAIe,GAAOyoC,GAAQiD,mBAAmBL,EAAKrrC,GAAMf,EAAIe,SAE/C,GAAW,UAAPA,EAEVf,EAAIe,GAAOyoC,GAAQkD,kBAAkBN,EAAKrrC,GAAMf,EAAIe,IAAQ,SAEtD,IAAkE,IAA9D,CAAC,SAAU,UAAW,UAAW,WAAWvC,QAAQuC,GAE9Df,EAAIe,GAAOyoC,GAAQmD,6BAA6BP,EAAKrrC,GAAMf,EAAIe,SAEzD,GAAW,UAAPA,EAEVf,EAAIe,GAAOyoC,GAAQoD,qBAAqBR,EAAKrrC,GAAMf,EAAIe,SAEjD,GAAW,gBAAPA,EAEVf,EAAIe,GAAOyoC,GAAQoD,qBAAqBR,EAAKrrC,GAAMf,EAAIe,QAEjD,CACN,MAAM8rC,EAAe,cAAgB9rC,EAAIY,QAAQ,IAAKZ,EAAI,GAAG4oB,eACzD7sB,GAAW0sC,GAAQqD,IACtB7sC,EAAIe,GAAOyoC,GAAQqD,GAAcT,EAAKrrC,GAAMf,EAAIe,IAEhDf,EAAIe,GAAOyoC,GAAQsD,mBAAmBV,EAAKrrC,GAAMf,EAAIe,QAKjDf,EAYRhZ,2BAA2B+lD,EAAKxhD,GAC/B,GAAKA,GAAUA,EAAOs/C,iBAAqBkC,GAAOA,EAAIlC,gBAAkB,CACvE,MAAMmC,EAAQD,GAAOA,EAAIlC,gBAAkBkC,EAAIlC,gBAAkB,GAC3DoC,EAAW1hD,GAAUA,EAAOs/C,gBAAkBt/C,EAAOs/C,gBAAkB,GACxEt/C,IAAQA,EAAS,IAEtBA,EAAOs/C,gBAAkBviC,UAAEue,KAAK,GAAG/oB,OAAOkvC,EAAOC,IAGlD,OAAO3kC,UAAEsC,aAAamiC,EAAKxhD,GAY5BvE,2BAA2B+lD,EAAKxhD,GAC/B,OAAO+c,UAAEsC,aAAamiC,EAAKxhD,GAY5BvE,4BAA4B+lD,EAAKxhD,GAChC,OAAO+c,UAAE4kC,SAAS5kC,UAAE+K,QAAQ5V,GAAQ,CAACsvC,EAAKxhD,KAAW+c,UAAE6kC,SAYxDnmD,+BAA+B+lD,EAAKxhD,GACnC,OAAOi+C,GAAQoD,qBAAqBG,EAAKxhD,GAY1CvE,wBAAwB+lD,EAAKxhD,GAa5B,OAZA+R,OAAOqD,KAAKosC,GAAKjsC,SAAQoG,IACP,MAAb3b,EAAO2b,KACV3b,EAAO2b,GAAK,IAEb5J,OAAOqD,KAAKosC,EAAI7lC,IAAIpG,SAAQssC,IAC3B,MAAMC,EAAU/D,GAAYyD,EAAI7lC,GAAGkmC,IAC7BE,EAAUhE,GAAY/9C,EAAO2b,GAAGkmC,IAEtC7hD,EAAO2b,GAAGkmC,GAAM9kC,UAAE+K,QAAQ5V,GAAa,UAALyJ,EAAgB,CAAComC,EAASD,GAAW,CAACA,EAASC,WAI5E/hD,EAYRvE,0BAA0B+lD,EAAKxhD,GAsB9B,OArBA+R,OAAOqD,KAAKosC,GAAKjsC,SAAQoG,IACxB,IAAe,IAAX6lC,EAAI7lC,IAAgB3b,EAAO2b,GAE9B,mBADO3b,EAAO2b,GAIf,MAAMqmC,EAAYlE,GAAa0D,EAAI7lC,IAC7BsmC,EAAenE,GAAa99C,EAAO2b,IAErCqmC,GAAaA,EAAUlW,OAASmW,GAAgBA,EAAanW,OAChE/5B,OAAOqD,KAAK4sC,EAAUlW,OAAOv2B,SAAQoG,IACpC,MAAMmmC,EAAU/D,GAAYiE,EAAUlW,MAAMnwB,IACtComC,EAAUhE,GAAYkE,EAAanW,MAAMnwB,IAE/CqmC,EAAUlW,MAAMnwB,GAAKoB,UAAE+K,QAAQ5V,GAAa,UAALyJ,EAAgB,CAAComC,EAASD,GAAW,CAACA,EAASC,QAIxF/hD,EAAO2b,GAAKoB,UAAEsC,aAAa2iC,EAAWC,MAGhCjiD,EAYRvE,0BAA0B+lD,EAAKxhD,GAC9B,OAAO+R,OAAOqL,OAAOpd,GAAU,GAAIwhD,GAAO,IAY3C/lD,yBAAyB+lD,EAAKxhD,GAY7B,OAXA+R,OAAOqD,KAAKosC,GAAKjsC,SAAQoG,IACxB,MAAMumC,EAAWpE,GAAa0D,EAAI7lC,IAC5BwmC,EAAWrE,GAAa99C,EAAO2b,IAErC,IAAItd,EAAU0e,UAAE+K,QAAQ5V,GAAQ,CAACiwC,EAAWA,EAAS9jD,QAAU,KAAM6jD,EAAWA,EAAS7jD,QAAU,QAC7E,GAAlBA,EAAQwP,SAAaxP,EAAUA,EAAQ,IAE3C2B,EAAO2b,GAAKoB,UAAEsC,aAAa6iC,EAAUC,GACrCniD,EAAO2b,GAAGtd,QAAUA,KAGd2B,EAYRvE,oCAAoC+lD,EAAKxhD,GACxC,OAAO+c,UAAE+K,QAAQ5V,GAAQ,CAAClS,EAAQwhD,KAYnC/lD,0BAA0B+lD,EAAKxhD,GAC9B,YAAY+M,IAARy0C,EACIA,EAEDxhD,EAQRvE,4BAA4BkG,EAAM3F,GACjC,OAAe,MAAXA,GACwB,mBAAW,IAAMA,EAAUA,GAAW,IAAM2F,EAEjEA,GAKT,OAAiBs8C,GCpwBjB,eAAQxsC,IAAayJ,IAEf/Z,oBAAEA,GAAmBG,kBAAEA,IAAsBgd,EAUnD,SAAS8jC,GAAUv1B,EAAKw1B,GAGvB,OAFIA,GACHtwC,OAAOqL,OAAOyP,EAAIO,KAAMi1B,GAClBx1B,EAAIO,KAgBZ,MAAMk1B,GAUL7mD,YAAYmkB,EAAQgO,GAEnBjyB,KAAKikB,OAASA,EACVjkB,KAAKikB,QACRjkB,KAAKkF,OAASlF,KAAKikB,OAAO/e,OAC1BlF,KAAKoxB,GAAKpxB,KAAKikB,OAAOkR,eAEtBn1B,KAAKkF,OAAS,KAGX+sB,EACHjyB,KAAKmyB,YAAYF,IAEjBjyB,KAAKiyB,SAAW,KAChBjyB,KAAKoF,QAAU,KACfpF,KAAKmF,OAAS,KACdnF,KAAKgxB,MAAQ,MAIdhxB,KAAK2lB,UAAY,KAEjB3lB,KAAKwxB,UAAY,KAEjBxxB,KAAKuxB,YAAc,KAEnBvxB,KAAKwQ,QAAU,CACduI,QAAS,KACTq7B,QAAS,MAGVp0C,KAAK2xB,SAAW,KAChB3xB,KAAK4xB,OAAS,KAEd5xB,KAAK4F,MAAQ,EAEb5F,KAAKoyB,OAAS,KACdpyB,KAAKyxB,KAAO,GACZzxB,KAAK4mD,OAAS,GAEd5mD,KAAKsR,UAAYtR,KAAKoxB,GAEtBpxB,KAAK0xB,QAAU,KACf1xB,KAAKs0C,KAAO,KACZt0C,KAAK6mD,WAAa,GAElB7mD,KAAK20B,QAAU,KACf30B,KAAK8mD,MAAQ,KAQb9mD,KAAKupC,cAAe,EAerBzpC,cAAcmkB,EAAQgO,EAAUG,EAAQ5U,EAAO,IAC9C,MAAM0T,EAAM,IAAIjN,EAAOkN,eAAelN,EAAQgO,GAK9C,GAHgB,MAAZA,GACHf,EAAIiB,YAAYF,GAEH,MAAVG,EAAgB,CACnB,IAAI20B,IAAU9iC,GAASA,EAAOzT,QAAQ8gB,qBACZ,MAAtB9T,EAAKwpC,gBACRD,EAAUvpC,EAAKwpC,eAChB91B,EAAIG,UAAUe,EAAQ20B,GAiDvB,OA7CA71B,EAAI1gB,QAAUgN,EAGQ,MAAlBA,EAAKlM,UACR4f,EAAI5f,UAAYkM,EAAKlM,UACK,MAAlBkM,EAAKypC,WAAiD,MAA5BzpC,EAAKypC,UAAU31C,YACjD4f,EAAI5f,UAAYkM,EAAKypC,UAAU31C,WAGV,MAAlBkM,EAAKypC,WAA4C,MAAvBzpC,EAAKypC,UAAUx1B,KAC5CP,EAAIO,KAAOrb,OAAOqL,OAAO,GAAIjE,EAAKypC,UAAUx1B,MAAQ,GAAIjU,EAAKiU,MAAQ,IAChD,MAAbjU,EAAKiU,OACbP,EAAIO,KAAOjU,EAAKiU,MAGK,MAAlBjU,EAAKypC,YACR/1B,EAAIQ,QAAUlU,EAAKypC,UAAUv1B,QAC7BR,EAAItrB,MAAQ4X,EAAKypC,UAAUrhD,MAAQ,EAE/B4X,EAAKypC,UAAU3S,KAClBpjB,EAAIS,SAAWnU,EAAKypC,UAAU3S,KAAKljB,GAEnCF,EAAIS,SAAWnU,EAAKypC,UAAU71B,GAE3B5T,EAAKypC,UAAU7hD,UAClB8rB,EAAIU,OAASpU,EAAKypC,UAAU7hD,QAAQ63B,WAIlCzf,EAAKoU,SACRV,EAAIU,OAASpU,EAAKoU,QAII,MAAnBpU,EAAKwkC,aACR9wB,EAAIS,SAAWnU,EAAKwkC,WAAW5wB,GAC/BF,EAAI5f,UAAYkM,EAAKwkC,WAAWvL,QAChCvlB,EAAIQ,QAAUlU,EAAKwkC,WAAWtL,SAI3Bl5B,EAAKmX,UACRzD,EAAIyD,QAAUnX,EAAKmX,SAGbzD,EAQRpxB,KAAK43B,GACJ,MAAMsI,EAAS,IAAIhgC,KAAK4b,YAAY5b,KAAKikB,QAsBzC,OApBA+b,EAAO96B,OAASlF,KAAKkF,OACrB86B,EAAO7N,YAAYuF,GAAM13B,KAAKiyB,UAC9B+N,EAAOxvB,QAAUxQ,KAAKwQ,QACtBwvB,EAAOrO,SAAW3xB,KAAK2xB,SACvBqO,EAAOpO,OAAS5xB,KAAK4xB,OACrBoO,EAAOp6B,MAAQ5F,KAAK4F,MACpBo6B,EAAO5N,OAASpyB,KAAKoyB,OACrB4N,EAAOvO,KAAOzxB,KAAKyxB,KACnBuO,EAAO4mB,OAAS5mD,KAAK4mD,OACrB5mB,EAAO1uB,UAAYtR,KAAKsR,UACxB0uB,EAAOtO,QAAU1xB,KAAK0xB,QACtBsO,EAAOsU,KAAOt0C,KAAKs0C,KACnBtU,EAAOrL,QAAU30B,KAAK20B,QACtBqL,EAAO8mB,MAAQ9mD,KAAK8mD,MACpB9mB,EAAOra,UAAY3lB,KAAK2lB,UACxBqa,EAAOxO,UAAYxxB,KAAKwxB,UACxBwO,EAAOzO,YAAcvxB,KAAKuxB,YAE1ByO,EAAOuJ,aAAevpC,KAAKupC,aAEpBvJ,EASRlgC,YAAYmyB,GACXjyB,KAAKiyB,SAAWA,EACZA,IACHjyB,KAAKkF,OAAS+sB,EAASb,GACnBa,EAAS9sB,QACZnF,KAAKmF,OAAS8sB,EAAS9sB,OACvBnF,KAAKoF,QAAUpF,KAAKmF,OAAOC,QAC3BpF,KAAKgxB,MAAQ,MACHiB,EAASjB,QACnBhxB,KAAKgxB,MAASiB,EAASjB,MACvBhxB,KAAKoF,QAAUpF,KAAKgxB,MAAM5rB,QAC1BpF,KAAKmF,OAAS,OAajBrF,UAAUonD,EAAWH,GAAU,GAE7B/mD,KAAKoyB,OADF20B,GAAWG,EACA9wC,OAAOqL,OAAO,GAAIylC,GAElBA,EAgBhBpnD,KAAKwgC,EAAYlO,EAAQ+0B,GACxB,MAAM3pC,EAAOpH,OAAOqL,OAAO,CAC1BwlC,UAAWjnD,MACTmnD,GAEH,GAAInnD,KAAKwQ,QAAQuI,QAAU,GAAK/Y,KAAK+zC,YAAa,CAGjD,MAAM50B,EAAOpc,EAAQ/B,OAAOhB,KAAK+zC,aAC3BtpB,EAAsB,IAAVtL,EAAK,GAAaA,EAAK,GAAK,IACxCioC,EAAcpnD,KAAKwQ,QAAQuI,QAAU0R,EAE3C,GAAI28B,GAAe,EAClB,OAAOpnD,KAAKikB,OAAOjR,QAAQE,OAAO,IAAI1N,GAAoB,CAAEL,OAAQm7B,EAAYp7B,OAAQlF,KAAKikB,OAAO/e,YAGhGsY,EAAKzE,SAAWquC,EAAc5pC,EAAKzE,WACvCyE,EAAKzE,QAAUquC,GAIjB,GAAIpnD,KAAKikB,OAAOzT,QAAQ62C,aAAe,GAAKrnD,KAAK4F,OAAS5F,KAAKikB,OAAOzT,QAAQ62C,aAC7E,OAAOrnD,KAAKikB,OAAOjR,QAAQE,OAAO,IAAIvN,GAAkB,CAAET,OAAQlF,KAAKikB,OAAO/e,OAAQU,MAAO5F,KAAK4F,SAGnG,IAAIyS,EAAIrY,KAAKikB,OAAOvN,KAAK4pB,EAAYlO,EAAQ5U,GAG7C,OAAOnF,EAAEC,MAAKQ,IACTT,EAAE6Y,KACLu1B,GAAUzmD,KAAMqY,EAAE6Y,IAAIO,MAEhB3Y,KACLK,OAAM7S,IACJ+R,EAAE6Y,KACLu1B,GAAUzmD,KAAMqY,EAAE6Y,IAAIO,MAEhBzxB,KAAKikB,OAAOjR,QAAQE,OAAO5M,MAIpCxG,MAAMw6C,EAAK6M,GACV,MAAM3pC,EAAOpH,OAAOqL,OAAO,CAC1BwlC,UAAWjnD,MACTmnD,GAEH,GAAInnD,KAAKwQ,QAAQuI,QAAU,GAAK/Y,KAAK+zC,YAAa,CAGjD,MAAM50B,EAAOpc,EAAQ/B,OAAOhB,KAAK+zC,aAC3BtpB,EAAsB,IAAVtL,EAAK,GAAaA,EAAK,GAAK,IACxCioC,EAAcpnD,KAAKwQ,QAAQuI,QAAU0R,EAE3C,GAAI28B,GAAe,EAAG,CACrB,MAAMjiD,GAAUsR,MAAMiK,QAAQ45B,GAAOA,EAAMlkC,OAAO4H,OAAOs8B,IAAM3mC,KAAIsW,GAAKA,EAAE9kB,SAAQqX,KAAK,MACvF,OAAOxc,KAAKikB,OAAOjR,QAAQE,OAAO,IAAI1N,GAAoB,CAAEL,OAAAA,EAAQD,OAAQlF,KAAKikB,OAAO/e,YAGpFsY,EAAKzE,SAAWquC,EAAc5pC,EAAKzE,WACvCyE,EAAKzE,QAAUquC,GAIjB,GAAIpnD,KAAKikB,OAAOzT,QAAQ62C,aAAe,GAAKrnD,KAAK4F,OAAS5F,KAAKikB,OAAOzT,QAAQ62C,aAC7E,OAAOrnD,KAAKikB,OAAOjR,QAAQE,OAAO,IAAIvN,GAAkB,CAAET,OAAQlF,KAAKikB,OAAO/e,OAAQU,MAAO5F,KAAK4F,SAGnG,IAAIyS,EAAIrY,KAAKikB,OAAOqjC,MAAMhN,EAAK98B,GAG/B,OAAOnF,EAAEC,MAAKQ,IACTrC,MAAMiK,QAAQrI,EAAE6Y,MAAQ7Y,EAAE6Y,IAAIhf,QACjCmG,EAAE6Y,IAAItX,SAAQsX,GAAOu1B,GAAUzmD,KAAMkxB,EAAIO,QAEnC3Y,KACLK,OAAM7S,IACJmQ,MAAMiK,QAAQrI,EAAE6Y,MAAQ7Y,EAAE6Y,IAAIhf,QACjCmG,EAAE6Y,IAAItX,SAAQsX,GAAOu1B,GAAUzmD,KAAMkxB,EAAIO,QAEnCzxB,KAAKikB,OAAOjR,QAAQE,OAAO5M,MAiBpCxG,KAAK6lB,EAAWjhB,EAAM8Y,GAUrB,OATI/G,MAAMiK,QAAQlD,IAAS1H,GAAS0H,GACnCA,EAAO,CAAEqI,OAAQrI,GACD,MAARA,IACRA,EAAO,IAEJA,EAAKqI,SAAWpP,MAAMiK,QAAQlD,EAAKqI,UACtCrI,EAAKqI,OAAS,CAACrI,EAAKqI,SAErBrI,EAAKypC,UAAYjnD,KACVA,KAAKikB,OAAOxiB,KAAKkkB,EAAWjhB,EAAM8Y,GAgB1C1d,UAAU6lB,EAAWjhB,EAAM8Y,GAU1B,OATI/G,MAAMiK,QAAQlD,IAAS1H,GAAS0H,GACnCA,EAAO,CAAEqI,OAAQrI,GACD,MAARA,IACRA,EAAO,IAEJA,EAAKqI,SAAWpP,MAAMiK,QAAQlD,EAAKqI,UACtCrI,EAAKqI,OAAS,CAACrI,EAAKqI,SAErBrI,EAAKypC,UAAYjnD,KACVA,KAAKikB,OAAO2B,UAAUD,EAAWjhB,EAAM8Y,GAW/C1d,UAAUkG,EAAMwX,GACf,IAAI82B,EAUJ,OARCA,EADGt0C,KAAKs0C,KACDt0C,KAAKs0C,KAAKkC,UAAUxwC,EAAMoQ,OAAOqL,OAAO,CAAEyP,IAAKlxB,MAAQwd,IAEvDxd,KAAKikB,OAAO4xB,OAAOW,UAAUxwC,EAAMoQ,OAAOqL,OAAO,CAAEyP,IAAKlxB,MAAQwd,IAGxExd,KAAK6mD,WAAW70C,KAAKsiC,GACrBt0C,KAAKs0C,KAAOA,EAELA,EASRx0C,WAAWw0C,EAAM1iC,GAChB,IAAK0iC,EAAKiT,WAAY,OAEtBjT,EAAKkT,OAAO51C,GAEZ,MAAMyF,EAAMrX,KAAK6mD,WAAWY,WAAUC,GAAMA,GAAMpT,KACrC,IAATj9B,GACHrX,KAAK6mD,WAAWtvC,OAAOF,EAAK,GAC5BrX,KAAKs0C,KAAOt0C,KAAK6mD,WAAW7mD,KAAK6mD,WAAW30C,OAAS,IAGrDlS,KAAKoF,QAAQ8e,OAAOpJ,KAAK,4CAA6Cw5B,GAOxEx0C,SA2BC,OA1BYshB,UAAE9B,KAAKtf,KAAM,CACxB,KACA,SACA,cACA,aACA,eACA,kBACA,mBACA,UACA,WACA,SACA,QACA,SACA,OAEA,YACA,UACA,OACA,UACA,QACA,YACA,YACA,cACA,iBAOFF,CAACmjC,UAAKC,QAAQykB,QAAQvkB,EAAO5yB,GAE5B,GAAI4yB,EAAQ,EACX,OAAO5yB,EAAQo3C,QAAQ,YAAa,WAGrC,MAAMC,EAAQ5kB,UAAKC,QAAQljC,KAAK8nD,SAAUt3C,GAC1C,MAAO,GAAGA,EAAQo3C,QAAQ,UAAW,eAAeC,OAItD,OAAiBlB,GC9djB,MAAM9hD,qBAAEA,IAAyB0a,ECAjC,MAAMmsB,GAAkBnsB,UAAyBmsB,8BAoBzCqc,UAAgBtoC,IAAWkD,WAC3B0+B,IAAax+B,GAKfpS,GAAiB,CACtB23B,UAAW,GACXljC,OAAQ,KAERgf,QAAQ,EACR4hB,SAAU,KAEVxY,YAAa,KAEbwmB,eAAgB,EAChBI,YAAa,CACZniC,SAAS,EACTqiC,QAAS,EACTz7B,MAAO,IACPg8B,SAAU,IACVl0B,OAAQ,EACR4mB,MAAO/gC,GAAOA,KAASA,EAAI3B,WAG5B2sB,sBAAsB,EACtB+1B,aAAc,EACd5tB,kBAAmB,GACnBC,iBAAkB,GAElBiY,SAAU,CACT5/B,SAAS,EACTogC,gBAAiB,KAGlBvd,iBAAiB,EAEjBnX,SAAU,CACT8gB,SAAU,aACVS,aAAa,GAGduU,eAAgB,CACfxhC,SAAS,EACTmhC,UAAW,GACXV,WAAY,GACZS,gBAAiB,GACjBG,aAAc,IACd/L,MAAO/gC,GAAOA,GAAOA,EAAI9E,MAAQ,KAGlC0vC,SAAU,CACTn/B,SAAS,EACTu/B,YAAa,GACb5d,aAAc,KAGf4C,QAAS,CACR5C,aAAc,IACdY,aAAc,OACd7E,kBAAkB,EAClBU,qBAAqB,GAGtB63B,aAAc,KAEdx4B,aAAc,KAEdy4B,OAAQ,KACRzc,WAAY,KAEZ/D,WAAW,EAEXla,SAAS,EACTmE,SAAS,EAETw2B,kBAAkB,EAClBC,qBAAqB,EACrBjE,mBAAoB,IAEpBkE,WAAW,EAEXzmB,YAAa,KAEb0mB,aAAc,KACdC,cAAe,KAEfpzB,SAAU,GAEVqzB,8BAA8B,EAU9BhtC,kBAAmB,MAWpB,MAAMitC,GASL1oD,YAAY0Q,GACX,IAoEC,GAnEAxQ,KAAKwQ,QAAU4Q,UAAEsC,aAAalT,EAASC,IAGnCzQ,KAAKwQ,QAAQwC,QAChBhT,KAAKgT,QAAUhT,KAAKwQ,QAAQwC,QAG5BhT,KAAKgT,QAAUA,QAEhB2C,GAAM8yC,gBAAgBzoD,KAAKgT,SAC3Bw1C,GAAcx1C,QAAUhT,KAAKgT,QAG7BhT,KAAKixB,SAAU,EAGfjxB,KAAKmhC,eAAiBnhC,KAAKwQ,QAAQ2wB,gBAAkBpe,GACrD/iB,KAAKmxB,eAAiBnxB,KAAKwQ,QAAQ2gB,gBAAkBlO,GAGrDjjB,KAAKooC,UAAYpoC,KAAKwQ,QAAQ43B,WAAa,GAG3CpoC,KAAKk1B,SAAWl1B,KAAKwQ,QAAQ0kB,UAAY,GAGzCl1B,KAAKkF,OAASlF,KAAKwQ,QAAQtL,QAAUyQ,GAAM6B,YAG3CxX,KAAKwtB,WAAa7X,GAAM+yC,gBAGxB1oD,KAAK80B,SAAW,GAGhB90B,KAAKu2B,SAAW,IAAImV,GAAc,CACjCE,UAAU,EACVC,aAAc,MAIf7rC,KAAKuiC,cAAgB,IAAIomB,GAAc3oD,MACvCA,KAAKuiC,cAAc5vB,KAAK3S,KAAKwQ,QAAQ0T,QAGrClkB,KAAKkkB,OAASlkB,KAAK6rB,UAAU,UAE7B7rB,KAAKkkB,OAAOuB,KAAK,cAAczlB,KAAKs8B,oCACpCt8B,KAAKkkB,OAAOuB,KAAK,eAAczlB,KAAKooC,WAAa,kBACjDpoC,KAAKkkB,OAAOuB,KAAK,YAAYzlB,KAAKkF,QAMlClF,KAAKutB,QAAU,IAAIw6B,GAAe/nD,KAAMA,KAAKwQ,QAAQ+c,SACrDvtB,KAAKutB,QAAQ5a,OACb3S,KAAK+uB,2BAGL/uB,KAAK2hC,YAAc,IAAIinB,GAAkB5oD,MAGzCA,KAAKyd,SAAW,IAAIorC,GAAS7oD,MAG7BA,KAAKioD,OAASzd,GAAQv3B,QAAQjT,KAAKwQ,QAAQy3C,QACvCjoD,KAAKioD,OAAQ,CAChBjoD,KAAKioD,OAAOt1C,KAAK3S,MAEjB,MAAMgG,EAAOhG,KAAKqsB,mBAAmBrsB,KAAKioD,QAC1CjoD,KAAKkkB,OAAOuB,KAAK,WAAWzf,GAI7BhG,KAAKwrC,WAAa8B,GAAYr6B,QAAQjT,KAAKwQ,QAAQg7B,YACnDxrC,KAAKwrC,WAAW74B,KAAK3S,MAErB,MAAM8oD,EAAiB9oD,KAAKqsB,mBAAmBrsB,KAAKwrC,YAIpD,GAHAxrC,KAAKkkB,OAAOuB,KAAK,eAAeqjC,GAG5B9oD,KAAKwQ,QAAQi3B,YAChBznC,KAAKynC,UAAYI,GAAW50B,QAAQjT,KAAKwQ,QAAQi3B,WAC7CznC,KAAKynC,WAAW,CACnB,MAAMshB,EAAgB/oD,KAAKqsB,mBAAmBrsB,KAAKynC,WACnDznC,KAAKkkB,OAAOuB,KAAK,cAAcsjC,GAC/B/oD,KAAKynC,UAAU90B,KAAK3S,MAYtB,GAPAA,KAAK61C,OAAS,IAAIwL,GAAOrhD,KAAMA,KAAKwQ,QAAQkhB,SAC5C1xB,KAAK61C,OAAOljC,OAGZ3S,KAAKgpD,oBAAoBhpD,KAAKwQ,QAAQmxB,aAGlC3hC,KAAKwQ,QAAQ8c,YAAa,CAC7B,MAAMG,EAAK0e,GAAal5B,QAAQjT,KAAKwQ,QAAQ8c,aAC7CttB,KAAKs2B,QAAU,IAAI2yB,GAAQjpD,KAAMytB,EAAIztB,KAAKwQ,QAAQ8lB,SAElD,MAAM4yB,EAASlpD,KAAKqsB,mBAAmBoB,GACvCztB,KAAKkkB,OAAOuB,KAAK,gBAAgByjC,GAE7BlpD,KAAKwQ,QAAQokB,kBACZnH,EAAGmd,mBACN5qC,KAAKkkB,OAAOuB,KAAK,8CAEjBzlB,KAAKkkB,OAAOpJ,KAAK,OAAOouC,2DACxBlpD,KAAKwQ,QAAQokB,iBAAkB,IAM9B50B,KAAKwQ,QAAQokB,kBAChB50B,KAAK0W,KAAO1W,KAAKmpD,qBAGlBnpD,KAAKyd,SAAS9K,KAAK3S,MAGfA,KAAKwQ,QAAQ03C,kBAChBloD,KAAKopD,yBAAyBppD,KAAKwQ,QAAQ03C,kBAG5CloD,KAAK4iD,uBAAuB,UAAW,CAAC5iD,OAGpC2V,GAAMC,WAAW5V,KAAKwQ,QAAQozC,UACjC5jD,KAAKwQ,QAAQozC,QAAQ5jD,MAGtBA,KAAKqpD,SAAW,KAEfrpD,KAAKqT,OACH8F,OAAM7S,GAAOtG,KAAKkkB,OAAO6M,MAAMzqB,KAC/BgS,MAAK,IAAMvV,EAAQumD,KAAK,MAG3BvmD,EAAQwmD,gBAAgB,IAC0B,IAA9CvpD,KAAKwQ,QAAQ+3C,+BAChBxlD,EAAQikB,GAAG,aAAchnB,KAAKqpD,UAC9BtmD,EAAQikB,GAAG,OAAQhnB,KAAKqpD,UACxBtmD,EAAQikB,GAAG,SAAUhnB,KAAKqpD,UAC1BtmD,EAAQikB,GAAG,UAAWhnB,KAAKqpD,WAG3B,MAAM/iD,GACHtG,KAAKkkB,OACRlkB,KAAKswB,MAAM,kCAAmChqB,GAAK,IAGnDuU,QAAQkW,MAAM,kCAAmCzqB,GACjDvD,EAAQumD,KAAK,KAUhBxpD,oBAAoB0pD,GAQnB,GANI/yC,MAAMiK,QAAQ8oC,IAAoBA,EAAgBt3C,OAAS,IAC9DkP,UAAE+K,QAAQq9B,GAAiB5vC,SAAQwgC,GAAMp6C,KAAK2hC,YAAY5lB,IAAIq+B,KAE9Dp6C,KAAKkkB,OAAOuB,KAAK,cAAczlB,KAAK2hC,YAAYrhB,kCAG7CtgB,KAAKwQ,QAAQ23C,oBAAqB,CAGrC,MAAMsB,EAAYzpD,KAAK2hC,YAAYrhB,QAMnC,GAHAtgB,KAAK2hC,YAAY5lB,IAAI,cAGjB/b,KAAKynC,WAAa9xB,GAAMC,WAAW5V,KAAKynC,UAAUiiB,YAAa,CAClE,MAAMtP,EAAKp6C,KAAKynC,UAAUiiB,WAAW1pD,MACjC2V,GAAMQ,cAAcikC,GACvBp6C,KAAK2hC,YAAY5lB,IAAIq+B,GAErBp6C,KAAK2hC,YAAY5lB,IAAI,CAAEqrB,YAAagT,IAOtC,GAHAp6C,KAAK2hC,YAAY5lB,IAAI,YAGjB/b,KAAKioD,QAAUtyC,GAAMC,WAAW5V,KAAKioD,OAAOyB,YAAa,CAC5D,MAAMtP,EAAKp6C,KAAKioD,OAAOyB,aACnB/zC,GAAMQ,cAAcikC,GACvBp6C,KAAK2hC,YAAY5lB,IAAIq+B,GAErBp6C,KAAK2hC,YAAY5lB,IAAI,CAAEqrB,YAAagT,IAItCp6C,KAAK2hC,YAAY5lB,IAAI,kBAGrB/b,KAAK2hC,YAAY5lB,IAAI,kBAGrB/b,KAAK2hC,YAAY5lB,IAAI,WAGrB/b,KAAK2hC,YAAY5lB,IAAI,SAGrB/b,KAAK2hC,YAAY5lB,IAAI,YAGrB/b,KAAK2hC,YAAY5lB,IAAI,gBAGrB/b,KAAK2hC,YAAY5lB,IAAI,WAGrB/b,KAAK2hC,YAAY5lB,IAAI,WAGrB/b,KAAK2hC,YAAY5lB,IAAI,YAGrB/b,KAAK2hC,YAAY5lB,IAAI,YAEjB/b,KAAKwQ,QAAQ43C,WAEhBpoD,KAAK2hC,YAAY5lB,IAAI,aAGtB/b,KAAKkkB,OAAOuB,KAAK,cAAczlB,KAAK2hC,YAAYrhB,QAAUmpC,6BAG3DzpD,KAAK2pD,cAAgB3pD,KAAKyuB,WAAW,gBAAiBzuB,KAAK2pD,eAC3D3pD,KAAKmkD,qBAAuBnkD,KAAKyuB,WAAW,uBAAwBzuB,KAAKmkD,sBACzEnkD,KAAK4pD,eAAiB5pD,KAAKyuB,WAAW,iBAAkBzuB,KAAK4pD,gBAC7D5pD,KAAK0W,KAAO1W,KAAKyuB,WAAW,OAAQzuB,KAAK0W,MACzC1W,KAAKmpD,oBAAsBnpD,KAAKyuB,WAAW,OAAQzuB,KAAKmpD,qBACxDnpD,KAAKsnD,MAAQtnD,KAAKyuB,WAAW,QAASzuB,KAAKsnD,OAC3CtnD,KAAKyB,KAAOzB,KAAKyuB,WAAW,OAAQzuB,KAAKyB,MACzCzB,KAAK4lB,UAAY5lB,KAAKyuB,WAAW,YAAazuB,KAAK4lB,WACnD5lB,KAAKqvB,eAAiBrvB,KAAKyuB,WAAW,iBAAkBzuB,KAAKqvB,gBAE7DrvB,KAAKutB,QAAQ5S,IAAI8E,GAAOxU,mCAAmCjL,KAAK2hC,YAAYrhB,SAM7ExgB,2BACME,KAAKgvB,qBAIVhvB,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO/U,oBAAqBtG,KAAMqb,GAAO7Y,UAAW8W,YAAa,kCAAmC/C,IAAI,UACtI3a,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO9U,kCAAmCvG,KAAMqb,GAAO7Y,UAAW8W,YAAa,6BAA8B/C,IAAI6tC,GAAclsB,mBAC7Jt8B,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO5U,iCAAkCzG,KAAMqb,GAAO7Y,UAAW8W,YAAa,+BAAgC/C,IAAI6tC,GAAct4B,kBAI9JlwB,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO3U,2BAA4B1G,KAAMqb,GAAO7Y,UAAW8W,YAAa,wBAAyB/C,IAAI3a,KAAKooC,WACxIpoC,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAO1U,yBAA0B3G,KAAMqb,GAAO/Y,WAAYgX,YAAa,0BAA2B/C,IAAI,GACpI3a,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOzU,sCAAuC5G,KAAMqb,GAAO/Y,WAAYgX,YAAa,6BAA8B/C,IAAI,GACpJ3a,KAAKutB,QAAQ/J,SAAS,CAAExd,KAAMyZ,GAAOxU,mCAAoC7G,KAAMqb,GAAO/Y,WAAYgX,YAAa,gCAAiC/C,IAAI,IAQrJ7a,QACC,MAAMkR,EAAY3P,KAAKC,MAEvB,OAAOtB,KAAKgT,QAAQC,UAClBqF,MAAK,SAILA,MAAK,IACEtY,KAAK8jD,mBAAmB,WAAY,CAAC9jD,SAE5CsY,MAAK,KACL,GAAItY,KAAKs2B,QACR,OAAOt2B,KAAKs2B,QAAQ5G,aAErBpX,MAAK,IAEEtY,KAAKgT,QAAQwZ,IAAIxsB,KAAK80B,SAASnhB,KAAI0pB,GAAOA,EAAIwsB,OAAOnzC,KAAK2mB,MAC/DlkB,OAAM7S,IAGN,MADAtG,KAAKkkB,OAAO6M,MAAM,gCAAiCzqB,GAC7CA,OAGRgS,MAAK,KACLtY,KAAKixB,SAAU,EACfjxB,KAAKutB,QAAQ5S,IAAI8E,GAAO1U,yBAA0B,GAClD/K,KAAKqvB,eAAe,mBACpBrvB,KAAKyd,SAASqjB,wBAAuB,MAErCxoB,MAAK,KACL,GAAItY,KAAKs2B,QACR,OAAOt2B,KAAKs2B,QAAQwzB,WAErBxxC,MAAK,IACEtY,KAAK8jD,mBAAmB,UAAW,CAAC9jD,SAE3CsY,MAAK,KACL,GAAI3C,GAAMC,WAAW5V,KAAKwQ,QAAQygB,SACjC,OAAOjxB,KAAKwQ,QAAQygB,QAAQjxB,SAE7BsY,MAAK,KACL,MAAMmS,EAAWppB,KAAKC,MAAQ0P,EAC9BhR,KAAKkkB,OAAOuB,KAAK,wBAAwBzlB,KAAK80B,SAAS5iB,gDAAgDyD,GAAMilC,SAASnwB,UASzH3qB,OAEC,OADAE,KAAKixB,SAAU,EACRjxB,KAAKgT,QAAQC,UAClBqF,MAAK,KACL,GAAItY,KAAKs2B,QAGR,OAFAt2B,KAAKyd,SAASqjB,wBAAuB,GAE9B9gC,KAAKyd,SAASiQ,WAAWwB,uBAGjC5W,MAAK,IACEtY,KAAK8jD,mBAAmB,WAAY,CAAC9jD,MAAO,CAAE6uB,SAAS,MAE9DvW,MAAK,IAEEtY,KAAKgT,QAAQwZ,IAAIxsB,KAAK80B,SAASnhB,KAAI0pB,GAAOA,EAAI0sB,MAAMrzC,KAAK2mB,MAC9DlkB,OAAM7S,IAENtG,KAAKkkB,OAAO6M,MAAM,+BAAgCzqB,QAGpDgS,MAAK,KACL,GAAItY,KAAKs2B,QACR,OAAOt2B,KAAKs2B,QAAQzG,gBAGrBvX,MAAK,KACL,GAAItY,KAAKioD,OACR,OAAOjoD,KAAKioD,OAAO+B,WAGpB1xC,MAAK,KACL,GAAItY,KAAKutB,QACR,OAAOvtB,KAAKutB,QAAQla,UAGrBiF,MAAK,KACL,GAAItY,KAAK61C,OACR,OAAO71C,KAAK61C,OAAOxiC,UAGpBiF,MAAK,IACEtY,KAAKyd,SAASpK,SAErBiF,MAAK,IACEtY,KAAK8jD,mBAAmB,UAAW,CAAC9jD,MAAO,CAAE6uB,SAAS,MAE7DvW,MAAK,KACL,GAAI3C,GAAMC,WAAW5V,KAAKwQ,QAAQ4zC,SACjC,OAAOpkD,KAAKwQ,QAAQ4zC,QAAQpkD,SAE7BmZ,OAAM7S,IAENtG,KAAKkkB,OAAO6M,MAAMzqB,MAElBgS,MAAK,KACLtY,KAAKkkB,OAAOuB,KAAK,uCACjBzlB,KAAKutB,QAAQ5S,IAAI8E,GAAO1U,yBAA0B,GAElD/K,KAAKqvB,eAAe,oBAE8B,IAA9CrvB,KAAKwQ,QAAQ+3C,+BAChBxlD,EAAQknD,eAAe,aAAcjqD,KAAKqpD,UAC1CtmD,EAAQknD,eAAe,OAAQjqD,KAAKqpD,UACpCtmD,EAAQknD,eAAe,SAAUjqD,KAAKqpD,UACtCtmD,EAAQknD,eAAe,UAAWjqD,KAAKqpD,cAGxC/wC,MAAK,IACEtY,KAAKuiC,cAAclvB,SAE1B8F,OAAM,SAYTrZ,OACC,IAAIoqD,EACJ,IACCA,EAAO/mC,GAER,MAAO4N,GAIN,OAHAlW,QAAQkW,MAAM,yGACd/wB,KAAKkkB,OAAO6M,MAAM,8GAClB/wB,KAAKkkB,OAAO6B,MAAM,QAASgL,GAI5B,GAAIm5B,EACJ,CACC,IAAI1sC,EAAO,KACX,MAAM2sC,EAAYnqD,KAAKwQ,QAAQ83C,cACzB8B,EAAiBpqD,KAAKwQ,QAAQ63C,aAGpC,OAFA8B,IAAc3sC,EAAO,CAAE2sC,UAAAA,IACvBC,IAAmB5sC,EAAO,IAAKA,EAAK4sC,eAAAA,IAC7BF,EAAKlqD,KAAMwd,IAYpB1d,aAAawG,EAAKmf,GACjB,GAAIzlB,KAAKwQ,QAAQgf,aAChB,OAAOxvB,KAAKwQ,QAAQgf,aAAa9Y,KAAK1W,KAAMsG,EAAKmf,GAGlD,MAAMnf,EAcPxG,WAAWkG,EAAMtD,EAAS63C,EAAQ/8B,GACjC,OAAOxd,KAAK2hC,YAAYlT,WAAWzoB,EAAMtD,EAAS63C,EAAQ/8B,GAa3D1d,mBAAmBkG,EAAMrD,EAAM6a,GAC9B,OAAOxd,KAAK2hC,YAAY0oB,aAAarkD,EAAMrD,EAAM6a,GAalD1d,uBAAuBkG,EAAMrD,EAAM6a,GAClC,OAAOxd,KAAK2hC,YAAYuF,iBAAiBlhC,EAAMrD,EAAM6a,GAStD1d,mBACC,OAAOE,KAAKutB,QAAQ+8B,YASrBxqD,mBACC,OAAOE,KAAK61C,OAAOyU,YAYpBxqD,UAAU0iC,EAAK+nB,GACd,IAAIzmB,EAAW1tB,OAAOqL,OAAO,CAC5Bvc,OAAQlF,KAAKkF,OACbslD,GAAIxqD,KAAKooC,UACT5F,IAAAA,GACE+nB,GAEH,OAAOvqD,KAAKuiC,cAAc1W,UAAUiY,GAYrChkC,MAAM2E,EAAS6B,EAAKmkD,GAAW,GAC1BzqD,KAAKkkB,OACRlkB,KAAKkkB,OAAOoM,MAAM7rB,EAAS6B,GAE3BuU,QAAQkW,MAAMtsB,EAAS6B,GAEpBmkD,GACH1nD,EAAQumD,KAAK,GAYfxpD,aAAa6c,EAAS,aAAc+tC,EAAW,mBAG9C,IAAIC,EAUJ,OAZA3qD,KAAKkkB,OAAO6B,MAAM,uBAAuBpJ,KAAU+tC,SAKlDC,EADGl0C,MAAMiK,QAAQgqC,GACFA,EAAS/2C,KAAIqE,GAAKiE,UAAKO,KAAKG,EAAQ3E,KAEpC4yC,UAAKC,KAAK5uC,UAAKO,KAAKG,EAAQ+tC,IAExCC,GACHA,EAAa/wC,SAAQJ,GAAYxZ,KAAK8qD,YAAYtxC,KAE5CmxC,EAAaz4C,OAWrBpS,YAAYirD,GACX,IAAIC,EAAOrjB,EAEX,IACCqjB,EAAQtxC,QAAQzG,QAAQgJ,UAAKhJ,QAAQ83C,IACrC/qD,KAAKkkB,OAAO6B,MAAM,iBAAiB9J,UAAKgvC,SAASD,UAEjD,MAAM1xC,EAAII,IAGV,IAAI2jB,EA8BJ,OAhCAsK,EAAsB,MAAbruB,EAAE4xC,QAAkB5xC,EAAE4xC,QAAU5xC,EAGzCquB,EAAS3nC,KAAKmrD,2BAA2BxjB,GACrCvxB,OAAOE,UAAUijB,cAAc7iB,KAAK1W,KAAKmhC,eAAgBwG,IAE5DtK,EAAM,IAAIsK,EAAO3nC,MAGbA,KAAKixB,SACRjxB,KAAKorD,gBAAgB/tB,IAEZ1nB,GAAMC,WAAW+xB,IAE3BtK,EAAMsK,EAAO3nC,MACPq9B,aAAer9B,KAAKmhC,eAIrBnhC,KAAKixB,SACRjxB,KAAKorD,gBAAgB/tB,GAJtBA,EAAMr9B,KAAK2pD,cAActsB,IAOhBsK,IAEVtK,EAAMr9B,KAAK2pD,cAAchiB,IAGtBtK,IACHA,EAAIguB,WAAaL,GAGX3tB,EAEN,MAAOxW,GAER,MADA7mB,KAAKkkB,OAAO6M,MAAM,2BAA2Bg6B,KAAalkC,GACpDA,GAaR/mB,cAAc6nC,EAAQ2jB,GACrB,IAAIlmD,EAGJ,GADAuiC,EAAS3nC,KAAKmrD,2BAA2BxjB,GACrCvxB,OAAOE,UAAUijB,cAAc7iB,KAAK1W,KAAKmhC,eAAgBwG,GAC5DviC,EAAU,IAAIuiC,EAAO3nC,KAAMsrD,OACrB,CACN,IAAIv1C,EAAI4xB,EACJ2jB,IACHv1C,EAAI/V,KAAKmhC,eAAe4jB,aAAapd,EAAQ2jB,IAE9ClmD,EAAU,IAAIpF,KAAKmhC,eAAenhC,KAAM+V,GAOzC,OAHI/V,KAAKixB,SACRjxB,KAAKorD,gBAAgBhmD,GAEfA,EAWRtF,gBAAgBsF,GACf,OAAOA,EAAQykD,OAAOnzC,KAAKtR,GACzB+T,OAAM7S,GAAOtG,KAAKkkB,OAAO6M,MAAM,2BAA4BzqB,KAS9DxG,gBAAgBsF,GACfpF,KAAK80B,SAAS9iB,KAAK5M,GACnBpF,KAAKutB,QAAQ5S,IAAI8E,GAAOzU,sCAAuChL,KAAK80B,SAAS5iB,QAS9EpS,qBAAqByrD,GACpBvrD,KAAKyd,SAAS0mC,qBAAqBoH,GAUpCzrD,eAAesF,GACd,IAAIu5C,EACA6M,EAUJ,OATI71C,GAAMG,SAAS1Q,IAClBu5C,EAAcv5C,EACdA,EAAUpF,KAAKyrD,gBAAgBrmD,IACrBuQ,GAAMQ,cAAc/Q,KAC9Bu5C,EAAcv5C,EAAQY,KACtBwlD,EAAkBpmD,EAAQ/E,QAC1B+E,EAAUpF,KAAKyrD,gBAAgBrmD,EAAQY,KAAMZ,EAAQ/E,UAGjD+E,EAIEpF,KAAKgT,QAAQC,UAClBqF,MAAK,IAAMlT,EAAQ2kD,UACnB5wC,OAAM7S,IAENtG,KAAKkkB,OAAO6M,MAAM,mBAAmB3rB,EAAQ63B,qBAAsB32B,MAEnEgS,MAAK,KACL3C,GAAM2nB,gBAAgBt9B,KAAK80B,SAAU1vB,GACrCpF,KAAKyd,SAAS+jB,kBAAkBp8B,EAAQ63B,SAAUj9B,KAAKkF,QAEvDlF,KAAKkkB,OAAOuB,KAAK,YAAYrgB,EAAQ63B,yBACrCj9B,KAAK+gC,iBAAgB,GAErB/gC,KAAKutB,QAAQ5S,IAAI8E,GAAOzU,sCAAuChL,KAAK80B,SAAS5iB,WAhBvElS,KAAKgT,QAAQE,OAAO,IAAI8c,EAAEhrB,qBAAqB,CAAEI,QAASu5C,EAAat+C,QAASmrD,KA0BzF1rD,gBAAgB4rD,GAAe,GAC9B1rD,KAAKqvB,eAAe,oBAAqB,CAAEq8B,aAAAA,IAGvC1rD,KAAKixB,SAAWy6B,GAAgB1rD,KAAKs2B,SACxCt2B,KAAKyd,SAASiQ,WAAWwB,oBAU3BpvB,yBAAyB0d,GACxBA,EAAO7H,GAAMM,SAASuH,GAAQA,EAAO,GACrCxd,KAAK2pD,cDn4BS,CACd3jD,KAAM,QAENm3B,QAAS,CACRxlB,KAAM,CACLgC,OAAO,EACP+X,SAAS,EACTU,OAAQ,CACP2K,aAAc,CAAE34B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,GACzEpuB,cAAe,CAAE14B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,IAE3EprD,QAAQoxB,GACP,OAAOlxB,KAAKikB,OAAOxG,SAASouC,YAAY36B,EAAIkB,UAI9C0C,SAAU,CACTnb,OAAO,EACP+X,SAAS,EACTU,OAAQ,CACPqL,UAAW,CAAEr5B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,GACtExtB,aAAc,CAAEt5B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,GACzEvtB,YAAa,CAAEv5B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,GACxEttB,WAAY,CAAEx5B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,GACvEpuB,cAAe,CAAE14B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,GAC1ErtB,SAAU,CAAEz5B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,IAEtEprD,QAAQoxB,GACP,OAAOlxB,KAAKikB,OAAOxG,SAASquC,eAAe56B,EAAIkB,UAIjD+K,QAAS,CACRxjB,OAAO,EACP+X,SAAS,EACTU,OAAQ,CACPqL,UAAW,CAAEr5B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,GACtExtB,aAAc,CAAEt5B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,GACzE/qB,cAAe,CAAE/7B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,GAC1EpuB,cAAe,CAAE14B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,IAE3EprD,QAAQoxB,GACP,OAAOlxB,KAAKikB,OAAOxG,SAASsuC,cAAc76B,EAAIkB,UAIhDgL,OAAQ,CACPzjB,OAAO,EACP+X,SAAS,EACTU,OAAQ,CACPqL,UAAW,CAAEr5B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,GACtExtB,aAAc,CAAEt5B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,GACzE/qB,cAAe,CAAE/7B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,GAC1EpuB,cAAe,CAAE14B,KAAM,UAAWunD,UAAU,EAAMC,SAAS,EAAMV,SAAS,IAE3EprD,QAAQoxB,GACP,OAAOlxB,KAAKikB,OAAOxG,SAASuuC,aAAa96B,EAAIkB,UAI/C65B,OAAQ,CACPtyC,OAAO,EACP+X,SAAS,EACT5xB,UACC,OAAOE,KAAKikB,OAAOioC,oBAIrB17C,QAAS,CACRmJ,OAAO,EACP+X,SAAS,EACTU,OAAQ,GACRtyB,UACC,OAAO6V,GAAMuF,aAAalb,KAAKikB,OAAOzT,QAASxQ,KAAKikB,OAAOzT,WAI7D+c,QAAS,CACR5T,OAAO,EACP+X,SAAS,EACTU,OAAQ,CACPpF,MAAO,CAAE5oB,KAAM,QAASunD,UAAU,EAAMQ,MAAO,CAAE,CAAE/nD,KAAM,UAAY,CAAEA,KAAM,QAASgoD,MAAO,YAC7FzoC,SAAU,CAAEvf,KAAM,QAASunD,UAAU,EAAMQ,MAAO,CAAE,CAAE/nD,KAAM,UAAY,CAAEA,KAAM,QAASgoD,MAAO,YAChGxoC,SAAU,CAAExf,KAAM,QAASunD,UAAU,EAAMQ,MAAO,CAAE,CAAE/nD,KAAM,UAAY,CAAEA,KAAM,QAASgoD,MAAO,aAEjGtsD,QAAQoxB,GACP,OAAKlxB,KAAKikB,OAAO+K,mBAGVhvB,KAAKikB,OAAOsJ,QAAQ5V,KAAKuZ,EAAIkB,QAF5BpyB,KAAKgT,QAAQE,OAAO,IAAIrO,GAAqB,8BAA+B,IAAK,yBC4yB3C2Y,EAAY,OAgB9D1d,gBAAgBkG,EAAM3F,GACrB,GAAwB,GAApBqY,UAAUxG,OAAa,CAC1B,GAAIyD,GAAMG,SAAS9P,GAClB,OAAOhG,KAAK80B,SAASxR,MAAKle,GAAWA,EAAQ63B,UAAYj3B,IACrD,GAAI2P,GAAMQ,cAAcnQ,GAC5B,OAAOhG,KAAK80B,SAASxR,MAAKle,GAAWA,EAAQY,MAAQA,EAAKA,MAAQZ,EAAQ/E,SAAW2F,EAAK3F,UAG5F,OAAOL,KAAK80B,SAASxR,MAAKle,GAAWA,EAAQY,MAAQA,GAAQZ,EAAQ/E,SAAWA,IAajFP,gBAAgB8kD,EAAc7rC,EAASuL,EAAUJ,EAASlkB,KAAKkkB,QAY9D,GAXKzN,MAAMiK,QAAQkkC,KAClBA,EAAe,CAACA,IAUU,IAR3BA,EAAexjC,UAAEue,KAAKve,UAAE+K,QAAQy4B,EAAajxC,KAAI04C,GAC5C12C,GAAMQ,cAAck2C,IAAMA,EAAErmD,KACxBhG,KAAKmhC,eAAeC,qBAAqBirB,EAAErmD,KAAMqmD,EAAEhsD,SAEvDsV,GAAMG,SAASu2C,GACXA,OADR,OAIgBn6C,OAChB,OAAOlS,KAAKgT,QAAQC,UAErBiR,EAAOuB,KAAK,2BAA2Bm/B,EAAapoC,KAAK,aAEzD,MAAMxL,EAAY3P,KAAKC,MACvB,OAAO,IAAItB,KAAKgT,SAAQ,CAACC,EAASC,KACjC,MAAMm0B,EAAQ,KACb,MAAM/mB,EAAQskC,EAAa7/B,QAAOkY,GAC1Bj9B,KAAKyd,SAAS6uC,WAAWrvB,KAGjC,OAAI3c,EAAMpO,QAAU0yC,EAAa1yC,QAChCgS,EAAOuB,KAAK,eAAem/B,EAAapoC,KAAK,yBACtCvJ,MAGRiR,EAAO6B,MAAM,GAAGzF,EAAMpO,aAAa0yC,EAAa1yC,qDAE5C6G,GAAW1X,KAAKC,MAAQ0P,EAAY+H,EAChC7F,EAAO,IAAI8c,EAAEjrB,qBAAqB,iCAAkC,IAAK,mBAAoB,CAAE+vB,SAAU8vB,UAEjH/rC,aAAWwuB,EAAO/iB,GAAYtkB,KAAKwQ,QAAQ0zC,oBAAsB,OAGlE7c,OAeFvnC,uBAAuBwgC,EAAY9iB,EAAM0T,GACxC,GAA0B,iBAAfoP,EACV,OAAOA,EAEP,GAAI9iB,GAAQA,EAAKtY,OAAQ,CACxB,MAAMA,EAASsY,EAAKtY,OAEd+sB,EAAWjyB,KAAKyd,SAAS8uC,0BAA0BjsB,EAAYp7B,GACrE,OAAK+sB,IACJjyB,KAAKkkB,OAAOpJ,KAAK,YAAYwlB,uBAAgCp7B,YACtD,IAAI8qB,EAAEhrB,qBAAqB,CAAEG,OAAQm7B,EAAYp7B,OAAAA,KAInD,CAEN,MAAM+5B,EAASj/B,KAAKyd,SAAS+uC,mBAAmBlsB,GAChD,IAAKrB,EAEJ,OADAj/B,KAAKkkB,OAAOpJ,KAAK,YAAYwlB,yBACtB,IAAItQ,EAAEhrB,qBAAqB,CAAEG,OAAQm7B,IAI7C,MAAMrO,EAAWgN,EAAOS,KAAKxO,GAC7B,IAAKe,EAAU,CACd,MAAMw6B,EAAS,YAAYnsB,uBAE3B,OADAtgC,KAAKkkB,OAAOpJ,KAAK2xC,GACV,IAAIz8B,EAAE3qB,yBAAyB,CAAEF,OAAQm7B,IAEjD,OAAOrO,GAgBVnyB,KAAKwgC,EAAYlO,EAAQ5U,EAAO,IAK/B,IAAI0T,EACJ,QALe9f,IAAXghB,IACHA,EAAS,IAIM,MAAZ5U,EAAK0T,IAAa,CAErB,MAAMe,EAAWjyB,KAAK0sD,uBAAuBpsB,EAAY9iB,EAAMA,EAAK0T,KACpE,GAAIe,aAAoBvwB,MACvB,OAAO1B,KAAKgT,QAAQE,OAAO+e,GAAU9Y,OAAM7S,GAAOtG,KAAKwvB,aAAalpB,EAAK,CAAEg6B,WAAAA,EAAYlO,OAAAA,EAAQ5U,KAAAA,MAIhG0T,EAAM1T,EAAK0T,IACXA,EAAIe,SAAWA,EACff,EAAIhsB,OAAS+sB,EAASb,GACtBF,EAAI/rB,OAAS8sB,EAAS9sB,OACtB+rB,EAAI9rB,QAAU6sB,EAAS9sB,OAAOC,YACxB,CAEN8rB,EAAMlxB,KAAKmxB,eAAemyB,OAAOtjD,KAAM,KAAMoyB,EAAQ5U,GAErD,MAAMyU,EAAWjyB,KAAK0sD,uBAAuBpsB,EAAY9iB,EAAM0T,GAC/D,GAAIe,aAAoBvwB,MACvB,OAAO1B,KAAKgT,QAAQE,OAAO+e,GAAU9Y,OAAM7S,GAAOtG,KAAKwvB,aAAalpB,EAAK,CAAEg6B,WAAAA,EAAYlO,OAAAA,EAAQ5U,KAAAA,MAGhG0T,EAAIiB,YAAYF,GAGbf,EAAIe,SAASwI,MAChBz6B,KAAKkkB,OAAO6B,MAAM,uBAAwB,CAAE5gB,OAAQ+rB,EAAI/rB,OAAOa,KAAMsL,UAAW4f,EAAI5f,YAEpFtR,KAAKkkB,OAAO6B,MAAM,8BAA+B,CAAE5gB,OAAQ+rB,EAAI/rB,OAAOa,KAAMd,OAAQgsB,EAAIhsB,OAAQoM,UAAW4f,EAAI5f,YAIhH,IAAI+G,EAAI6Y,EAAIe,SAAS9sB,OAAOzC,QAAQwuB,GAKpC,OAFA7Y,EAAE6Y,IAAMA,EAED7Y,EAiBRvY,oBAAoBwgC,EAAYlO,EAAQ5U,EAAO,SAC/BpM,IAAXghB,IACHA,EAAS,IAEV,IAmCIlB,EAnCAhsB,EAAS,KACT+sB,EAAW,KACf,GAA0B,iBAAfqO,EACVrO,EAAWqO,EACXA,EAAarO,EAAS9sB,OAAOa,KAC7Bd,EAAS+sB,EAASb,QAElB,GAAI5T,EAAKtY,QAGR,GAFAA,EAASsY,EAAKtY,OACd+sB,EAAWjyB,KAAKyd,SAAS8uC,0BAA0BjsB,EAAYp7B,IAC1D+sB,EAEJ,OADAjyB,KAAKkkB,OAAOpJ,KAAK,YAAYwlB,uBAAgCp7B,YACtDlF,KAAKgT,QAAQE,OAAO,IAAI8c,EAAEhrB,qBAAqB,CAAEG,OAAQm7B,EAAYp7B,OAAAA,KAAWiU,OAAM7S,GAAOtG,KAAKwvB,aAAalpB,EAAK,CAAEpB,OAAAA,EAAQo7B,WAAAA,EAAYlO,OAAAA,EAAQ5U,KAAAA,UAGpJ,CAEN,MAAMyhB,EAASj/B,KAAKyd,SAAS+uC,mBAAmBlsB,GAChD,GAAc,MAAVrB,EAEH,OADAj/B,KAAKkkB,OAAOpJ,KAAK,YAAYwlB,yBACtBtgC,KAAKgT,QAAQE,OAAO,IAAI8c,EAAEhrB,qBAAqB,CAAEG,OAAQm7B,KAAennB,OAAM7S,GAAOtG,KAAKwvB,aAAalpB,EAAK,CAAEg6B,WAAAA,EAAYlO,OAAAA,EAAQ5U,KAAAA,MAK1I,GADAyU,EAAWgN,EAAO0tB,WACF,MAAZ16B,EAAkB,CACrB,MAAMw6B,EAAS,YAAYnsB,uBAE3B,OADAtgC,KAAKkkB,OAAOpJ,KAAK2xC,GACVzsD,KAAKgT,QAAQE,OAAO,IAAI8c,EAAE3qB,yBAAyB,CAAEF,OAAQm7B,KAAennB,OAAM7S,GAAOtG,KAAKwvB,aAAalpB,EAAK,CAAEg6B,WAAAA,EAAYlO,OAAAA,EAAQ5U,KAAAA,OAQhI,MAAZA,EAAK0T,KAERA,EAAM1T,EAAK0T,IACPe,IACHf,EAAIe,SAAWA,EACff,EAAI/rB,OAAS8sB,EAAS9sB,SAIvB+rB,EAAMlxB,KAAKmxB,eAAemyB,OAAOtjD,KAAMiyB,EAAUG,EAAQ5U,GAE1D0T,EAAIhsB,OAASA,EAEblF,KAAKkkB,OAAO6B,MAAM,yBAA0B,CAAE5gB,OAAQ+rB,EAAI/rB,OAAOa,KAAMd,OAAQgsB,EAAIhsB,OAAQoM,UAAW4f,EAAI5f,YAE1G,IAAI+G,EAAI4Z,EAAS9sB,OAAO08B,cAAc3Q,GAKtC,OAFA7Y,EAAE6Y,IAAMA,EAED7Y,EAGRvY,wBAAwBwgC,EAAYpP,GAEnC,IAAI+N,EAASj/B,KAAKyd,SAAS+uC,mBAAmBlsB,GAC9C,GAAc,MAAVrB,IAAmBA,EAAOJ,WAE7B,MADA7+B,KAAKkkB,OAAOpJ,KAAK,YAAYwlB,iCACvB,IAAItQ,EAAEhrB,qBAAqB,CAAEG,OAAQm7B,EAAYp7B,OAAQlF,KAAKkF,SAIrE,IAAI+sB,EAAWgN,EAAOH,UAAU5N,GAChC,IAAKe,EAEJ,MADAjyB,KAAKkkB,OAAOpJ,KAAK,YAAYwlB,gCACvB,IAAItQ,EAAE3qB,yBAAyB,CAAEF,OAAQm7B,EAAYp7B,OAAQlF,KAAKkF,SAGzE,OAAO+sB,EAmCRnyB,MAAMw6C,EAAK98B,GACV,GAAI/G,MAAMiK,QAAQ45B,GACjB,OAAOt6C,KAAKgT,QAAQwZ,IAAI8tB,EAAI3mC,KAAIyD,GAAQpX,KAAK0W,KAAKU,EAAKjS,OAAQiS,EAAKgb,OAAQhb,EAAK5G,SAAWgN,MAEtF,GAAI7H,GAAMM,SAASqkC,GAAM,CAC/B,IAAIn9B,EAAU,GACV4iB,EAAW3pB,OAAOqD,KAAK6gC,GAAK3mC,KAAI3N,IACnC,MAAMoR,EAAOkjC,EAAIt0C,GACXwK,EAAU4G,EAAK5G,SAAWgN,EAChC,OAAOxd,KAAK0W,KAAKU,EAAKjS,OAAQiS,EAAKgb,OAAQ5hB,GAAS8H,MAAKQ,GAAOqE,EAAQnX,GAAQ8S,OAG7ET,EAAIrY,KAAKgT,QAAQwZ,IAAIuT,GAKzB,OAFA1nB,EAAE6Y,IAAM6O,EAASpsB,KAAIi5C,GAAWA,EAAQ17B,MAEjC7Y,EAAEC,MAAK,IAAM6E,IAEpB,OAAOnd,KAAKgT,QAAQE,OAAO,IAAI8c,EAAEjrB,qBAAqB,8BAA+B,IAAK,uBAe5FjF,KAAK6lB,EAAWrhB,EAASkZ,GACpB/G,MAAMiK,QAAQlD,IAAS7H,GAAMG,SAAS0H,GACzCA,EAAO,CAAEqI,OAAQrI,GACD,MAARA,IACRA,EAAO,IAEJA,EAAKqI,SAAWpP,MAAMiK,QAAQlD,EAAKqI,UACtCrI,EAAKqI,OAAS,CAACrI,EAAKqI,SAErB,MAAMka,EAAW,GAEX7O,EAAMlxB,KAAKmxB,eAAemyB,OAAOtjD,KAAM,KAAMsE,EAASkZ,GAW5D,GAVA0T,EAAIvL,UAAYA,EAChBuL,EAAIM,UAAY,OAChBN,EAAIK,YAAc/T,EAAKqI,OAEvB7lB,KAAKkkB,OAAO6B,MAAM,SAASJ,YAAqBnI,EAAKqI,OAAS,QAAQrI,EAAKqI,OAAOrJ,KAAK,kBAAoB,IAAM,KAG7G,MAAM5B,KAAK+K,IACd3lB,KAAKu2B,SAAS90B,KAAKkkB,EAAWrhB,IAE1BtE,KAAKwQ,QAAQokB,gBAAiB,CAElC,MAAM4J,EAAYx+B,KAAKyd,SAAS2f,OAAOyvB,qBAAqBlnC,EAAWnI,EAAKqI,QAGtEinC,EAAY,GA6BlB,OA3BAtuB,EAAU5kB,SAAQ,EAAE8d,EAAIyG,MACvB,GAAIzG,EAAGtG,IAAMpxB,KAAKkF,OAAQ,CAEzB,MAAM86B,EAAS9O,EAAIsD,KAAKkD,GACxBqI,EAAS/tB,KAAKhS,KAAKyd,SAAS2f,OAAO6C,iBAAiBD,QAC9C,CAEN,MAAMnZ,EAAIimC,EAAUp1B,EAAGtG,IACnBvK,EACHA,EAAEhB,OAAO7T,KAAKmsB,GAEd2uB,EAAUp1B,EAAGtG,IAAM,CAClBsG,GAAAA,EACA7R,OAAQ,CAACsY,QAKTn+B,KAAKs2B,SAERlV,UAAE0c,MAAMgvB,GAAW11C,IAClB,MAAM4oB,EAAS9O,EAAIsD,KAAKpd,EAAKsgB,IAC7BsI,EAAOzO,YAAcna,EAAKyO,OAC1Bka,EAAS/tB,KAAKhS,KAAKs2B,QAAQxQ,UAAUka,OAIhChgC,KAAKgT,QAAQwZ,IAAIuT,GAElB,GAAI//B,KAAKs2B,QAAS,CAExB,IAAIzQ,EAASrI,EAAKqI,OAOlB,OALKA,GAA2B,GAAjBA,EAAO3T,SAErB2T,EAAS7lB,KAAK+sD,eAAepnC,IAGT,GAAjBE,EAAO3T,OACHlS,KAAKgT,QAAQC,WAErBie,EAAIK,YAAc1L,EACX7lB,KAAKs2B,QAAQxQ,UAAUoL,KAchCpxB,UAAU6lB,EAAWrhB,EAASkZ,GACzB/G,MAAMiK,QAAQlD,IAAS7H,GAAMG,SAAS0H,GACzCA,EAAO,CAAEqI,OAAQrI,GACD,MAARA,IACRA,EAAO,IAEJA,EAAKqI,SAAWpP,MAAMiK,QAAQlD,EAAKqI,UACtCrI,EAAKqI,OAAS,CAACrI,EAAKqI,SAErB,MAAMka,EAAW,GAIjB,GAFA//B,KAAKkkB,OAAO6B,MAAM,cAAcJ,YAAqBnI,EAAKqI,OAAS,QAAQrI,EAAKqI,OAAOrJ,KAAK,kBAAoB,IAAM,KAElHxc,KAAKs2B,QAAS,CACjB,MAAMpF,EAAMlxB,KAAKmxB,eAAemyB,OAAOtjD,KAAM,KAAMsE,EAASkZ,GAK5D,GAJA0T,EAAIvL,UAAYA,EAChBuL,EAAIM,UAAY,YAChBN,EAAIK,YAAc/T,EAAKqI,OAElB7lB,KAAKwQ,QAAQokB,gBAUX,CAEN,IAAI/O,EAASrI,EAAKqI,OAOlB,GALKA,GAA2B,GAAjBA,EAAO3T,SAErB2T,EAAS7lB,KAAK+sD,eAAepnC,IAGT,GAAjBE,EAAO3T,OACV,OAED,MAAMssB,EAAYx+B,KAAKyd,SAAS2f,OAAO4vB,gBAAgBrnC,EAAWE,GAGlE,OAAO7lB,KAAKgT,QAAQwZ,IAAIgS,EAAU7qB,KAAI+jB,IACrC,MAAMsI,EAAS9O,EAAIsD,KAAKkD,GAExB,OADAsI,EAAOzO,YAAc1L,EACd7lB,KAAKs2B,QAAQxQ,UAAUka,OA3BbhgC,KAAKyd,SAAS2f,OAAO4vB,gBAAgBrnC,EAAWnI,EAAKqI,QAG7DjM,SAAQ8d,IACjB,GAAIA,EAAGtG,IAAMpxB,KAAKkF,OAAQ,CACzB,MAAM86B,EAAS9O,EAAIsD,KAAKkD,GACxBqI,EAAS/tB,KAAKhS,KAAKs2B,QAAQxQ,UAAUka,QA6BzC,OAFAD,EAAS/tB,KAAKhS,KAAKqvB,eAAe1J,EAAWrhB,EAASkZ,IAE/Cxd,KAAKgT,QAAQwZ,IAAIuT,GAazBjgC,eAAe6lB,EAAWrhB,EAASkZ,GAC9B/G,MAAMiK,QAAQlD,IAAS7H,GAAMG,SAAS0H,GACzCA,EAAO,CAAEqI,OAAQrI,GACD,MAARA,IACRA,EAAO,IAEJA,EAAKqI,SAAWpP,MAAMiK,QAAQlD,EAAKqI,UACtCrI,EAAKqI,OAAS,CAACrI,EAAKqI,SAErB7lB,KAAKkkB,OAAO6B,MAAM,cAAcJ,kBAA2BnI,EAAKqI,OAAS,QAAQrI,EAAKqI,OAAOrJ,KAAK,kBAAoB,IAAM,KAGxH,MAAM5B,KAAK+K,IACd3lB,KAAKu2B,SAAS90B,KAAKkkB,EAAWrhB,GAE/B,MAAM4sB,EAAMlxB,KAAKmxB,eAAemyB,OAAOtjD,KAAM,KAAMsE,EAASkZ,GAK5D,OAJA0T,EAAIvL,UAAYA,EAChBuL,EAAIM,UAAY,iBAChBN,EAAIK,YAAc/T,EAAKqI,OAEhB7lB,KAAK6xB,kBAAkBX,GAW/BpxB,KAAKoF,EAAQ6T,EAAU,KACtB,GAAI/Y,KAAKs2B,SAAWt2B,KAAKs2B,QAAQn1B,UAAW,CAC3C,GAAIwU,GAAMG,SAAS5Q,GAElB,OAAO,IAAIlF,KAAKgT,SAAQC,IAEvB,MAAM+F,EAAQH,cAAW,KACxB7Y,KAAKu2B,SAAS0V,IAAI,aAAcvpC,GAChCuQ,EAAQ,QACN8F,GAEGrW,EAAUuqD,IACXA,EAAK/nD,QAAUA,IAClBgU,aAAaF,GACbhZ,KAAKu2B,SAAS0V,IAAI,aAAcvpC,GAChCuQ,EAAQg6C,KAIVjtD,KAAKu2B,SAASvP,GAAG,aAActkB,GAE/B1C,KAAKs2B,QAAQQ,SAAS5xB,MAGjB,CACN,MAAMgoD,EAAQ,GACd,IAAI/1B,EAAQjyB,EACPiyB,IACJA,EAAQn3B,KAAKyd,SAASouC,YAAY,CAAE/uB,eAAe,IACjD/X,QAAOvkB,GAAQA,EAAK4wB,IAAMpxB,KAAKkF,SAC/ByO,KAAInT,GAAQA,EAAK4wB,MAGpB+F,EAAMvd,SAAQwX,GAAM87B,EAAM97B,GAAM,OAChC,MAAM+7B,EAAa,IAAIzoC,IAAIyS,GAG3B,OAAO,IAAIn3B,KAAKgT,SAAQC,IAEvB,MAAM+F,EAAQH,cAAW,KACxB7Y,KAAKu2B,SAAS0V,IAAI,aAAcvpC,GAChCuQ,EAAQi6C,KACNn0C,GAEGrW,EAAUuqD,IACfC,EAAMD,EAAK/nD,QAAU+nD,EACrBE,EAAWn6B,OAAOi6B,EAAK/nD,QAEA,GAAnBioD,EAAWtxC,OACd3C,aAAaF,GACbhZ,KAAKu2B,SAAS0V,IAAI,aAAcvpC,GAChCuQ,EAAQi6C,KAIVltD,KAAKu2B,SAASvP,GAAG,aAActkB,GAE/By0B,EAAMvd,SAAQwX,GAAMpxB,KAAKs2B,QAAQQ,SAAS1F,SAK7C,OAAOpxB,KAAKgT,QAAQC,QAAQ/N,EAAS,KAAO,IAS7CpF,kBACC,OAAOstD,GAAkBptD,MAS1BF,mBACC,OAAOE,KAAKyd,SAAS2d,mBAUtBt7B,eAAe6lB,GACd,OAAO3lB,KAAKyd,SAAS2f,OAAOiwB,UAAU1nC,GASvC7lB,iBAAiB6lB,GAChB,OAAO3lB,KAAKyd,SAAS2f,OAAO4vB,gBAAgBrnC,GAAWzT,OAAS,EASjEpS,kBAAkB6lB,GACjB,OAAO3lB,KAAKyd,SAAS2f,OAAO4vB,gBAAgBrnC,GAW7C7lB,kBAAkBoxB,GACjB,OAAOlxB,KAAKyd,SAAS2f,OAAOvL,kBAAkBX,GA6B/CpxB,cACC,OAAOgU,IAQRhU,cACC,OAAIE,KAAKwQ,QAAQw3C,aACThoD,KAAKwQ,QAAQw3C,aAAatxC,KAAK1W,KAAMA,MAEtC2V,GAAM+yC,gBAUd5oD,mBAAmBqb,GAClB,IAAI9W,EAAS8W,EAAI7E,UACjB,OAAIjS,GAAUA,EAAOuX,aAAevX,EAAOuX,YAAY5V,KAC/C3B,EAAOuX,YAAY5V,KAEvBmV,EAAIS,aAAeT,EAAIS,YAAY5V,KAC/BmV,EAAIS,YAAY5V,UADxB,EAaDlG,2BAA2B6nC,GAC1B,GAAIvxB,OAAOE,UAAUijB,cAAc7iB,KAAK1W,KAAKmhC,eAAgBwG,GAC5D,OAAOA,EAKR,IAAIgX,EAAc3+C,KAAKqsB,mBAAmBrsB,KAAKmhC,gBAC3C98B,EAASrE,KAAKqsB,mBAAmBsb,GACrC,OAAIgX,IAAgBt6C,GACnB+R,OAAOk3C,eAAe3lB,EAAQ3nC,KAAKmhC,gBAC5BwG,IAGRtjC,EAASrE,KAAKqsB,mBAAmBsb,EAAO4lB,WACpC5O,IAAgBt6C,GACnB+R,OAAOk3C,eAAe3lB,EAAO4lB,UAAWvtD,KAAKmhC,gBACtCwG,GAGJA,EAAO6lB,kBACVnpD,EAASrE,KAAKqsB,mBAAmBsb,EAAOrxB,UAAUi3C,WAC9C5O,IAAgBt6C,IACnB+R,OAAOk3C,eAAe3lB,EAAQ3nC,KAAKmhC,gBAC5BwG,GAGFA,IAOT6gB,GAAclsB,kBAAoB/V,GAClCiiC,GAAclyC,UAAUgmB,kBAAoBksB,GAAclsB,kBAK1DksB,GAAct4B,iBAAmB,IACjCs4B,GAAclyC,UAAU4Z,iBAAmBs4B,GAAct4B,iBAKzDs4B,GAAc/3C,eAAiBA,GAE/B,OAAiB+3C,GCvoDjB,MAAMnpD,cACLA,GAAaC,kBACbA,GAAiBC,uBACjBA,GAAsBC,aACtBA,IACG+f,EAEJ,OAAiB,CAChBipC,cAAe7lC,GACfoiB,QAASliB,GACTy/B,QAASv/B,GACT4jC,QAAS1jC,GAETunB,QAASrnB,GAETgpB,aAAc9lB,GACdinB,YAAa/mB,GACb0S,WAAYxS,GACZohB,WAAYvC,GACZoC,UAAWlC,GACXioB,gBAAiB7gB,GACjB8gB,YAAarW,GACbsW,gBAAiBC,GACjBnuC,OAAQouC,EAERhF,SAAUiF,GACVxyB,YAAayyB,GAEb1T,YAAa2T,GAEbC,OAAQC,EAERC,OAAQC,GACRC,MAAOC,GAEPjvD,cAAAA,GACAC,kBAAAA,GACAC,uBAAAA,GACAC,aAAAA,GAEA88B,kBAAmB3Z,GAAgC2Z,kBACnDpM,iBAAkBvN,GAAgCuN,wBC/CtCs4B,GAAgB+F,GAAU/F,cAC1BzjB,GAAUwpB,GAAUxpB,QACpBud,GAAUiM,GAAUjM,QACpBqE,GAAU4H,GAAU5H,QACpBnc,GAAU+jB,GAAU/jB,QACpB2B,GAAeoiB,GAAUpiB,aACzBmB,GAAcihB,GAAUjhB,YACxBrU,GAAas1B,GAAUt1B,WACvB4O,GAAa0mB,GAAU1mB,WACvB4lB,GAAkBc,GAAUd,gBAC5BC,GAAca,GAAUb,YACxBC,GAAkBY,GAAUZ,gBAC5BluC,GAAS8uC,GAAU9uC,OACnBopC,GAAW0F,GAAU1F,SACrBvtB,GAAcizB,GAAUjzB,YACxB+e,GAAckU,GAAUlU,YACxB4T,GAASM,GAAUN,OAEnBI,GAAQE,GAAUF,MAClBhvD,GAAgBkvD,GAAUlvD,cAC1BC,GAAoBivD,GAAUjvD,kBAC9BC,GAAyBgvD,GAAUhvD,uBACnCC,GAAe+uD,GAAU/uD,aACzB88B,GAAoBiyB,GAAUjyB,kBAC9BpM,GAAmBq+B,GAAUr+B,qTAPpB"}