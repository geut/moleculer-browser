{"version":3,"file":"moleculer.min.js","sources":["../src/moleculer/src/constants.js","../src/process.js","../src/timeout.js","../src/moleculer/src/packets.js","../src/moleculer/src/errors.js","../src/moleculer/src/metrics/constants.js","../src/interval.js","../src/cpu-usage.js","../src/os.js","../src/moleculer/src/utils.js","../src/moleculer/src/metrics/types/base.js","../src/moleculer/src/metrics/rates.js","../src/moleculer/src/metrics/types/gauge.js","../src/moleculer/src/metrics/types/counter.js","../src/moleculer/src/metrics/types/histogram.js","../src/moleculer/src/metrics/types/info.js","../src/moleculer/src/metrics/types/index.js","../src/moleculer/src/metrics/reporters/base.js","../src/moleculer/src/metrics/reporters/console.js","../src/no-impl.js","../src/moleculer/src/metrics/reporters/event.js","../src/moleculer/src/metrics/reporters/index.js","../src/moleculer/src/metrics/commons.js","../src/moleculer/src/cpu-usage.js","../src/moleculer/src/metrics/registry.js","../src/moleculer/src/metrics/index.js","../src/moleculer/src/transit.js","../src/moleculer/src/strategies/base.js","../src/moleculer/src/strategies/round-robin.js","../src/moleculer/src/strategies/random.js","../src/moleculer/src/strategies/latency.js","../src/moleculer/src/strategies/shard.js","../src/moleculer/src/strategies/index.js","../src/moleculer/src/registry/discoverers/base.js","../src/moleculer/src/registry/discoverers/local.js","../src/moleculer/src/registry/discoverers/index.js","../src/moleculer/src/registry/node.js","../src/moleculer/src/registry/node-catalog.js","../src/moleculer/src/registry/service-item.js","../src/moleculer/src/registry/service-catalog.js","../src/moleculer/src/registry/endpoint-list.js","../src/moleculer/src/registry/endpoint.js","../src/moleculer/src/registry/endpoint-event.js","../src/moleculer/src/registry/event-catalog.js","../src/moleculer/src/registry/endpoint-action.js","../src/moleculer/src/registry/action-catalog.js","../src/moleculer/src/registry/registry.js","../src/moleculer/src/registry/index.js","../src/moleculer/src/loggers/base.js","../src/moleculer/src/loggers/formatted.js","../src/moleculer/src/loggers/console.js","../src/moleculer/src/loggers/index.js","../src/moleculer/src/logger-factory.js","../src/moleculer/src/validators/base.js","../src/moleculer/src/validators/fastest.js","../src/moleculer/src/validators/index.js","../src/moleculer/src/cachers/base.js","../src/moleculer/src/lock.js","../src/moleculer/src/cachers/memory.js","../src/moleculer/src/cachers/memory-lru.js","../src/moleculer/src/cachers/index.js","../src/moleculer/src/transporters/base.js","../src/moleculer/src/transporters/fake.js","../src/moleculer/src/transporters/index.js","../src/moleculer/src/serializers/base.js","../src/moleculer/src/serializers/json.js","../src/moleculer/src/serializers/index.js","../src/moleculer/src/health.js","../src/moleculer/src/middlewares/action-hook.js","../src/moleculer/src/middlewares/bulkhead.js","../src/moleculer/src/middlewares/context-tracker.js","../src/moleculer/src/middlewares/circuit-breaker.js","../src/moleculer/src/middlewares/timeout.js","../src/moleculer/src/middlewares/retry.js","../src/moleculer/src/middlewares/fallback.js","../src/moleculer/src/middlewares/error-handler.js","../src/moleculer/src/middlewares/metrics.js","../src/moleculer/src/middlewares/tracing.js","../src/zlib.js","../src/moleculer/src/middlewares/transmit/compression.js","../src/moleculer/src/middlewares/debugging/transit-logger.js","../src/moleculer/src/middlewares/debugging/action-logger.js","../src/moleculer/src/middlewares/index.js","../src/moleculer/src/middlewares/debounce.js","../src/moleculer/src/middlewares/throttle.js","../src/moleculer/src/middlewares/transmit/encryption.js","../src/moleculer/src/middleware.js","../src/moleculer/src/tracing/exporters/base.js","../src/moleculer/src/tracing/exporters/console.js","../src/moleculer/src/tracing/exporters/event.js","../src/moleculer/src/tracing/exporters/event-legacy.js","../src/fetch.js","../src/moleculer/src/tracing/exporters/zipkin.js","../src/moleculer/src/tracing/exporters/newrelic.js","../src/moleculer/src/tracing/exporters/index.js","../src/moleculer/src/tracing/rate-limiter.js","../src/moleculer/src/tracing/now.js","../src/moleculer/src/tracing/span.js","../src/moleculer/src/tracing/tracer.js","../src/moleculer/src/tracing/index.js","../src/moleculer/src/service.js","../src/moleculer/src/context.js","../src/moleculer/src/internals.js","../src/moleculer/src/service-broker.js","../src/moleculer/index.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = {\n\n\t// Circuit-breaker states\n\tCIRCUIT_CLOSE: \t\t\t\t\"close\",\n\tCIRCUIT_HALF_OPEN: \t\t\t\"half_open\",\n\tCIRCUIT_HALF_OPEN_WAIT: \t\"half_open_wait\",\n\tCIRCUIT_OPEN: \t\t\t\t\"open\"\n\n};\n","/* global performance */\nconst Process = require('bfs-process/js/cjs/process')\n\nconst _process = new Process()\n\nif (typeof queueMicrotask !== 'undefined') {\n  _process.nextTick = function nextTick (handler, ...args) {\n    queueMicrotask(() => handler(...args))\n  }\n}\n\n// memoryUsage\n_process.memoryUsage = () => {\n  if (!performance && !performance.memory) {\n    return {\n      rss: 0,\n      heapTotal: Number.MAX_SAFE_INTEGER,\n      heapUsed: 0,\n      external: 0\n    }\n  }\n\n  const { memory } = performance\n\n  return {\n    rss: 0,\n    heapTotal: memory.totalJSHeapSize,\n    heapUsed: memory.usedJSHeapSize,\n    external: 0\n  }\n}\n\n_process._getActiveHandles = function () {\n  return []\n}\n\n_process._getActiveRequests = function () {\n  return []\n}\n\nmodule.exports = _process\n","const { setTimeout } = require('timers-browserify')\n\nmodule.exports = setTimeout\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n// Packet types\nconst PACKET_UNKNOWN\t\t= \"???\";\nconst PACKET_EVENT \t\t\t= \"EVENT\";\nconst PACKET_REQUEST \t\t= \"REQ\";\nconst PACKET_RESPONSE\t\t= \"RES\";\nconst PACKET_DISCOVER \t\t= \"DISCOVER\";\nconst PACKET_INFO \t\t\t= \"INFO\";\nconst PACKET_DISCONNECT \t= \"DISCONNECT\";\nconst PACKET_HEARTBEAT \t\t= \"HEARTBEAT\";\nconst PACKET_PING \t\t\t= \"PING\";\nconst PACKET_PONG \t\t\t= \"PONG\";\n\nconst PACKET_GOSSIP_REQ\t\t= \"GOSSIP_REQ\";\nconst PACKET_GOSSIP_RES\t\t= \"GOSSIP_RES\";\nconst PACKET_GOSSIP_HELLO\t= \"GOSSIP_HELLO\";\n\nconst DATATYPE_UNDEFINED = 0;\nconst DATATYPE_NULL = 1;\nconst DATATYPE_JSON = 2;\nconst DATATYPE_BUFFER = 3;\n\n/**\n * Packet for transporters\n *\n * @class Packet\n */\nclass Packet {\n\t/**\n\t * Creates an instance of Packet.\n\t *\n\t * @param {String} type\n\t * @param {String} target\n\t * @param {any} payload\n\t *\n\t * @memberof Packet\n\t */\n\tconstructor(type, target, payload) {\n\t\tthis.type = type || PACKET_UNKNOWN;\n\t\tthis.target = target;\n\t\tthis.payload = payload || {};\n\t}\n}\n\nmodule.exports = {\n\tPACKET_UNKNOWN,\n\tPACKET_EVENT,\n\tPACKET_REQUEST,\n\tPACKET_RESPONSE,\n\tPACKET_DISCOVER,\n\tPACKET_INFO,\n\tPACKET_DISCONNECT,\n\tPACKET_HEARTBEAT,\n\tPACKET_PING,\n\tPACKET_PONG,\n\tPACKET_GOSSIP_REQ,\n\tPACKET_GOSSIP_RES,\n\tPACKET_GOSSIP_HELLO,\n\n\tDATATYPE_UNDEFINED,\n\tDATATYPE_NULL,\n\tDATATYPE_JSON,\n\tDATATYPE_BUFFER,\n\n\tPacket\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst ExtendableError = require(\"es6-error\");\n\n/**\n * Custom Moleculer Error class\n *\n * @class MoleculerError\n * @extends {ExtendableError}\n */\nclass MoleculerError extends ExtendableError {\n\t/**\n\t * Creates an instance of MoleculerError.\n\t *\n\t * @param {String?} message\n\t * @param {Number?} code\n\t * @param {String?} type\n\t * @param {any} data\n\t *\n\t * @memberof MoleculerError\n\t */\n\tconstructor(message, code, type, data) {\n\t\tsuper(message);\n\t\tthis.code = code || 500;\n\t\tthis.type = type;\n\t\tthis.data = data;\n\t\tthis.retryable = false;\n\t}\n}\n\n/**\n * Custom Moleculer Error class for retryable errors.\n *\n * @class MoleculerRetryableError\n * @extends {MoleculerError}\n */\nclass MoleculerRetryableError extends MoleculerError {\n\t/**\n\t * Creates an instance of MoleculerRetryableError.\n\t *\n\t * @param {String?} message\n\t * @param {Number?} code\n\t * @param {String?} type\n\t * @param {any} data\n\t *\n\t * @memberof MoleculerRetryableError\n\t */\n\tconstructor(message, code, type, data) {\n\t\tsuper(message);\n\t\tthis.code = code || 500;\n\t\tthis.type = type;\n\t\tthis.data = data;\n\t\tthis.retryable = true;\n\t}\n}\n\n/**\n * Moleculer Error class for Broker disconnections which is retryable.\n *\n * @class MoleculerServerError\n * @extends {MoleculerRetryableError}\n */\nclass BrokerDisconnectedError extends MoleculerRetryableError {\n\tconstructor() {\n\t\tsuper(\"The broker's transporter has disconnected. Please try again when a connection is reestablished.\", 502, \"BAD_GATEWAY\");\n\t\t// Stack trace is hidden because it creates a lot of logs and, in this case, won't help users find the issue\n\t\tthis.stack = \"\";\n\t}\n}\n\n/**\n * Moleculer Error class for server error which is retryable.\n *\n * @class MoleculerServerError\n * @extends {MoleculerRetryableError}\n */\nclass MoleculerServerError extends MoleculerRetryableError {\n}\n\n/**\n * Moleculer Error class for client errors which is not retryable.\n *\n * @class MoleculerClientError\n * @extends {MoleculerError}\n */\nclass MoleculerClientError extends MoleculerError {\n\t/**\n\t * Creates an instance of MoleculerClientError.\n\t *\n\t * @param {String?} message\n\t * @param {Number?} code\n\t * @param {String?} type\n\t * @param {any} data\n\t *\n\t * @memberof MoleculerClientError\n\t */\n\tconstructor(message, code, type, data) {\n\t\tsuper(message, code || 400, type, data);\n\t}\n}\n\n\n/**\n * 'Service not found' Error message\n *\n * @class ServiceNotFoundError\n * @extends {MoleculerRetryableError}\n */\nclass ServiceNotFoundError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of ServiceNotFoundError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof ServiceNotFoundError\n\t */\n\tconstructor(data = {}) {\n\t\tlet msg;\n\t\tif (data.nodeID && data.action)\n\t\t\tmsg = `Service '${data.action}' is not found on '${data.nodeID}' node.`;\n\t\telse if (data.action)\n\t\t\tmsg = `Service '${data.action}' is not found.`;\n\n\t\tif (data.service && data.version)\n\t\t\tmsg = `Service '${data.version}.${data.service}' not found.`;\n\t\telse if (data.service)\n\t\t\tmsg = `Service '${data.service}' not found.`;\n\n\t\tsuper(msg, 404, \"SERVICE_NOT_FOUND\", data);\n\t}\n}\n\n/**\n * 'Service not available' Error message\n *\n * @class ServiceNotAvailableError\n * @extends {MoleculerRetryableError}\n */\nclass ServiceNotAvailableError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of ServiceNotAvailableError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof ServiceNotAvailableError\n\t */\n\tconstructor(data) {\n\t\tlet msg;\n\t\tif (data.nodeID)\n\t\t\tmsg = `Service '${data.action}' is not available on '${data.nodeID}' node.`;\n\t\telse\n\t\t\tmsg = `Service '${data.action}' is not available.`;\n\n\t\tsuper(msg, 404, \"SERVICE_NOT_AVAILABLE\", data);\n\t}\n}\n\n/**\n * 'Request timed out' Error message. Retryable.\n *\n * @class RequestTimeoutError\n * @extends {MoleculerRetryableError}\n */\nclass RequestTimeoutError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of RequestTimeoutError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof RequestTimeoutError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Request is timed out when call '${data.action}' action on '${data.nodeID}' node.`, 504, \"REQUEST_TIMEOUT\", data);\n\t}\n}\n\n/**\n * 'Request skipped for timeout' Error message\n *\n * @class RequestSkippedError\n * @extends {MoleculerError}\n */\nclass RequestSkippedError extends MoleculerError {\n\t/**\n\t * Creates an instance of RequestSkippedError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof RequestSkippedError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Calling '${data.action}' is skipped because timeout reached on '${data.nodeID}' node.`, 514, \"REQUEST_SKIPPED\", data);\n\t\tthis.retryable = false;\n\t}\n}\n\n/**\n * 'Request rejected' Error message. Retryable.\n *\n * @class RequestRejectedError\n * @extends {MoleculerRetryableError}\n */\nclass RequestRejectedError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of RequestRejectedError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof RequestRejectedError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Request is rejected when call '${data.action}' action on '${data.nodeID}' node.`, 503, \"REQUEST_REJECTED\", data);\n\t}\n}\n\n/**\n * 'Queue is full' error message. Retryable.\n *\n * @class QueueIsFullError\n * @extends {MoleculerRetryableError}\n */\nclass QueueIsFullError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of QueueIsFullError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof QueueIsFullError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Queue is full. Request '${data.action}' action on '${data.nodeID}' node is rejected.`, 429, \"QUEUE_FULL\", data);\n\t}\n}\n\n/**\n * 'Parameters of action call validation error\n *\n * @class ValidationError\n * @extends {MoleculerClientError}\n */\nclass ValidationError extends MoleculerClientError {\n\t/**\n\t * Creates an instance of ValidationError.\n\t *\n\t * @param {String} message\n\t * @param {String} type\n\t * @param {any} data\n\t *\n\t * @memberof ValidationError\n\t */\n\tconstructor(message, type, data) {\n\t\tsuper(message, 422, type || \"VALIDATION_ERROR\", data);\n\t}\n}\n\n/**\n * 'Max request call level!' Error message\n *\n * @class MaxCallLevelError\n * @extends {MoleculerError}\n */\nclass MaxCallLevelError extends MoleculerError {\n\t/**\n\t * Creates an instance of MaxCallLevelError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof MaxCallLevelError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Request level is reached the limit (${data.level}) on '${data.nodeID}' node.`, 500, \"MAX_CALL_LEVEL\", data);\n\t\tthis.retryable = false;\n\t}\n}\n\n/**\n * Custom Moleculer Error class for Service schema errors\n *\n * @class ServiceSchemaError\n * @extends {Error}\n */\nclass ServiceSchemaError extends MoleculerError {\n\t/**\n\t * Creates an instance of ServiceSchemaError.\n\t *\n\t * @param {String} msg\n\t * @param {Object} data\n\t * @memberof ServiceSchemaError\n\t */\n\tconstructor(msg, data) {\n\t\tsuper(msg, 500, \"SERVICE_SCHEMA_ERROR\", data);\n\t}\n}\n\n/**\n * Custom Moleculer Error class for broker option errors\n *\n * @class BrokerOptionsError\n * @extends {Error}\n */\nclass BrokerOptionsError extends MoleculerError {\n\t/**\n\t * Creates an instance of BrokerOptionsError.\n\t *\n\t * @param {String} msg\n\t * @param {Object} data\n\t * @memberof BrokerOptionsError\n\t */\n\tconstructor(msg, data) {\n\t\tsuper(msg, 500, \"BROKER_OPTIONS_ERROR\", data);\n\t}\n}\n\n/**\n * Custom Moleculer Error class for Graceful stopping\n *\n * @class GracefulStopTimeoutError\n * @extends {Error}\n */\nclass GracefulStopTimeoutError extends MoleculerError {\n\t/**\n\t * Creates an instance of GracefulStopTimeoutError.\n\t *\n\t * @param {Object?} data\n\t * @memberof GracefulStopTimeoutError\n\t */\n\tconstructor(data) {\n\t\tif (data && data.service)  {\n\t\t\tsuper(`Unable to stop '${data.service.name}' service gracefully.`, 500, \"GRACEFUL_STOP_TIMEOUT\", data && data.service ? {\n\t\t\t\tname: data.service.name,\n\t\t\t\tversion: data.service.version\n\t\t\t} : null);\n\t\t} else {\n\t\t\tsuper(\"Unable to stop ServiceBroker gracefully.\", 500, \"GRACEFUL_STOP_TIMEOUT\");\n\t\t}\n\t}\n}\n\n/**\n * Protocol version is mismatch\n *\n * @class ProtocolVersionMismatchError\n * @extends {Error}\n */\nclass ProtocolVersionMismatchError extends MoleculerError {\n\t/**\n\t * Creates an instance of ProtocolVersionMismatchError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof ProtocolVersionMismatchError\n\t */\n\tconstructor(data) {\n\t\tsuper(\"Protocol version mismatch.\", 500, \"PROTOCOL_VERSION_MISMATCH\", data);\n\t}\n}\n\n/**\n * Invalid packet format error\n *\n * @class InvalidPacketDataError\n * @extends {Error}\n */\nclass InvalidPacketDataError extends MoleculerError {\n\t/**\n\t * Creates an instance of InvalidPacketDataError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof InvalidPacketDataError\n\t */\n\tconstructor(data) {\n\t\tsuper(\"Invalid packet data.\", 500, \"INVALID_PACKET_DATA\", data);\n\t}\n}\n\n/**\n * Recreate an error from a transferred payload `err`\n *\n * @param {Error} err\n * @returns {MoleculerError}\n */\nfunction recreateError(err) {\n\tconst Class = module.exports[err.name];\n\tif (Class) {\n\t\tswitch(err.name) {\n\t\t\tcase \"MoleculerError\": return new Class(err.message, err.code, err.type, err.data);\n\t\t\tcase \"MoleculerRetryableError\": return new Class(err.message, err.code, err.type, err.data);\n\t\t\tcase \"MoleculerServerError\": return new Class(err.message, err.code, err.type, err.data);\n\t\t\tcase \"MoleculerClientError\": return new Class(err.message, err.code, err.type, err.data);\n\n\t\t\tcase \"ValidationError\": return new Class(err.message, err.type, err.data);\n\n\t\t\tcase \"ServiceNotFoundError\": return new Class(err.data);\n\t\t\tcase \"ServiceNotAvailableError\": return new Class(err.data);\n\t\t\tcase \"RequestTimeoutError\": return new Class(err.data);\n\t\t\tcase \"RequestSkippedError\": return new Class(err.data);\n\t\t\tcase \"RequestRejectedError\": return new Class(err.data);\n\t\t\tcase \"QueueIsFullError\": return new Class(err.data);\n\t\t\tcase \"MaxCallLevelError\": return new Class(err.data);\n\t\t\tcase \"GracefulStopTimeoutError\": return new Class(err.data);\n\t\t\tcase \"ProtocolVersionMismatchError\": return new Class(err.data);\n\t\t\tcase \"InvalidPacketDataError\": return new Class(err.data);\n\n\t\t\tcase \"ServiceSchemaError\":\n\t\t\tcase \"BrokerOptionsError\": return new Class(err.message, err.data);\n\t\t}\n\t}\n}\n\n\nmodule.exports = {\n\tMoleculerError,\n\tMoleculerRetryableError,\n\tMoleculerServerError,\n\tMoleculerClientError,\n\n\tServiceNotFoundError,\n\tServiceNotAvailableError,\n\n\tValidationError,\n\tRequestTimeoutError,\n\tRequestSkippedError,\n\tRequestRejectedError,\n\tQueueIsFullError,\n\tMaxCallLevelError,\n\n\tServiceSchemaError,\n\tBrokerOptionsError,\n\tGracefulStopTimeoutError,\n\n\tProtocolVersionMismatchError,\n\tInvalidPacketDataError,\n\n\tBrokerDisconnectedError,\n\n\trecreateError\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = {\n\n\t// --- METRIC TYPES ---\n\n\tTYPE_COUNTER:  \t\"counter\",\n\tTYPE_GAUGE:  \t\"gauge\",\n\tTYPE_HISTOGRAM: \"histogram\",\n\tTYPE_INFO:  \t\"info\",\n\n\t// --- METRICREGISTRY METRICS ---\n\n\t// MOLECULER_METRICS_COMMON_COLLECT_TOTAL: \"moleculer.metrics.common.collect.total\",\n\t// MOLECULER_METRICS_COMMON_COLLECT_TIME: \"moleculer.metrics.common.collect.time\",\n\n\t// --- PROCESS METRICS ---\n\n\tPROCESS_ARGUMENTS: \"process.arguments\",\n\n\tPROCESS_PID: \"process.pid\",\n\tPROCESS_PPID: \"process.ppid\",\n\n\tPROCESS_MEMORY_HEAP_SIZE_TOTAL: \"process.memory.heap.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_SIZE_USED: \"process.memory.heap.size.used\", // bytes\n\tPROCESS_MEMORY_RSS: \"process.memory.rss\", // bytes\n\tPROCESS_MEMORY_EXTERNAL: \"process.memory.external\", // bytes\n\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL: \"process.memory.heap.space.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_USED: \"process.memory.heap.space.size.used\", // bytes\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE: \"process.memory.heap.space.size.available\", // bytes\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL: \"process.memory.heap.space.size.physical\", // bytes\n\n\tPROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL: \"process.memory.heap.stat.heap.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL: \"process.memory.heap.stat.executable.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL: \"process.memory.heap.stat.physical.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL: \"process.memory.heap.stat.available.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE: \"process.memory.heap.stat.used.heap.size\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT: \"process.memory.heap.stat.heap.size.limit\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY: \"process.memory.heap.stat.mallocated.memory\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY: \"process.memory.heap.stat.peak.mallocated.memory\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE: \"process.memory.heap.stat.zap.garbage\",\n\n\tPROCESS_UPTIME: \"process.uptime\", // seconds\n\tPROCESS_INTERNAL_ACTIVE_HANDLES: \"process.internal.active.handles\",\n\tPROCESS_INTERNAL_ACTIVE_REQUESTS: \"process.internal.active.requests\",\n\n\tPROCESS_VERSIONS_NODE: \"process.versions.node\",\n\n\t// --- EVENT LOOP METRICS ---\n\n\tPROCESS_EVENTLOOP_LAG_MIN: \"process.eventloop.lag.min\", // msec\n\tPROCESS_EVENTLOOP_LAG_AVG: \"process.eventloop.lag.avg\", // msec\n\tPROCESS_EVENTLOOP_LAG_MAX: \"process.eventloop.lag.max\", // msec\n\tPROCESS_EVENTLOOP_LAG_COUNT: \"process.eventloop.lag.count\",\n\n\t// --- GARBAGE COLLECTOR METRICS ---\n\n\tPROCESS_GC_TIME: \"process.gc.time\", // nanoseconds\n\tPROCESS_GC_TOTAL_TIME: \"process.gc.total.time\", // milliseconds\n\tPROCESS_GC_EXECUTED_TOTAL: \"process.gc.executed.total\",\n\n\t// --- OS METRICS ---\n\n\tOS_MEMORY_FREE: \"os.memory.free\", // bytes\n\tOS_MEMORY_USED: \"os.memory.used\", // bytes\n\tOS_MEMORY_TOTAL: \"os.memory.total\", // bytes\n\tOS_UPTIME: \"os.uptime\", // seconds\n\tOS_TYPE: \"os.type\",\n\tOS_RELEASE: \"os.release\",\n\tOS_HOSTNAME: \"os.hostname\",\n\tOS_ARCH: \"os.arch\",\n\tOS_PLATFORM: \"os.platform\",\n\tOS_USER_UID: \"os.user.uid\",\n\tOS_USER_GID: \"os.user.gid\",\n\tOS_USER_USERNAME: \"os.user.username\",\n\tOS_USER_HOMEDIR: \"os.user.homedir\",\n\n\tOS_DATETIME_UNIX: \"os.datetime.unix\",\n\tOS_DATETIME_ISO: \"os.datetime.iso\",\n\tOS_DATETIME_UTC: \"os.datetime.utc\",\n\tOS_DATETIME_TZ_OFFSET: \"os.datetime.tz.offset\",\n\n\tOS_NETWORK_ADDRESS: \"os.network.address\",\n\tOS_NETWORK_MAC: \"os.network.mac\",\n\n\tOS_CPU_LOAD_1: \"os.cpu.load.1\",\n\tOS_CPU_LOAD_5: \"os.cpu.load.5\",\n\tOS_CPU_LOAD_15: \"os.cpu.load.15\",\n\tOS_CPU_UTILIZATION: \"os.cpu.utilization\",\n\n\tOS_CPU_USER: \"os.cpu.user\", // seconds\n\tOS_CPU_SYSTEM: \"os.cpu.system\", // seconds\n\n\tOS_CPU_TOTAL: \"os.cpu.total\",\n\tOS_CPU_INFO_MODEL: \"os.cpu.info.model\",\n\tOS_CPU_INFO_SPEED: \"os.cpu.info.speed\",\n\tOS_CPU_INFO_TIMES_USER: \"os.cpu.info.times.user\",\n\tOS_CPU_INFO_TIMES_SYS: \"os.cpu.info.times.sys\",\n\n\t// --- MOLECULER NODE METRICS ---\n\n\tMOLECULER_NODE_TYPE: \"moleculer.node.type\",\n\tMOLECULER_NODE_VERSIONS_MOLECULER: \"moleculer.node.versions.moleculer\",\n\tMOLECULER_NODE_VERSIONS_LANG: \"moleculer.node.versions.lang\",\n\tMOLECULER_NODE_VERSIONS_PROTOCOL: \"moleculer.node.versions.protocol\",\n\n\t// --- MOLECULER BROKER METRICS ---\n\n\tMOLECULER_BROKER_NAMESPACE: \"moleculer.broker.namespace\",\n\tMOLECULER_BROKER_STARTED: \"moleculer.broker.started\",\n\tMOLECULER_BROKER_LOCAL_SERVICES_TOTAL: \"moleculer.broker.local.services.total\",\n\tMOLECULER_BROKER_MIDDLEWARES_TOTAL: \"moleculer.broker.middlewares.total\",\n\n\t// --- MOLECULER REGISTRY METRICS ---\n\n\tMOLECULER_REGISTRY_NODES_TOTAL: \"moleculer.registry.nodes.total\",\n\tMOLECULER_REGISTRY_NODES_ONLINE_TOTAL: \"moleculer.registry.nodes.online.total\",\n\tMOLECULER_REGISTRY_SERVICES_TOTAL: \"moleculer.registry.services.total\",\n\tMOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL: \"moleculer.registry.service.endpoints.total\",\n\tMOLECULER_REGISTRY_ACTIONS_TOTAL: \"moleculer.registry.actions.total\",\n\tMOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL: \"moleculer.registry.action.endpoints.total\",\n\tMOLECULER_REGISTRY_EVENTS_TOTAL: \"moleculer.registry.events.total\",\n\tMOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL: \"moleculer.registry.event.endpoints.total\",\n\n\t// --- MOLECULER REQUEST METRICS ---\n\n\tMOLECULER_REQUEST_TOTAL: \"moleculer.request.total\",\n\tMOLECULER_REQUEST_ACTIVE: \"moleculer.request.active\",\n\tMOLECULER_REQUEST_ERROR_TOTAL: \"moleculer.request.error.total\",\n\tMOLECULER_REQUEST_TIME: \"moleculer.request.time\", //msec\n\tMOLECULER_REQUEST_LEVELS: \"moleculer.request.levels\",\n\t//MOLECULER_REQUEST_DIRECTCALL_TOTAL: \"moleculer.request.directcall.total\",\n\t//MOLECULER_REQUEST_MULTICALL_TOTAL: \"moleculer.request.multicall.total\",\n\n\t// --- MOLECULER EVENTS METRICS ---\n\n\tMOLECULER_EVENT_EMIT_TOTAL: \"moleculer.event.emit.total\",\n\tMOLECULER_EVENT_BROADCAST_TOTAL: \"moleculer.event.broadcast.total\",\n\tMOLECULER_EVENT_BROADCASTLOCAL_TOTAL: \"moleculer.event.broadcast-local.total\",\n\tMOLECULER_EVENT_RECEIVED_TOTAL: \"moleculer.event.received.total\",\n\tMOLECULER_EVENT_RECEIVED_ACTIVE: \"moleculer.event.received.active\",\n\tMOLECULER_EVENT_RECEIVED_ERROR_TOTAL: \"moleculer.event.received.error.total\",\n\tMOLECULER_EVENT_RECEIVED_TIME: \"moleculer.event.received.time\", //msec\n\n\t// --- MOLECULER TRANSIT METRICS ---\n\n\tMOLECULER_TRANSIT_PUBLISH_TOTAL: \"moleculer.transit.publish.total\",\n\tMOLECULER_TRANSIT_RECEIVE_TOTAL: \"moleculer.transit.receive.total\",\n\n\tMOLECULER_TRANSIT_REQUESTS_ACTIVE: \"moleculer.transit.requests.active\",\n\tMOLECULER_TRANSIT_STREAMS_SEND_ACTIVE: \"moleculer.transit.streams.send.active\",\n\t//MOLECULER_TRANSIT_STREAMS_RECEIVE_ACTIVE: \"moleculer.transit.streams.receive.active\",\n\tMOLECULER_TRANSIT_READY: \"moleculer.transit.ready\", // true/false\n\tMOLECULER_TRANSIT_CONNECTED: \"moleculer.transit.connected\", // true/false\n\n\tMOLECULER_TRANSIT_PONG_TIME: \"moleculer.transit.pong.time\", // true/false\n\tMOLECULER_TRANSIT_PONG_SYSTIME_DIFF: \"moleculer.transit.pong.systime-diff\", // true/false\n\n\tMOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL: \"moleculer.transit.orphan.response.total\",\n\n\t// --- MOLECULER TRANSPORTER METRICS ---\n\n\tMOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL: \"moleculer.transporter.packets.sent.total\",\n\tMOLECULER_TRANSPORTER_PACKETS_SENT_BYTES: \"moleculer.transporter.packets.sent.bytes\", // bytes\n\tMOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL: \"moleculer.transporter.packets.received.total\",\n\tMOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES: \"moleculer.transporter.packets.received.bytes\", // bytes\n\n\t// --- MOLECULER CIRCUIT BREAKER METRICS ---\n\n\tMOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE: \"moleculer.circuit-breaker.opened.active\",\n\tMOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL: \"moleculer.circuit-breaker.opened.total\",\n\tMOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE: \"moleculer.circuit-breaker.half-opened.active\",\n\n\t// --- MOLECULER FALLBACK METRICS ---\n\n\tMOLECULER_REQUEST_FALLBACK_TOTAL: \"moleculer.request.fallback.total\",\n\n\t// --- MOLECULER BULKHEAD METRICS ---\n\n\tMOLECULER_REQUEST_BULKHEAD_INFLIGHT: \"moleculer.request.bulkhead.inflight\",\n\tMOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE: \"moleculer.request.bulkhead.queue.size\",\n\n\tMOLECULER_EVENT_BULKHEAD_INFLIGHT: \"moleculer.event.bulkhead.inflight\",\n\tMOLECULER_EVENT_BULKHEAD_QUEUE_SIZE: \"moleculer.event.bulkhead.queue.size\",\n\n\t// --- MOLECULER RETRY METRICS ---\n\n\tMOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL: \"moleculer.request.retry.attempts.total\",\n\n\t// --- MOLECULER TIMEOUT METRICS ---\n\n\tMOLECULER_REQUEST_TIMEOUT_TOTAL: \"moleculer.request.timeout.total\",\n\n\t// --- MOLECULER CACHER METRICS ---\n\n\tMOLECULER_CACHER_GET_TOTAL: \"moleculer.cacher.get.total\",\n\tMOLECULER_CACHER_GET_TIME: \"moleculer.cacher.get.time\",\n\tMOLECULER_CACHER_FOUND_TOTAL: \"moleculer.cacher.found.total\",\n\tMOLECULER_CACHER_SET_TOTAL: \"moleculer.cacher.set.total\",\n\tMOLECULER_CACHER_SET_TIME: \"moleculer.cacher.set.time\",\n\tMOLECULER_CACHER_DEL_TOTAL: \"moleculer.cacher.del.total\",\n\tMOLECULER_CACHER_DEL_TIME: \"moleculer.cacher.del.time\",\n\tMOLECULER_CACHER_CLEAN_TOTAL: \"moleculer.cacher.clean.total\",\n\tMOLECULER_CACHER_CLEAN_TIME: \"moleculer.cacher.clean.time\",\n\tMOLECULER_CACHER_EXPIRED_TOTAL: \"moleculer.cacher.expired.total\",\n\n\tMOLECULER_DISCOVERER_REDIS_COLLECT_TOTAL: \"moleculer.discoverer.redis.collect.total\",\n\tMOLECULER_DISCOVERER_REDIS_COLLECT_TIME: \"moleculer.discoverer.redis.collect.time\",\n\n\tMOLECULER_DISCOVERER_ETCD_COLLECT_TOTAL: \"moleculer.discoverer.etcd.collect.total\",\n\tMOLECULER_DISCOVERER_ETCD_COLLECT_TIME: \"moleculer.discoverer.etcd.collect.time\",\n\n\t// --- COMMON UNITS ---\n\t// Inspired by https://docs.datadoghq.com/developers/metrics/#units\n\n\t// Bytes\n\tUNIT_BIT: \"bit\",\n\tUNIT_BYTE: \"byte\",\n\tUNIT_KILOBYTES: \"kilobyte\",\n\tUNIT_MEGABYTE: \"megabyte\",\n\tUNIT_GIGABYTE: \"gigabyte\",\n\tUNIT_TERRABYTE: \"terrabyte\",\n\tUNIT_PETABYTE: \"petabyte\",\n\tUNIT_EXOBYTE: \"exabyte\",\n\n\t// Time\n\tUNIT_NANOSECONDS: \"nanosecond\",\n\tUNIT_MICROSECONDS: \"microsecond\",\n\tUNIT_MILLISECONDS: \"millisecond\",\n\tUNIT_SECONDS: \"second\",\n\tUNIT_MINUTE: \"minute\",\n\tUNIT_HOUR: \"hour\",\n\tUNIT_DAY: \"day\",\n\tUNIT_WEEK: \"week\",\n\tUNIT_MONTH: \"month\",\n\tUNIT_YEAR: \"year\",\n\n\t// Process\n\tUNIT_HANDLE: \"handle\",\n\tUNIT_CPU: \"cpu\",\n\tUNIT_GHZ: \"GHz\",\n\n\t// Network\n\tUNIT_REQUEST: \"request\",\n\tUNIT_CONNECTION: \"connection\",\n\tUNIT_PACKET: \"packet\",\n\tUNIT_MESSAGE: \"message\",\n\tUNIT_STREAM: \"stream\",\n\tUNIT_EVENT: \"event\",\n};\n","const { setInterval } = require('timers-browserify')\n\nmodule.exports = setInterval\n","const cpus = require('cpus')\nconst RafPerf = require('raf-perf')\n\n// Simulate https://nodejs.org/api/os.html#os_os_loadavg\nconst _osLoadAvg = [\n  // 1 minute\n  {\n    time: Math.floor(Date.now() / 1000),\n    init: false,\n    avg: 0\n  },\n\n  // 5 minutes\n  {\n    time: Math.floor(Date.now() / 1000),\n    avg: 0\n  },\n\n  // 15 minutes\n  {\n    time: Math.floor(Date.now() / 1000),\n    avg: 0\n  }\n]\n\nfunction updateLoadAvg (avg) {\n  const currentTime = Math.floor(Date.now() / 1000)\n  if (!_osLoadAvg[0].init || (currentTime - _osLoadAvg[0].time) > 60) {\n    _osLoadAvg[0].init = true\n    _osLoadAvg[0].time = currentTime\n    _osLoadAvg[0].avg = avg\n  }\n\n  if ((currentTime - _osLoadAvg[1].time) > 60 * 5) {\n    _osLoadAvg[1].time = currentTime\n    _osLoadAvg[1].avg = avg\n  }\n\n  if ((currentTime - _osLoadAvg[2].time) > 60 * 15) {\n    _osLoadAvg[2].time = currentTime\n    _osLoadAvg[2].avg = avg\n  }\n}\n\nfunction loadavg () {\n  return _osLoadAvg.map(value => value.avg)\n}\n\n/**\n * getCpuUsage\n *\n * Simulate cpuUsage of the browser based on the FPS performance.\n *\n * rate 1 (60fps) -> 0% usage\n * rate 0.5 (30fps) -> 50% usage\n * rate 0 (0fps) -> 100% usage\n *\n * @param {Boolean=100} sampleTime\n * @returns {Promise<Result>}\n */\nfunction getCpuUsage (sampleTime = 100) {\n  const engine = new RafPerf({\n    performances: {\n      enabled: true,\n      samplesCount: 3,\n      sampleDuration: sampleTime\n    }\n  })\n\n  return new Promise((resolve, reject) => {\n    engine.once('perf', ratio => {\n      engine.stop()\n\n      if (!ratio) {\n        return reject(new Error('CpuUsage: ratio perf not found.'))\n      }\n\n      const avg = 100 - (ratio * 100)\n      const avgByCpu = avg / cpus().length\n\n      updateLoadAvg(avg)\n\n      resolve({\n        avg,\n        usages: cpus().map(cpu => avgByCpu)\n      })\n    })\n\n    engine.start()\n  })\n}\n\ngetCpuUsage.loadavg = loadavg\n\nmodule.exports = getCpuUsage\n","/* global performance */\n\nconst os = require('os-browserify')\nconst cpus = require('cpus')\nconst cpuUsage = require('./cpu-usage')\n\nos.cpus = cpus\nos.loadavg = cpuUsage.loadavg\nos.totalmem = () => performance ? performance.memory.totalJSHeapSize : 0\nos.freemem = () => performance ? performance.memory.totalJSHeapSize - performance.memory.usedJSHeapSize : 0\n\nmodule.exports = os\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst kleur\t\t= require(\"kleur\");\nconst os \t \t= require(\"os\");\nconst path \t \t= require(\"path\");\nconst fs \t \t= require(\"fs\");\nconst ExtendableError = require(\"es6-error\");\n\nconst lut = [];\nfor (let i=0; i<256; i++) { lut[i] = (i<16?\"0\":\"\")+(i).toString(16); }\n\nconst RegexCache = new Map();\n\nconst deprecateList = [];\n\nconst byteMultipliers = {\n\tb:  1,\n\tkb: 1 << 10,\n\tmb: 1 << 20,\n\tgb: 1 << 30,\n\ttb: Math.pow(1024, 4),\n\tpb: Math.pow(1024, 5),\n};\n// eslint-disable-next-line security/detect-unsafe-regex\nconst parseByteStringRe = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\nclass TimeoutError extends ExtendableError {}\n\n/**\n * Circular replacing of unsafe properties in object\n *\n * @param {Object=} options List of options to change circularReplacer behaviour\n * @param {number=} options.maxSafeObjectSize Maximum size of objects for safe object converting\n * @return {function(...[*]=)}\n */\nfunction circularReplacer(options = { maxSafeObjectSize: Infinity }) {\n\tconst seen = new WeakSet();\n\treturn function(key, value) {\n\t\tif (typeof value === \"object\" && value !== null) {\n\t\t\tconst objectType = value.constructor && value.constructor.name || typeof value;\n\n\t\t\tif (options.maxSafeObjectSize && \"length\" in value && value.length > options.maxSafeObjectSize) {\n\t\t\t\treturn `[${objectType} ${value.length}]`;\n\t\t\t}\n\n\t\t\tif (options.maxSafeObjectSize && \"size\" in value && value.size > options.maxSafeObjectSize) {\n\t\t\t\treturn `[${objectType} ${value.size}]`;\n\t\t\t}\n\n\t\t\tif (seen.has(value)) {\n\t\t\t\t//delete this[key];\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tseen.add(value);\n\t\t}\n\t\treturn value;\n\t};\n}\n\nconst units = [\"h\", \"m\", \"s\", \"ms\", \"μs\", \"ns\"];\nconst divisors = [60 * 60 * 1000, 60 * 1000, 1000, 1, 1e-3, 1e-6];\n\nconst utils = {\n\n\tisFunction(fn) {\n\t\treturn typeof fn === \"function\";\n\t},\n\n\tisString(s) {\n\t\treturn typeof s === \"string\" || s instanceof String;\n\t},\n\n\tisObject(o) {\n\t\treturn o !== null && typeof o === \"object\" && !(o instanceof String);\n\t},\n\n\tisPlainObject(o) {\n\t\treturn o !=null ? Object.getPrototypeOf(o) === Object.prototype || Object.getPrototypeOf(o) === null : false;\n\t},\n\n\tflatten(arr) {\n\t\treturn Array.prototype.reduce.call(arr, (a, b) => a.concat(b), []);\n\t},\n\n\thumanize(milli) {\n\t\tif (milli == null) return \"?\";\n\n\t\tfor (let i = 0; i < divisors.length; i++) {\n\t\t\tconst val = milli / divisors[i];\n\t\t\tif (val >= 1.0)\n\t\t\t\treturn \"\" + Math.floor(val) + units[i];\n\t\t}\n\n\t\treturn \"now\";\n\t},\n\n\t// Fast UUID generator: e7 https://jsperf.com/uuid-generator-opt/18\n\tgenerateToken() {\n\t\tconst d0 = Math.random()*0xffffffff|0;\n\t\tconst d1 = Math.random()*0xffffffff|0;\n\t\tconst d2 = Math.random()*0xffffffff|0;\n\t\tconst d3 = Math.random()*0xffffffff|0;\n\t\treturn lut[d0&0xff]+lut[d0>>8&0xff]+lut[d0>>16&0xff]+lut[d0>>24&0xff]+\"-\"+\n\t\t\tlut[d1&0xff]+lut[d1>>8&0xff]+\"-\"+lut[d1>>16&0x0f|0x40]+lut[d1>>24&0xff]+\"-\"+\n\t\t\tlut[d2&0x3f|0x80]+lut[d2>>8&0xff]+\"-\"+lut[d2>>16&0xff]+lut[d2>>24&0xff]+\n\t\t\tlut[d3&0xff]+lut[d3>>8&0xff]+lut[d3>>16&0xff]+lut[d3>>24&0xff];\n\t},\n\n\tremoveFromArray(arr, item) {\n\t\tif (!arr || arr.length == 0) return arr;\n\t\tconst idx = arr.indexOf(item);\n\t\tif (idx !== -1)\n\t\t\tarr.splice(idx, 1);\n\n\t\treturn arr;\n\t},\n\n\t/**\n\t * Get default NodeID (computerName)\n\t *\n\t * @returns\n\t */\n\tgetNodeID() {\n\t\treturn os.hostname().toLowerCase() + \"-\" + process.pid;\n\t},\n\n\t/**\n\t * Get list of local IPs\n\t *\n\t * @returns\n\t */\n\tgetIpList() {\n\t\tconst list = [];\n\t\tconst ilist = [];\n\t\tconst interfaces = os.networkInterfaces();\n\t\tfor (let iface in interfaces) {\n\t\t\tfor (let i in interfaces[iface]) {\n\t\t\t\tconst f = interfaces[iface][i];\n\t\t\t\tif (f.family === \"IPv4\") {\n\t\t\t\t\tif (f.internal) {\n\t\t\t\t\t\tilist.push(f.address);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist.push(f.address);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list.length > 0 ? list : ilist;\n\t},\n\n\t/**\n\t * Check the param is a Promise instance\n\t *\n\t * @param {any} p\n\t * @returns\n\t */\n\tisPromise(p) {\n\t\treturn (p != null && typeof p.then === \"function\");\n\t},\n\n\t/**\n\t * Polyfill a Promise library with missing Bluebird features.\n\t *\n\t * NOT USED & NOT TESTED YET !!!\n\t *\n\t * @param {PromiseClass} P\n\t */\n\tpolyfillPromise(P) {\n\t\tif (!utils.isFunction(P.method)) {\n\t\t\t// Based on https://github.com/petkaantonov/bluebird/blob/master/src/method.js#L8\n\t\t\tP.method = function(fn) {\n\t\t\t\treturn function() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst val = fn.apply(this, arguments);\n\t\t\t\t\t\treturn P.resolve(val);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\treturn P.reject(err);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\tif (!utils.isFunction(P.delay)) {\n\t\t\t// Based on https://github.com/petkaantonov/bluebird/blob/master/src/timers.js#L15\n\t\t\tP.delay = function(ms) {\n\t\t\t\treturn new P(resolve => setTimeout(resolve, +ms));\n\t\t\t};\n\t\t\tP.prototype.delay = function(ms) {\n\t\t\t\treturn this.then(res => P.delay(ms).then(() => res));\n\t\t\t\t//return this.then(res => new P(resolve => setTimeout(() => resolve(res), +ms)));\n\t\t\t};\n\t\t}\n\n\t\tif (!utils.isFunction(P.prototype.timeout)) {\n\t\t\tP.TimeoutError = TimeoutError;\n\n\t\t\tP.prototype.timeout = function(ms, message) {\n\t\t\t\tlet timer;\n\t\t\t\tconst timeout = new P((resolve, reject) => {\n\t\t\t\t\ttimer = setTimeout(() => reject(new P.TimeoutError(message)), +ms);\n\t\t\t\t});\n\n\t\t\t\treturn P.race([\n\t\t\t\t\ttimeout,\n\t\t\t\t\tthis\n\t\t\t\t])\n\t\t\t\t\t.then(value => {\n\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\tif (!utils.isFunction(P.mapSeries)) {\n\n\t\t\tP.mapSeries = function(arr, fn) {\n\t\t\t\tconst promFn = Promise.method(fn);\n\t\t\t\tconst res = [];\n\n\t\t\t\treturn arr.reduce((p, item, i) => {\n\t\t\t\t\treturn p.then(r => {\n\t\t\t\t\t\tres[i] = r;\n\t\t\t\t\t\treturn promFn(item, i);\n\t\t\t\t\t});\n\t\t\t\t}, P.resolve()).then(r => {\n\t\t\t\t\tres[arr.length] = r;\n\t\t\t\t\treturn res.slice(1);\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Clear `require` cache. Used for service hot reloading\n\t *\n\t * @param {String} filename\n\t */\n\tclearRequireCache(filename) {\n\t\t/* istanbul ignore next */\n\t\tObject.keys(require.cache).forEach(function(key) {\n\t\t\tif (key == filename) {\n\t\t\t\tdelete require.cache[key];\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * String matcher to handle dot-separated event/action names.\n\t *\n\t * @param {String} text\n\t * @param {String} pattern\n\t * @returns {Boolean}\n\t */\n\tmatch(text, pattern) {\n\t\t// Simple patterns\n\t\tif (pattern.indexOf(\"?\") == -1) {\n\n\t\t\t// Exact match (eg. \"prefix.event\")\n\t\t\tconst firstStarPosition = pattern.indexOf(\"*\");\n\t\t\tif (firstStarPosition == -1) {\n\t\t\t\treturn pattern === text;\n\t\t\t}\n\n\t\t\t// Eg. \"prefix**\"\n\t\t\tconst len = pattern.length;\n\t\t\tif (len > 2 && pattern.endsWith(\"**\") && firstStarPosition > len - 3) {\n\t\t\t\tpattern = pattern.substring(0, len - 2);\n\t\t\t\treturn text.startsWith(pattern);\n\t\t\t}\n\n\t\t\t// Eg. \"prefix*\"\n\t\t\tif (len > 1 && pattern.endsWith(\"*\") && firstStarPosition > len - 2) {\n\t\t\t\tpattern = pattern.substring(0, len - 1);\n\t\t\t\tif (text.startsWith(pattern)) {\n\t\t\t\t\treturn text.indexOf(\".\", len) == -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Accept simple text, without point character (*)\n\t\t\tif (len == 1 && firstStarPosition == 0) {\n\t\t\t\treturn text.indexOf(\".\") == -1;\n\t\t\t}\n\n\t\t\t// Accept all inputs (**)\n\t\t\tif (len == 2 && firstStarPosition == 0 && pattern.lastIndexOf(\"*\") == 1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Regex (eg. \"prefix.ab?cd.*.foo\")\n\t\tconst origPattern = pattern;\n\t\tlet regex = RegexCache.get(origPattern);\n\t\tif (regex == null) {\n\t\t\tif (pattern.startsWith(\"$\")) {\n\t\t\t\tpattern = \"\\\\\" + pattern;\n\t\t\t}\n\t\t\tpattern = pattern.replace(/\\?/g, \".\");\n\t\t\tpattern = pattern.replace(/\\*\\*/g, \"§§§\");\n\t\t\tpattern = pattern.replace(/\\*/g, \"[^\\\\.]*\");\n\t\t\tpattern = pattern.replace(/§§§/g, \".*\");\n\n\t\t\tpattern = \"^\" + pattern + \"$\";\n\n\t\t\t// eslint-disable-next-line security/detect-non-literal-regexp\n\t\t\tregex = new RegExp(pattern, \"\");\n\t\t\tRegexCache.set(origPattern, regex);\n\t\t}\n\t\treturn regex.test(text);\n\t},\n\n\t/**\n\t * Deprecate a method or property\n\t *\n\t * @param {Object|Function|String} prop\n\t * @param {String} msg\n\t */\n\tdeprecate(prop, msg) {\n\t\tif (arguments.length == 1)\n\t\t\tmsg = prop;\n\n\t\tif (deprecateList.indexOf(prop) === -1) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.warn(kleur.yellow().bold(`DeprecationWarning: ${msg}`));\n\t\t\tdeprecateList.push(prop);\n\t\t}\n\t},\n\n\t/**\n\t * Remove circular references & Functions from the JS object\n\t *\n\t * @param {Object|Array} obj\n\t * @param {Object=} options List of options to change circularReplacer behaviour\n\t * @param {number=} options.maxSafeObjectSize List of options to change circularReplacer behaviour\n\t * @returns {Object|Array}\n\t */\n\tsafetyObject(obj, options) {\n\t\treturn JSON.parse(JSON.stringify(obj, circularReplacer(options)));\n\t},\n\n\t/**\n\t * Sets a variable on an object based on its dot path.\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t * @param {*} value\n\t * @returns {Object}\n\t */\n\tdotSet(obj, path, value) {\n\t\tconst parts = path.split(\".\");\n\t\tconst part = parts.shift();\n\t\tif (parts.length > 0) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(obj, part)) {\n\t\t\t\tobj[part] = {};\n\t\t\t} else if (obj[part] == null) {\n\t\t\t\tobj[part] = {};\n\t\t\t} else {\n\t\t\t\tif (typeof obj[part] !== \"object\") {\n\t\t\t\t\tthrow new Error(\"Value already set and it's not an object\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj[part] = utils.dotSet(obj[part], parts.join(\".\"), value);\n\t\t\treturn obj;\n\t\t}\n\t\tobj[path] = value;\n\t\treturn obj;\n\t},\n\n\t/**\n\t * Make directories recursively\n\t * @param {String} p - directory path\n\t */\n\tmakeDirs(p) {\n\t\tp.split(path.sep)\n\t\t\t.reduce((prevPath, folder) => {\n\t\t\t\tconst currentPath = path.join(prevPath, folder, path.sep);\n\t\t\t\tif (!fs.existsSync(currentPath)) {\n\t\t\t\t\tfs.mkdirSync(currentPath);\n\t\t\t\t}\n\t\t\t\treturn currentPath;\n\t\t\t}, \"\");\n\t},\n\n\t/**\n\t * Parse a byte string to number of bytes. E.g \"1kb\" -> 1024\n\t * Credits: https://github.com/visionmedia/bytes.js\n\t *\n\t * @param {String} v\n\t * @returns {Number}\n\t */\n\tparseByteString(v) {\n\t\tif (typeof v === \"number\" && !isNaN(v)) {\n\t\t\treturn v;\n\t\t}\n\n\t\tif (typeof v !== \"string\") {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Test if the string passed is valid\n\t\tlet results = parseByteStringRe.exec(v);\n\t\tlet floatValue;\n\t\tlet unit = \"b\";\n\n\t\tif (!results) {\n\t\t\t// Nothing could be extracted from the given string\n\t\t\tfloatValue = parseInt(v, 10);\n\t\t\tif (Number.isNaN(floatValue))\n\t\t\t\treturn null;\n\n\t\t\tunit = \"b\";\n\t\t} else {\n\t\t\t// Retrieve the value and the unit\n\t\t\tfloatValue = parseFloat(results[1]);\n\t\t\tunit = results[4].toLowerCase();\n\t\t}\n\n\t\treturn Math.floor(byteMultipliers[unit] * floatValue);\n\t}\n};\n\nmodule.exports = utils;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Abstract Base Metric class.\n *\n * @class BaseMetric\n */\nclass BaseMetric {\n\n\t/**\n\t * Creates an instance of BaseMetric.\n\t *\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof BaseMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tthis.registry = registry;\n\t\tthis.type = opts.type;\n\t\tthis.name = opts.name;\n\t\tthis.description = opts.description;\n\t\tthis.labelNames = opts.labelNames || [];\n\t\tthis.unit = opts.unit;\n\t\tthis.aggregator = opts.aggregator || registry.opts.defaultAggregator;\n\n\t\tthis.lastSnapshot = null;\n\t\tthis.dirty = true;\n\n\t\tthis.values = new Map();\n\t}\n\n\t/**\n\t * Set dirty flag\n\t *\n\t * @memberof BaseMetric\n\t */\n\tsetDirty() {\n\t\tthis.dirty = true;\n\t}\n\n\t/**\n\t * Clear dirty flag\n\t *\n\t * @memberof BaseMetric\n\t */\n\tclearDirty() {\n\t\tthis.dirty = false;\n\t}\n\n\t/**\n\t * Get metric item by labels\n\t *\n\t * @param {Object?} labels\n\t * @returns {Object}\n\t * @memberof BaseMetric\n\t */\n\tget(labels) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\treturn this.values.get(hash);\n\t}\n\n\t/**\n\t * Reset item by labels\n\t *\n\t * @memberof BaseMetric\n\t */\n\treset(/*labels, timestamp*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Reset all items\n\t *\n\t * @memberof BaseMetric\n\t */\n\tresetAll(/*timestamp*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Clear metric values.\n\t *\n\t * @memberof BaseMetric\n\t */\n\tclear() {\n\t\tthis.values = new Map();\n\t\tthis.changed();\n\t}\n\n\t/**\n\t * Create a hash from label values. It will\n\t * be used as a key in Map.\n\t *\n\t * @param {Object} labels\n\t * @returns {String}\n\t * @memberof BaseMetric\n\t */\n\thashingLabels(labels) {\n\t\tif (this.labelNames.length == 0 || labels == null || typeof labels !== \"object\")\n\t\t\treturn \"\";\n\n\t\tconst parts = [];\n\t\tfor (let i = 0; i < this.labelNames.length; i++) {\n\t\t\tconst v = labels[this.labelNames[i]];\n\t\t\tif (typeof v == \"number\")\n\t\t\t\tparts.push(v);\n\t\t\telse if (typeof v === \"string\")\n\t\t\t\tparts.push(\"\\\"\" + v + \"\\\"\");\n\t\t\telse if (typeof v === \"boolean\")\n\t\t\t\tparts.push(\"\" + v);\n\t\t\telse\n\t\t\t\tparts.push(\"\");\n\t\t}\n\t\treturn parts.join(\"|\");\n\t}\n\n\t/**\n\t * Get a snapshot.\n\t *\n\t * @returns {Object}\n\t * @memberof BaseMetric\n\t */\n\tsnapshot() {\n\t\tif (!this.dirty && this.lastSnapshot)\n\t\t\treturn this.lastSnapshot;\n\n\t\tthis.lastSnapshot = this.generateSnapshot();\n\t\tthis.clearDirty();\n\n\t\treturn this.lastSnapshot;\n\t}\n\n\t/**\n\t * Generate a snapshot.\n\t *\n\t * @memberof BaseMetric\n\t */\n\tgenerateSnapshot() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Metric has been changed.\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t */\n\tchanged(value, labels, timestamp) {\n\t\tthis.setDirty();\n\t\tthis.registry.changed(this, value, labels, timestamp);\n\t}\n\n\t/**\n\t * Export to a POJO.\n\t */\n\ttoObject() {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tname: this.name,\n\t\t\tdescription: this.description,\n\t\t\tlabelNames: this.labelNames,\n\t\t\tunit: this.unit,\n\n\t\t\tvalues: this.snapshot()\n\t\t};\n\t}\n}\n\nmodule.exports = BaseMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst INTERVAL = 5;\nconst SECONDS_PER_MINUTE = 60.0;\n\n// https://github.com/dropwizard/metrics/blob/4.0-maintenance/metrics-core/src/main/java/com/codahale/metrics/EWMA.java\n/* istanbul ignore next\nfunction getAlpha(min) {\n\treturn 1 - Math.exp(-INTERVAL / SECONDS_PER_MINUTE / min);\n}\n*/\n\nclass MetricRate {\n\n\tconstructor(metric, item, min) {\n\t\tthis.metric = metric;\n\t\tthis.item = item;\n\t\tthis.min = min;\n\t\t//this.alpha = getAlpha(min);\n\n\t\tthis.rate = 0;\n\n\t\tthis.lastValue = 0;\n\t\tthis.lastTickTime = Date.now();\n\t\tthis.value = null;\n\n\t\tthis.timer = setInterval(() => this.tick(), INTERVAL * 1000).unref();\n\t}\n\n\tupdate(value) {\n\t\tthis.value = value;\n\t}\n\n\ttick() {\n\t\t// Get elapsed seconds\n\t\tconst now = Date.now();\n\t\tconst elapsedSec = (now - this.lastTickTime) / 1000;\n\t\tthis.lastTickTime = now;\n\n\t\t// Get difference between new and old value\n\t\tconst diff = this.value - this.lastValue;\n\t\tthis.lastValue = this.value;\n\n\t\t// Calculate the current requests/minute\n\t\tconst oneMinRate = diff / elapsedSec * SECONDS_PER_MINUTE;\n\n\t\t// Weighted calculation\n\t\tlet rate = this.rate + (oneMinRate - this.rate) * 0.5;\n\t\t// EWMA: const rate = this.rate + (this.alpha * (oneMinRate - this.rate));\n\n\t\t// Rounding\n\t\tif (Math.abs(rate) < 0.05) rate = 0;\n\t\tconst changed = Math.abs(rate - this.rate) > 0.01;\n\n\t\tthis.rate = rate;\n\n\t\tif (changed)\n\t\t\tthis.metric.changed(this.item.value, this.item.labels, now);\n\t}\n\n\treset() {\n\t\tthis.lastValue = 0;\n\t\tthis.value = null;\n\n\t\tthis.rate = 0;\n\t}\n\n}\nmodule.exports = MetricRate;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { pick } = require(\"lodash\");\nconst BaseMetric = require(\"./base\");\nconst METRIC = require(\"../constants\");\nconst MetricRate = require(\"../rates\");\n\n/**\n * Gauge metric class.\n *\n * @class GaugeMetric\n * @extends {BaseMetric}\n */\nclass GaugeMetric extends BaseMetric {\n\n\t/**\n\t * Creates an instance of GaugeMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof GaugeMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_GAUGE;\n\t\tthis.rate = opts.rate;\n\t}\n\n\t/**\n\t * Increment value\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} value\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\tincrement(labels, value, timestamp) {\n\t\tif (value == null)\n\t\t\tvalue = 1;\n\n\t\tconst item = this.get(labels);\n\t\treturn this.set((item ? item.value : 0) + value, labels, timestamp);\n\t}\n\n\t/**\n\t * Decrement value.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} value\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\tdecrement(labels, value, timestamp) {\n\t\tif (value == null)\n\t\t\tvalue = 1;\n\n\t\tconst item = this.get(labels);\n\t\treturn this.set((item ? item.value : 0) - value, labels, timestamp);\n\t}\n\n\t/**\n\t * Set value.\n\t *\n\t * @param {Number?} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\tset(value, labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tlet item = this.values.get(hash);\n\t\tif (item) {\n\t\t\tif (item.value != value) {\n\t\t\t\titem.value = value;\n\t\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\n\t\t\t\tif (item.rate)\n\t\t\t\t\titem.rate.update(value);\n\n\t\t\t\tthis.changed(value, labels, timestamp);\n\t\t\t}\n\t\t} else {\n\t\t\titem = {\n\t\t\t\tvalue,\n\t\t\t\tlabels: pick(labels, this.labelNames),\n\t\t\t\ttimestamp: timestamp == null ? Date.now() : timestamp,\n\t\t\t};\n\t\t\tthis.values.set(hash, item);\n\n\t\t\tif (this.rate) {\n\t\t\t\titem.rate = new MetricRate(this, item, 1);\n\t\t\t\titem.rate.update(value);\n\t\t\t}\n\n\t\t\tthis.changed(value, labels, timestamp);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Reset item by labels.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\treset(labels, timestamp) {\n\t\treturn this.set(0, labels, timestamp);\n\t}\n\n\t/**\n\t * Reset all items.\n\t *\n\t * @param {Number?} timestamp\n\t * @memberof GaugeMetric\n\t */\n\tresetAll(timestamp) {\n\t\tthis.values.forEach(item => {\n\t\t\titem.value = 0;\n\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\t});\n\t\tthis.changed(null, null, timestamp);\n\t}\n\n\t/**\n\t * Generate a snapshot.\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof GaugeMetric\n\t */\n\tgenerateSnapshot() {\n\t\tconst snapshot = Array.from(this.values.keys()).map(key => {\n\t\t\tconst item = this.values.get(key);\n\t\t\tconst res = {\n\t\t\t\tkey,\n\t\t\t\tvalue: item.value,\n\t\t\t\tlabels: item.labels,\n\t\t\t\ttimestamp: item.timestamp\n\t\t\t};\n\n\t\t\tif (item.rate)\n\t\t\t\tres.rate = item.rate.rate;\n\n\t\t\treturn res;\n\t\t});\n\n\t\treturn snapshot;\n\t}\n}\n\nmodule.exports = GaugeMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst GaugeMetric = require(\"./gauge\");\nconst METRIC = require(\"../constants\");\n\n/**\n * Counter metric class.\n *\n * @class CounterMetric\n * @extends {GaugeMetric}\n */\nclass CounterMetric extends GaugeMetric {\n\n\t/**\n\t * Creates an instance of CounterMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof CounterMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_COUNTER;\n\t}\n\n\t/**\n\t * Disabled decrement method.\n\t *\n\t * @memberof CounterMetric\n\t */\n\tdecrement() {\n\t\tthrow new Error(\"Counter can't be decreased.\");\n\t}\n}\n\nmodule.exports = CounterMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseMetric = require(\"./base\");\nconst _ = require(\"lodash\");\nconst METRIC = require(\"../constants\");\nconst MetricRate = require(\"../rates\");\nconst { isPlainObject } = require(\"../../utils\");\nconst sortAscending = (a, b) => a - b;\nconst setProp = (o, k, v) => {\n\to[k] = v;\n\treturn o;\n};\n\n/**\n * Histogram metric class.\n *\n * @class HistogramMetric\n * @extends {BaseMetric}\n */\nclass HistogramMetric extends BaseMetric {\n\n\t/**\n\t * Creates an instance of HistogramMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof HistogramMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_HISTOGRAM;\n\n\t\t// Create buckets\n\t\tif (isPlainObject(opts.linearBuckets)) {\n\t\t\tthis.buckets = HistogramMetric.generateLinearBuckets(opts.linearBuckets.start, opts.linearBuckets.width, opts.linearBuckets.count);\n\t\t} else if (isPlainObject(opts.exponentialBuckets)) {\n\t\t\tthis.buckets = HistogramMetric.generateExponentialBuckets(opts.exponentialBuckets.start, opts.exponentialBuckets.factor, opts.exponentialBuckets.count);\n\t\t} else if (Array.isArray(opts.buckets)) {\n\t\t\tthis.buckets = Array.from(opts.buckets);\n\t\t} else if (opts.buckets === true) {\n\t\t\tthis.buckets = this.registry.opts.defaultBuckets;\n\t\t}\n\t\tif (this.buckets) {\n\t\t\tthis.buckets.sort(sortAscending);\n\t\t}\n\n\t\t// Create quantiles\n\t\tif (Array.isArray(opts.quantiles)) {\n\t\t\tthis.quantiles = Array.from(opts.quantiles);\n\t\t} else if (opts.quantiles === true) {\n\t\t\tthis.quantiles = this.registry.opts.defaultQuantiles;\n\t\t}\n\t\tif (this.quantiles) {\n\t\t\tthis.quantiles.sort(sortAscending);\n\t\t\tthis.maxAgeSeconds = opts.maxAgeSeconds || this.registry.opts.defaultMaxAgeSeconds; // 1 minute\n\t\t\tthis.ageBuckets = opts.ageBuckets || this.registry.opts.defaultAgeBuckets; // 10 secs per bucket\n\t\t}\n\n\t\tthis.rate = opts.rate;\n\t}\n\n\t/**\n\t * Observe a value.\n\t *\n\t * @param {Number} value\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof HistogramMetric\n\t */\n\tobserve(value, labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tlet item = this.values.get(hash);\n\t\tif (!item) {\n\t\t\titem = this.resetItem({\n\t\t\t\tlabels: _.pick(labels, this.labelNames)\n\t\t\t});\n\n\t\t\tif (this.rate)\n\t\t\t\titem.rate = new MetricRate(this, item, 1);\n\n\t\t\tthis.values.set(hash, item);\n\t\t}\n\n\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\titem.sum += value;\n\t\titem.count++;\n\t\titem.lastValue = value;\n\n\t\tif (item.bucketValues) {\n\t\t\tconst len = this.buckets.length;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tif (value <= this.buckets[i]) {\n\t\t\t\t\titem.bucketValues[this.buckets[i]] += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (item.quantileValues) {\n\t\t\titem.quantileValues.add(value);\n\t\t}\n\n\t\tif (item.rate)\n\t\t\titem.rate.update(item.count);\n\n\t\tthis.changed(value, labels, timestamp);\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Create new bucket values based on options.\n\t *\n\t * @returns {Object}\n\t * @memberof HistogramMetric\n\t */\n\tcreateBucketValues() {\n\t\treturn this.buckets.reduce((a, bound) => setProp(a, bound, 0), {});\n\t}\n\n\t/**\n\t * Generate a snapshot\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof HistogramMetric\n\t */\n\tgenerateSnapshot() {\n\t\treturn Array.from(this.values.keys()).map(key => this.generateItemSnapshot(this.values.get(key), key));\n\t}\n\n\t/**\n\t * Generate a snapshot for an item\n\t *\n\t * @param {Object} item\n\t * @param {String} key\n\t * @returns {Object}\n\t * @memberof HistogramMetric\n\t */\n\tgenerateItemSnapshot(item, key) {\n\t\tconst snapshot = {\n\t\t\tkey,\n\t\t\tlabels: item.labels,\n\t\t\tcount: item.count,\n\t\t\tsum: item.sum,\n\t\t\tlastValue: item.lastValue,\n\t\t\ttimestamp: item.timestamp,\n\t\t};\n\n\t\tif (this.buckets)\n\t\t\tsnapshot.buckets = this.buckets.reduce((a, b) => setProp(a, b, item.bucketValues[b]), {});\n\n\t\tif (this.quantiles)\n\t\t\tObject.assign(snapshot, item.quantileValues.snapshot());\n\n\t\tif (item.rate)\n\t\t\tsnapshot.rate = item.rate.rate;\n\n\t\treturn snapshot;\n\t}\n\n\t/**\n\t * Reset value of item.\n\t *\n\t * @param {Object} item\n\t * @param {Number?} timestamp\n\t */\n\tresetItem(item, timestamp) {\n\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\titem.sum = 0;\n\t\titem.count = 0;\n\t\titem.lastValue = null;\n\n\t\tif (this.buckets) {\n\t\t\titem.bucketValues = this.createBucketValues();\n\t\t}\n\n\t\tif (this.quantiles) {\n\t\t\titem.quantileValues = new TimeWindowQuantiles(this, this.quantiles, this.maxAgeSeconds, this.ageBuckets);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Reset item by labels.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof HistogramMetric\n\t */\n\treset(labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tconst item = this.values.get(hash);\n\t\tif (item) {\n\t\t\tthis.resetItem(item, timestamp);\n\t\t\tthis.changed(null, labels, timestamp);\n\t\t}\n\t}\n\n\t/**\n\t * Reset all items.\n\t *\n\t * @param {Number?} timestamp\n\t * @memberof HistogramMetric\n\t */\n\tresetAll(timestamp) {\n\t\tthis.values.forEach(item => this.resetItem(item, timestamp));\n\t\tthis.changed();\n\t}\n\n\t/**\n\t * Generate linear buckets\n\t *\n\t * @static\n\t * @param {Number} start\n\t * @param {Number} width\n\t * @param {Number} count\n\t * @returns {Array<Number>}\n\t * @memberof HistogramMetric\n\t */\n\tstatic generateLinearBuckets(start, width, count) {\n\t\tconst buckets = [];\n\t\tfor (let i = 0; i < count; i++)\n\t\t\tbuckets.push(start + i * width);\n\n\t\treturn buckets;\n\t}\n\n\t/**\n\t * Generate exponential buckets\n\t *\n\t * @static\n\t * @param {Number} start\n\t * @param {Number} factor\n\t * @param {Number} count\n\t * @returns {Array<Number>}\n\t * @memberof HistogramMetric\n\t */\n\tstatic generateExponentialBuckets(start, factor, count) {\n\t\tconst buckets = [];\n\t\tfor (let i = 0; i < count; i++)\n\t\t\tbuckets[i] = start * Math.pow(factor, i);\n\n\t\treturn buckets;\n\t}\n}\n\n/**\n * Timewindow class for quantiles.\n *\n * @class TimeWindowQuantiles\n */\nclass TimeWindowQuantiles {\n\n\t/**\n\t * Creates an instance of TimeWindowQuantiles.\n\t * @param {BaseMetric} metric\n\t * @param {Array<Number>} quantiles\n\t * @param {Number} maxAgeSeconds\n\t * @param {Number} ageBuckets\n\t * @memberof TimeWindowQuantiles\n\t */\n\tconstructor(metric, quantiles, maxAgeSeconds, ageBuckets) {\n\t\tthis.metric = metric;\n\t\tthis.quantiles = Array.from(quantiles);\n\t\tthis.maxAgeSeconds = maxAgeSeconds;\n\t\tthis.ageBuckets = ageBuckets;\n\t\tthis.ringBuckets = [];\n\t\tfor(let i = 0; i < ageBuckets; i++) {\n\t\t\tthis.ringBuckets.push(new Bucket());\n\t\t}\n\t\tthis.dirty = true;\n\n\t\tthis.currentBucket = -1;\n\t\tthis.rotate();\n\n\t\tthis.lastSnapshot = null;\n\t\tthis.setDirty();\n\t}\n\n\t/**\n\t * Set dirty flag.\n\t *\n\t * @memberof TimeWindowQuantiles\n\t */\n\tsetDirty() {\n\t\tthis.dirty = true;\n\t\tthis.metric.setDirty();\n\t}\n\n\t/**\n\t * Clear dirty flag.\n\t *\n\t * @memberof TimeWindowQuantiles\n\t */\n\tclearDirty() {\n\t\tthis.dirty = false;\n\t}\n\n\t/**\n\t * Rotate the ring buckets.\n\t *\n\t * @memberof TimeWindowQuantiles\n\t */\n\trotate() {\n\t\tthis.currentBucket = (this.currentBucket + 1) % this.ageBuckets;\n\t\tthis.ringBuckets[this.currentBucket].clear();\n\t\tthis.setDirty();\n\n\t\tsetTimeout(() => this.rotate(), (this.maxAgeSeconds / this.ageBuckets) * 1000).unref();\n\t}\n\n\t/**\n\t * Add a new value to the current bucket.\n\t *\n\t * @param {Number} value\n\t * @memberof TimeWindowQuantiles\n\t */\n\tadd(value) {\n\t\tthis.setDirty();\n\t\tthis.ringBuckets[this.currentBucket].add(value);\n\t}\n\n\t/**\n\t * Generate a snapshot from buckets and calculate min, max, mean, quantiles, variance & StdDev.\n\t *\n\t * @returns {Object}\n\t * @memberof TimeWindowQuantiles\n\t */\n\tsnapshot() {\n\t\tif (!this.dirty && this.lastSnapshot)\n\t\t\treturn this.lastSnapshot;\n\n\t\tconst samples = this.ringBuckets.reduce((a, b) => a.concat(b.samples), []);\n\t\tsamples.sort(sortAscending);\n\n\t\tconst mean = samples.length ? samples.reduce((a, b) => a + b, 0) / samples.length : null;\n\t\tconst variance = samples.length > 1 ? samples.reduce((a, b) => a + Math.pow(b - mean, 2), 0) / (samples.length - 1) : null;\n\t\tconst stdDev = variance ? Math.sqrt(variance) : null;\n\n\t\tthis.lastSnapshot = {\n\t\t\tmin: samples.length ? samples[0] : null,\n\t\t\tmean,\n\t\t\tvariance,\n\t\t\tstdDev,\n\t\t\tmax: samples.length ? samples[samples.length - 1] : null,\n\t\t\tquantiles: this.quantiles.reduce((a, q) => setProp(a, q, samples[Math.ceil(q * samples.length) - 1]), {})\n\t\t};\n\n\t\tthis.clearDirty();\n\n\t\treturn this.lastSnapshot;\n\t}\n}\n\n/**\n * Bucket class\n *\n * @class Bucket\n */\nclass Bucket {\n\t/**\n\t * Creates an instance of Bucket.\n\t * @memberof Bucket\n\t */\n\tconstructor() {\n\t\tthis.count = 0;\n\t\tthis.samples = [];\n\t}\n\n\t/**\n\t * Add value to the bucket.\n\t *\n\t * @param {Number} value\n\t * @memberof Bucket\n\t */\n\tadd(value) {\n\t\tthis.samples.push(value);\n\t\tthis.count++;\n\t}\n\n\t/**\n\t * Clear bucket.\n\t *\n\t * @memberof Bucket\n\t */\n\tclear() {\n\t\tthis.count = 0;\n\t\tthis.samples.length = 0;\n\t}\n}\n\nHistogramMetric.Bucket = Bucket;\nHistogramMetric.TimeWindowQuantiles = TimeWindowQuantiles;\n\nmodule.exports = HistogramMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { pick } = require(\"lodash\");\nconst BaseMetric = require(\"./base\");\nconst METRIC = require(\"../constants\");\n\n/**\n * Information metric.\n *\n * @class InfoMetric\n * @extends {BaseMetric}\n */\nclass InfoMetric extends BaseMetric {\n\n\t/**\n\t * Creates an instance of InfoMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof InfoMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_INFO;\n\t}\n\n\t/**\n\t * Set value.\n\t *\n\t * @param {*} value\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof InfoMetric\n\t */\n\tset(value, labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tlet item = this.values.get(hash);\n\t\tif (item) {\n\t\t\tif (value != item.value) {\n\t\t\t\titem.value = value;\n\t\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\t\t\tthis.changed(value, labels, timestamp);\n\t\t\t}\n\t\t} else {\n\t\t\titem = {\n\t\t\t\tvalue,\n\t\t\t\tlabels: pick(labels, this.labelNames),\n\t\t\t\ttimestamp: timestamp == null ? Date.now() : timestamp\n\t\t\t};\n\t\t\tthis.values.set(hash, item);\n\t\t\tthis.changed(value, labels, timestamp);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Reset item by labels.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof InfoMetric\n\t */\n\treset(labels, timestamp) {\n\t\treturn this.set(null, labels, timestamp);\n\t}\n\n\t/**\n\t * Reset all items.\n\t *\n\t * @param {Number?} timestamp\n\t * @memberof InfoMetric\n\t */\n\tresetAll(timestamp) {\n\t\tthis.values.forEach(item => {\n\t\t\titem.value = null;\n\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\t});\n\t\tthis.changed();\n\t}\n\n\t/**\n\t * Generate a snapshot.\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof InfoMetric\n\t */\n\tgenerateSnapshot() {\n\t\tconst snapshot = Array.from(this.values.keys()).map(key => {\n\t\t\tconst item = this.values.get(key);\n\t\t\treturn {\n\t\t\t\tkey,\n\t\t\t\tvalue: item.value,\n\t\t\t\tlabels: item.labels,\n\t\t\t\ttimestamp: item.timestamp\n\t\t\t};\n\t\t});\n\n\t\treturn snapshot;\n\t}\n}\n\nmodule.exports = InfoMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { BrokerOptionsError } = require(\"../../errors\");\n\nconst Types = {\n\tBase: require(\"./base\"),\n\tCounter: require(\"./counter\"),\n\tGauge: require(\"./gauge\"),\n\tHistogram: require(\"./histogram\"),\n\tInfo: require(\"./info\"),\n};\n\n/**\n * Get MetricType class by name.\n *\n * @param {String} name\n * @returns\n */\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Types).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Types[n];\n}\n\n/**\n * Resolve metric type by name\n *\n * @param {string} type\n * @returns {BaseMetric}\n * @memberof ServiceBroker\n */\nfunction resolve(type) {\n\tconst TypeClass = getByName(type);\n\tif (!TypeClass)\n\t\tthrow new BrokerOptionsError(`Invalid metric type '${type}'.`, { type });\n\n\treturn TypeClass;\n}\n\nfunction register(name, value) {\n\tTypes[name] = value;\n}\n\nmodule.exports = Object.assign(Types, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { match, isString } = require(\"../../utils\");\n\n/**\n * Metric reporter base class.\n *\n * @class BaseReporter\n */\nclass BaseReporter {\n\n\t/**\n\t * Creates an instance of BaseReporter.\n\t *\n\t * @param {Object} opts\n\t * @memberof BaseReporter\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tincludes: null,\n\t\t\texcludes: null,\n\n\t\t\tmetricNamePrefix: null,\n\t\t\tmetricNameSuffix: null,\n\n\t\t\tmetricNameFormatter: null,\n\t\t\tlabelNameFormatter: null,\n\t\t});\n\n\t\tif (isString(this.opts.includes))\n\t\t\tthis.opts.includes = [this.opts.includes];\n\n\t\tif (isString(this.opts.excludes))\n\t\t\tthis.opts.excludes = [this.opts.excludes];\n\t}\n\n\t/**\n\t * Initialize reporter\n\t *\n\t * @param {MetricRegistry} registry\n\t * @memberof BaseReporter\n\t */\n\tinit(registry) {\n\t\tthis.registry = registry;\n\t\tthis.broker = this.registry.broker;\n\t\tthis.logger = this.registry.logger;\n\t}\n\n\t/**\n\t * Stop reporter\n\t *\n\t * @memberof BaseReporter\n\t */\n\tstop() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Match the metric name. Check the `includes` & `excludes` patterns.\n\t *\n\t * @param {String} name\n\t * @returns {boolean}\n\t * @memberof BaseReporter\n\t */\n\tmatchMetricName(name) {\n\t\tif (Array.isArray(this.opts.includes)) {\n\t\t\tif (!this.opts.includes.some(pattern => match(name, pattern)))\n\t\t\t\treturn false;\n\t\t}\n\n\t\tif (Array.isArray(this.opts.excludes)) {\n\t\t\tif (!this.opts.excludes.every(pattern => !match(name, pattern)))\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Format metric name. Add prefix, suffix and call custom formatter.\n\t *\n\t * @param {String} name\n\t * @returns {String}\n\t * @memberof BaseReporter\n\t */\n\tformatMetricName(name) {\n\t\tname = (this.opts.metricNamePrefix ? this.opts.metricNamePrefix : \"\") + name + (this.opts.metricNameSuffix ? this.opts.metricNameSuffix : \"\");\n\t\tif (this.opts.metricNameFormatter)\n\t\t\treturn this.opts.metricNameFormatter(name);\n\t\treturn name;\n\t}\n\n\t/**\n\t * Format label name. Call custom formatter.\n\t *\n\t * @param {String} name\n\t * @returns {String}\n\t * @memberof BaseReporter\n\t */\n\tformatLabelName(name) {\n\t\tif (this.opts.labelNameFormatter)\n\t\t\treturn this.opts.labelNameFormatter(name);\n\t\treturn name;\n\t}\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof BaseReporter\n\t */\n\tmetricChanged(/*metric, value, labels, timestamp*/) {\n\t\t// Not implemented. Abstract method\n\t}\n}\n\nmodule.exports = BaseReporter;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseReporter = require(\"./base\");\nconst _ = require(\"lodash\");\nconst kleur = require(\"kleur\");\nconst METRIC = require(\"../constants\");\nconst { isFunction } = require(\"../../utils\");\n\n/**\n * Console reporter for Moleculer Metrics\n *\n * @class ConsoleReporter\n * @extends {BaseReporter}\n */\nclass ConsoleReporter extends BaseReporter {\n\n\t/**\n\t * Creates an instance of ConsoleReporter.\n\t * @param {Object} opts\n\t * @memberof ConsoleReporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\tinterval: 5,\n\t\t\tlogger: null,\n\t\t\tcolors: true,\n\t\t\tonlyChanges: true,\n\t\t});\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\n\t\tthis.lastChanges = new Set();\n\t}\n\n\t/**\n\t * Initialize reporter\n\t * @param {MetricRegistry} registry\n\t * @memberof ConsoleReporter\n\t */\n\tinit(registry) {\n\t\tsuper.init(registry);\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.print(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Convert labels to label string\n\t *\n\t * @param {Object} labels\n\t * @returns {String}\n\t * @memberof ConsoleReporter\n\t */\n\tlabelsToStr(labels) {\n\t\tconst keys = Object.keys(labels);\n\t\tif (keys.length == 0)\n\t\t\treturn kleur.gray(\"{}\");\n\n\t\treturn kleur.gray(\"{\") + keys.map(key => `${kleur.gray(this.formatLabelName(key))}: ${kleur.magenta(\"\" + labels[key])}`).join(\", \") + kleur.gray(\"}\");\n\t}\n\n\t/**\n\t * Print metrics to the console.\n\t *\n\t * @memberof ConsoleReporter\n\t */\n\tprint() {\n\t\tlet list = this.registry.list({\n\t\t\tincludes: this.opts.includes,\n\t\t\texcludes: this.opts.excludes,\n\t\t});\n\n\t\tif (this.opts.onlyChanges)\n\t\t\tlist = list.filter(metric => this.lastChanges.has(metric.name));\n\n\t\tif (list.length == 0)\n\t\t\treturn;\n\n\t\tthis.log(kleur.gray(`------------------- [ METRICS START (${list.length}) ] -------------------`));\n\n\t\tlist.forEach(metric => {\n\t\t\tthis.log(kleur.cyan().bold(this.formatMetricName(metric.name)) + \" \" + kleur.gray(\"(\" + metric.type + \")\"));\n\t\t\tif (metric.values.size == 0) {\n\t\t\t\tthis.log(kleur.gray(\"  <no values>\"));\n\t\t\t} else {\n\t\t\t\tconst unit = metric.unit ? kleur.gray(this.registry.pluralizeUnit(metric.unit)) : \"\";\n\t\t\t\tmetric.values.forEach(item => {\n\t\t\t\t\tlet val;\n\t\t\t\t\tconst labelStr = this.labelsToStr(item.labels);\n\t\t\t\t\tswitch(metric.type) {\n\t\t\t\t\t\tcase METRIC.TYPE_COUNTER:\n\t\t\t\t\t\tcase METRIC.TYPE_GAUGE:\n\t\t\t\t\t\tcase METRIC.TYPE_INFO:\n\t\t\t\t\t\t\tval = item.value === \"\" ? kleur.grey(\"<empty string>\") : kleur.green().bold(item.value);\n\t\t\t\t\t\t\tif (item.rate != null) {\n\t\t\t\t\t\t\t\t/*const s = [];\n\t\t\t\t\t\t\t\tObject.keys(item.rates).forEach(b => {\n\t\t\t\t\t\t\t\t\ts.push(`Rate${b}: ${item.rates[b] != null ? item.rates[b].toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tval = kleur.green().bold(`Value: ${val} | ` + s.join(\" | \"));\n\t\t\t\t\t\t\t\t*/\n\n\t\t\t\t\t\t\t\tval = val + kleur.grey(\" | Rate: \") + (item.rate != null ? kleur.green().bold(item.rate.toFixed(2)) : \"-\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase METRIC.TYPE_HISTOGRAM: {\n\t\t\t\t\t\t\tconst s = [];\n\t\t\t\t\t\t\ts.push(`Count: ${item.count}`);\n\n\t\t\t\t\t\t\tif (item.buckets) {\n\t\t\t\t\t\t\t\tObject.keys(item.buckets).forEach(b => {\n\t\t\t\t\t\t\t\t\ts.push(`${b}: ${item.buckets[b] != null ? item.buckets[b] : \"-\"}`);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (item.quantiles) {\n\t\t\t\t\t\t\t\ts.push(`Min: ${item.min != null ? item.min.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`Mean: ${item.mean != null ? item.mean.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`Var: ${item.variance != null ? item.variance.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`StdDev: ${item.stdDev != null ? item.stdDev.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`Max: ${item.max != null ? item.max.toFixed(2) : \"-\"}`);\n\n\t\t\t\t\t\t\t\tObject.keys(item.quantiles).forEach(key => {\n\t\t\t\t\t\t\t\t\ts.push(`${key}: ${item.quantiles[key] != null ? item.quantiles[key].toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (item.rate != null)\n\t\t\t\t\t\t\t\ts.push(`Rate: ${item.rate != null ? item.rate.toFixed(2) : \"-\"}`);\n\n\t\t\t\t\t\t\tval = kleur.green().bold(s.join(\" | \"));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.log(`  ${labelStr}: ${val} ${unit}`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.log(\"\");\n\t\t});\n\n\t\tthis.log(kleur.gray(`-------------------- [ METRICS END (${list.length}) ] --------------------`));\n\n\t\tthis.lastChanges.clear();\n\t}\n\n\t/**\n\t * Print messages\n\t *\n\t * @param  {...any} args\n\t */\n\tlog(...args) {\n\t\tif (isFunction(this.opts.logger)) {\n\t\t\treturn this.opts.logger(...args);\n\t\t} else {\n\t\t\treturn this.logger.info(...args);\n\t\t}\n\t}\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof BaseReporter\n\t */\n\tmetricChanged(metric) {\n\t\tif (!this.matchMetricName(metric.name)) return;\n\n\t\tthis.lastChanges.add(metric.name);\n\t}\n}\n\nmodule.exports = ConsoleReporter;\n","module.exports = false\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseReporter = require(\"./base\");\nconst _ = require(\"lodash\");\n\n/**\n * Event reporter for Moleculer Metrics\n *\n * @class EventReporter\n * @extends {BaseReporter}\n */\nclass EventReporter extends BaseReporter {\n\n\t/**\n\t * Creates an instance of EventReporter.\n\t * @param {Object} opts\n\t * @memberof EventReporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\teventName: \"$metrics.snapshot\",\n\n\t\t\tbroadcast: false,\n\t\t\tgroups: null,\n\n\t\t\tonlyChanges: false,\n\n\t\t\tinterval: 5,\n\t\t});\n\n\t\tthis.lastChanges = new Set();\n\t}\n\n\t/**\n\t * Initialize reporter.\n\t *\n\t * @param {MetricRegistry} registry\n\t * @memberof EventReporter\n\t */\n\tinit(registry) {\n\t\tsuper.init(registry);\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.sendEvent(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Send metrics snapshot via event.\n\t *\n\t * @memberof EventReporter\n\t */\n\tsendEvent() {\n\t\tlet list = this.registry.list({\n\t\t\tincludes: this.opts.includes,\n\t\t\texcludes: this.opts.excludes,\n\t\t});\n\n\t\tif (this.opts.onlyChanges)\n\t\t\tlist = list.filter(metric => this.lastChanges.has(metric.name));\n\n\t\tif (list.length == 0)\n\t\t\treturn;\n\n\t\tif (this.opts.broadcast) {\n\t\t\tthis.logger.debug(`Send metrics.snapshot (${list.length} metrics) broadcast events.`);\n\t\t\tthis.broker.broadcast(this.opts.eventName, list, { groups: this.opts.groups });\n\t\t} else {\n\t\t\tthis.logger.debug(`Send metrics.snapshot (${list.length} metrics) events.`);\n\t\t\tthis.broker.emit(this.opts.eventName, list, { groups: this.opts.groups });\n\t\t}\n\n\t\tthis.lastChanges.clear();\n\t}\n\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof BaseReporter\n\t */\n\tmetricChanged(metric) {\n\t\tif (!this.matchMetricName(metric.name)) return;\n\n\t\tthis.lastChanges.add(metric.name);\n\t}\n}\n\nmodule.exports = EventReporter;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../../utils\");\nconst { BrokerOptionsError } = require(\"../../errors\");\n\nconst Reporters = {\n\tBase: require(\"./base\"),\n\tConsole: require(\"./console\"),\n\tCSV: require(\"./csv\"),\n\tEvent: require(\"./event\"),\n\tDatadog: require(\"./datadog\"),\n\tPrometheus: require(\"./prometheus\"),\n\tStatsD: require(\"./statsd\"),\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Reporters).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Reporters[n];\n}\n\n/**\n * Resolve reporter by name\n *\n * @param {object|string} opt\n * @returns {Reporter}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Reporters.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet ReporterClass = getByName(opt);\n\t\tif (ReporterClass)\n\t\t\treturn new ReporterClass();\n\n\t} else if (isObject(opt)) {\n\t\tlet ReporterClass = getByName(opt.type);\n\t\tif (ReporterClass)\n\t\t\treturn new ReporterClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid metric reporter type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\tthrow new BrokerOptionsError(`Invalid metric reporter type '${opt}'.`, { type: opt });\n}\n\nfunction register(name, value) {\n\tReporters[name] = value;\n}\n\nmodule.exports = Object.assign(Reporters, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst os = require(\"os\");\nconst METRIC = require(\"./constants\");\nconst cpuUsage = require(\"../cpu-usage\");\n\nlet v8, eventLoop;\n\n// Load `v8` module for heap metrics.\ntry {\n\tv8 = require(\"v8\");\n} catch (e) {\n\t// silent\n}\n\n/**\n * Register common OS, process & Moleculer metrics.\n */\nfunction registerCommonMetrics() {\n\tthis.logger.debug(\"Registering common metrics...\");\n\n\t// --- METRICS SELF METRICS ---\n\n\t// this.register({ name: METRIC.MOLECULER_METRICS_COMMON_COLLECT_TOTAL, type: METRIC.TYPE_COUNTER, description: \"Number of metric collections\" });\n\t// this.register({ name: METRIC.MOLECULER_METRICS_COMMON_COLLECT_TIME, type: METRIC.TYPE_GAUGE, description: \"Time of collecting metrics\", unit: METRIC.UNIT_MILLISECONDS });\n\n\t// --- PROCESS METRICS ---\n\n\tconst item = this.register({ name: METRIC.PROCESS_ARGUMENTS, type: METRIC.TYPE_INFO, labelNames: [\"index\"], description: \"Process arguments\" });\n\tprocess.argv.map((arg, index) => item.set(arg, { index }));\n\n\tthis.register({ name: METRIC.PROCESS_PID, type: METRIC.TYPE_INFO, description: \"Process PID\" }).set(process.pid);\n\tthis.register({ name: METRIC.PROCESS_PPID, type: METRIC.TYPE_INFO, description: \"Process parent PID\" }).set(process.ppid);\n\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SIZE_USED, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process used heap size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_RSS, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process RSS size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_EXTERNAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process external memory size\" });\n\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process total heap space size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_USED, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process used heap space size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process available heap space size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process physical heap space size\" });\n\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat executable size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat physical size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat available size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat used size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat size limit\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat mallocated size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Peak of process heap stat mallocated size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE, type: METRIC.TYPE_GAUGE, description: \"Process heap stat zap garbage\" });\n\n\tthis.register({ name: METRIC.PROCESS_UPTIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_SECONDS, description: \"Process uptime\" });\n\tthis.register({ name: METRIC.PROCESS_INTERNAL_ACTIVE_HANDLES, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_HANDLE, description: \"Number of active process handlers\" });\n\tthis.register({ name: METRIC.PROCESS_INTERNAL_ACTIVE_REQUESTS, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_REQUEST, description: \"Number of active process requests\" });\n\n\tthis.register({ name: METRIC.PROCESS_VERSIONS_NODE, type: METRIC.TYPE_INFO, description: \"Node version\" }).set(process.versions.node);\n\n\t// --- OS METRICS ---\n\n\tthis.register({ name: METRIC.OS_MEMORY_FREE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"OS free memory size\" });\n\tthis.register({ name: METRIC.OS_MEMORY_USED, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"OS used memory size\" });\n\tthis.register({ name: METRIC.OS_MEMORY_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"OS total memory size\" });\n\tthis.register({ name: METRIC.OS_UPTIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_SECONDS, description: \"OS uptime\" });\n\tthis.register({ name: METRIC.OS_TYPE, type: METRIC.TYPE_INFO, description: \"OS type\" }).set(os.type());\n\tthis.register({ name: METRIC.OS_RELEASE, type: METRIC.TYPE_INFO, description: \"OS release\" }).set(os.release());\n\tthis.register({ name: METRIC.OS_HOSTNAME, type: METRIC.TYPE_INFO, description: \"Hostname\" }).set(os.hostname());\n\tthis.register({ name: METRIC.OS_ARCH, type: METRIC.TYPE_INFO, description: \"OS architecture\" }).set(os.arch());\n\tthis.register({ name: METRIC.OS_PLATFORM, type: METRIC.TYPE_INFO, description: \"OS platform\" }).set(os.platform());\n\n\tconst userInfo = getUserInfo();\n\tthis.register({ name: METRIC.OS_USER_UID, type: METRIC.TYPE_INFO, description: \"UID\" }).set(userInfo.uid);\n\tthis.register({ name: METRIC.OS_USER_GID, type: METRIC.TYPE_INFO, description: \"GID\" }).set(userInfo.gid);\n\tthis.register({ name: METRIC.OS_USER_USERNAME, type: METRIC.TYPE_INFO, description: \"Username\" }).set(userInfo.username);\n\tthis.register({ name: METRIC.OS_USER_HOMEDIR, type: METRIC.TYPE_INFO, description: \"User's home directory\" }).set(userInfo.homedir);\n\n\tthis.register({ name: METRIC.OS_NETWORK_ADDRESS, type: METRIC.TYPE_INFO, labelNames: [\"interface\", \"family\"], description: \"Network address\" });\n\tthis.register({ name: METRIC.OS_NETWORK_MAC, type: METRIC.TYPE_INFO, labelNames: [\"interface\", \"family\"], description: \"MAC address\" });\n\n\tthis.register({ name: METRIC.OS_DATETIME_UNIX, type: METRIC.TYPE_GAUGE, description: \"Current datetime in Unix format\" });\n\tthis.register({ name: METRIC.OS_DATETIME_ISO, type: METRIC.TYPE_INFO, description: \"Current datetime in ISO string\" });\n\tthis.register({ name: METRIC.OS_DATETIME_UTC, type: METRIC.TYPE_INFO, description: \"Current UTC datetime\" });\n\tthis.register({ name: METRIC.OS_DATETIME_TZ_OFFSET, type: METRIC.TYPE_GAUGE, description: \"Timezone offset\" });\n\n\tthis.register({ name: METRIC.OS_CPU_LOAD_1, type: METRIC.TYPE_GAUGE, description: \"CPU load1\" });\n\tthis.register({ name: METRIC.OS_CPU_LOAD_5, type: METRIC.TYPE_GAUGE, description: \"CPU load5\" });\n\tthis.register({ name: METRIC.OS_CPU_LOAD_15, type: METRIC.TYPE_GAUGE, description: \"CPU load15\" });\n\tthis.register({ name: METRIC.OS_CPU_UTILIZATION, type: METRIC.TYPE_GAUGE, description: \"CPU utilization\" });\n\n\tthis.register({ name: METRIC.OS_CPU_USER, type: METRIC.TYPE_GAUGE, description: \"CPU user time\" });\n\tthis.register({ name: METRIC.OS_CPU_SYSTEM, type: METRIC.TYPE_GAUGE, description: \"CPU system time\" });\n\n\tthis.register({ name: METRIC.OS_CPU_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_CPU, description: \"Number of CPUs\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_MODEL, type: METRIC.TYPE_INFO, labelNames: [\"index\"], description: \"CPU model\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_SPEED, type: METRIC.TYPE_GAUGE, labelNames: [\"index\"], unit: METRIC.UNIT_GHZ, description: \"CPU speed\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_TIMES_USER, type: METRIC.TYPE_GAUGE, labelNames: [\"index\"], description: \"CPU user time\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_TIMES_SYS, type: METRIC.TYPE_GAUGE, labelNames: [\"index\"], description: \"CPU system time\" });\n\n\tstartGCWatcher.call(this);\n\tstartEventLoopStats.call(this);\n\n\tthis.logger.debug(`Registered ${this.store.size} common metrics.`);\n}\n\n/**\n * Start GC watcher listener.\n */\nfunction startGCWatcher() {\n// Load `gc-stats` module for GC metrics.\n\ttry {\n\t\tconst gc = (require(\"gc-stats\"))();\n\n\t\t/* istanbul ignore next */\n\t\tif (gc) {\n\t\t\t// --- GARBAGE COLLECTOR METRICS ---\n\n\t\t\tthis.register({ name: METRIC.PROCESS_GC_TIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_NANOSECONDS, description: \"GC time\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_GC_TOTAL_TIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Total time of GC\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_GC_EXECUTED_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"type\"], unit: null, description: \"Number of executed GC\" });\n\n\t\t\tgc.on(\"stats\", stats => {\n\t\t\t\tthis.set(METRIC.PROCESS_GC_TIME, stats.pause);\n\t\t\t\tthis.increment(METRIC.PROCESS_GC_TOTAL_TIME, null, stats.pause / 1e6);\n\t\t\t\tif (stats.gctype == 1)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"scavenge\" });\n\t\t\t\tif (stats.gctype == 2)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"marksweep\" });\n\t\t\t\tif (stats.gctype == 4)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"incremental\" });\n\t\t\t\tif (stats.gctype == 8)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"weakphantom\" });\n\t\t\t\tif (stats.gctype == 15) {\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"scavenge\" });\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"marksweep\" });\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"incremental\" });\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"weakphantom\" });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} catch (e) {\n\t\t// silent\n\t}\n}\n\nfunction startEventLoopStats() {\n\t// Load `event-loop-stats` metric for Event-loop metrics.\n\ttry {\n\t\teventLoop = require(\"event-loop-stats\");\n\t\tif (eventLoop) {\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_MIN, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Minimum of event loop lag\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_AVG, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Average of event loop lag\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_MAX, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Maximum of event loop lag\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_COUNT, type: METRIC.TYPE_GAUGE, description: \"Number of event loop lag samples.\" });\n\t\t}\n\t} catch (e) {\n\t\t// silent\n\t}\n}\n\n/**\n * Update common metric values.\n *\n * @returns {Promise}\n */\nfunction updateCommonMetrics() {\n\tthis.logger.debug(\"Update common metric values...\");\n\tconst end = this.timer();\n\n\t// --- PROCESS METRICS ---\n\n\tconst procMem = process.memoryUsage();\n\n\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SIZE_TOTAL, procMem.heapTotal);\n\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SIZE_USED, procMem.heapUsed);\n\tthis.set(METRIC.PROCESS_MEMORY_RSS, procMem.rss);\n\tthis.set(METRIC.PROCESS_MEMORY_EXTERNAL, procMem.external);\n\n\tif (v8 && v8.getHeapSpaceStatistics) {\n\t\tconst stat = v8.getHeapSpaceStatistics();\n\t\tstat.forEach(item => {\n\t\t\tconst space = item.space_name;\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL, item.space_size, { space });\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_USED, item.space_used_size, { space });\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE, item.space_available_size, { space });\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL, item.physical_space_size, { space });\n\t\t});\n\t}\n\n\tif (v8 && v8.getHeapStatistics) {\n\t\tconst stat = v8.getHeapStatistics();\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL, stat.total_heap_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL, stat.total_heap_size_executable);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL, stat.total_physical_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL, stat.total_available_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE, stat.used_heap_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT, stat.heap_size_limit);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY, stat.malloced_memory);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY, stat.peak_malloced_memory);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE, stat.does_zap_garbage);\n\t}\n\n\tthis.set(METRIC.PROCESS_UPTIME, process.uptime());\n\tthis.set(METRIC.PROCESS_INTERNAL_ACTIVE_HANDLES, process._getActiveHandles().length);\n\tthis.set(METRIC.PROCESS_INTERNAL_ACTIVE_REQUESTS, process._getActiveRequests().length);\n\n\t// --- OS METRICS ---\n\n\tconst freeMem = os.freemem();\n\tconst totalMem = os.totalmem();\n\tconst usedMem = totalMem - freeMem;\n\tthis.set(METRIC.OS_MEMORY_FREE, freeMem);\n\tthis.set(METRIC.OS_MEMORY_USED, usedMem);\n\tthis.set(METRIC.OS_MEMORY_TOTAL, totalMem);\n\tthis.set(METRIC.OS_UPTIME, os.uptime());\n\tthis.set(METRIC.OS_TYPE, os.type());\n\tthis.set(METRIC.OS_RELEASE, os.release());\n\tthis.set(METRIC.OS_HOSTNAME, os.hostname());\n\tthis.set(METRIC.OS_ARCH, os.arch());\n\tthis.set(METRIC.OS_PLATFORM, os.platform());\n\n\t// --- NETWORK INTERFACES ---\n\n\n\tconst getNetworkInterfaces = () =>{\n\t\tconst list = [];\n\t\tconst ilist = [];\n\t\tconst interfaces = os.networkInterfaces();\n\t\tfor (let iface in interfaces) {\n\t\t\tfor (let i in interfaces[iface]) {\n\t\t\t\tconst f = interfaces[iface][i];\n\t\t\t\tif (f.internal) {\n\t\t\t\t\tilist.push({ f,iface });\n\t\t\t\t} else{\n\t\t\t\t\tlist.push({ f,iface });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list.length > 0 ? list : ilist;\n\t};\n\n\tconst interfaces = getNetworkInterfaces();\n\tfor (let { f,iface } of interfaces) {\n\t\tthis.set(METRIC.OS_NETWORK_ADDRESS, f.address, { interface: iface, family: f.family });\n\t\tthis.set(METRIC.OS_NETWORK_MAC, f.mac, { interface: iface, family: f.family });\n\t}\n\n\tconst d = new Date();\n\tthis.set(METRIC.OS_DATETIME_UNIX, d.valueOf());\n\tthis.set(METRIC.OS_DATETIME_ISO, d.toISOString());\n\tthis.set(METRIC.OS_DATETIME_UTC, d.toUTCString());\n\tthis.set(METRIC.OS_DATETIME_TZ_OFFSET, d.getTimezoneOffset());\n\n\tconst load = os.loadavg();\n\tthis.set(METRIC.OS_CPU_LOAD_1, load[0]);\n\tthis.set(METRIC.OS_CPU_LOAD_5, load[1]);\n\tthis.set(METRIC.OS_CPU_LOAD_15, load[2]);\n\n\tif (eventLoop && eventLoop.sense) {\n\t\tconst stat = eventLoop.sense();\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_MIN, stat.min);\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_AVG, stat.num ? stat.sum / stat.num : 0);\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_MAX, stat.max);\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_COUNT, stat.num);\n\t}\n\n\t// this.increment(METRIC.MOLECULER_METRICS_COMMON_COLLECT_TOTAL);\n\tconst duration = end();\n\n\treturn this.broker.Promise.resolve()\n\t\t.then(() => cpuUsage().then(res => {\n\t\t\tthis.set(METRIC.OS_CPU_UTILIZATION, res.avg);\n\n\t\t\ttry {\n\t\t\t\tconst cpus = os.cpus();\n\t\t\t\tthis.set(METRIC.OS_CPU_TOTAL, cpus.length);\n\t\t\t\tthis.set(METRIC.OS_CPU_USER, cpus.reduce((a,b) => a + b.times.user, 0));\n\t\t\t\tthis.set(METRIC.OS_CPU_SYSTEM, cpus.reduce((a,b) => a + b.times.sys, 0));\n\n\t\t\t\tcpus.forEach((cpu, index) => {\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_MODEL, cpu.model, { index });\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_SPEED, cpu.speed, { index });\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_TIMES_USER, cpu.times.user, { index });\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_TIMES_SYS, cpu.times.sys, { index });\n\t\t\t\t});\n\n\t\t\t} catch(err) {\n\t\t\t\t// silent\n\t\t\t}\n\t\t}))\n\t\t.catch(() => {\n\t\t\t// silent this.logger.warn(\"Unable to collect CPU usage metrics.\", err);\n\t\t})\n\t\t.then(() => {\n\t\t\tthis.logger.debug(`Collected common metric values in ${duration.toFixed(3)} msec.`);\n\t\t});\n}\n\n/**\n * Get OS user info (safe-mode)\n *\n * @returns\n */\nfunction getUserInfo() {\n\ttry {\n\t\treturn os.userInfo();\n\t} catch (e) {\n\t\t/* istanbul ignore next */\n\t\treturn {};\n\t}\n}\n\n/**\n * Measure event loop lag.\n *\n * @returns {Promise<Number>}\n *\nfunction measureEventLoopLag() {\n\treturn new Promise(resolve => {\n\t\tconst start = process.hrtime();\n\t\tsetImmediate(() => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tresolve(delta[0] * 1e9 + delta[1]);\n\t\t});\n\t});\n}*/\n\nmodule.exports = {\n\tregisterCommonMetrics,\n\tupdateCommonMetrics\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * CPU usage measure.\n *\n * Based on: https://github.com/icebob/cpu\n */\nconst os = require(\"os\");\n\n/* istanbul ignore next */\nmodule.exports = function getCpuUsage(sampleTime = 100) {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tconst first = os.cpus().map(cpu => cpu.times);\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tconst second = os.cpus().map(cpu => cpu.times);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst third = os.cpus().map(cpu => cpu.times);\n\n\t\t\t\t\t\t\tconst usages = [];\n\t\t\t\t\t\t\tfor (let i = 0; i < first.length; i++) {\n\t\t\t\t\t\t\t\tconst first_idle = first[i].idle;\n\t\t\t\t\t\t\t\tconst first_total = first[i].idle + first[i].user + first[i].nice + first[i].sys + first[i].irq;\n\t\t\t\t\t\t\t\tconst second_idle = second[i].idle;\n\t\t\t\t\t\t\t\tconst second_total = second[i].idle + second[i].user + second[i].nice + second[i].sys + second[i].irq;\n\t\t\t\t\t\t\t\tconst third_idle = third[i].idle;\n\t\t\t\t\t\t\t\tconst third_total = third[i].idle + third[i].user + third[i].nice + third[i].sys + third[i].irq;\n\t\t\t\t\t\t\t\tconst first_usage = 1 - (second_idle - first_idle) / (second_total - first_total);\n\t\t\t\t\t\t\t\tconst second_usage = 1 - (third_idle - second_idle) / (third_total - second_total);\n\t\t\t\t\t\t\t\tconst per_usage = (first_usage + second_usage) / 2 * 100;\n\t\t\t\t\t\t\t\tusages.push(per_usage);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\tavg: usages.reduce((a, b) => a + b, 0) / usages.length,\n\t\t\t\t\t\t\t\tusages\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, sampleTime);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}, sampleTime);\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { match, isFunction, isPlainObject, isString } = require(\"../utils\");\nconst METRIC = require(\"./constants\");\nconst Types = require(\"./types\");\nconst Reporters = require(\"./reporters\");\nconst { registerCommonMetrics, updateCommonMetrics } = require(\"./commons\");\n\nconst METRIC_NAME_REGEXP \t= /^[a-zA-Z_][a-zA-Z0-9-_:.]*$/;\nconst METRIC_LABEL_REGEXP \t= /^[a-zA-Z_][a-zA-Z0-9-_.]*$/;\n\n/**\n * Metric Registry class\n */\nclass MetricRegistry {\n\n\t/**\n\t * Creates an instance of MetricRegistry.\n\t *\n\t * @param {ServiceBroker} broker\n\t * @param {Object} opts\n\t * @memberof MetricRegistry\n\t */\n\tconstructor(broker, opts) {\n\t\tthis.broker = broker;\n\t\tthis.logger = broker.getLogger(\"metrics\");\n\n\t\tthis.dirty = true;\n\n\t\tif (opts === true || opts === false)\n\t\t\topts = { enabled: opts };\n\n\t\tthis.opts = _.defaultsDeep({}, opts, {\n\t\t\tenabled: true,\n\t\t\tcollectProcessMetrics: process.env.NODE_ENV !== \"test\",\n\t\t\tcollectInterval: 5,\n\n\t\t\treporter: false,\n\n\t\t\tdefaultBuckets: [1, 5, 10, 25, 50, 100, 250, 500, 1000, 2500, 5000, 10000], // in milliseconds\n\t\t\tdefaultQuantiles: [0.5, 0.9, 0.95, 0.99, 0.999], // percentage\n\t\t\tdefaultMaxAgeSeconds: 60,\n\t\t\tdefaultAgeBuckets: 10,\n\t\t\tdefaultAggregator: \"sum\"\n\t\t});\n\n\t\tthis.store = new Map();\n\n\t\tif (this.opts.enabled)\n\t\t\tthis.logger.info(\"Metrics: Enabled\");\n\t}\n\n\t/**\n\t * Initialize Registry.\n\t */\n\tinit() {\n\t\tif (this.opts.enabled) {\n\n\t\t\t// Create Reporter instances\n\t\t\tif (this.opts.reporter) {\n\t\t\t\tconst reporters = Array.isArray(this.opts.reporter) ? this.opts.reporter : [this.opts.reporter];\n\n\t\t\t\tthis.reporter = _.compact(reporters).map(r => {\n\t\t\t\t\tconst reporter = Reporters.resolve(r);\n\t\t\t\t\treporter.init(this);\n\t\t\t\t\treturn reporter;\n\t\t\t\t});\n\n\t\t\t\tconst reporterNames = this.reporter.map(reporter => this.broker.getConstructorName(reporter));\n\t\t\t\tthis.logger.info(`Metric reporter${reporterNames.length > 1 ? \"s\" : \"\"}: ${reporterNames.join(\", \")}`);\n\t\t\t}\n\n\t\t\t// Start colllect timer\n\t\t\tif (this.opts.collectProcessMetrics) {\n\t\t\t\tthis.collectTimer = setInterval(() => {\n\t\t\t\t\tupdateCommonMetrics.call(this);\n\t\t\t\t}, this.opts.collectInterval * 1000);\n\t\t\t\tthis.collectTimer.unref();\n\n\t\t\t\tregisterCommonMetrics.call(this);\n\t\t\t\tupdateCommonMetrics.call(this);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stop Metric Registry\n\t */\n\tstop() {\n\t\tif (this.collectTimer) {\n\t\t\tclearInterval(this.collectTimer);\n\t\t}\n\n\t\tif (this.reporter) {\n\t\t\treturn this.broker.Promise.all(this.reporter.map(r => r.stop()));\n\t\t}\n\t}\n\n\t/**\n\t * Check metric is enabled?\n\t *\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tisEnabled() {\n\t\treturn this.opts.enabled;\n\t}\n\n\t/**\n\t * Register a new metric.\n\t *\n\t * @param {Object} opts\n\t * @returns {BaseMetric}\n\t * @memberof MetricRegistry\n\t */\n\tregister(opts) {\n\t\tif (!isPlainObject(opts))\n\t\t\tthrow new Error(\"Wrong argument. Must be an Object.\");\n\n\t\tif (!opts.type)\n\t\t\tthrow new Error(\"The metric 'type' property is mandatory.\");\n\n\t\tif (!opts.name)\n\t\t\tthrow new Error(\"The metric 'name' property is mandatory.\");\n\n\t\tif (!METRIC_NAME_REGEXP.test(opts.name))\n\t\t\tthrow new Error(\"The metric 'name' is not valid: \" + opts.name);\n\n\t\tif (Array.isArray(opts.labelNames)) {\n\t\t\topts.labelNames.forEach(name => {\n\t\t\t\tif (!METRIC_LABEL_REGEXP.test(name))\n\t\t\t\t\tthrow new Error(`The '${opts.name}' metric label name is not valid: ${name}`);\n\n\t\t\t});\n\t\t}\n\n\t\tconst MetricClass = Types.resolve(opts.type);\n\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = new MetricClass(opts, this);\n\t\tthis.store.set(opts.name, item);\n\t\treturn item;\n\t}\n\n\t/**\n\t * Check a metric by name.\n\t *\n\t * @param {String} name\n\t * @returns {Boolean}\n\t * @memberof MetricRegistry\n\t */\n\thasMetric(name) {\n\t\treturn this.store.has(name);\n\t}\n\n\t/**\n\t * Get metric by name\n\t *\n\t * @param {String} name\n\t * @returns {BaseMetric}\n\t * @memberof MetricRegistry\n\t */\n\tgetMetric(name) {\n\t\tconst item = this.store.get(name);\n\t\tif (!item)\n\t\t\treturn null;\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Increment a metric value.\n\t *\n\t * @param {String} name\n\t * @param {Object?} labels\n\t * @param {number} [value=1]\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tincrement(name, labels, value = 1, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\tif (!isFunction(item.increment))\n\t\t\tthrow new Error(\"Invalid metric type. Incrementing works only with counter & gauge metric types.\");\n\n\t\treturn item.increment(labels, value, timestamp);\n\t}\n\n\t/**\n\t * Decrement a metric value.\n\t *\n\t * @param {String} name\n\t * @param {Object?} labels\n\t * @param {number} [value=1]\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tdecrement(name, labels, value = 1, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\tif (!isFunction(item.decrement))\n\t\t\tthrow new Error(\"Invalid metric type. Decrementing works only with gauge metric type.\");\n\n\t\treturn item.decrement(labels, value, timestamp);\n\t}\n\n\t/**\n\t * Set a metric value.\n\t *\n\t * @param {String} name\n\t * @param {*} value\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tset(name, value, labels, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\tif (!isFunction(item.set))\n\t\t\tthrow new Error(\"Invalid metric type. Value setting works only with counter, gauge & info metric types.\");\n\n\t\treturn item.set(value, labels, timestamp);\n\t}\n\n\t/**\n\t * Observe a metric.\n\t *\n\t * @param {String} name\n\t * @param {Number} value\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tobserve(name, value, labels, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\tif (!isFunction(item.observe))\n\t\t\tthrow new Error(\"Invalid metric type. Observing works only with histogram metric type.\");\n\n\t\treturn item.observe(value, labels, timestamp);\n\t}\n\n\t/**\n\t * Reset metric values.\n\t *\n\t * @param {String} name\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\treset(name, labels, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\titem.reset(labels, timestamp);\n\t}\n\n\t/**\n\t * Reset metric all values.\n\t *\n\t * @param {String} name\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tresetAll(name, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\titem.resetAll(timestamp);\n\t}\n\n\t/**\n\t * Start a timer & observe the elapsed time.\n\t *\n\t * @param {String} name\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns {Function} `end`˙function.\n\t * @memberof MetricRegistry\n\t */\n\ttimer(name, labels, timestamp) {\n\t\tlet item;\n\t\tif (name && this.opts.enabled) {\n\t\t\titem = this.getMetric(name);\n\t\t\tif (!isFunction(item.observe) && !isFunction(item.set)) {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthrow new Error(\"Invalid metric type. Timing works only with histogram or gauge metric types\");\n\t\t\t}\n\t\t}\n\n\t\tconst start = process.hrtime();\n\t\treturn () => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tconst duration = (delta[0] + delta[1] / 1e9) * 1000;\n\n\t\t\tif (item) {\n\t\t\t\tif (item.type == METRIC.TYPE_HISTOGRAM)\n\t\t\t\t\titem.observe(duration, labels, timestamp);\n\t\t\t\telse if (item.type == METRIC.TYPE_GAUGE)\n\t\t\t\t\titem.set(duration, labels, timestamp);\n\t\t\t}\n\n\t\t\treturn duration;\n\t\t};\n\t}\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof MetricRegistry\n\t */\n\tchanged(metric, value, labels, timestamp) {\n\t\tthis.dirty = true;\n\t\tif (Array.isArray(this.reporter))\n\t\t\tthis.reporter.forEach(reporter => reporter.metricChanged(metric, value, labels, timestamp));\n\t}\n\n\t/**\n\t * List all registered metrics with labels & values.\n\t *\n\t * @param {Object?} opts\n\t * @param {String|Array<String>|null} opts.types\n\t * @param {String|Array<String>|null} opts.includes\n\t * @param {String|Array<String>|null} opts.excludes\n\t */\n\tlist(opts) {\n\t\tconst res = [];\n\t\topts = opts || {};\n\n\t\tconst types = opts.types != null ? (isString(opts.types) ? [opts.types] : opts.types) : null;\n\t\tconst includes = opts.includes != null ? (isString(opts.includes) ? [opts.includes] : opts.includes) : null;\n\t\tconst excludes = opts.excludes != null ? (isString(opts.excludes) ? [opts.excludes] : opts.excludes) : null;\n\n\t\tthis.store.forEach(metric => {\n\t\t\tif (types && !types.some(type => metric.type == type))\n\t\t\t\treturn;\n\n\t\t\tif (includes && !includes.some(pattern => match(metric.name, pattern)))\n\t\t\t\treturn;\n\n\t\t\tif (excludes && !excludes.every(pattern => !match(metric.name, pattern)))\n\t\t\t\treturn;\n\n\t\t\tres.push(metric.toObject());\n\t\t});\n\n\t\treturn res;\n\t}\n\n\n\t/**\n\t * Pluralize metric units.\n\t *\n\t * @param {String} unit\n\t * @returns {String}\n\t */\n\tpluralizeUnit(unit) {\n\t\tswitch(unit) {\n\t\t\tcase METRIC.UNIT_GHZ:\n\t\t\t\treturn unit;\n\t\t}\n\t\treturn unit + \"s\";\n\t}\n}\n\nmodule.exports = MetricRegistry;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst METRIC = require(\"./constants\");\n\nconst MetricRegistry = require(\"./registry\");\nconst BaseMetric = require(\"./types/base\");\nconst CounterMetric = require(\"./types/counter\");\nconst GaugeMetric = require(\"./types/gauge\");\nconst HistrogramMetric = require(\"./types/histogram\");\nconst InfoMetric = require(\"./types/info\");\n\nconst Reporters = require(\"./reporters\");\n\nmodule.exports = {\n\tMETRIC: METRIC,\n\n\tMetricRegistry,\n\n\tBaseMetric,\n\tCounterMetric,\n\tGaugeMetric,\n\tHistrogramMetric,\n\tInfoMetric,\n\n\tReporters\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst P \t\t\t\t= require(\"./packets\");\nconst { Packet } \t\t= require(\"./packets\");\nconst E \t\t\t\t= require(\"./errors\");\n\nconst { Transform } \t= require(\"stream\");\nconst { METRIC }\t\t= require(\"./metrics\");\n\n/**\n * Transit class\n *\n * @class Transit\n */\nclass Transit {\n\n\t/**\n\t * Create an instance of Transit.\n\t *\n\t * @param {ServiceBroker} Broker instance\n\t * @param {Transporter} Transporter instance\n\t * @param {Object?} opts\n\t *\n\t * @memberof Transit\n\t */\n\tconstructor(broker, transporter, opts) {\n\t\tthis.broker = broker;\n\t\tthis.Promise = broker.Promise;\n\t\tthis.logger = broker.getLogger(\"transit\");\n\t\tthis.nodeID = broker.nodeID;\n\t\tthis.metrics = broker.metrics;\n\t\tthis.instanceID = broker.instanceID;\n\t\tthis.tx = transporter;\n\t\tthis.opts = opts;\n\t\tthis.discoverer = broker.registry.discoverer;\n\n\t\tthis.pendingRequests = new Map();\n\t\tthis.pendingReqStreams = new Map();\n\t\tthis.pendingResStreams = new Map();\n\n\t\t/* deprecated */\n\t\tthis.stat = {\n\t\t\tpackets: {\n\t\t\t\tsent: {\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tbytes: 0\n\t\t\t\t},\n\t\t\t\treceived: {\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tbytes: 0\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.connected = false;\n\t\tthis.disconnecting = false;\n\t\tthis.isReady = false;\n\n\t\tconst wrappedMessageHandler = (cmd, packet) => this.messageHandler(cmd, packet);\n\n\t\tthis.publish = this.broker.wrapMethod(\"transitPublish\", this.publish, this);\n\t\tthis.messageHandler = this.broker.wrapMethod(\"transitMessageHandler\", this.messageHandler, this);\n\n\n\t\tif (this.tx) {\n\t\t\tthis.tx.init(this, wrappedMessageHandler, this.afterConnect.bind(this));\n\n\t\t\tthis.tx.send = this.broker.wrapMethod(\"transporterSend\", this.tx.send, this.tx);\n\t\t\tthis.tx.receive = this.broker.wrapMethod(\"transporterReceive\", this.tx.receive, this.tx, { reverse: true });\n\t\t}\n\n\t\tthis.__connectResolve = null;\n\n\t\tthis.registerMoleculerMetrics();\n\t}\n\n\t/**\n\t * Register Moleculer Transit Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tif (!this.broker.isMetricsEnabled()) return;\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_READY, type: METRIC.TYPE_GAUGE, description: \"Transit is ready\" }).set(0);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_CONNECTED, type: METRIC.TYPE_GAUGE, description: \"Transit is connected\" }).set(0);\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_PONG_TIME, type: METRIC.TYPE_GAUGE, labelNames: [\"targetNodeID\"], description: \"Ping time\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_PONG_SYSTIME_DIFF, type: METRIC.TYPE_GAUGE, labelNames: [\"targetNodeID\"], description: \"System time difference between nodes\" });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL, type: METRIC.TYPE_COUNTER, description: \"Number of orphan responses\" });\n\t}\n\n\t/**\n\t * It will be called after transporter connected or reconnected.\n\t *\n\t * @param {any} wasReconnect\n\t * @returns {Promise}\n\t *\n\t * @memberof Transit\n\t */\n\tafterConnect(wasReconnect) {\n\t\treturn this.Promise.resolve()\n\n\t\t\t.then(() => {\n\t\t\t\tif (wasReconnect) {\n\t\t\t\t\t// After reconnecting, we should send a broadcast INFO packet because there may new nodes.\n\t\t\t\t\t// In case of disabled balancer, it triggers the `makeBalancedSubscriptions` method.\n\t\t\t\t\treturn this.discoverer.sendLocalNodeInfo();\n\t\t\t\t} else {\n\t\t\t\t\t// After connecting we should subscribe to topics\n\t\t\t\t\treturn this.makeSubscriptions();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t.then(() => this.discoverer.discoverAllNodes())\n\t\t\t.delay(500) // Waiting for incoming INFO packets\n\n\t\t\t.then(() => {\n\t\t\t\tthis.connected = true;\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_CONNECTED, 1);\n\n\t\t\t\tthis.broker.broadcastLocal(\"$transporter.connected\", { wasReconnect: !!wasReconnect });\n\n\t\t\t\tif (this.__connectResolve) {\n\t\t\t\t\tthis.__connectResolve();\n\t\t\t\t\tthis.__connectResolve = null;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\t/**\n\t * Connect with transporter. If failed, try again after 5 sec.\n\t *\n\t * @memberof Transit\n\t */\n\tconnect() {\n\t\tthis.logger.info(\"Connecting to the transporter...\");\n\t\treturn new this.Promise(resolve => {\n\t\t\tthis.__connectResolve = resolve;\n\n\t\t\tconst doConnect = () => {\n\t\t\t\tlet reconnectStarted = false;\n\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tconst errorHandler = (err) => {\n\t\t\t\t\tif (this.disconnecting) return;\n\t\t\t\t\tif (reconnectStarted) return;\n\n\t\t\t\t\tthis.logger.warn(\"Connection is failed.\", err && err.message || \"Unknown error\");\n\t\t\t\t\tthis.logger.debug(err);\n\n\t\t\t\t\tif (this.opts.disableReconnect) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treconnectStarted = true;\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.logger.info(\"Reconnecting...\");\n\t\t\t\t\t\tdoConnect();\n\t\t\t\t\t}, 5 * 1000);\n\t\t\t\t};\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.tx.connect(errorHandler).catch(errorHandler);\n\t\t\t};\n\n\t\t\tdoConnect();\n\n\t\t});\n\t}\n\n\t/**\n\t * Disconnect with transporter\n\t *\n\t * @memberof Transit\n\t */\n\tdisconnect() {\n\t\tthis.connected = false;\n\t\tthis.isReady = false;\n\t\tthis.disconnecting = true;\n\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_CONNECTED, 0);\n\n\t\tthis.broker.broadcastLocal(\"$transporter.disconnected\", { graceFul: true });\n\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\tif (this.tx.connected) {\n\t\t\t\t\treturn this.discoverer.localNodeDisconnected()\n\t\t\t\t\t\t.then(() => this.tx.disconnect());\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => this.disconnecting = false);\n\t}\n\n\t/**\n\t * Local broker is ready (all services loaded).\n\t * Send INFO packet to all other nodes\n\t */\n\tready() {\n\t\tif (this.connected) {\n\t\t\tthis.isReady = true;\n\t\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_READY, 1);\n\t\t\treturn this.discoverer.localNodeReady();\n\t\t}\n\t}\n\n\t/**\n\t * Send DISCONNECT to remote nodes\n\t *\n\t * @returns {Promise}\n\t *\n\t * @memberof Transit\n\t */\n\tsendDisconnectPacket() {\n\t\treturn this.publish(new Packet(P.PACKET_DISCONNECT)).catch(/* istanbul ignore next */ err => this.logger.debug(\"Unable to send DISCONNECT packet.\", err));\n\t}\n\n\t/**\n\t * Subscribe to topics for transportation\n\t *\n\t * @memberof Transit\n\t */\n\tmakeSubscriptions() {\n\t\tthis.subscribing = this.tx.makeSubscriptions([\n\n\t\t\t// Subscribe to broadcast events\n\t\t\t{ cmd: P.PACKET_EVENT, nodeID: this.nodeID },\n\n\t\t\t// Subscribe to requests\n\t\t\t{ cmd: P.PACKET_REQUEST, nodeID: this.nodeID },\n\n\t\t\t// Subscribe to node responses of requests\n\t\t\t{ cmd: P.PACKET_RESPONSE, nodeID: this.nodeID },\n\n\t\t\t// Discover handler\n\t\t\t{ cmd: P.PACKET_DISCOVER },\n\t\t\t{ cmd: P.PACKET_DISCOVER, nodeID: this.nodeID },\n\n\t\t\t// NodeInfo handler\n\t\t\t{ cmd: P.PACKET_INFO }, // Broadcasted INFO. If a new node connected\n\t\t\t{ cmd: P.PACKET_INFO, nodeID: this.nodeID }, // Response INFO to DISCOVER packet\n\n\t\t\t// Disconnect handler\n\t\t\t{ cmd: P.PACKET_DISCONNECT },\n\n\t\t\t// Heartbeat handler\n\t\t\t{ cmd: P.PACKET_HEARTBEAT },\n\n\t\t\t// Ping handler\n\t\t\t{ cmd: P.PACKET_PING }, // Broadcasted\n\t\t\t{ cmd: P.PACKET_PING, nodeID: this.nodeID }, // Targeted\n\n\t\t\t// Pong handler\n\t\t\t{ cmd: P.PACKET_PONG, nodeID: this.nodeID }\n\n\t\t]).then(() => {\n\t\t\tthis.subscribing = null;\n\t\t});\n\n\t\treturn this.subscribing;\n\t}\n\n\t/**\n\t * Message handler for incoming packets\n\t *\n\t * @param {Array} topic\n\t * @param {String} msg\n\t * @returns {Boolean} If packet is processed return with `true`\n\t *\n\t * @memberof Transit\n\t */\n\tmessageHandler(cmd, packet) {\n\t\ttry {\n\t\t\tconst payload = packet.payload;\n\n\t\t\t// Check payload\n\t\t\tif (!payload) {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthrow new E.MoleculerServerError(\"Missing response payload.\", 500, \"MISSING_PAYLOAD\");\n\t\t\t}\n\n\t\t\t// Check protocol version\n\t\t\tif (payload.ver !== this.broker.PROTOCOL_VERSION && !this.opts.disableVersionCheck) {\n\t\t\t\tthrow new E.ProtocolVersionMismatchError({\n\t\t\t\t\tnodeID: payload.sender,\n\t\t\t\t\tactual: this.broker.PROTOCOL_VERSION,\n\t\t\t\t\treceived: payload.ver\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (payload.sender === this.nodeID) {\n\n\t\t\t\t// Detect nodeID conflict\n\t\t\t\tif (cmd === P.PACKET_INFO && payload.instanceID !== this.instanceID) {\n\t\t\t\t\treturn this.broker.fatal(\"ServiceBroker has detected a nodeID conflict, use unique nodeIDs. ServiceBroker stopped.\");\n\t\t\t\t}\n\n\t\t\t\t// Skip own packets (if only built-in balancer disabled)\n\t\t\t\tif (cmd !== P.PACKET_EVENT && cmd !== P.PACKET_REQUEST && cmd !== P.PACKET_RESPONSE)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Request\n\t\t\tif (cmd === P.PACKET_REQUEST) {\n\t\t\t\treturn this.requestHandler(payload);\n\t\t\t}\n\n\t\t\t// Response\n\t\t\telse if (cmd === P.PACKET_RESPONSE) {\n\t\t\t\tthis.responseHandler(payload);\n\t\t\t}\n\n\t\t\t// Event\n\t\t\telse if (cmd === P.PACKET_EVENT) {\n\t\t\t\tthis.eventHandler(payload);\n\t\t\t}\n\n\t\t\t// Discover\n\t\t\telse if (cmd === P.PACKET_DISCOVER) {\n\t\t\t\tthis.discoverer.sendLocalNodeInfo(payload.sender);\n\t\t\t}\n\n\t\t\t// Node info\n\t\t\telse if (cmd === P.PACKET_INFO) {\n\t\t\t\tthis.discoverer.processRemoteNodeInfo(payload.sender, payload);\n\t\t\t}\n\n\t\t\t// Disconnect\n\t\t\telse if (cmd === P.PACKET_DISCONNECT) {\n\t\t\t\tthis.discoverer.remoteNodeDisconnected(payload.sender, false);\n\t\t\t}\n\n\t\t\t// Heartbeat\n\t\t\telse if (cmd === P.PACKET_HEARTBEAT) {\n\t\t\t\tthis.discoverer.heartbeatReceived(payload.sender, payload);\n\t\t\t}\n\n\t\t\t// Ping\n\t\t\telse if (cmd === P.PACKET_PING) {\n\t\t\t\tthis.sendPong(payload);\n\t\t\t}\n\n\t\t\t// Pong\n\t\t\telse if (cmd === P.PACKET_PONG) {\n\t\t\t\tthis.processPong(payload);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\tthis.logger.error(err, cmd, packet);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Handle incoming event\n\t *\n\t * @param {any} payload\n\t * @memberof Transit\n\t */\n\teventHandler(payload) {\n\t\tthis.logger.debug(`Event '${payload.event}' received from '${payload.sender}' node` + (payload.groups ? ` in '${payload.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\tif (!this.broker.started) {\n\t\t\tthis.logger.warn(`Incoming '${payload.event}' event from '${payload.sender}' node is dropped, because broker is stopped.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Create caller context\n\t\tconst ctx = new this.broker.ContextFactory(this.broker);\n\t\tctx.id = payload.id;\n\t\tctx.eventName = payload.event;\n\t\tctx.setParams(payload.data, this.broker.options.contextParamsCloning);\n\t\tctx.eventGroups = payload.groups;\n\t\tctx.eventType = payload.broadcast ? \"broadcast\" : \"emit\";\n\t\tctx.meta = payload.meta || {};\n\t\tctx.level = payload.level;\n\t\tctx.tracing = !!payload.tracing;\n\t\tctx.parentID = payload.parentID;\n\t\tctx.requestID = payload.requestID;\n\t\tctx.caller = payload.caller;\n\t\tctx.nodeID = payload.sender;\n\n\t\tthis.broker.emitLocalServices(ctx);\n\t}\n\n\t/**\n\t * Handle incoming request\n\t *\n\t * @param {Object} payload\n\t *\n\t * @memberof Transit\n\t */\n\trequestHandler(payload) {\n\t\tthis.logger.debug(`<= Request '${payload.action}' received from '${payload.sender}' node.`);\n\n\t\ttry {\n\t\t\tif (!this.broker.started) {\n\t\t\t\tthis.logger.warn(`Incoming '${payload.action}' request from '${payload.sender}' node is dropped because broker is stopped.`);\n\t\t\t\tthrow new E.ServiceNotAvailableError({ action: payload.action, nodeID: this.nodeID });\n\t\t\t}\n\n\t\t\tlet pass;\n\t\t\tif (payload.stream !== undefined) {\n\t\t\t\tpass = this._handleIncomingRequestStream(payload);\n\t\t\t\tif (pass === null) // eslint-disable-line security/detect-possible-timing-attacks\n\t\t\t\t\treturn this.Promise.resolve();\n\t\t\t}\n\n\t\t\tconst endpoint = this.broker._getLocalActionEndpoint(payload.action);\n\n\t\t\t// Recreate caller context\n\t\t\tconst ctx = new this.broker.ContextFactory(this.broker);\n\t\t\tctx.setEndpoint(endpoint);\n\t\t\tctx.id = payload.id;\n\t\t\tctx.setParams(pass ? pass : payload.params, this.broker.options.contextParamsCloning);\n\t\t\tctx.parentID = payload.parentID;\n\t\t\tctx.requestID = payload.requestID;\n\t\t\tctx.caller = payload.caller;\n\t\t\tctx.meta = payload.meta || {};\n\t\t\tctx.level = payload.level;\n\t\t\tctx.tracing = payload.tracing;\n\t\t\tctx.nodeID = payload.sender;\n\n\t\t\tif (payload.timeout != null)\n\t\t\t\tctx.options.timeout = payload.timeout;\n\n\t\t\tconst p = endpoint.action.handler(ctx);\n\t\t\t// Pointer to Context\n\t\t\tp.ctx = ctx;\n\n\t\t\treturn p\n\t\t\t\t.then(res => this.sendResponse(payload.sender, payload.id, ctx.meta, res, null))\n\t\t\t\t.catch(err => this.sendResponse(payload.sender, payload.id, ctx.meta, null, err));\n\n\t\t} catch (err) {\n\t\t\treturn this.sendResponse(payload.sender, payload.id, payload.meta, null, err);\n\t\t}\n\t}\n\n\t/**\n\t * Handle incoming request stream.\n\t *\n\t * @param {Object} payload\n\t * @returns {Stream}\n\t */\n\t_handleIncomingRequestStream(payload) {\n\t\tlet pass = this.pendingReqStreams.get(payload.id);\n\t\tlet isNew = false;\n\n\t\tif (!payload.stream && !pass) {\n\t\t\t// It is not a stream data\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!pass) {\n\t\t\tisNew = true;\n\t\t\tthis.logger.debug(`<= New stream is received from '${payload.sender}'. Seq: ${payload.seq}`);\n\n\t\t\t// Create a new pass stream\n\t\t\tpass = new Transform({\n\t\t\t\tobjectMode: payload.meta && payload.meta[\"$streamObjectMode\"],\n\t\t\t\ttransform: function(chunk, encoding, done) {\n\t\t\t\t\tthis.push(chunk);\n\t\t\t\t\treturn done();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpass.$prevSeq = -1;\n\t\t\tpass.$pool = new Map();\n\n\t\t\tthis.pendingReqStreams.set(payload.id, pass);\n\t\t}\n\n\t\tif (payload.seq > pass.$prevSeq + 1) {\n\t\t\t// Some chunks are late. Store these chunks.\n\t\t\tthis.logger.info(`Put the chunk into pool (size: ${pass.$pool.size}). Seq: ${payload.seq}`);\n\n\t\t\tpass.$pool.set(payload.seq, payload);\n\n\t\t\t// TODO: start timer.\n\t\t\t// TODO: check length of pool.\n\t\t\t// TODO: reset seq\n\n\t\t\treturn isNew ? pass : null;\n\t\t}\n\n\t\t// the next stream chunk received\n\t\tpass.$prevSeq = payload.seq;\n\n\t\tif (pass.$prevSeq > 0) {\n\t\t\tif (!payload.stream) {\n\n\t\t\t\t// Check stream error\n\t\t\t\tif (payload.meta && payload.meta[\"$streamError\"]) {\n\t\t\t\t\tpass.emit(\"error\", this._createErrFromPayload(payload.meta[\"$streamError\"], payload.sender));\n\t\t\t\t}\n\n\t\t\t\tthis.logger.debug(`<= Stream closing is received from '${payload.sender}'. Seq: ${payload.seq}`);\n\n\t\t\t\t// End of stream\n\t\t\t\tpass.end();\n\n\t\t\t\t// Remove pending request stream\n\t\t\t\tthis.pendingReqStreams.delete(payload.id);\n\n\t\t\t\treturn null;\n\n\t\t\t} else {\n\t\t\t\tthis.logger.debug(`<= Stream chunk is received from '${payload.sender}'. Seq: ${payload.seq}`);\n\t\t\t\tpass.write(payload.params.type === \"Buffer\" ? Buffer.from(payload.params.data) : payload.params);\n\t\t\t}\n\t\t}\n\n\t\t// Check newer chunks in the pool\n\t\tif (pass.$pool.size > 0) {\n\t\t\tthis.logger.warn(`Has stored packets. Size: ${pass.$pool.size}`);\n\t\t\tconst nextSeq = pass.$prevSeq + 1;\n\t\t\tconst nextPacket = pass.$pool.get(nextSeq);\n\t\t\tif (nextPacket) {\n\t\t\t\tpass.$pool.delete(nextSeq);\n\t\t\t\tsetImmediate(() => this.requestHandler(nextPacket));\n\t\t\t}\n\t\t}\n\n\t\treturn isNew ? pass : null;\n\t}\n\n\t/**\n\t * Create an Error instance from payload ata\n\t * @param {Object} error\n\t * @param {String} sender\n\t */\n\t_createErrFromPayload(error, sender) {\n\t\tlet err = E.recreateError(error);\n\t\tif (!err) {\n\t\t\terr = new Error(error.message);\n\t\t\terr.name = error.name;\n\t\t\terr.code = error.code;\n\t\t\terr.type = error.type;\n\t\t\terr.data = error.data;\n\t\t}\n\t\terr.retryable = error.retryable;\n\t\terr.nodeID = error.nodeID || sender;\n\n\t\tif (error.stack)\n\t\t\terr.stack = error.stack;\n\n\t\treturn err;\n\t}\n\n\t/**\n\t * Process incoming response of request\n\t *\n\t * @param {Object} packet\n\t *\n\t * @memberof Transit\n\t */\n\tresponseHandler(packet) {\n\t\tconst id = packet.id;\n\t\tconst req = this.pendingRequests.get(id);\n\n\t\t// If not exists (timed out), we skip response processing\n\t\tif (req == null) {\n\t\t\tthis.logger.debug(\"Orphan response is received. Maybe the request is timed out earlier. ID:\", packet.id, \", Sender:\", packet.sender);\n\t\t\tthis.metrics.increment(METRIC.MOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logger.debug(`<= Response '${req.action.name}' is received from '${packet.sender}'.`);\n\n\t\t// Update nodeID in context (if it uses external balancer)\n\t\treq.ctx.nodeID = packet.sender;\n\n\t\t// Merge response meta with original meta\n\t\tObject.assign(req.ctx.meta || {}, packet.meta || {});\n\n\t\t// Handle stream response\n\t\tif (packet.stream != null) {\n\t\t\tif (this._handleIncomingResponseStream(packet, req))\n\t\t\t\treturn;\n\t\t}\n\n\t\t// Remove pending request\n\t\tthis.removePendingRequest(id);\n\n\t\tif (!packet.success) {\n\t\t\treq.reject(this._createErrFromPayload(packet.error, packet.sender));\n\t\t} else {\n\t\t\treq.resolve(packet.data);\n\t\t}\n\t}\n\n\t/**\n\t * Handle incoming response stream.\n\t *\n\t * @param {Object} packet\n\t * @param {Object} req\n\t */\n\t_handleIncomingResponseStream(packet, req) {\n\t\tlet pass = this.pendingResStreams.get(packet.id);\n\t\tif (!pass && !packet.stream)\n\t\t\treturn false;\n\n\t\tif (!pass) {\n\t\t\tthis.logger.debug(`<= New stream is received from '${packet.sender}'. Seq: ${packet.seq}`);\n\n\t\t\tpass = new Transform({\n\t\t\t\tobjectMode: packet.meta && packet.meta[\"$streamObjectMode\"],\n\t\t\t\ttransform: function(chunk, encoding, done) {\n\t\t\t\t\tthis.push(chunk);\n\t\t\t\t\treturn done();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpass.$prevSeq = -1;\n\t\t\tpass.$pool = new Map();\n\n\t\t\tthis.pendingResStreams.set(packet.id, pass);\n\n\t\t\treq.resolve(pass);\n\t\t}\n\n\t\tif (packet.seq > pass.$prevSeq + 1) {\n\t\t\t// Some chunks are late. Store these chunks.\n\t\t\tthis.logger.info(`Put the chunk into pool (size: ${pass.$pool.size}). Seq: ${packet.seq}`);\n\n\t\t\tpass.$pool.set(packet.seq, packet);\n\n\t\t\t// TODO: start timer.\n\t\t\t// TODO: check length of pool.\n\t\t\t// TODO: resetting seq.\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// the next stream chunk received\n\t\tpass.$prevSeq = packet.seq;\n\n\t\tif (pass.$prevSeq > 0) {\n\n\t\t\tif (!packet.stream) {\n\t\t\t\t// Received error?\n\t\t\t\tif (!packet.success)\n\t\t\t\t\tpass.emit(\"error\", this._createErrFromPayload(packet.error, packet.sender));\n\n\t\t\t\tthis.logger.debug(`<= Stream closing is received from '${packet.sender}'. Seq: ${packet.seq}`);\n\n\t\t\t\t// End of stream\n\t\t\t\tpass.end();\n\n\t\t\t\t// Remove pending request\n\t\t\t\tthis.removePendingRequest(packet.id);\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\t\t\t\t// stream chunk\n\t\t\t\tthis.logger.debug(`<= Stream chunk is received from '${packet.sender}'. Seq: ${packet.seq}`);\n\t\t\t\tpass.write(packet.data.type === \"Buffer\" ? Buffer.from(packet.data.data):packet.data);\n\t\t\t}\n\t\t}\n\n\t\t// Check newer chunks in the pool\n\t\tif (pass.$pool.size > 0) {\n\t\t\tthis.logger.warn(`Has stored packets. Size: ${pass.$pool.size}`);\n\t\t\tconst nextSeq = pass.$prevSeq + 1;\n\t\t\tconst nextPacket = pass.$pool.get(nextSeq);\n\t\t\tif (nextPacket) {\n\t\t\t\tpass.$pool.delete(nextSeq);\n\t\t\t\tsetImmediate(() => this.responseHandler(nextPacket));\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Send a request to a remote service. It returns a Promise\n\t * what will be resolved when the response received.\n\t *\n\t * @param {<Context>} ctx Context of request\n\t * @returns {Promise}\n\t *\n\t * @memberof Transit\n\t */\n\trequest(ctx) {\n\t\tif (this.opts.maxQueueSize && this.pendingRequests.size >= this.opts.maxQueueSize)\n\t\t\t/* istanbul ignore next */\n\t\t\treturn this.Promise.reject(new E.QueueIsFullError({\n\t\t\t\taction: ctx.action.name,\n\t\t\t\tnodeID: this.nodeID,\n\t\t\t\tsize: this.pendingRequests.size,\n\t\t\t\tlimit: this.opts.maxQueueSize\n\t\t\t}));\n\n\t\t// Expanded the code that v8 can optimize it.  (TryCatchStatement disable optimizing)\n\t\treturn new this.Promise((resolve, reject) => this._sendRequest(ctx, resolve, reject));\n\t}\n\n\t/**\n\t * Send a remote request\n\t *\n\t * @param {<Context>} ctx      Context of request\n\t * @param {Function} resolve   Resolve of Promise\n\t * @param {Function} reject    Reject of Promise\n\t *\n\t * @memberof Transit\n\t */\n\t_sendRequest(ctx, resolve, reject) {\n\t\tconst isStream = ctx.params && ctx.params.readable === true && typeof ctx.params.on === \"function\" && typeof ctx.params.pipe === \"function\";\n\n\t\tconst request = {\n\t\t\taction: ctx.action,\n\t\t\tnodeID: ctx.nodeID,\n\t\t\tctx,\n\t\t\tresolve,\n\t\t\treject,\n\t\t\tstream: isStream // ???\n\t\t};\n\n\t\tconst payload = {\n\t\t\tid: ctx.id,\n\t\t\taction: ctx.action.name,\n\t\t\tparams: isStream ? null : ctx.params,\n\t\t\tmeta: ctx.meta,\n\t\t\ttimeout: ctx.options.timeout,\n\t\t\tlevel: ctx.level,\n\t\t\ttracing: ctx.tracing,\n\t\t\tparentID: ctx.parentID,\n\t\t\trequestID: ctx.requestID,\n\t\t\tcaller: ctx.caller,\n\t\t\tstream: isStream,\n\t\t};\n\n\t\tif (payload.stream) {\n\t\t\tif (ctx.params.readableObjectMode === true || (ctx.params._readableState && ctx.params._readableState.objectMode === true)) {\n\t\t\t\tpayload.meta = payload.meta || {};\n\t\t\t\tpayload.meta[\"$streamObjectMode\"] = true;\n\t\t\t}\n\t\t\tpayload.seq = 0;\n\t\t}\n\n\t\tconst packet = new Packet(P.PACKET_REQUEST, ctx.nodeID, payload);\n\n\t\tconst nodeName = ctx.nodeID ? `'${ctx.nodeID}'` : \"someone\";\n\t\tthis.logger.debug(`=> Send '${ctx.action.name}' request to ${nodeName} node.`);\n\n\t\tconst publishCatch = /* istanbul ignore next */ err => this.logger.error(`Unable to send '${ctx.action.name}' request to ${nodeName} node.`, err);\n\n\t\t// Add to pendings\n\t\tthis.pendingRequests.set(ctx.id, request);\n\n\t\t// Publish request\n\t\treturn this.publish(packet)\n\t\t\t.then(() => {\n\t\t\t\tif (isStream) {\n\t\t\t\t\t// Skip to send ctx.meta with chunks because it doesn't appear on the remote side.\n\t\t\t\t\tpayload.meta = {};\n\t\t\t\t\t// Still send information about objectMode in case of packets are received in wrong order\n\t\t\t\t\tif (ctx.params.readableObjectMode === true || (ctx.params._readableState && ctx.params._readableState.objectMode === true)) {\n\t\t\t\t\t\tpayload.meta[\"$streamObjectMode\"] = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst stream = ctx.params;\n\t\t\t\t\tstream.on(\"data\", (chunk) => {\n\t\t\t\t\t\tstream.pause();\n\t\t\t\t\t\tconst chunks = [];\n\t\t\t\t\t\tif (chunk instanceof Buffer && this.opts.maxChunkSize > 0 && chunk.length > this.opts.maxChunkSize) {\n\t\t\t\t\t\t\tlet len = chunk.length;\n\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\twhile (i < len) {\n\t\t\t\t\t\t\t\tchunks.push(chunk.slice(i, i += this.opts.maxChunkSize));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const ch of chunks) {\n\t\t\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\t\t\tcopy.stream = true;\n\t\t\t\t\t\t\tcopy.params = ch;\n\n\t\t\t\t\t\t\tthis.logger.debug(`=> Send stream chunk to ${nodeName} node. Seq: ${copy.seq}`);\n\n\t\t\t\t\t\t\tthis.publish(new Packet(P.PACKET_REQUEST, ctx.nodeID, copy))\n\t\t\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstream.resume();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.on(\"end\", () => {\n\t\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\t\tcopy.params = null;\n\t\t\t\t\t\tcopy.stream = false;\n\n\t\t\t\t\t\tthis.logger.debug(`=> Send stream closing to ${nodeName} node. Seq: ${copy.seq}`);\n\n\t\t\t\t\t\treturn this.publish(new Packet(P.PACKET_REQUEST, ctx.nodeID, copy))\n\t\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.on(\"error\", err => {\n\t\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\t\tcopy.stream = false;\n\t\t\t\t\t\tcopy.meta[\"$streamError\"] = this._createPayloadErrorField(err);\n\t\t\t\t\t\tcopy.params = null;\n\n\t\t\t\t\t\tthis.logger.debug(`=> Send stream error to ${nodeName} node.`, copy.meta[\"$streamError\"]);\n\n\t\t\t\t\t\treturn this.publish(new Packet(P.PACKET_REQUEST, ctx.nodeID, copy))\n\t\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tpublishCatch(err);\n\t\t\t\treject(err);\n\t\t\t});\n\t}\n\n\t/**\n\t * Send an event to a remote node.\n\t * The event is balanced by transporter\n\t *\n\t * @param {Context} ctx\n\t *\n\t * @memberof Transit\n\t */\n\tsendEvent(ctx) {\n\t\tconst groups = ctx.eventGroups;\n\t\tif (ctx.endpoint)\n\t\t\tthis.logger.debug(`=> Send '${ctx.eventName}' event to '${ctx.nodeID}' node` + (groups ? ` in '${groups.join(\", \")}' group(s)` : \"\") + \".\");\n\t\telse\n\t\t\tthis.logger.debug(`=> Send '${ctx.eventName}' event to '${groups.join(\", \")}' group(s).`);\n\n\t\treturn this.publish(new Packet(P.PACKET_EVENT, ctx.endpoint ? ctx.nodeID : null, {\n\t\t\tid: ctx.id,\n\t\t\tevent: ctx.eventName,\n\t\t\tdata: ctx.params,\n\t\t\tgroups,\n\t\t\tbroadcast: ctx.eventType == \"broadcast\",\n\t\t\tmeta: ctx.meta,\n\t\t\tlevel: ctx.level,\n\t\t\ttracing: ctx.tracing,\n\t\t\tparentID: ctx.parentID,\n\t\t\trequestID: ctx.requestID,\n\t\t\tcaller: ctx.caller,\n\t\t\tneedAck: ctx.needAck\n\t\t})).catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send '${ctx.eventName}' event to groups.`, err));\n\t}\n\n\t/**\n\t * Remove a pending request\n\t *\n\t * @param {any} id\n\t *\n\t * @memberof Transit\n\t */\n\tremovePendingRequest(id) {\n\t\tthis.pendingRequests.delete(id);\n\n\t\tthis.pendingReqStreams.delete(id);\n\t\tthis.pendingResStreams.delete(id);\n\t}\n\n\t/**\n\t * Remove a pending request & streams\n\t *\n\t * @param {String} nodeID\n\t *\n\t * @memberof Transit\n\t */\n\tremovePendingRequestByNodeID(nodeID) {\n\t\tthis.logger.debug(`Remove pending requests of '${nodeID}' node.`);\n\t\tthis.pendingRequests.forEach((req, id) => {\n\t\t\tif (req.nodeID === nodeID) {\n\t\t\t\tthis.pendingRequests.delete(id);\n\n\t\t\t\t// Reject the request\n\t\t\t\treq.reject(new E.RequestRejectedError({\n\t\t\t\t\taction: req.action.name,\n\t\t\t\t\tnodeID: req.nodeID\n\t\t\t\t}));\n\n\t\t\t\tthis.pendingReqStreams.delete(id);\n\t\t\t\tthis.pendingResStreams.delete(id);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Create error field in outgoing payload\n\t *\n\t * @param {Error} err\n\t * @returns {Object}\n\t * @memberof Transit\n\t */\n\t_createPayloadErrorField(err) {\n\t\treturn {\n\t\t\tname: err.name,\n\t\t\tmessage: err.message,\n\t\t\tnodeID: err.nodeID || this.nodeID,\n\t\t\tcode: err.code,\n\t\t\ttype: err.type,\n\t\t\tretryable: err.retryable,\n\t\t\tstack: err.stack,\n\t\t\tdata: err.data\n\t\t};\n\t}\n\n\t/**\n\t * Send back the response of request\n\t *\n\t * @param {String} nodeID\n\t * @param {String} id\n\t * @param {any} meta\n\t * @param {any} data\n\t * @param {Error} err\n\t *\n\t * @memberof Transit\n\t */\n\tsendResponse(nodeID, id, meta, data, err) {\n\t\t// Publish the response\n\t\tconst payload = {\n\t\t\tid: id,\n\t\t\tmeta: meta,\n\t\t\tsuccess: err == null,\n\t\t\tdata: data\n\t\t};\n\n\t\tif (err)\n\t\t\tpayload.error = this._createPayloadErrorField(err);\n\n\t\tconst publishCatch = /* istanbul ignore next */ err => this.logger.error(`Unable to send '${id}' response to '${nodeID}' node.`, err);\n\n\t\tif (data && data.readable === true && typeof data.on === \"function\" && typeof data.pipe === \"function\") {\n\t\t\t// Streaming response\n\t\t\tpayload.stream = true;\n\t\t\tif (data.readableObjectMode === true || (data._readableState && data._readableState.objectMode === true)) {\n\t\t\t\tpayload.meta = payload.meta || {};\n\t\t\t\tpayload.meta[\"$streamObjectMode\"] = true;\n\t\t\t}\n\t\t\tpayload.seq = 0;\n\n\t\t\tconst stream = data;\n\t\t\tstream.pause();\n\n\t\t\tstream.on(\"data\", (chunk) => {\n\t\t\t\tstream.pause();\n\t\t\t\tconst chunks = [];\n\t\t\t\tif (chunk instanceof Buffer && this.opts.maxChunkSize > 0 && chunk.length > this.opts.maxChunkSize) {\n\t\t\t\t\tlet len = chunk.length;\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\twhile (i < len) {\n\t\t\t\t\t\tchunks.push(chunk.slice(i, i += this.opts.maxChunkSize));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t\tfor (const ch of chunks) {\n\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\tcopy.stream = true;\n\t\t\t\t\tcopy.data = ch;\n\n\t\t\t\t\tthis.logger.debug(`=> Send stream chunk to ${nodeID} node. Seq: ${copy.seq}`);\n\n\t\t\t\t\tthis.publish(new Packet(P.PACKET_RESPONSE, nodeID, copy))\n\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t}\n\t\t\t\tstream.resume();\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tstream.on(\"end\", () => {\n\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\tcopy.stream = false;\n\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\tcopy.data = null;\n\n\t\t\t\tthis.logger.debug(`=> Send stream closing to ${nodeID} node. Seq: ${copy.seq}`);\n\n\t\t\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, copy))\n\t\t\t\t\t.catch(publishCatch);\n\t\t\t});\n\n\t\t\tstream.on(\"error\", err => {\n\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\tcopy.stream = false;\n\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\tif (err) {\n\t\t\t\t\tcopy.success = false;\n\t\t\t\t\tcopy.error = this._createPayloadErrorField(err);\n\t\t\t\t}\n\n\t\t\t\tthis.logger.debug(`=> Send stream error to ${nodeID} node.`, copy.error);\n\n\t\t\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, copy))\n\t\t\t\t\t.catch(publishCatch);\n\t\t\t});\n\n\t\t\tpayload.data = null;\n\t\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, payload))\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (payload.stream)\n\t\t\t\t\t\tstream.resume();\n\t\t\t\t})\n\t\t\t\t.catch(publishCatch);\n\n\t\t}\n\n\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, payload))\n\t\t\t.catch(publishCatch);\n\t}\n\n\t/**\n\t * Discover other nodes. It will be called after success connect.\n\t *\n\t * @memberof Transit\n\t */\n\tdiscoverNodes() {\n\t\treturn this.publish(new Packet(P.PACKET_DISCOVER))\n\t\t\t.catch(/* istanbul ignore next */ err => this.logger.error(\"Unable to send DISCOVER packet.\", err));\n\t}\n\n\t/**\n\t * Discover a node. It will be called if we got message from an unknown node.\n\t *\n\t * @memberof Transit\n\t */\n\tdiscoverNode(nodeID) {\n\t\treturn this.publish(new Packet(P.PACKET_DISCOVER, nodeID))\n\t\t\t.catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send DISCOVER packet to '${nodeID}' node.`, err));\n\t}\n\n\t/**\n\t * Send node info package to other nodes.\n\t *\n\t * @memberof Transit\n\t */\n\tsendNodeInfo(info, nodeID) {\n\t\tif (!this.connected || !this.isReady) return this.Promise.resolve();\n\n\t\tconst p = !nodeID && this.broker.options.disableBalancer ? this.tx.makeBalancedSubscriptions() : this.Promise.resolve();\n\t\treturn p.then(() => this.publish(new Packet(P.PACKET_INFO, nodeID, {\n\t\t\tservices: info.services,\n\t\t\tipList: info.ipList,\n\t\t\thostname: info.hostname,\n\t\t\tclient: info.client,\n\t\t\tconfig: info.config,\n\t\t\tinstanceID: this.broker.instanceID,\n\t\t\tmetadata: info.metadata,\n\t\t\tseq: info.seq\n\t\t}))).catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send INFO packet to '${nodeID}' node.`, err));\n\n\t}\n\n\t/**\n\t * Send ping to a node (or all nodes if nodeID is null)\n\t *\n\t * @param {String} nodeID\n\t * @param {String} id\n\t * @returns\n\t * @memberof Transit\n\t */\n\tsendPing(nodeID, id) {\n\t\treturn this.publish(new Packet(P.PACKET_PING, nodeID, { time: Date.now(), id: id || this.broker.generateUid() }))\n\t\t\t.catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send PING packet to '${nodeID}' node.`, err));\n\t}\n\n\t/**\n\t * Send back pong response\n\t *\n\t * @param {Object} payload\n\t * @returns\n\t * @memberof Transit\n\t */\n\tsendPong(payload) {\n\t\treturn this.publish(new Packet(P.PACKET_PONG, payload.sender, {\n\t\t\ttime: payload.time,\n\t\t\tid: payload.id,\n\t\t\tarrived: Date.now()\n\t\t})).catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send PONG packet to '${payload.sender}' node.`, err));\n\t}\n\n\t/**\n\t * Process incoming PONG packet.\n\t * Measure ping time & current time difference.\n\t *\n\t * @param {Object} payload\n\t * @memberof Transit\n\t */\n\tprocessPong(payload) {\n\t\tconst now = Date.now();\n\t\tconst elapsedTime = now - payload.time;\n\t\tconst timeDiff = Math.round(now - payload.arrived - elapsedTime / 2);\n\n\t\t// this.logger.debug(`PING-PONG from '${payload.sender}' - Time: ${elapsedTime}ms, Time difference: ${timeDiff}ms`);\n\n\t\tthis.broker.broadcastLocal(\"$node.pong\", { nodeID: payload.sender, elapsedTime, timeDiff, id: payload.id });\n\n\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_PONG_TIME, elapsedTime, { targetNodeID: payload.sender });\n\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_PONG_SYSTIME_DIFF, timeDiff, { targetNodeID: payload.sender });\n\t}\n\n\t/**\n\t * Send a node heartbeat. It will be called with timer from local Discoverer.\n\t *\n\t * @params {Node} localNode\n\t * @memberof Transit\n\t */\n\tsendHeartbeat(localNode) {\n\t\treturn this.publish(new Packet(P.PACKET_HEARTBEAT, null, {\n\t\t\tcpu: localNode.cpu\n\t\t})).catch(/* istanbul ignore next */ err => this.logger.error(\"Unable to send HEARTBEAT packet.\", err));\n\n\t}\n\n\t/**\n\t * Subscribe via transporter\n\t *\n\t * @param {String} topic\n\t * @param {String=} nodeID\n\t *\n\t * @deprecated\n\t * @memberof Transit\n\t */\n\tsubscribe(topic, nodeID) {\n\t\treturn this.tx.subscribe(topic, nodeID);\n\t}\n\n\t/**\n\t * Publish via transporter\n\t *\n\t * @param {Packet} Packet\n\t *\n\t * @memberof Transit\n\t */\n\tpublish(packet) {\n\t\tif (this.subscribing) {\n\t\t\treturn this.subscribing\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn this.tx.prepublish(packet);\n\t\t\t\t});\n\t\t}\n\t\treturn this.tx.prepublish(packet);\n\t}\n\n}\n\nmodule.exports = Transit;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Base strategy class\n *\n * @class BaseStrategy\n */\nclass BaseStrategy {\n\n\t/**\n\t * Constructor\n\t *\n\t * @param {ServiceRegistry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Object?} opts\n\t */\n\tconstructor(registry, broker, opts) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.opts = opts || {};\n\t}\n\n\t/**\n\t * Select an endpoint.\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @param {Context?} ctx\n\t *\n\t * @memberof BaseStrategy\n\t */\n\tselect(/*list, ctx*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n}\n\nmodule.exports = BaseStrategy;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseStrategy = require(\"./base\");\n\n/**\n * Round-robin strategy class\n *\n * @class RoundRobinStrategy\n */\nclass RoundRobinStrategy extends BaseStrategy {\n\n\tconstructor(registry, broker, opts) {\n\t\tsuper(registry, broker, opts);\n\n\t\tthis.counter = 0;\n\t}\n\n\tselect(list) {\n\t\t// Reset counter\n\t\tif (this.counter >= list.length) {\n\t\t\tthis.counter = 0;\n\t\t}\n\t\treturn list[this.counter++];\n\t}\n\n}\n\nmodule.exports = RoundRobinStrategy;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { random } = require(\"lodash\");\nconst BaseStrategy = require(\"./base\");\n\n/**\n * Random strategy class\n *\n * @class RandomStrategy\n */\nclass RandomStrategy extends BaseStrategy {\n\tselect(list) {\n\t\treturn list[random(0, list.length - 1)];\n\t}\n}\n\nmodule.exports = RandomStrategy;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst { random } = require(\"lodash\");\nconst BaseStrategy = require(\"./base\");\n\n/**\n * Lowest latency invocation strategy\n *\n * Since Strategy can be instantiated multiple times, therefore,\n * we need to have a \"master\" instance to send ping, and each\n * individual \"slave\" instance will update their list dynamically\n *\n * These options can be configured in broker registry options:\n *\n * const broker = new ServiceBroker({\n * \tlogger: true,\n * \tregistry: {\n * \t\tstrategy: \"LatencyStrategy\",\n * \t\tstrategyOptions: {\n * \t\t\tsampleCount: 5,\n * \t\t\tlowLatency: 10,\n * \t\t\tcollectCount: 5,\n * \t\t\tpingInterval: 10\n * \t\t}\n * \t}\n * });\n *\n * @class LatencyStrategy\n */\nclass LatencyStrategy extends BaseStrategy {\n\n\tconstructor(registry, broker, opts) {\n\t\tsuper(registry, broker, opts);\n\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tsampleCount: 5,\n\t\t\tlowLatency: 10,\n\t\t\tcollectCount: 5,\n\t\t\tpingInterval: 10\n\t\t});\n\n\t\tthis.brokerStopped = false;\n\n\t\tthis.hostAvgLatency = new Map();\n\n\t\t/* hostMap contains:\n\t\t\thostname => {\n\t\t\t\thistoricLatency: [],\n\t\t\t\tnodeList: []\n\t\t\t}\n\t\t*/\n\t\tthis.hostMap = new Map();\n\n\t\t// short circuit\n\t\tif (!this.broker.transit) return;\n\n\t\tif (this.broker.localBus.listenerCount(\"$node.latencyMaster\") === 0) {\n\t\t\t// claim as master\n\t\t\tthis.broker.localBus.on(\"$node.latencyMaster\", function() {});\n\t\t\t// respond to PONG\n\t\t\tthis.broker.localBus.on(\"$node.pong\", this.processPong.bind(this));\n\t\t\t// dynamically add new node\n\t\t\tthis.broker.localBus.on(\"$node.connected\", this.addNode.bind(this));\n\t\t\t// dynamically remove node\n\t\t\tthis.broker.localBus.on(\"$node.disconnected\", this.removeHostMap.bind(this));\n\t\t\t// try to discovery all nodes on start up\n\t\t\tthis.broker.localBus.on(\"$broker.started\", this.discovery.bind(this));\n\t\t\t// clean up ourselves\n\t\t\tthis.broker.localBus.on(\"$broker.stopped\", () => this.brokerStopped = true);\n\t\t} else {\n\t\t\t// remove node if we are told by master\n\t\t\tthis.broker.localBus.on(\"$node.latencySlave.removeHost\", this.removeHostLatency.bind(this));\n\t\t}\n\n\t\tthis.broker.localBus.on(\"$node.latencySlave\", this.updateLatency.bind(this));\n\t}\n\n\t// Master\n\tdiscovery() {\n\t\treturn this.broker.transit.sendPing().then(() => {\n\t\t\tconst timer = setTimeout(() => this.pingHosts(), 1000 * this.opts.pingInterval);\n\t\t\ttimer.unref();\n\t\t});\n\t}\n\n\t// Master\n\tpingHosts() {\n\n\t\t/* istanbul ignore next */\n\t\tif (this.brokerStopped) return;\n\t\t/*\n\t\t\tSmart Ping: only ping the host, not the nodes (which may be many)\n\n\t\t\tAlthough, if that particular node on the host is overloaded,\n\t\t\tthe measurement may be skewed.\n\t\t*/\n\t\tconst hosts = Array.from(this.hostMap.values());\n\n\t\treturn this.broker.Promise.all(hosts.map(host => { // TODO: missing concurency: 5, here was bluebird Promise.map\n\t\t\t// Select a nodeID randomly\n\t\t\tconst nodeID = host.nodeList[random(0, host.nodeList.length - 1)];\n\t\t\treturn this.broker.transit.sendPing(nodeID);\n\t\t})).then(() => {\n\t\t\tconst timer = setTimeout(() => this.pingHosts(), 1000 * this.opts.pingInterval);\n\t\t\ttimer.unref();\n\t\t});\n\t}\n\n\t// Master\n\tprocessPong(payload) {\n\t\tlet node = this.registry.nodes.get(payload.nodeID);\n\n\t\t/* istanbul ignore next */\n\t\tif (!node) return;\n\n\t\tlet info = this.getHostLatency(node);\n\n\t\tif (info.historicLatency.length > (this.opts.collectCount - 1))\n\t\t\tinfo.historicLatency.shift();\n\n\t\tinfo.historicLatency.push(payload.elapsedTime);\n\n\t\tconst avgLatency = info.historicLatency.reduce((sum, latency) => sum + latency, 0) / info.historicLatency.length;\n\n\t\tthis.broker.localBus.emit(\"$node.latencySlave\", {\n\t\t\thostname: node.hostname,\n\t\t\tavgLatency: avgLatency\n\t\t});\n\t}\n\n\t// Master\n\tgetHostLatency(node) {\n\t\tlet info = this.hostMap.get(node.hostname);\n\t\tif (typeof info === \"undefined\") {\n\t\t\tinfo = {\n\t\t\t\thistoricLatency: [],\n\t\t\t\tnodeList: [ node.id ]\n\t\t\t};\n\t\t\tthis.hostMap.set(node.hostname, info);\n\t\t}\n\t\treturn info;\n\t}\n\n\t// Master\n\taddNode(payload) {\n\t\tlet node = payload.node;\n\n\t\t// each host may have multiple nodes\n\t\tlet info = this.getHostLatency(node);\n\t\tif (info.nodeList.indexOf(node.id) === -1) {\n\t\t\tinfo.nodeList.push(node.id);\n\t\t}\n\t}\n\n\t// Master\n\tremoveHostMap(payload) {\n\t\tlet node = payload.node;\n\n\t\tlet info = this.hostMap.get(node.hostname);\n\t\t// This exists to make sure that we don't get an \"undefined\",\n\t\t// \ttherefore the test coverage here is unnecessary.\n\t\t/* istanbul ignore next */\n\t\tif (typeof info === \"undefined\") return;\n\n\t\tinfo.nodeList = info.nodeList.filter(id => id !== node.id);\n\n\t\tif (info.nodeList.length == 0) {\n\t\t\t// only remove the host if the last node disconnected\n\t\t\tthis.broker.localBus.emit(\"$node.latencySlave.removeHost\", node.hostname);\n\t\t\tthis.hostMap.delete(node.hostname);\n\t\t}\n\t}\n\n\t// Master + Slave\n\tupdateLatency(payload) {\n\t\tthis.hostAvgLatency.set(payload.hostname, payload.avgLatency);\n\t}\n\n\t// Slave\n\tremoveHostLatency(hostname) {\n\t\tthis.hostAvgLatency.delete(hostname);\n\t}\n\n\t/**\n\t * Select an endpoint by network latency\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @returns {Endpoint}\n\t * @memberof LatencyStrategy\n\t */\n\tselect(list) {\n\t\tlet minEp = null;\n\t\tlet minLatency = null;\n\n\t\tconst sampleCount = this.opts.sampleCount;\n\t\tconst count = sampleCount <= 0 || sampleCount > list.length ? list.length : sampleCount;\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tlet ep;\n\t\t\t// Get random endpoint\n\t\t\tif (count == list.length) {\n\t\t\t\tep = list[i];\n\t\t\t} else {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tep = list[random(0, list.length - 1)];\n\t\t\t}\n\t\t\tconst epLatency = this.hostAvgLatency.get(ep.node.hostname);\n\n\t\t\t// Check latency of endpoint\n\t\t\tif (typeof epLatency !== \"undefined\") {\n\n\t\t\t\tif (epLatency < this.opts.lowLatency)\n\t\t\t\t\treturn ep;\n\n\t\t\t\tif (!minEp || !minLatency || epLatency < minLatency) {\n\t\t\t\t\tminLatency = epLatency;\n\t\t\t\t\tminEp = ep;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Return the lowest latency\n\t\tif (minEp) {\n\t\t\treturn minEp;\n\t\t}\n\n\t\t// Return a random item (no latency data)\n\t\treturn list[random(0, list.length - 1)];\n\t}\n}\n\nmodule.exports = LatencyStrategy;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst BaseStrategy = require(\"./base\");\nconst crypto = require(\"crypto\");\nconst LRU = require(\"lru-cache\");\nconst { isFunction } = require(\"../utils\");\n\n/**\n * Sharding invocation strategy\n *\n * Using consistent-hashing. More info: https://www.toptal.com/big-data/consistent-hashing\n *\n * @class ShardStrategy\n */\nclass ShardStrategy extends BaseStrategy {\n\n\tconstructor(registry, broker, opts) {\n\t\tsuper(registry, broker, opts);\n\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tshardKey: null,\n\t\t\tvnodes: 10,\n\t\t\tringSize: null,\n\t\t\tcacheSize: 1000\n\t\t});\n\n\t\tthis.cache = new LRU({\n\t\t\tmax: this.opts.cacheSize,\n\t\t\tmaxAge: null\n\t\t});\n\n\t\tthis.needRebuild = true;\n\t\tthis.ring = [];\n\n\t\tbroker.localBus.on(\"$node.**\", () => this.needRebuild = true);\n\t}\n\n\t/**\n\t * Get key field value from Context.\n\t *\n\t * @param {Context} ctx\n\t * @returns {any}\n\t * @memberof ShardStrategy\n\t */\n\tgetKeyFromContext(ctx) {\n\t\tif (!this.opts.shardKey)  return null;\n\n\t\tif (isFunction(this.opts.shardKey))\n\t\t\treturn this.opts.shardKey.call(this, ctx);\n\n\t\tif (this.opts.shardKey.startsWith(\"#\"))\n\t\t\treturn _.get(ctx.meta, this.opts.shardKey.slice(1));\n\n\t\treturn _.get(ctx.params, this.opts.shardKey);\n\t}\n\n\t/**\n\t * Select an endpoint by sharding.\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @param {Context} ctx\n\t * @returns {Endpoint}\n\t * @memberof ShardStrategy\n\t */\n\tselect(list, ctx) {\n\t\tlet key = this.getKeyFromContext(ctx);\n\t\tif (key != null) {\n\t\t\tif (this.needRebuild)\n\t\t\t\tthis.rebuild(list);\n\n\t\t\tconst nodeID = this.getNodeIDByKey(key);\n\t\t\tif (nodeID)\n\t\t\t\treturn list.find(ep => ep.id == nodeID);\n\t\t}\n\n\t\t// Return a random item (no key)\n\t\treturn list[_.random(0, list.length - 1)];\n\t}\n\n\t/**\n\t * Get nodeID by a hashed numeric key.\n\t *\n\t * @param {Number} key\n\t * @returns {String}\n\t * @memberof ShardStrategy\n\t */\n\tgetNodeIDByKey(key) {\n\t\tif (this.cache) {\n\t\t\tconst cached = this.cache.get(key);\n\t\t\tif (cached) return cached;\n\t\t}\n\n\t\tconst hashNum = this.getHash(key.toString());\n\n\t\tlet found;\n\t\tconst ringLen = this.ring.length;\n\t\tfor(let i = 0; i < ringLen; i++) {\n\t\t\tif (hashNum <= this.ring[i].key) {\n\t\t\t\tfound = this.ring[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (found) {\n\t\t\tif (this.cache)\n\t\t\t\tthis.cache.set(key, found.nodeID);\n\t\t\treturn found.nodeID;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Calculate 8 bit integer hash from string key based on MD5 hash.\n\t *\n\t * @param {String} key\n\t * @returns {Number}\n\t * @memberof ShardStrategy\n\t */\n\tgetHash(key) {\n\t\tconst hash = crypto.createHash(\"md5\").update(key).digest(\"hex\");\n\t\tconst hashNum = parseInt(hash.substring(0,8), 16);\n\t\treturn this.opts.ringSize ? hashNum % this.opts.ringSize : hashNum;\n\t}\n\n\t/**\n\t * Rebuild the node hashring.\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @memberof ShardStrategy\n\t */\n\trebuild(list) {\n\t\tthis.cache.reset();\n\t\tthis.ring = [];\n\n\t\tconst arr = list\n\t\t\t.map(ep => ep.id)\n\t\t\t.sort();\n\n\t\tconst total = arr.length * this.opts.vnodes;\n\t\tconst ringSize = this.opts.ringSize ? this.opts.ringSize : Math.pow(2, 32);\n\t\tconst slice = ringSize / total;\n\n\t\tfor (let j = 0; j < this.opts.vnodes; j++) {\n\t\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\t\tconst nodeID = arr[i];\n\t\t\t\tthis.ring.push({\n\t\t\t\t\tkey: Math.floor(slice * (this.ring.length + 1)),\n\t\t\t\t\tnodeID: nodeID\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Set the latest value to the last slice.\n\t\tthis.ring[this.ring.length - 1].key = ringSize;\n\n\t\tthis.needRebuild = false;\n\t}\n\n}\n\nmodule.exports = ShardStrategy;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Strategies = {\n\tBase: require(\"./base\"),\n\tRoundRobin: require(\"./round-robin\"),\n\tRandom: require(\"./random\"),\n\tCpuUsage: require(\"./cpu-usage\"),\n\tLatency: require(\"./latency\"),\n\tShard: require(\"./shard\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Strategies).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Strategies[n];\n}\n\n/**\n * Resolve strategy by name\n *\n * @param {object|string} opt\n * @returns {Strategy}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (Object.prototype.isPrototypeOf.call(Strategies.Base, opt)) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet StrategyClass = getByName(opt);\n\t\tif (StrategyClass)\n\t\t\treturn StrategyClass;\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid strategy type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet StrategyClass = getByName(opt.type || \"RoundRobin\");\n\t\tif (StrategyClass)\n\t\t\treturn StrategyClass;\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid strategy type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn Strategies.RoundRobin;\n}\n\n\nfunction register(name, value) {\n\tStrategies[name] = value;\n}\n\nmodule.exports = Object.assign(Strategies, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\n/**\n * Abstract Discoverer class\n *\n * @class BaseDiscoverer\n */\nclass BaseDiscoverer {\n\n\t/**\n\t * Creates an instance of Discoverer.\n\t *\n\t * @memberof BaseDiscoverer\n\t */\n\tconstructor(opts) {\n\t\tthis.Promise = Promise; // while `init` is not called\n\n\t\tthis.opts = _.defaultsDeep({}, opts, {\n\t\t\theartbeatInterval: null,\n\t\t\theartbeatTimeout: null,\n\n\t\t\tdisableHeartbeatChecks: false,\n\t\t\tdisableOfflineNodeRemoving: false,\n\t\t\tcleanOfflineNodesTimeout: 10 * 60, // 10 minutes\n\t\t});\n\n\t\t// Timer variables\n\t\tthis.heartbeatTimer = null;\n\t\tthis.checkNodesTimer = null;\n\t\tthis.offlineTimer = null;\n\n\t\t// Pointer for the local `Node` instance\n\t\tthis.localNode = null;\n\t}\n\n\t/**\n\t * Initialize Discoverer\n\t *\n\t * @param {ServiceRegistry} registry\n\t */\n\tinit(registry) {\n\t\tthis.registry = registry;\n\t\tthis.broker = registry.broker;\n\t\tthis.Promise = this.broker.Promise;\n\n\t\tif (this.broker) {\n\t\t\tthis.logger = this.broker.getLogger(\"Discovery\");\n\t\t\tthis.transit = this.broker.transit;\n\n\t\t\t// Get HB time settings from broker options. Backward compatibility\n\t\t\tif (this.opts.heartbeatInterval == null)\n\t\t\t\tthis.opts.heartbeatInterval = this.broker.options.heartbeatInterval;\n\t\t\tif (this.opts.heartbeatTimeout == null)\n\t\t\t\tthis.opts.heartbeatTimeout = this.broker.options.heartbeatTimeout;\n\t\t}\n\n\t\tif (this.transit) {\n\t\t\tthis.broker.localBus.on(\"$transporter.connected\", () => this.startHeartbeatTimers());\n\t\t\tthis.broker.localBus.on(\"$transporter.disconnected\", () => this.stopHeartbeatTimers());\n\t\t}\n\n\t\tthis.localNode = this.registry.nodes.localNode;\n\n\t\tthis.registerMoleculerMetrics();\n\t}\n\n\t/**\n\t * Stop discoverer clients.\n\t */\n\tstop() {\n\t\tthis.stopHeartbeatTimers();\n\t\treturn this.Promise.resolve();\n\t}\n\n\t/**\n\t * Register Moleculer Transit Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Start heartbeat timers\n\t */\n\tstartHeartbeatTimers() {\n\t\tthis.stopHeartbeatTimers();\n\n\t\tif (this.opts.heartbeatInterval > 0) {\n\t\t\t// HB timer\n\t\t\tconst time = this.opts.heartbeatInterval * 1000 + (Math.round(Math.random() * 1000) - 500); // random +/- 500ms\n\t\t\tthis.heartbeatTimer = setInterval(() => this.beat(), time);\n\t\t\tthis.heartbeatTimer.unref();\n\n\t\t\t// Check expired heartbeats of remote nodes timer\n\t\t\tthis.checkNodesTimer = setInterval(() => this.checkRemoteNodes(), this.opts.heartbeatTimeout * 1000);\n\t\t\tthis.checkNodesTimer.unref();\n\n\t\t\t// Clean offline nodes timer\n\t\t\tthis.offlineTimer = setInterval(() => this.checkOfflineNodes(), 60 * 1000); // 1 min\n\t\t\tthis.offlineTimer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Stop heartbeat timers\n\t */\n\tstopHeartbeatTimers() {\n\t\tif (this.heartbeatTimer) {\n\t\t\tclearInterval(this.heartbeatTimer);\n\t\t\tthis.heartbeatTimer = null;\n\t\t}\n\n\t\tif (this.checkNodesTimer) {\n\t\t\tclearInterval(this.checkNodesTimer);\n\t\t\tthis.checkNodesTimer = null;\n\t\t}\n\n\t\tif (this.offlineTimer) {\n\t\t\tclearInterval(this.offlineTimer);\n\t\t\tthis.offlineTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Disable built-in Heartbeat logic. Used by TCP transporter\n\t */\n\tdisableHeartbeat() {\n\t\tthis.opts.heartbeatInterval = 0;\n\t\tthis.stopHeartbeatTimers();\n\t}\n\n\t/**\n\t * Heartbeat method.\n\t */\n\tbeat() {\n\t\t// Update the local CPU usage before sending heartbeat.\n\t\treturn this.localNode.updateLocalInfo(this.broker.getCpuUsage)\n\t\t\t.then(() => this.sendHeartbeat());\n\t}\n\n\t/**\n\t * Check all registered remote nodes are available.\n\t */\n\tcheckRemoteNodes() {\n\t\tif (this.disableHeartbeatChecks) return;\n\n\t\tconst now = Math.round(process.uptime());\n\t\tthis.registry.nodes.toArray().forEach(node => {\n\t\t\tif (node.local || !node.available) return;\n\t\t\tif (!node.lastHeartbeatTime) {\n\t\t\t\t// Még nem jött be az első heartbeat.\n\t\t\t\tnode.lastHeartbeatTime = now;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (now - node.lastHeartbeatTime > this.broker.options.heartbeatTimeout) {\n\t\t\t\tthis.logger.warn(`Heartbeat is not received from '${node.id}' node.`);\n\t\t\t\tthis.registry.nodes.disconnected(node.id, true);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Check offline nodes. Remove which is older than 10 minutes.\n\t */\n\tcheckOfflineNodes() {\n\t\tif (this.disableOfflineNodeRemoving || !this.opts.cleanOfflineNodesTimeout) return;\n\n\t\tconst now = Math.round(process.uptime());\n\t\tthis.registry.nodes.toArray().forEach(node => {\n\t\t\tif (node.local || node.available) return;\n\t\t\tif (!node.lastHeartbeatTime) {\n\t\t\t\t// Még nem jött be az első heartbeat.\n\t\t\t\tnode.lastHeartbeatTime = now;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (now - node.lastHeartbeatTime > this.opts.cleanOfflineNodesTimeout) {\n\t\t\t\tthis.logger.warn(`Removing offline '${node.id}' node from registry because it hasn't submitted heartbeat signal for 10 minutes.`);\n\t\t\t\tthis.registry.nodes.delete(node.id);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Heartbeat received from a remote node.\n\t *\n\t * @param {String} nodeID\n\t * @param {Object} payload\n\t */\n\theartbeatReceived(nodeID, payload) {\n\t\tconst node = this.registry.nodes.get(nodeID);\n\t\tif (node) {\n\t\t\tif (!node.available) {\n\t\t\t\t// Reconnected node. Request a fresh INFO\n\t\t\t\tthis.discoverNode(nodeID);\n\t\t\t} else {\n\t\t\t\tif (payload.seq != null && node.seq !== payload.seq) {\n\t\t\t\t\t// Some services changed on the remote node. Request a new INFO\n\t\t\t\t\tthis.discoverNode(nodeID);\n\t\t\t\t} else if (payload.instanceID != null && !node.instanceID.startsWith(payload.instanceID)) {\n\t\t\t\t\t// The node has been restarted. Request a new INFO\n\t\t\t\t\tthis.discoverNode(nodeID);\n\t\t\t\t} else {\n\t\t\t\t\tnode.heartbeat(payload);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Unknow node. Request an INFO\n\t\t\tthis.discoverNode(nodeID);\n\t\t}\n\t}\n\n\t/**\n\t * Received an INFO from a remote node.\n\t *\n\t * @param {String} nodeID\n\t * @param {Object} payload\n\t */\n\tprocessRemoteNodeInfo(nodeID, payload) {\n\t\treturn this.broker.registry.processNodeInfo(payload);\n\t}\n\n\t/**\n\t * Sending a local heartbeat to remote nodes.\n\t */\n\tsendHeartbeat() {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.sendHeartbeat(this.localNode);\n\t}\n\n\t/**\n\t * Discover a new or old node by nodeID\n\t *\n\t * @param {String} nodeID\n\t */\n\tdiscoverNode() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Discover all nodes (after connected)\n\t */\n\tdiscoverAllNodes() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Called when the local node is ready (transporter connected)\n\t */\n\tlocalNodeReady() {\n\t\t// Local node has started all local services. We send a new INFO packet\n\t\t// which contains the local services because we are ready to accept incoming requests.\n\t\treturn this.sendLocalNodeInfo();\n\t}\n\n\t/**\n\t * Local service registry has been changed. We should notify remote nodes.\n\t *\n\t * @param {String} nodeID\n\t */\n\tsendLocalNodeInfo() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Called when the local node disconnected.\n\t * You can clean it from the remote registry.\n\t */\n\tlocalNodeDisconnected() {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.sendDisconnectPacket();\n\t}\n\n\t/**\n\t * Called when a remote node disconnected (received DISCONNECT packet)\n\t * You can clean it from local registry.\n\t *\n\t * @param {String} nodeID\n\t * @param {Boolean} isUnexpected\n\t */\n\tremoteNodeDisconnected(nodeID, isUnexpected) {\n\t\treturn this.registry.nodes.disconnected(nodeID, isUnexpected);\n\t}\n\n}\n\nmodule.exports = BaseDiscoverer;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseDiscoverer = require(\"./base\");\n\n/**\n * Local (built-in) Discoverer class\n *\n * @class Discoverer\n */\nclass LocalDiscoverer extends BaseDiscoverer {\n\n\t/**\n\t * Creates an instance of Discoverer.\n\t *\n\t * @memberof LocalDiscoverer\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t}\n\n\t/**\n\t * Initialize Discoverer\n\t *\n\t * @param {any} registry\n\t *\n\t * @memberof LocalDiscoverer\n\t */\n\tinit(registry) {\n\t\tsuper.init(registry);\n\t}\n\n\t/**\n\t * Discover a new or old node.\n\t *\n\t * @param {String} nodeID\n\t */\n\tdiscoverNode(nodeID) {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.discoverNode(nodeID);\n\t}\n\n\t/**\n\t * Discover all nodes (after connected)\n\t */\n\tdiscoverAllNodes() {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.discoverNodes();\n\t}\n\n\t/**\n\t * Local service registry has been changed. We should notify remote nodes.\n\t *\n\t * @param {String} nodeID\n\t */\n\tsendLocalNodeInfo(nodeID) {\n\t\tif (!this.transit) return this.Promise.resolve();\n\n\t\tconst info = this.broker.getLocalNodeInfo();\n\t\treturn this.transit.sendNodeInfo(info, nodeID);\n\t}\n\n}\n\nmodule.exports = LocalDiscoverer;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { BrokerOptionsError } = require(\"../../errors\");\nconst { isObject, isString } = require(\"../../utils\");\n\nconst Discoverers = {\n\tBase: require(\"./base\"),\n\tLocal: require(\"./local\"),\n\tEtcd3: require(\"./etcd3\"),\n\tRedis: require(\"./redis\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Discoverers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Discoverers[n];\n}\n\n/**\n * Resolve discoverer by name\n *\n * @param {object|string} opt\n * @returns {Discoverer}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Discoverers.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet DiscovererClass = getByName(opt);\n\t\tif (DiscovererClass)\n\t\t\treturn new DiscovererClass();\n\n\t\tif (opt.startsWith(\"redis://\"))\n\t\t\treturn new Discoverers.Redis(opt);\n\n\t\tif (opt.startsWith(\"etcd3://\"))\n\t\t\treturn new Discoverers.Etcd3(opt);\n\n\t\tthrow new BrokerOptionsError(`Invalid Discoverer type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet DiscovererClass = getByName(opt.type || \"Local\");\n\t\tif (DiscovererClass)\n\t\t\treturn new DiscovererClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid Discoverer type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn new Discoverers.Local();\n}\n\nfunction register(name, value) {\n\tDiscoverers[name] = value;\n}\n\nmodule.exports = Object.assign(Discoverers, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Node class\n *\n * @class Node\n */\nclass Node {\n\t/**\n\t * Creates an instance of Node.\n\t *\n\t * @param {String} id\n\t *\n\t * @memberof Node\n\t */\n\tconstructor(id) {\n\t\tthis.id = id;\n\t\tthis.instanceID = null;\n\t\tthis.available = true;\n\t\tthis.local = false;\n\t\tthis.lastHeartbeatTime = Math.round(process.uptime());\n\t\tthis.config = {};\n\t\tthis.client = {};\n\t\tthis.metadata = null;\n\n\t\tthis.ipList = null;\n\t\tthis.port = null;\n\t\tthis.hostname = null;\n\t\tthis.udpAddress = null;\n\n\t\tthis.rawInfo = null;\n\t\tthis.services = [];\n\n\t\tthis.cpu = null;\n\t\tthis.cpuSeq = null;\n\n\t\tthis.seq = 0;\n\t\tthis.offlineSince = null;\n\t}\n\n\t/**\n\t * Update properties\n\t *\n\t * @param {object} payload\n\t * @param {boolean} isReconnected\n\t * @memberof Node\n\t */\n\tupdate(payload, isReconnected) {\n\t\t// Update properties\n\t\tthis.metadata = payload.metadata;\n\t\tthis.ipList = payload.ipList;\n\t\tthis.hostname = payload.hostname;\n\t\tthis.port = payload.port;\n\t\tthis.client = payload.client || {};\n\t\tthis.config = payload.config || {};\n\t\tthis.instanceID = payload.instanceID;\n\n\t\t// Process services & events\n\t\tthis.services = payload.services;\n\t\tthis.rawInfo = payload;\n\n\t\tconst newSeq = payload.seq || 1;\n\t\tif (newSeq > this.seq || isReconnected) {\n\t\t\tthis.seq = newSeq;\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Update local properties.\n\t *\n\t * @memberof Node\n\t * @param {Function} cpuUsage\n\t */\n\tupdateLocalInfo(cpuUsage) {\n\t\treturn cpuUsage().then(res => {\n\t\t\tconst newVal = Math.round(res.avg);\n\t\t\tif (this.cpu != newVal) {\n\t\t\t\tthis.cpu = newVal;\n\t\t\t\tthis.cpuSeq++;\n\t\t\t}\n\t\t}).catch(() => { /* silent */ });\n\t}\n\n\t/**\n\t * Update heartbeat properties\n\t *\n\t * @param {any} payload\n\t * @memberof Node\n\t */\n\theartbeat(payload) {\n\t\tif (!this.available) {\n\t\t\tthis.available = true;\n\t\t\tthis.offlineSince = null;\n\t\t}\n\n\t\tif (payload.cpu != null) {\n\t\t\tthis.cpu = payload.cpu;\n\t\t\tthis.cpuSeq = payload.cpuSeq || 1;\n\t\t}\n\n\t\tthis.lastHeartbeatTime = Math.round(process.uptime());\n\t}\n\n\t/**\n\t * Node disconnected\n\t *\n\t * @memberof Node\n\t */\n\tdisconnected() {\n\t\tif (this.available) {\n\t\t\tthis.offlineSince = Math.round(process.uptime());\n\t\t\tthis.seq++;\n\t\t}\n\n\t\tthis.available = false;\n\t}\n}\n\nmodule.exports = Node;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst os \t\t\t= require(\"os\");\nconst Node \t\t\t= require(\"./node\");\nconst { getIpList } = require(\"../utils\");\n\n/**\n * Catalog for nodes\n *\n * @class NodeCatalog\n */\nclass NodeCatalog {\n\n\t/**\n\t * Creates an instance of NodeCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t *\n\t * @memberof NodeCatalog\n\t */\n\tconstructor(registry, broker) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\n\t\tthis.nodes = new Map();\n\n\t\tthis.createLocalNode();\n\t}\n\n\t/**\n\t * Create local node with local information\n\t *\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\tcreateLocalNode() {\n\t\tconst node = new Node(this.broker.nodeID);\n\t\tnode.local = true;\n\t\tnode.ipList = getIpList();\n\t\tnode.instanceID = this.broker.instanceID;\n\t\tnode.hostname = os.hostname();\n\t\tnode.client = {\n\t\t\ttype: \"nodejs\",\n\t\t\tversion: this.broker.MOLECULER_VERSION,\n\t\t\tlangVersion: process.version\n\t\t};\n\t\tnode.metadata = this.broker.metadata;\n\t\tnode.seq = 1;\n\n\t\tthis.add(node.id, node);\n\n\t\tthis.localNode = node;\n\t\treturn node;\n\t}\n\n\t/**\n\t * Add a new node\n\t *\n\t * @param {String} id\n\t * @param {any} node\n\t * @memberof NodeCatalog\n\t */\n\tadd(id, node) {\n\t\tthis.nodes.set(id, node);\n\t}\n\n\t/**\n\t * Check a node exist by nodeID\n\t *\n\t * @param {String} id\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\thas(id) {\n\t\treturn this.nodes.has(id);\n\t}\n\n\t/**\n\t * Get a node by nodeID\n\t *\n\t * @param {String} id\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\tget(id) {\n\t\treturn this.nodes.get(id);\n\t}\n\n\t/**\n\t * Delete a node by nodeID\n\t *\n\t * @param {String} id\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\tdelete(id) {\n\t\treturn this.nodes.delete(id);\n\t}\n\n\t/**\n\t * Get count of all registered nodes\n\t */\n\tcount() {\n\t\treturn this.nodes.size;\n\t}\n\n\t/**\n\t * Get count of online nodes\n\t */\n\tonlineCount() {\n\t\tlet count = 0;\n\t\tthis.nodes.forEach(node => {\n\t\t\tif (node.available)\n\t\t\t\tcount++;\n\t\t});\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Process incoming INFO packet payload\n\t *\n\t * @param {any} payload\n\t * @memberof NodeCatalog\n\t */\n\tprocessNodeInfo(payload) {\n\t\tconst nodeID = payload.sender;\n\t\t//let oldNode;\n\t\tlet node = this.get(nodeID);\n\t\tlet isNew = false;\n\t\tlet isReconnected = false;\n\n\t\tif (!node) {\n\t\t\tisNew = true;\n\t\t\tnode = new Node(nodeID);\n\n\t\t\tthis.add(nodeID, node);\n\t\t} else if (!node.available) {\n\t\t\tisReconnected = true;\n\t\t\tnode.lastHeartbeatTime = Math.round(process.uptime());\n\t\t\tnode.available = true;\n\t\t\tnode.offlineSince = null;\n\t\t}\n\n\t\t// Update instance\n\t\tconst needRegister = node.update(payload, isReconnected);\n\n\t\t// Refresh services if 'seq' is greater or it is a reconnected node\n\t\tif (needRegister && node.services) {\n\t\t\tthis.registry.registerServices(node, node.services);\n\t\t}\n\n\t\t// Local notifications\n\t\tif (isNew) {\n\t\t\tthis.broker.broadcastLocal(\"$node.connected\", { node, reconnected: false });\n\t\t\tthis.logger.info(`Node '${nodeID}' connected.`);\n\t\t\tthis.registry.updateMetrics();\n\t\t} else if (isReconnected) {\n\t\t\tthis.broker.broadcastLocal(\"$node.connected\", { node, reconnected: true });\n\t\t\tthis.logger.info(`Node '${nodeID}' reconnected.`);\n\t\t\tthis.registry.updateMetrics();\n\t\t} else {\n\t\t\tthis.broker.broadcastLocal(\"$node.updated\", { node });\n\t\t\tthis.logger.debug(`Node '${nodeID}' updated.`);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Disconnected a node\n\t *\n\t * @param {String} nodeID\n\t * @param {Boolean} isUnexpected\n\t * @memberof NodeCatalog\n\t */\n\tdisconnected(nodeID, isUnexpected) {\n\t\tlet node = this.get(nodeID);\n\t\tif (node && node.available) {\n\t\t\tnode.disconnected(isUnexpected);\n\n\t\t\tthis.registry.unregisterServicesByNode(node.id);\n\n\t\t\tthis.broker.broadcastLocal(\"$node.disconnected\", { node, unexpected: !!isUnexpected });\n\n\t\t\tthis.registry.updateMetrics();\n\n\t\t\tthis.logger.warn(`Node '${node.id}' disconnected${isUnexpected ? \" unexpectedly\" : \"\"}.`);\n\n\t\t\tif (this.broker.transit)\n\t\t\t\tthis.broker.transit.removePendingRequestByNodeID(nodeID);\n\t\t}\n\t}\n\n\n\t/**\n\t * Get a node list\n\t *\n\t * @param {Object} {onlyAvailable = false, withServices = false}\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\tlist({ onlyAvailable = false, withServices = false }) {\n\t\tlet res = [];\n\t\tthis.nodes.forEach(node => {\n\t\t\tif (onlyAvailable && !node.available)\n\t\t\t\treturn;\n\n\t\t\tif (withServices)\n\t\t\t\tres.push(_.omit(node, [\"rawInfo\"]));\n\t\t\telse\n\t\t\t\tres.push(_.omit(node, [\"services\", \"rawInfo\"]));\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Get a copy from node list.\n\t */\n\ttoArray() {\n\t\treturn Array.from(this.nodes.values());\n\t}\n}\n\nmodule.exports = NodeCatalog;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Service class\n *\n * @class ServiceItem\n */\nclass ServiceItem {\n\n\t/**\n\t * Creates an instance of ServiceItem.\n\t *\n\t * @param {Node} node\n\t * @param {Object} service\n\t * @param {Boolean} local\n\t * @memberof ServiceItem\n\t */\n\tconstructor(node, service, local) {\n\t\tthis.node = node;\n\t\tthis.name = service.name;\n\t\tthis.fullName = service.fullName;\n\t\tthis.version = service.version;\n\t\tthis.settings = service.settings;\n\t\tthis.metadata = service.metadata || {};\n\n\t\tthis.local = !!local;\n\n\t\tthis.actions = {};\n\t\tthis.events = {};\n\t}\n\n\t/**\n\t * Check the service equals params\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof ServiceItem\n\t */\n\tequals(fullName, nodeID) {\n\t\treturn this.fullName == fullName && (nodeID == null || this.node.id == nodeID);\n\t}\n\n\t/**\n\t * Update service properties\n\t *\n\t * @param {any} svc\n\t * @memberof ServiceItem\n\t */\n\tupdate(svc) {\n\t\tthis.fullName = svc.fullName;\n\t\tthis.version = svc.version;\n\t\tthis.settings = svc.settings;\n\t\tthis.metadata = svc.metadata || {};\n\t}\n\n\t/**\n\t * Add action to service\n\t *\n\t * @param {any} action\n\t * @memberof ServiceItem\n\t */\n\taddAction(action) {\n\t\tthis.actions[action.name] = action;\n\t}\n\n\t/**\n\t * Add event to service\n\t *\n\t * @param {any} event\n\t * @memberof ServiceItem\n\t */\n\taddEvent(event) {\n\t\tthis.events[event.name] = event;\n\t}\n}\n\nmodule.exports = ServiceItem;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst ServiceItem = require(\"./service-item\");\nconst { removeFromArray } = require(\"../utils\");\n\n/**\n * Catalog for services\n *\n * @class ServiceCatalog\n */\nclass ServiceCatalog {\n\n\t/**\n\t * Creates an instance of ServiceCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @memberof ServiceCatalog\n\t */\n\tconstructor(registry, broker) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\n\t\tthis.services = [];\n\t}\n\n\t/**\n\t * Add a new service\n\t *\n\t * @param {Node} node\n\t * @param {Object} service\n\t * @param {Boolean} local\n\t *\n\t * @returns {ServiceItem}\n\t *\n\t * @memberof ServiceCatalog\n\t */\n\tadd(node, service, local) {\n\t\tconst item = new ServiceItem(node, service, local);\n\t\tthis.services.push(item);\n\t\treturn item;\n\t}\n\n\t/**\n\t * Check the service is exist\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof ServiceCatalog\n\t */\n\thas(fullName, nodeID) {\n\t\treturn this.services.find(svc => svc.equals(fullName, nodeID)) != null;\n\t}\n\n\t/**\n\t * Get a service by fullName & nodeID\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof ServiceCatalog\n\t */\n\tget(fullName, nodeID) {\n\t\treturn this.services.find(svc => svc.equals(fullName, nodeID));\n\t}\n\n\t/**\n\t * Get a filtered list of services with actions\n\t *\n\t * @param {Object} {onlyLocal = false,  onlyAvailable = false, skipInternal = false, withActions = false, withEvents = false, grouping = false}\n\t * @returns {Array}\n\t *\n\t * @memberof Registry\n\t */\n\tlist({ onlyLocal = false, onlyAvailable = false, skipInternal = false, withActions = false, withEvents = false, grouping = false }) {\n\t\tlet res = [];\n\t\tthis.services.forEach(service => {\n\t\t\tif (skipInternal && /^\\$/.test(service.name))\n\t\t\t\treturn;\n\n\t\t\tif (onlyLocal && !service.local)\n\t\t\t\treturn;\n\n\t\t\tif (onlyAvailable && !service.node.available)\n\t\t\t\treturn;\n\n\t\t\tlet item;\n\t\t\tif (grouping)\n\t\t\t\titem = res.find(svc => svc.fullName == service.fullName);\n\n\t\t\tif (!item) {\n\t\t\t\tlet item = {\n\t\t\t\t\tname: service.name,\n\t\t\t\t\tversion: service.version,\n\t\t\t\t\tfullName: service.fullName,\n\t\t\t\t\tsettings: service.settings,\n\t\t\t\t\tmetadata: service.metadata,\n\n\t\t\t\t\tlocal: service.local,\n\t\t\t\t\tavailable: service.node.available,\n\t\t\t\t};\n\n\t\t\t\tif (grouping)\n\t\t\t\t\titem.nodes = [service.node.id];\n\t\t\t\telse\n\t\t\t\t\titem.nodeID = service.node.id;\n\n\t\t\t\tif (withActions) {\n\t\t\t\t\titem.actions = {};\n\n\t\t\t\t\t_.forIn(service.actions, action => {\n\t\t\t\t\t\tif (action.protected) return;\n\n\t\t\t\t\t\titem.actions[action.name] = _.omit(action, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (withEvents) {\n\t\t\t\t\titem.events = {};\n\n\t\t\t\t\t_.forIn(service.events, event => {\n\t\t\t\t\t\t// Skip internal event handlers\n\t\t\t\t\t\tif (/^\\$/.test(event.name)) return;\n\n\t\t\t\t\t\titem.events[event.name] = _.omit(event, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tres.push(item);\n\n\t\t\t} else {\n\t\t\t\tif (item.nodes.indexOf(service.node.id) === -1)\n\t\t\t\t\titem.nodes.push(service.node.id);\n\t\t\t}\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Get local service list for INFO packet\n\t *\n\t * @returns {Object}\n\t * @memberof ServiceCatalog\n\t */\n\tgetLocalNodeServices() {\n\t\tlet res = [];\n\t\tthis.services.forEach(service => {\n\t\t\tif (!service.local)\n\t\t\t\treturn;\n\n\t\t\tlet item = {\n\t\t\t\tname: service.name,\n\t\t\t\tversion: service.version,\n\t\t\t\tfullName: service.fullName,\n\t\t\t\tsettings: service.settings,\n\t\t\t\tmetadata: service.metadata,\n\t\t\t\tdependencies: service.dependencies\n\t\t\t};\n\n\t\t\titem.actions = {};\n\n\t\t\t_.forIn(service.actions, action => {\n\t\t\t\tif (action.protected) return;\n\n\t\t\t\titem.actions[action.name] = _.omit(action, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t});\n\n\t\t\titem.events = {};\n\n\t\t\t_.forIn(service.events, event => {\n\t\t\t\t// Leave internal event handlers, because it can be used for internal events.\n\t\t\t\t//if (/^\\$/.test(event.name)) return;\n\n\t\t\t\titem.events[event.name] = _.omit(event, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t});\n\n\t\t\tres.push(item);\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Remove all endpoints by nodeID\n\t *\n\t * @param {String} nodeID\n\t * @memberof ServiceCatalog\n\t */\n\tremoveAllByNodeID(nodeID) {\n\t\t_.remove(this.services, service => {\n\t\t\tif (service.node.id == nodeID) {\n\t\t\t\tthis.registry.actions.removeByService(service);\n\t\t\t\tthis.registry.events.removeByService(service);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Remove endpoint by fullName & nodeID\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @memberof ServiceCatalog\n\t */\n\tremove(fullName, nodeID) {\n\t\tlet service = this.get(fullName, nodeID);\n\t\tif (service) {\n\t\t\tthis.registry.actions.removeByService(service);\n\t\t\tthis.registry.events.removeByService(service);\n\n\t\t\tremoveFromArray(this.services, service);\n\t\t}\n\t}\n}\n\nmodule.exports = ServiceCatalog;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { MoleculerServerError } = require(\"../errors\");\n\n/**\n * Endpoint list class\n *\n * @class EndpointList\n */\nclass EndpointList {\n\n\t/**\n\t * Creates an instance of EndpointList.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {String} name\n\t * @param {String} group\n\t * @param {EndPointClass} EndPointFactory\n\t * @param {StrategyClass} StrategyFactory\n\t * @param {Object?} strategyOptions\n\t * @memberof EndpointList\n\t */\n\tconstructor(registry, broker, name, group, EndPointFactory, StrategyFactory, strategyOptions) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\t\tthis.strategy = new StrategyFactory(registry, broker, strategyOptions);\n\t\tthis.name = name;\n\t\tthis.group = group;\n\t\tthis.internal = name.startsWith(\"$\");\n\n\t\tthis.EndPointFactory = EndPointFactory;\n\n\t\tthis.endpoints = [];\n\n\t\tthis.localEndpoints = [];\n\t}\n\n\t/**\n\t * Add a new endpoint\n\t *\n\t * @param {Node} node\n\t * @param {Service} service\n\t * @param {any} data\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tadd(node, service, data) {\n\t\tconst found = this.endpoints.find(ep => ep.node == node && ep.service.name == service.name);\n\t\tif (found) {\n\t\t\tfound.update(data);\n\t\t\treturn found;\n\t\t}\n\n\t\tconst ep = new this.EndPointFactory(this.registry, this.broker, node, service, data);\n\t\tthis.endpoints.push(ep);\n\n\t\tthis.setLocalEndpoints();\n\n\t\treturn ep;\n\t}\n\n\t/**\n\t * Get first endpoint\n\t *\n\t * @returns {Endpoint}\n\t * @memberof EndpointList\n\t */\n\tgetFirst() {\n\t\tif (this.endpoints.length > 0)\n\t\t\treturn this.endpoints[0];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Select next endpoint with balancer strategy\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @param {Context} ctx\n\t * @returns {Endpoint}\n\t * @memberof EndpointList\n\t */\n\tselect(list, ctx) {\n\t\tconst ret = this.strategy.select(list, ctx);\n\t\tif (!ret) {\n\t\t\t/* istanbul ignore next */\n\t\t\tthrow new MoleculerServerError(\"Strategy returned an invalid endpoint.\", 500, \"INVALID_ENDPOINT\", { strategy: typeof(this.strategy) });\n\t\t}\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Get next endpoint\n\t *\n\t * @param {Context} ctx\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tnext(ctx) {\n\t\t// No items\n\t\tif (this.endpoints.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// If internal (service), return the local always\n\t\tif (this.internal && this.hasLocal()) {\n\t\t\treturn this.nextLocal();\n\t\t}\n\n\t\t// Only 1 item\n\t\tif (this.endpoints.length === 1) {\n\t\t\t// No need to select a node, return the only one\n\t\t\tconst item = this.endpoints[0];\n\t\t\tif (item.isAvailable)\n\t\t\t\treturn item;\n\n\t\t\treturn null;\n\t\t}\n\n\t\t// Search local item\n\t\tif (this.registry.opts.preferLocal === true && this.hasLocal()) {\n\t\t\tconst ep = this.nextLocal(ctx);\n\t\t\tif (ep && ep.isAvailable)\n\t\t\t\treturn ep;\n\t\t}\n\n\t\tconst epList = this.endpoints.filter(ep => ep.isAvailable);\n\t\tif (epList.length == 0)\n\t\t\treturn null;\n\n\t\treturn this.select(epList, ctx);\n\t}\n\n\t/**\n\t * Get next local endpoint\n\t *\n\t * @param {Context} ctx\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tnextLocal(ctx) {\n\t\t// No items\n\t\tif (this.localEndpoints.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Only 1 item\n\t\tif (this.localEndpoints.length === 1) {\n\t\t\t// No need to select a node, return the only one\n\t\t\tconst item = this.localEndpoints[0];\n\t\t\tif (item.isAvailable)\n\t\t\t\treturn item;\n\n\t\t\treturn null;\n\t\t}\n\n\t\tconst epList = this.localEndpoints.filter(ep => ep.isAvailable);\n\t\tif (epList.length == 0)\n\t\t\treturn null;\n\n\t\treturn this.select(epList, ctx);\n\t}\n\n\t/**\n\t * Check there is available endpoint\n\t *\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\thasAvailable() {\n\t\treturn this.endpoints.find(ep => ep.isAvailable) != null;\n\t}\n\n\t/**\n\t * Check there is local endpoint\n\t *\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\thasLocal() {\n\t\treturn this.localEndpoints.length > 0;\n\t}\n\n\t/**\n\t * Set local endpoint\n\t *\n\t * @memberof EndpointList\n\t */\n\tsetLocalEndpoints() {\n\t\tthis.localEndpoints = this.endpoints.filter(ep => ep.local);\n\t}\n\n\t/**\n\t * Get count of endpoints\n\t *\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tcount() {\n\t\treturn this.endpoints.length;\n\t}\n\n\t/**\n\t * Get endpoint on a specified node\n\t *\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tgetEndpointByNodeID(nodeID) {\n\t\tconst ep = this.endpoints.find(ep => ep.id == nodeID);\n\t\tif (ep && ep.isAvailable)\n\t\t\treturn ep;\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Check nodeID in the endpoint list\n\t *\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\thasNodeID(nodeID) {\n\t\treturn this.endpoints.find(ep => ep.id == nodeID) != null;\n\t}\n\n\t/**\n\t * Remove all endpoints by service\n\t *\n\t * @param {ServiceItem} service\n\t * @memberof EndpointList\n\t */\n\tremoveByService(service) {\n\t\t_.remove(this.endpoints, ep => {\n\t\t\tif (ep.service == service) {\n\t\t\t\tep.destroy();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tthis.setLocalEndpoints();\n\t}\n\n\t/**\n\t * Remove endpoints by node ID\n\t *\n\t * @param {String} nodeID\n\t * @memberof EndpointList\n\t */\n\tremoveByNodeID(nodeID) {\n\t\t_.remove(this.endpoints, ep => {\n\t\t\tif (ep.id == nodeID) {\n\t\t\t\tep.destroy();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tthis.setLocalEndpoints();\n\t}\n}\n\nmodule.exports = EndpointList;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Endpoint class\n *\n * @class Endpoint\n */\nclass Endpoint {\n\t/**\n\t * Creates an instance of Endpoint.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Node} node\n\t * @memberof Endpoint\n\t */\n\tconstructor(registry, broker, node) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\n\t\tthis.id = node.id;\n\t\tthis.node = node;\n\n\t\tthis.local = node.id === broker.nodeID;\n\t\tthis.state = true;\n\t}\n\n\tdestroy() {\n\n\t}\n\n\t/**\n\t * Get availability\n\t *\n\t * @readonly\n\t * @memberof Endpoint\n\t */\n\tget isAvailable() {\n\t\treturn this.state;\n\t}\n\n\tupdate() {\n\n\t}\n}\n\nmodule.exports = Endpoint;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Endpoint = require(\"./endpoint\");\n\n/**\n * Endpoint class for events\n *\n * @class EventEndpoint\n * @extends {Endpoint}\n */\nclass EventEndpoint extends Endpoint {\n\n\t/**\n\t * Creates an instance of EventEndpoint.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Node} node\n\t * @param {Service} service\n\t * @param {any} event\n\t * @memberof EventEndpoint\n\t */\n\tconstructor(registry, broker, node, service, event) {\n\t\tsuper(registry, broker, node);\n\n\t\tthis.service = service;\n\t\tthis.event = event;\n\t}\n\n\t/**\n\t * Update properties\n\t *\n\t * @param {any} event\n\t * @memberof EventEndpoint\n\t */\n\tupdate(event) {\n\t\tthis.event = event;\n\t}\n}\n\nmodule.exports = EventEndpoint;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst utils\t\t\t= require(\"../utils\");\nconst Strategies \t= require(\"../strategies\");\nconst EndpointList \t= require(\"./endpoint-list\");\nconst EventEndpoint = require(\"./endpoint-event\");\n\n/**\n * Catalog for events\n *\n * @class EventCatalog\n */\nclass EventCatalog {\n\n\t/**\n\t * Creates an instance of EventCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {any} StrategyFactory\n\t * @memberof EventCatalog\n\t */\n\tconstructor(registry, broker, StrategyFactory) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\t\tthis.StrategyFactory = StrategyFactory;\n\n\t\tthis.events = [];\n\n\t\tthis.EndpointFactory = EventEndpoint;\n\t}\n\n\t/**\n\t * Add a new event\n\t *\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {any} event\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tadd(node, service, event) {\n\t\tconst eventName = event.name;\n\t\tconst groupName = event.group || service.name;\n\t\tlet list = this.get(eventName, groupName);\n\t\tif (!list) {\n\t\t\tconst strategyFactory = event.strategy ? (Strategies.resolve(event.strategy) || this.StrategyFactory) : this.StrategyFactory;\n\t\t\tconst strategyOptions = event.strategyOptions ? event.strategyOptions : this.registry.opts.strategyOptions;\n\t\t\t// Create a new EndpointList\n\t\t\tlist = new EndpointList(this.registry, this.broker, eventName, groupName, this.EndpointFactory, strategyFactory, strategyOptions);\n\t\t\tthis.events.push(list);\n\t\t}\n\n\t\tlist.add(node, service, event);\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * Get an event by name (and group name)\n\t *\n\t * @param {String} eventName\n\t * @param {String} groupName\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tget(eventName, groupName) {\n\t\treturn this.events.find(list => list.name == eventName && list.group == groupName);\n\t}\n\n\t/**\n\t * Get balanced endpoint for event\n\t *\n\t * @param {String} eventName\n\t * @param {String|Array?} groups\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tgetBalancedEndpoints(eventName, groups) {\n\t\tconst res = [];\n\n\t\tthis.events.forEach(list => {\n\t\t\tif (!utils.match(eventName, list.name)) return;\n\t\t\tif (groups == null || groups.length == 0 || groups.indexOf(list.group) != -1) {\n\t\t\t\t// Use built-in balancer, get the next endpoint\n\t\t\t\tconst ep = list.next();\n\t\t\t\tif (ep && ep.isAvailable)\n\t\t\t\t\tres.push([ep, list.group]);\n\t\t\t}\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Get all groups for event\n\t *\n\t * @param {String} eventName\n\t * @returns Array<String>\n\t * @memberof EventCatalog\n\t */\n\tgetGroups(eventName) {\n\t\treturn _.uniq(this.events.filter(list => utils.match(eventName, list.name)).map(item => item.group));\n\t}\n\n\t/**\n\t * Get all endpoints for event\n\t *\n\t * @param {String} eventName\n\t * @param {Array<String>?} groupNames\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tgetAllEndpoints(eventName, groupNames) {\n\t\tconst res = [];\n\t\tthis.events.forEach(list => {\n\t\t\tif (!utils.match(eventName, list.name)) return;\n\t\t\tif (groupNames == null || groupNames.length == 0 || groupNames.indexOf(list.group) !== -1) {\n\t\t\t\tlist.endpoints.forEach(ep => {\n\t\t\t\t\tif (ep.isAvailable)\n\t\t\t\t\t\tres.push(ep);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn _.uniqBy(res, \"id\");\n\t}\n\n\t/**\n\t * Call local service handlers\n\t *\n\t * @param {String} eventName\n\t * @param {any} payload\n\t * @param {Array<String>?} groupNames\n\t * @param {String} nodeID\n\t * @param {boolean} broadcast\n\t * @returns {Promise<any>}\n\t *\n\t * @memberof EventCatalog\n\t */\n\temitLocalServices(ctx) {\n\t\tconst isBroadcast = [\"broadcast\", \"broadcastLocal\"].indexOf(ctx.eventType) !== -1;\n\t\tconst sender = ctx.nodeID;\n\n\t\tconst promises = [];\n\n\t\tthis.events.forEach(list => {\n\t\t\tif (!utils.match(ctx.eventName, list.name)) return;\n\t\t\tif (ctx.eventGroups == null || ctx.eventGroups.length == 0 || ctx.eventGroups.indexOf(list.group) !== -1) {\n\t\t\t\tif (isBroadcast) {\n\t\t\t\t\tlist.endpoints.forEach(ep => {\n\t\t\t\t\t\tif (ep.local && ep.event.handler) {\n\t\t\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\t\t\tnewCtx.nodeID = sender;\n\t\t\t\t\t\t\tpromises.push(this.callEventHandler(newCtx));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst ep = list.nextLocal();\n\t\t\t\t\tif (ep && ep.event.handler) {\n\t\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\t\tnewCtx.nodeID = sender;\n\t\t\t\t\t\tpromises.push(this.callEventHandler(newCtx));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this.broker.Promise.all(promises);\n\t}\n\n\t/**\n\t * Call local event handler and handles unhandled promise rejections.\n\t *\n\t * @param {Context} ctx\n\t *\n\t * @memberof EventCatalog\n\t */\n\tcallEventHandler(ctx) {\n\t\treturn ctx.endpoint.event.handler(ctx);\n\t}\n\n\t/**\n\t * Remove endpoints by service\n\t *\n\t * @param {ServiceItem} service\n\t * @memberof EventCatalog\n\t */\n\tremoveByService(service) {\n\t\tthis.events.forEach(list => {\n\t\t\tlist.removeByService(service);\n\t\t});\n\t}\n\n\t/**\n\t * Remove endpoint by name & nodeId\n\t *\n\t * @param {String} eventName\n\t * @param {String} nodeID\n\t * @memberof EventCatalog\n\t */\n\tremove(eventName, nodeID) {\n\t\tthis.events.forEach(list => {\n\t\t\tif (list.name == eventName)\n\t\t\t\tlist.removeByNodeID(nodeID);\n\t\t});\n\t}\n\n\t/**\n\t * Get a filtered list of events\n\t *\n\t * @param {Object} {onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false}\n\t * @returns {Array}\n\t *\n\t * @memberof EventCatalog\n\t */\n\tlist({ onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false }) {\n\t\tlet res = [];\n\n\t\tthis.events.forEach(list => {\n\t\t\t/* istanbul ignore next */\n\t\t\tif (skipInternal && /^\\$/.test(list.name))\n\t\t\t\treturn;\n\n\t\t\tif (onlyLocal && !list.hasLocal())\n\t\t\t\treturn;\n\n\t\t\tif (onlyAvailable && !list.hasAvailable())\n\t\t\t\treturn;\n\n\t\t\tlet item = {\n\t\t\t\tname: list.name,\n\t\t\t\tgroup: list.group,\n\t\t\t\tcount: list.count(),\n\t\t\t\t//service: list.service,\n\t\t\t\thasLocal: list.hasLocal(),\n\t\t\t\tavailable: list.hasAvailable()\n\t\t\t};\n\n\t\t\tif (item.count > 0) {\n\t\t\t\tconst ep = list.endpoints[0];\n\t\t\t\tif (ep)\n\t\t\t\t\titem.event = _.omit(ep.event, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t}\n\n\t\t\tif (withEndpoints) {\n\t\t\t\tif (item.count > 0) {\n\t\t\t\t\titem.endpoints = list.endpoints.map(ep => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnodeID: ep.node.id,\n\t\t\t\t\t\t\tstate: ep.state,\n\t\t\t\t\t\t\tavailable: ep.node.available,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tres.push(item);\n\t\t});\n\n\t\treturn res;\n\t}\n}\n\nmodule.exports = EventCatalog;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Endpoint = require(\"./endpoint\");\n\n/**\n * Endpoint class for actions\n *\n * @class ActionEndpoint\n * @extends {Endpoint}\n */\nclass ActionEndpoint extends Endpoint {\n\n\t/**\n\t * Creates an instance of ActionEndpoint.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {any} action\n\t * @memberof ActionEndpoint\n\t */\n\tconstructor(registry, broker, node, service, action) {\n\t\tsuper(registry, broker, node);\n\n\t\tthis.service = service;\n\t\tthis.action = action;\n\n\t\tthis.name = `${this.id}:${this.action.name}`;\n\t}\n\n\t/**\n\t * Update properties\n\t *\n\t * @param {any} action\n\t * @memberof ActionEndpoint\n\t */\n\tupdate(action) {\n\t\tthis.action = action;\n\t}\n}\n\nmodule.exports = ActionEndpoint;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst Strategies = require(\"../strategies\");\nconst EndpointList = require(\"./endpoint-list\");\nconst ActionEndpoint = require(\"./endpoint-action\");\n\n/**\n * Catalog class to store service actions\n *\n * @class ActionCatalog\n */\nclass ActionCatalog {\n\n\t/**\n\t * Creates an instance of ActionCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Strategy} StrategyFactory\n\t * @memberof ActionCatalog\n\t */\n\tconstructor(registry, broker, StrategyFactory) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\t\tthis.StrategyFactory = StrategyFactory;\n\n\t\tthis.actions = new Map();\n\n\t\tthis.EndpointFactory = ActionEndpoint;\n\t}\n\n\t/**\n\t * Add an action\n\t *\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {Action} action\n\t * @memberof ActionCatalog\n\t */\n\tadd(node, service, action) {\n\t\tlet list = this.actions.get(action.name);\n\t\tif (!list) {\n\t\t\tconst strategyFactory = action.strategy ? (Strategies.resolve(action.strategy) || this.StrategyFactory) : this.StrategyFactory;\n\t\t\tconst strategyOptions = action.strategyOptions ? action.strategyOptions : this.registry.opts.strategyOptions;\n\t\t\t// Create a new EndpointList\n\t\t\tlist = new EndpointList(this.registry, this.broker, action.name, null, this.EndpointFactory, strategyFactory, strategyOptions);\n\t\t\tthis.actions.set(action.name, list);\n\t\t}\n\n\t\tlist.add(node, service, action);\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * Get action by name\n\t *\n\t * @param {String} actionName\n\t * @returns\n\t * @memberof ActionCatalog\n\t */\n\tget(actionName) {\n\t\treturn this.actions.get(actionName);\n\t}\n\n\t/**\n\t * Check the action is available (there is live endpoint)\n\t *\n\t * @param {String} actionName\n\t * @returns {Boolean}\n\t * @memberof ActionCatalog\n\t */\n\tisAvailable(actionName) {\n\t\tconst list = this.actions.get(actionName);\n\t\tif (list)\n\t\t\treturn list.hasAvailable();\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Remove all actions by service\n\t *\n\t * @param {ServiceItem} service\n\t * @memberof ActionCatalog\n\t */\n\tremoveByService(service) {\n\t\tthis.actions.forEach(list => {\n\t\t\tlist.removeByService(service);\n\t\t});\n\t}\n\n\t/**\n\t * Remove action by name & nodeID\n\t *\n\t * @param {String} actionName\n\t * @param {String} nodeID\n\t * @memberof ActionCatalog\n\t */\n\tremove(actionName, nodeID) {\n\t\tconst list = this.actions.get(actionName);\n\t\tif (list)\n\t\t\tlist.removeByNodeID(nodeID);\n\t}\n\n\t/**\n\t * Get a filtered list of actions\n\t *\n\t * @param {Object} {onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false}\n\t * @returns {Array}\n\t *\n\t * @memberof ActionCatalog\n\t */\n\tlist({ onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false }) {\n\t\tlet res = [];\n\n\t\tthis.actions.forEach((list, key) => {\n\t\t\tif (skipInternal && /^\\$/.test(key))\n\t\t\t\treturn;\n\n\t\t\tif (onlyLocal && !list.hasLocal())\n\t\t\t\treturn;\n\n\t\t\tif (onlyAvailable && !list.hasAvailable())\n\t\t\t\treturn;\n\n\t\t\tlet item = {\n\t\t\t\tname: key,\n\t\t\t\tcount: list.count(),\n\t\t\t\thasLocal: list.hasLocal(),\n\t\t\t\tavailable: list.hasAvailable()\n\t\t\t};\n\n\t\t\tif (item.count > 0) {\n\t\t\t\tconst ep = list.endpoints[0];\n\t\t\t\tif (ep)\n\t\t\t\t\titem.action = _.omit(ep.action, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t}\n\t\t\tif (item.action && item.action.protected === true) return;\n\n\t\t\tif (withEndpoints) {\n\t\t\t\tif (item.count > 0) {\n\t\t\t\t\titem.endpoints = list.endpoints.map(ep => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnodeID: ep.node.id,\n\t\t\t\t\t\t\tstate: ep.state,\n\t\t\t\t\t\t\tavailable: ep.node.available,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tres.push(item);\n\t\t});\n\n\t\treturn res;\n\t}\n}\n\nmodule.exports = ActionCatalog;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst utils = require(\"../utils\");\nconst Strategies = require(\"../strategies\");\nconst Discoverers = require(\"./discoverers\");\nconst NodeCatalog = require(\"./node-catalog\");\nconst ServiceCatalog = require(\"./service-catalog\");\nconst EventCatalog = require(\"./event-catalog\");\nconst ActionCatalog = require(\"./action-catalog\");\nconst ActionEndpoint = require(\"./endpoint-action\");\nconst { METRIC }\t\t= require(\"../metrics\");\n\n/**\n * Service Registry\n *\n * @class Registry\n */\nclass Registry {\n\n\t/**\n\t * Creates an instance of Registry.\n\t *\n\t * @param {any} broker\n\t * @memberof Registry\n\t */\n\tconstructor(broker) {\n\t\tthis.broker = broker;\n\t\tthis.metrics = broker.metrics;\n\t\tthis.logger = broker.getLogger(\"registry\");\n\n\t\tthis.opts = Object.assign({}, broker.options.registry);\n\n\t\tthis.StrategyFactory = Strategies.resolve(this.opts.strategy);\n\t\tthis.logger.info(`Strategy: ${this.StrategyFactory.name}`);\n\n\t\tthis.discoverer = Discoverers.resolve(this.opts.discoverer);\n\t\tthis.logger.info(`Discoverer: ${this.broker.getConstructorName(this.discoverer)}`);\n\n\t\tthis.nodes = new NodeCatalog(this, broker);\n\t\tthis.services = new ServiceCatalog(this, broker);\n\t\tthis.actions = new ActionCatalog(this, broker, this.StrategyFactory);\n\t\tthis.events = new EventCatalog(this, broker, this.StrategyFactory);\n\n\t\tthis.registerMoleculerMetrics();\n\t\tthis.updateMetrics();\n\t}\n\n\tinit(broker) {\n\t\tthis.discoverer.init(this);\n\t}\n\n\tstop() {\n\t\treturn this.discoverer.stop();\n\t}\n\n\t/**\n\t * Register Moleculer Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tif (!this.broker.isMetricsEnabled()) return;\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_NODES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered nodes\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_NODES_ONLINE_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of online nodes\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_SERVICES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered services\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"service\"], description: \"Number of service endpoints\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_ACTIONS_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered actions\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"action\"], description: \"Number of action endpoints\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_EVENTS_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered events\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"event\"], description: \"Number of event endpoints\" });\n\t}\n\n\t/**\n\t * Update metrics.\n\t */\n\tupdateMetrics() {\n\t\tif (!this.broker.isMetricsEnabled()) return;\n\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_NODES_TOTAL, this.nodes.count());\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_NODES_ONLINE_TOTAL, this.nodes.onlineCount());\n\n\t\tconst services = this.services.list({ grouping: true, onlyLocal: false, onlyAvailable: false, skipInternal: false, withActions: false, withEvents: false });\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_SERVICES_TOTAL, services.length);\n\t\tservices.forEach(svc => this.metrics.set(METRIC.MOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL, svc.nodes ? svc.nodes.length : 0, { service: svc.fullName }));\n\n\t\tconst actions = this.actions.list({ withEndpoints: true });\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_ACTIONS_TOTAL, actions.length);\n\t\tactions.forEach(item => this.metrics.set(METRIC.MOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL, item.endpoints ? item.endpoints.length : 0, { action: item.name }));\n\n\t\tconst events = this.events.list({ withEndpoints: true });\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_EVENTS_TOTAL, events.length);\n\t\tevents.forEach(item => this.metrics.set(METRIC.MOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL, item.endpoints ? item.endpoints.length : 0, { event: item.name }));\n\t}\n\n\t/**\n\t * Register local service\n\t *\n\t * @param {Service} svc\n\t * @memberof Registry\n\t */\n\tregisterLocalService(svc) {\n\t\tif (!this.services.has(svc.fullName, this.broker.nodeID)) {\n\t\t\tconst service = this.services.add(this.nodes.localNode, svc, true);\n\n\t\t\tif (svc.actions)\n\t\t\t\tthis.registerActions(this.nodes.localNode, service, svc.actions);\n\n\t\t\tif (svc.events)\n\t\t\t\tthis.registerEvents(this.nodes.localNode, service, svc.events);\n\n\t\t\tthis.nodes.localNode.services.push(service);\n\n\t\t\tthis.regenerateLocalRawInfo(this.broker.started);\n\n\t\t\tthis.logger.info(`'${svc.name}' service is registered.`);\n\n\t\t\tthis.broker.servicesChanged(true);\n\t\t\tthis.updateMetrics();\n\t\t}\n\t}\n\n\t/**\n\t * Register remote services\n\t *\n\t * @param {Nodeany} node\n\t * @param {Array} serviceList\n\t * @memberof Registry\n\t */\n\tregisterServices(node, serviceList) {\n\t\tserviceList.forEach(svc => {\n\t\t\tif (!svc.fullName)\n\t\t\t\tsvc.fullName = this.broker.ServiceFactory.getVersionedFullName(svc.name, svc.version);\n\n\t\t\tlet prevActions, prevEvents;\n\t\t\tlet service = this.services.get(svc.fullName, node.id);\n\t\t\tif (!service) {\n\t\t\t\tservice = this.services.add(node, svc, false);\n\t\t\t} else {\n\t\t\t\tprevActions = Object.assign({}, service.actions);\n\t\t\t\tprevEvents = Object.assign({}, service.events);\n\t\t\t\tservice.update(svc);\n\t\t\t}\n\n\t\t\t//Register actions\n\t\t\tif (svc.actions) {\n\t\t\t\tthis.registerActions(node, service, svc.actions);\n\t\t\t}\n\n\t\t\t// remove old actions which is not exist\n\t\t\tif (prevActions) {\n\t\t\t\t_.forIn(prevActions, (action, name) => {\n\t\t\t\t\tif (!svc.actions || !svc.actions[name]) {\n\t\t\t\t\t\tthis.unregisterAction(node, name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Register events\n\t\t\tif (svc.events) {\n\t\t\t\tthis.registerEvents(node, service, svc.events);\n\t\t\t}\n\n\t\t\t// remove old events which is not exist\n\t\t\tif (prevEvents) {\n\t\t\t\t_.forIn(prevEvents, (event, name) => {\n\t\t\t\t\tif (!svc.events || !svc.events[name]) {\n\t\t\t\t\t\tthis.unregisterEvent(node, name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// remove old services which is not exist in new serviceList\n\t\t// Please note! At first, copy the array because you can't remove items inside forEach\n\t\tconst prevServices = Array.from(this.services.services);\n\t\tprevServices.forEach(service => {\n\t\t\tif (service.node != node) return;\n\n\t\t\tlet exist = false;\n\t\t\tserviceList.forEach(svc => {\n\t\t\t\tif (service.equals(svc.fullName))\n\t\t\t\t\texist = true;\n\t\t\t});\n\n\t\t\t// This service is removed on remote node!\n\t\t\tif (!exist) {\n\t\t\t\tthis.unregisterService(service.fullName, node.id);\n\t\t\t}\n\t\t});\n\n\t\tthis.broker.servicesChanged(false);\n\t\tthis.updateMetrics();\n\t}\n\n\t/**\n\t * Check the action visiblity.\n\t *\n\t * \tAvailable values:\n\t * \t\t- \"published\" or `null`: public action and can be published via API Gateway\n\t * \t\t- \"public\": public action, can be called remotely but not published via API GW\n\t * \t\t- \"protected\": can be called from local services\n\t * \t\t- \"private\": can be called from internally via `this.actions.xy()` inside Service\n\t *\n\t * @param {*} action\n\t * @param {*} node\n\t * @returns\n\t * @memberof Registry\n\t */\n\tcheckActionVisibility(action, node) {\n\t\tif (action.visibility == null || action.visibility == \"published\" || action.visibility == \"public\")\n\t\t\treturn true;\n\n\t\tif (action.visibility == \"protected\" && node.local)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Register service actions\n\t *\n\t * @param {Node} node\n\t * @param {Service} service\n\t * @param {Object} actions\n\t * @memberof Registry\n\t */\n\tregisterActions(node, service, actions) {\n\t\t_.forIn(actions, action => {\n\n\t\t\tif (!this.checkActionVisibility(action, node))\n\t\t\t\treturn;\n\n\t\t\tif (node.local) {\n\t\t\t\taction.handler = this.broker.middlewares.wrapHandler(\"localAction\", action.handler, action);\n\t\t\t} else if (this.broker.transit) {\n\t\t\t\taction.handler = this.broker.middlewares.wrapHandler(\"remoteAction\", this.broker.transit.request.bind(this.broker.transit), { ...action, service });\n\t\t\t}\n\t\t\tif (this.broker.options.disableBalancer && this.broker.transit)\n\t\t\t\taction.remoteHandler = this.broker.middlewares.wrapHandler(\"remoteAction\", this.broker.transit.request.bind(this.broker.transit), { ...action, service });\n\n\t\t\tthis.actions.add(node, service, action);\n\t\t\tservice.addAction(action);\n\t\t});\n\t}\n\n\t/**\n\t * Create a local Endpoint for private actions\n\t *\n\t * @param {Action} action\n\t * @returns {ActionEndpoint}\n\t * @memberof Registry\n\t */\n\tcreatePrivateActionEndpoint(action) {\n\t\treturn new ActionEndpoint(this, this.broker, this.nodes.localNode, action.service, action);\n\t}\n\n\t/**\n\t * Check the service is exist\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns {Boolean}\n\t * @memberof Registry\n\t */\n\thasService(fullName, nodeID) {\n\t\treturn this.services.has(fullName, nodeID);\n\t}\n\n\t/**\n\t * Get endpoint list of action by name\n\t *\n\t * @param {String} actionName\n\t * @returns {EndpointList}\n\t * @memberof Registry\n\t */\n\tgetActionEndpoints(actionName) {\n\t\treturn this.actions.get(actionName);\n\t}\n\n\t/**\n\t * Get an endpoint of action on a specified node\n\t *\n\t * @param {String} actionName\n\t * @param {String} nodeID\n\t * @returns {Endpoint}\n\t * @memberof Registry\n\t */\n\tgetActionEndpointByNodeId(actionName, nodeID) {\n\t\tconst list = this.actions.get(actionName);\n\t\tif (list)\n\t\t\treturn list.getEndpointByNodeID(nodeID);\n\t}\n\n\t/**\n\t * Unregister service\n\t *\n\t * @param {String} fullName\n\t * @param {String?} nodeID\n\t * @memberof Registry\n\t */\n\tunregisterService(fullName, nodeID) {\n\t\tthis.services.remove(fullName, nodeID || this.broker.nodeID);\n\n\t\tif (!nodeID || nodeID == this.broker.nodeID) {\n\t\t\tthis.regenerateLocalRawInfo(true);\n\t\t}\n\t}\n\n\t/**\n\t * Unregister all services by nodeID\n\t *\n\t * @param {String} nodeID\n\t * @memberof Registry\n\t */\n\tunregisterServicesByNode(nodeID) {\n\t\tthis.services.removeAllByNodeID(nodeID);\n\t}\n\n\t/**\n\t * Unregister an action by node & name\n\t *\n\t * @param {Node} node\n\t * @param {String} actionName\n\t * @memberof Registry\n\t */\n\tunregisterAction(node, actionName) {\n\t\tthis.actions.remove(actionName, node.id);\n\t}\n\n\t/**\n\t * Register service events\n\t *\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {Object} events\n\t * @memberof Registry\n\t */\n\tregisterEvents(node, service, events) {\n\t\t_.forIn(events, event => {\n\n\t\t\tif (node.local)\n\t\t\t\tevent.handler = this.broker.middlewares.wrapHandler(\"localEvent\", event.handler, event);\n\n\t\t\tthis.events.add(node, service, event);\n\t\t\tservice.addEvent(event);\n\t\t});\n\t}\n\n\t/**\n\t * Unregister event by name & node\n\t *\n\t * @param {Node} node\n\t * @param {String} eventName\n\t * @memberof Registry\n\t */\n\tunregisterEvent(node, eventName) {\n\t\tthis.events.remove(eventName, node.id);\n\t}\n\n\t/**\n\t * Generate local raw info for INFO packet\n\t *\n\t * @memberof Registry\n\t */\n\tregenerateLocalRawInfo(incSeq) {\n\t\tlet node = this.nodes.localNode;\n\t\tif (incSeq)\n\t\t\tnode.seq++;\n\n\t\tconst rawInfo = _.pick(node, [\"ipList\", \"hostname\", \"instanceID\", \"client\", \"config\", \"port\", \"seq\", \"metadata\"]);\n\t\tif (this.broker.started)\n\t\t\trawInfo.services = this.services.getLocalNodeServices();\n\t\telse\n\t\t\trawInfo.services = [];\n\n\t\t// Make to be safety\n\t\tnode.rawInfo = utils.safetyObject(rawInfo, this.broker.options);\n\n\t\treturn node.rawInfo;\n\t}\n\n\t/**\n\t * Generate local node info for INFO packets\n\t *\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetLocalNodeInfo(force) {\n\t\tif (force || !this.nodes.localNode.rawInfo)\n\t\t\treturn this.regenerateLocalRawInfo();\n\n\t\treturn this.nodes.localNode.rawInfo;\n\t}\n\n\t/**\n\t * Generate node info for INFO packets\n\t *\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetNodeInfo(nodeID) {\n\t\tconst node = this.nodes.get(nodeID);\n\t\tif (!node)\n\t\t\treturn null;\n\n\t\tif (node.local)\n\t\t\treturn this.getLocalNodeInfo();\n\n\t\treturn node.rawInfo;\n\t}\n\n\t/**\n\t * Process an incoming node INFO packet\n\t *\n\t * @param {any} payload\n\t * @returns\n\t * @memberof Registry\n\t */\n\tprocessNodeInfo(payload) {\n\t\treturn this.nodes.processNodeInfo(payload);\n\t}\n\n\t/**\n\t * Get list of registered nodes\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetNodeList(opts) {\n\t\treturn this.nodes.list(opts);\n\t}\n\n\t/**\n\t * Get list of registered services\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetServiceList(opts) {\n\t\treturn this.services.list(opts);\n\t}\n\n\t/**\n\t * Get list of registered actions\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetActionList(opts) {\n\t\treturn this.actions.list(opts);\n\t}\n\n\t/**\n\t * Get list of registered events\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetEventList(opts) {\n\t\treturn this.events.list(opts);\n\t}\n\n\t/**\n\t * Get a raw info list from nodes\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof Registry\n\t */\n\tgetNodeRawList() {\n\t\treturn this.nodes.toArray().map(node => node.rawInfo);\n\t}\n}\n\nmodule.exports = Registry;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Registry = require(\"./registry\");\n\nmodule.exports = Registry;\n\nmodule.exports.Endpoint = require(\"./endpoint\");\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { match, isObject, isString }\t= require(\"../utils\");\n\nconst LEVELS = [\"fatal\", \"error\", \"warn\", \"info\", \"debug\", \"trace\"];\n\n/**\n * Logger base class.\n *\n * @class BaseLogger\n */\nclass BaseLogger {\n\n\t/**\n\t * Creates an instance of BaseLogger.\n\t *\n\t * @param {Object} opts\n\t * @memberof BaseLogger\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tlevel: \"info\",\n\t\t\tcreateLogger: null\n\t\t});\n\t\tthis.Promise = Promise; // default promise before logger is initialized\n\t}\n\n\t/**\n\t * Initialize logger.\n\t *\n\t * @param {LoggerFactory} loggerFactory\n\t */\n\tinit(loggerFactory)  {\n\t\tthis.loggerFactory = loggerFactory;\n\t\tthis.broker = this.loggerFactory.broker;\n\t\tthis.Promise = this.broker.Promise;\n\t}\n\n\t/**\n\t * Stopping logger\n\t */\n\tstop() {\n\t\treturn this.Promise.resolve();\n\t}\n\n\tgetLogLevel(mod) {\n\t\tmod = mod ? mod.toUpperCase() : \"\";\n\n\t\tconst level = this.opts.level;\n\t\tif (isString(level))\n\t\t\treturn level;\n\n\t\tif (isObject(level)) {\n\t\t\tif (level[mod])\n\t\t\t\treturn level[mod];\n\n\t\t\t// Find with matching\n\t\t\tconst key = Object.keys(level).find(m => match(mod, m) && m !== \"**\");\n\t\t\tif (key)\n\t\t\t\treturn level[key];\n\t\t\telse if (level[\"**\"]) {\n\t\t\t\treturn level[\"**\"];\n\t\t\t}\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\treturn null;\n\t}\n\n\tgetLogHandler(/*bindings*/) {\n\t\treturn null;\n\t}\n}\n\nBaseLogger.LEVELS = LEVELS;\n\nmodule.exports = BaseLogger;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n/* eslint-disable no-console */\n\n\"use strict\";\n\nconst BaseLogger \t= require(\"./base\");\nconst _ \t\t\t= require(\"lodash\");\nconst kleur \t\t= require(\"kleur\");\nconst util \t\t\t= require(\"util\");\nconst { isObject, isFunction }\t= require(\"../utils\");\n\n\nfunction getColor(type) {\n\tswitch(type) {\n\t\tcase \"fatal\": return kleur.red().inverse;\n\t\tcase \"error\": return kleur.red;\n\t\tcase \"warn\": return kleur.yellow;\n\t\tcase \"debug\": return kleur.magenta;\n\t\tcase \"trace\": return kleur.gray;\n\t\tdefault: return kleur.green;\n\t}\n}\n\n/**\n * Formatted abstract logger for Moleculer\n *\n * @class FormattedLogger\n * @extends {BaseLogger}\n */\nclass FormattedLogger extends BaseLogger {\n\n\t/**\n\t * Creates an instance of FormattedLogger.\n\t * @param {Object} opts\n\t * @memberof FormattedLogger\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\tcolors: true,\n\t\t\tmoduleColors: false,\n\t\t\tformatter: \"full\",\n\t\t\tobjectPrinter: null,\n\t\t\tautoPadding: false\n\t\t});\n\n\t\tthis.maxPrefixLength = 0;\n\t}\n\n\tinit(loggerFactory) {\n\t\tsuper.init(loggerFactory);\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\n\t\tthis.objectPrinter = this.opts.objectPrinter ? this.opts.objectPrinter : o => util.inspect(o, { showHidden: false, depth: 2, colors: kleur.enabled, breakLength: Number.POSITIVE_INFINITY });\n\n\t\t// Generate colorful log level names\n\t\tthis.levelColorStr = BaseLogger.LEVELS.reduce((a, level) => {\n\t\t\ta[level] = getColor(level)(_.padEnd(level.toUpperCase(), 5));\n\t\t\treturn a;\n\t\t}, {});\n\n\t\tif (this.opts.colors && this.opts.moduleColors === true) {\n\t\t\tthis.opts.moduleColors = [\n\t\t\t\t\"yellow\", \"bold.yellow\",\n\t\t\t\t\"cyan\", \"bold.cyan\",\n\t\t\t\t\"green\", \"bold.green\",\n\t\t\t\t\"magenta\", \"bold.magenta\",\n\t\t\t\t\"blue\", \"bold.blue\",\n\t\t\t\t/*\"red\",*/\n\t\t\t\t/*\"grey\",*/\n\t\t\t\t/*\"white,\"*/\n\t\t\t];\n\t\t}\n\t}\n\n\t/**\n\t * Get a color for the module name.\n\t */\n\tgetNextColor(mod) {\n\t\tif (this.opts.colors && Array.isArray(this.opts.moduleColors)) {\n\t\t\t// Credits: \"visionmedia/debug\" https://github.com/visionmedia/debug/blob/master/src/common.js#L45\n\t\t\tlet hash = 0;\n\n\t\t\tfor (let i = 0; i < mod.length; i++) {\n\t\t\t\thash = ((hash << 5) - hash) + mod.charCodeAt(i);\n\t\t\t\thash |= 0; // Convert to 32bit integer\n\t\t\t}\n\n\t\t\treturn this.opts.moduleColors[Math.abs(hash) % this.opts.moduleColors.length];\n\t\t}\n\n\t\treturn \"grey\";\n\t}\n\n\tpadLeft(len) {\n\t\tif (this.opts.autoPadding)\n\t\t\treturn \" \".repeat(this.maxPrefixLength - len);\n\n\t\treturn \"\";\n\t}\n\n\t/**\n\t *\n\t * @param {object} bindings\n\t */\n\tgetFormatter(bindings) {\n\t\tconst formatter = this.opts.formatter;\n\n\t\tconst mod = (bindings && bindings.mod) ? bindings.mod.toUpperCase() : \"\";\n\t\tconst c = this.getNextColor(mod);\n\t\tconst modColorName = c.split(\".\").reduce((a,b) => a[b] || a()[b], kleur)(mod);\n\t\tconst moduleColorName = bindings ? kleur.grey(bindings.nodeID + \"/\") + modColorName : \"\";\n\n\t\tconst printArgs = args => {\n\t\t\treturn args.map(p => {\n\t\t\t\tif (isObject(p) || Array.isArray(p))\n\t\t\t\t\treturn this.objectPrinter(p);\n\t\t\t\treturn p;\n\t\t\t});\n\t\t};\n\n\t\tif (isFunction(formatter)) {\n\t\t\treturn (type, args) => formatter.call(this, type, args, bindings, { printArgs });\n\n\t\t} else if (formatter == \"json\") {\n\t\t\t// {\"ts\":1581243299731,\"level\":\"info\",\"msg\":\"Moleculer v0.14.0-rc2 is starting...\",\"nodeID\":\"console\",\"ns\":\"\",\"mod\":\"broker\"}\n\t\t\tkleur.enabled = false;\n\t\t\treturn (type, args) => [JSON.stringify({ ts: Date.now(), level: type, msg: printArgs(args).join(\" \"), ...bindings })];\n\t\t} else if (formatter == \"jsonext\") {\n\t\t\t// {\"time\":\"2020-02-09T10:44:35.285Z\",\"level\":\"info\",\"message\":\"Moleculer v0.14.0-rc2 is starting...\",\"nodeID\":\"console\",\"ns\":\"\",\"mod\":\"broker\"}\n\t\t\tkleur.enabled = false;\n\t\t\treturn (type, args) => {\n\t\t\t\tconst res = {\n\t\t\t\t\ttime: new Date().toISOString(),\n\t\t\t\t\tlevel: type,\n\t\t\t\t\tmessage: \"\",\n\t\t\t\t\t...bindings\n\t\t\t\t};\n\t\t\t\tif (args.length > 0) {\n\t\t\t\t\tif (typeof(args[0]) == \"object\"/* && !(args[0] instanceof Error)*/) {\n\t\t\t\t\t\tObject.assign(res, args[0]);\n\t\t\t\t\t\tres.message = printArgs(args.slice(1)).join(\" \");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres.message = printArgs(args).join(\" \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [JSON.stringify(res)];\n\t\t\t};\n\t\t} else if (formatter == \"simple\") {\n\t\t\t// INFO  - Moleculer v0.14.0-beta3 is starting...\n\t\t\treturn (type, args) => [this.levelColorStr[type], \"-\", ...printArgs(args)];\n\t\t} else if (formatter == \"short\") {\n\t\t\t// [08:42:12.973Z] INFO  BROKER: Moleculer v0.14.0-beta3 is starting...\n\t\t\tconst prefixLen = 23 + bindings.mod.length;\n\t\t\tthis.maxPrefixLength = Math.max(prefixLen, this.maxPrefixLength);\n\t\t\treturn (type, args) => [kleur.grey(`[${new Date().toISOString().substr(11)}]`), this.levelColorStr[type], modColorName + this.padLeft(prefixLen) + kleur.grey(\":\"), ...printArgs(args)];\n\t\t} else if (formatter == \"full\") {\n\t\t\t// [2019-08-31T08:40:53.481Z] INFO  bobcsi-pc-7100/BROKER: Moleculer v0.14.0-beta3 is starting...\n\t\t\tconst prefixLen = 35 + bindings.nodeID.length + bindings.mod.length;\n\t\t\tthis.maxPrefixLength = Math.max(prefixLen, this.maxPrefixLength);\n\t\t\treturn (type, args) => [kleur.grey(`[${new Date().toISOString()}]`), this.levelColorStr[type], moduleColorName + this.padLeft(prefixLen) + kleur.grey(\":\"), ...printArgs(args)];\n\t\t} else {\n\t\t\t// [{timestamp}] {level} {nodeID}/{mod}: {msg}\n\n\t\t\treturn (type, args) => {\n\t\t\t\tconst timestamp = new Date().toISOString();\n\t\t\t\treturn [this.render(formatter, {\n\t\t\t\t\ttimestamp: kleur.grey(timestamp),\n\t\t\t\t\ttime: kleur.grey(timestamp.substr(11)),\n\n\t\t\t\t\tlevel: this.levelColorStr[type],\n\t\t\t\t\tnodeID: kleur.grey(bindings.nodeID),\n\t\t\t\t\tmod: modColorName,\n\t\t\t\t\tmsg: printArgs(args).join(\" \")\n\t\t\t\t})];\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Interpolate a text.\n\t *\n\t * @param {Strimg} str\n\t * @param {Object} obj\n\t * @returns {String}\n\t */\n\trender(str, obj) {\n\t\treturn str.replace(/\\{\\s?(\\w+)\\s?\\}/g, (match, v) => obj[v] || \"\");\n\t}\n\n}\n\nmodule.exports = FormattedLogger;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n/* eslint-disable no-console */\n\n\"use strict\";\n\nconst FormattedLogger \t= require(\"./formatted\");\nconst kleur \t\t\t= require(\"kleur\");\n\n/**\n * Console logger for Moleculer\n *\n * @class ConsoleLogger\n * @extends {FormattedLogger}\n */\nclass ConsoleLogger extends FormattedLogger {\n\n\t/**\n\t * Creates an instance of ConsoleLogger.\n\t * @param {Object} opts\n\t * @memberof ConsoleLogger\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.maxPrefixLength = 0;\n\t}\n\n\tinit(loggerFactory) {\n\t\tsuper.init(loggerFactory);\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\t}\n\n\t/**\n\t *\n\t * @param {object} bindings\n\t */\n\tgetLogHandler(bindings) {\n\t\tconst level = bindings ? this.getLogLevel(bindings.mod) : null;\n\t\tif (!level)\n\t\t\treturn null;\n\n\t\tconst levelIdx = FormattedLogger.LEVELS.indexOf(level);\n\t\tconst formatter = this.getFormatter(bindings);\n\n\t\treturn (type, args) => {\n\t\t\tconst typeIdx = FormattedLogger.LEVELS.indexOf(type);\n\t\t\tif (typeIdx > levelIdx) return;\n\n\t\t\tconst pargs = formatter(type, args);\n\t\t\tswitch(type) {\n\t\t\t\tcase \"fatal\":\n\t\t\t\tcase \"error\": return console.error(...pargs);\n\t\t\t\tcase \"warn\": return console.warn(...pargs);\n\t\t\t\tdefault: return console.log(...pargs);\n\t\t\t}\n\t\t};\n\t}\n\n}\n\nmodule.exports = ConsoleLogger;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\nconst Base = require(\"./base\");\n\nconst Loggers = {\n\tBase,\n\tFormatted: require(\"./formatted\"),\n\n\tBunyan: require(\"./bunyan\"),\n\tConsole: require(\"./console\"),\n\tDatadog: require(\"./datadog\"),\n\tDebug: require(\"./debug\"),\n\tFile: require(\"./file\"),\n\tLog4js: require(\"./log4js\"),\n\tPino: require(\"./pino\"),\n\tWinston: require(\"./winston\"),\n\n\tLEVELS: Base.LEVELS\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Loggers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Loggers[n];\n}\n\n/**\n * Resolve reporter by name\n *\n * @param {object|string} opt\n * @returns {Reporter}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Loggers.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet LoggerClass = getByName(opt);\n\t\tif (LoggerClass)\n\t\t\treturn new LoggerClass();\n\n\t} else if (isObject(opt)) {\n\t\tlet LoggerClass = getByName(opt.type);\n\t\tif (LoggerClass)\n\t\t\treturn new LoggerClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid logger configuration. Type: '${opt.type}'`, { type: opt.type });\n\t}\n\n\tthrow new BrokerOptionsError(`Invalid logger configuration: '${opt}'`, { type: opt });\n}\n\nfunction register(name, value) {\n\tLoggers[name] = value;\n}\n\nmodule.exports = Object.assign(Loggers, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isPlainObject, isString } = require(\"./utils\");\nconst Loggers = require(\"./loggers\");\n\nconst noop = () => {};\nconst cwd = process.cwd();\n\n/**\n * Log factory class.\n *\n * @class LoggerFactory\n */\nclass LoggerFactory {\n\n\t/**\n\t * Constructor of LoggerFactory\n\t */\n\tconstructor(broker) {\n\t\tthis.broker = broker;\n\t\tthis.appenders = [];\n\t\tthis.cache = new Map();\n\t}\n\n\t/**\n\t * Initialize module.\n\t */\n\tinit(opts) {\n\t\tthis.opts = opts;\n\n\t\tconst globalLogLevel = this.broker.options.logLevel || \"info\";\n\n\t\tif (opts === false || opts == null) {\n\t\t\t// No logger\n\t\t\tthis.appenders = [];\n\n\t\t} else if (opts === true || opts === console) {\n\t\t\t// Default console logger\n\t\t\tthis.appenders = [Loggers.resolve({\n\t\t\t\ttype: \"Console\",\n\t\t\t\toptions: {\n\t\t\t\t\tlevel: globalLogLevel\n\t\t\t\t}\n\t\t\t})];\n\n\t\t} else {\n\t\t\tif (!Array.isArray(opts)) {\n\t\t\t\topts = [opts];\n\t\t\t}\n\n\t\t\tthis.appenders = _.compact(opts).map(o => {\n\t\t\t\t// Built-in shorthand\n\t\t\t\tif (isString(o))\n\t\t\t\t\treturn Loggers.resolve({ type: o, options: { level: globalLogLevel } });\n\n\t\t\t\t// Build-in with options\n\t\t\t\tif (isPlainObject(o))\n\t\t\t\t\treturn Loggers.resolve(_.defaultsDeep({}, o, { options: { level: globalLogLevel } }));\n\n\t\t\t\t// Custom logger instance\n\t\t\t\treturn Loggers.resolve(o);\n\t\t\t});\n\t\t}\n\n\t\t// Initialize appenders\n\t\tthis.appenders.forEach(app => app.init(this));\n\t}\n\n\t/**\n\t * Stopping all appenders\n\t */\n\tstop() {\n\t\treturn this.broker.Promise.all(this.appenders.map(appender => appender.stop()));\n\t}\n\n\t/**\n\t * Get caller information from error stack trace.\n\t */\n\tgetCallerFromStack() {\n\t\tconst _prepareStackTrace = Error.prepareStackTrace;\n\t\tError.prepareStackTrace = (_, stack) => stack;\n\t\tconst stack = new Error().stack;\n\t\tError.prepareStackTrace = _prepareStackTrace;\n\n\t\tif (stack.length > 2) {\n\t\t\tconst site = stack[2];\n\t\t\treturn {\n\t\t\t\tfilename: site.getFileName().substring(cwd.length + 1),\n\t\t\t\tlineNumber: site.getLineNumber(),\n\t\t\t\tcolumnNumber: site.getColumnNumber(),\n\t\t\t\tmethodName: site.getMethodName(),\n\t\t\t\tfunctionName: site.getFunctionName(),\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Get a logger for a module (service, transporter, cacher, context...etc)\n\t *\n\t * @param {Object} bindings\n\t * @returns {ModuleLogger}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tgetLogger(bindings) {\n\t\tlet logger = this.cache.get(this.getBindingsKey(bindings));\n\t\tif (logger) return logger;\n\n\t\tlogger = {};\n\t\tconst broker = this.broker;\n\t\tconst appenders = this.appenders;\n\n\t\tconst logHandlers = _.compact(appenders.map(app => app.getLogHandler(bindings)));\n\n\t\tLoggers.LEVELS.forEach((type) => {\n\t\t\tif (logHandlers.length == 0)\n\t\t\t\treturn logger[type] = noop;\n\n\t\t\tlogger[type] = function(...args) {\n\t\t\t\tif (broker.middlewares && broker.middlewares.registeredHooks.newLogEntry)\n\t\t\t\t\tbroker.middlewares.callSyncHandlers(\"newLogEntry\", [type, args, bindings], {});\n\n\t\t\t\tif (logHandlers.length == 0) return;\n\n\t\t\t\tfor(let i = 0; i < logHandlers.length; i++)\n\t\t\t\t\tlogHandlers[i](type, args);\n\t\t\t};\n\t\t});\n\n\t\t/*logger.log = function(type, ...args) {\n\t\t\tif (broker.middlewares)\n\t\t\t\tbroker.middlewares.callSyncHandlers(\"newLogEntry\", [type, args, bindings], {});\n\n\t\t\tif (logHandlers.length == 0) return;\n\n\t\t\tlogHandlers.forEach(fn => fn(type, args));\n\t\t};*/\n\n\t\tlogger.appenders = appenders;\n\n\n\t\tthis.cache.set(this.getBindingsKey(bindings), logger);\n\n\t\treturn logger;\n\t}\n\n\t/**\n\t * Create a key from bindings for logger caching.\n\t *\n\t * @param {object} bindings\n\t * @returns {String}\n\t */\n\tgetBindingsKey(bindings) {\n\t\tif (!bindings) return \"\";\n\n\t\treturn [\"nodeID\", \"ns\", \"mod\"]\n\t\t\t.map(key => bindings[key])\n\t\t\t.join(\"|\");\n\t}\n\n}\n\nmodule.exports = LoggerFactory;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { ValidationError } = require(\"../errors\");\nconst _ = require(\"lodash\");\n\nclass BaseValidator {\n\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tparamName: \"params\"\n\t\t});\n\t}\n\n\tinit(broker) {\n\t\tthis.broker = broker;\n\t}\n\n\t/**\n\t * Compile a validation schema to a checker function.\n\t * @param {any} schema\n\t * @returns {Function}\n\t */\n\tcompile(/*schema*/) {\n\t\tthrow new Error(\"Abstract method\");\n\t}\n\n\t/**\n\t * Validate params againt the schema\n\t * @param {any} params\n\t * @param {any} schema\n\t * @returns {boolean}\n\t */\n\tvalidate(/*params, schema*/) {\n\t\tthrow new Error(\"Abstract method\");\n\t}\n\n\t/**\n\t * Convert the specific validation schema to\n\t * the Moleculer (fastest-validator) validation schema format.\n\t *\n\t * @param {any} schema\n\t * @returns {Object}\n\t */\n\tconvertSchemaToMoleculer(/*schema*/) {\n\t\tthrow new Error(\"Abstract method\");\n\t}\n\n\t/**\n\t * Register validator as a middleware\n\t *\n\t * @memberof BaseValidator\n\t */\n\tmiddleware(broker) {\n\t\tconst self = this;\n\t\tconst paramName = this.opts.paramName;\n\n\t\treturn {\n\t\t\tname: \"Validator\",\n\t\t\tlocalAction: function validatorMiddleware(handler, action) {\n\t\t\t\t// Wrap a param validator\n\t\t\t\tif (action[paramName] && typeof action[paramName] === \"object\") {\n\t\t\t\t\tconst check = self.compile(action[paramName]);\n\t\t\t\t\treturn function validateContextParams(ctx) {\n\t\t\t\t\t\tlet res = check(ctx.params != null ? ctx.params : {});\n\t\t\t\t\t\tif (res === true)\n\t\t\t\t\t\t\treturn handler(ctx);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = res.map(data => Object.assign(data, { nodeID: ctx.nodeID, action: ctx.action.name }));\n\t\t\t\t\t\t\treturn broker.Promise.reject(new ValidationError(\"Parameters validation error!\", null, res));\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn handler;\n\t\t\t},\n\n\t\t\tlocalEvent: function validatorMiddleware(handler, event) {\n\t\t\t\t// Wrap a param validator\n\t\t\t\tif (event[paramName] && typeof event[paramName] === \"object\") {\n\t\t\t\t\tconst check = self.compile(event[paramName]);\n\t\t\t\t\treturn function validateContextParams(ctx) {\n\t\t\t\t\t\tlet res = check(ctx.params != null ? ctx.params : {});\n\t\t\t\t\t\tif (res === true)\n\t\t\t\t\t\t\treturn handler(ctx);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = res.map(data => Object.assign(data, { nodeID: ctx.nodeID, event: ctx.event.name }));\n\t\t\t\t\t\t\treturn broker.Promise.reject(new ValidationError(\"Parameters validation error!\", null, res));\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn handler;\n\t\t\t}\n\t\t};\n\t}\n}\n\n\nmodule.exports = BaseValidator;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Validator = require(\"fastest-validator\");\nconst { ValidationError } = require(\"../errors\");\nconst BaseValidator = require(\"./base\");\n\nclass FastestValidator  extends BaseValidator{\n\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t\tthis.validator = new Validator(this.opts);\n\t}\n\n\t/**\n\t * Compile a validation schema to a checker function.\n\t * @param {any} schema\n\t * @returns {Function}\n\t */\n\tcompile(schema) {\n\t\treturn this.validator.compile(schema);\n\t}\n\n\t/**\n\t * Validate params againt the schema\n\t * @param {any} params\n\t * @param {any} schema\n\t * @returns {boolean}\n\t */\n\tvalidate(params, schema) {\n\t\tconst res = this.validator.validate(params, schema);\n\t\tif (res !== true)\n\t\t\tthrow new ValidationError(\"Parameters validation error!\", null, res);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Convert the specific validation schema to\n\t * the Moleculer (fastest-validator) validation schema format.\n\t *\n\t * @param {any} schema\n\t * @returns {Object}\n\t */\n\tconvertSchemaToMoleculer(schema) {\n\t\treturn schema;\n\t}\n}\n\nmodule.exports = FastestValidator;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { BrokerOptionsError } = require(\"../errors\");\nconst { isObject, isString } = require(\"../utils\");\n\nconst Validators = {\n\tBase: require(\"./base\"),\n\tFastest: require(\"./fastest\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Validators).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Validators[n];\n}\n\n/**\n * Resolve validator by name\n *\n * @param {object|string} opt\n * @returns {Validator}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Validators.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet ValidatorClass = getByName(opt);\n\t\tif (ValidatorClass)\n\t\t\treturn new ValidatorClass();\n\n\t\tthrow new BrokerOptionsError(`Invalid Validator type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet ValidatorClass = getByName(opt.type || \"Fastest\");\n\t\tif (ValidatorClass)\n\t\t\treturn new ValidatorClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid Validator type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn new Validators.Fastest();\n}\n\nfunction register(name, value) {\n\tValidators[name] = value;\n}\n\nmodule.exports = Object.assign(Validators, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst crypto\t\t= require(\"crypto\");\nconst { METRIC }\t= require(\"../metrics\");\nconst { isObject, isFunction }\t= require(\"../utils\");\n\n/**\n * Abstract cacher class\n *\n * @class Cacher\n */\nclass Cacher {\n\n\t/**\n\t * Creates an instance of Cacher.\n\t *\n\t * @param {object} opts\n\t *\n\t * @memberof Cacher\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tttl: null,\n\t\t\tkeygen: null,\n\t\t\tmaxParamsLength: null\n\t\t});\n\t}\n\n\t/**\n\t * Initialize cacher\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof Cacher\n\t */\n\tinit(broker) {\n\t\tthis.broker = broker;\n\t\tthis.metrics = broker.metrics;\n\n\t\tif (this.broker) {\n\t\t\tthis.logger = broker.getLogger(\"cacher\");\n\n\t\t\tif (this.opts.prefix) {\n\t\t\t\tthis.prefix = this.opts.prefix + \"-\";\n\t\t\t} else {\n\t\t\t\tthis.prefix = \"MOL-\";\n\t\t\t\tif (this.broker.namespace)\n\t\t\t\t\tthis.prefix += this.broker.namespace + \"-\";\n\t\t\t}\n\n\t\t\tthis.registerMoleculerMetrics();\n\t\t}\n\t}\n\n\t/**\n\t * Register Moleculer Transit Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_GET_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_GET_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_FOUND_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_SET_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_SET_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_DEL_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_DEL_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_CLEAN_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_CLEAN_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_EXPIRED_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t}\n\n\t/**\n\t * Close cacher\n\t *\n\t * @memberof Cacher\n\t */\n\tclose() {\n\t\t/* istanbul ignore next */\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Get a cached content by key\n\t *\n\t * @param {any} key\n\t *\n\t * @memberof Cacher\n\t */\n\tget(/*key*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Get a cached content and ttl by key\n\t *\n\t * @param {any} key\n\t *\n\t * @memberof Cacher\n\t */\n\tgetWithTTL(/*key*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Set a content by key to cache\n\t *\n\t * @param {any} key\n\t * @param {any} data\n\t * @param {Number?} ttl\n\t *\n\t * @memberof Cacher\n\t */\n\tset(/*key, data, ttl*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Delete a content by key from cache\n\t *\n\t * @param {string|Array<string>} key\n\t *\n\t * @memberof Cacher\n\t */\n\tdel(/*key*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\n\t/**\n\t * Clean cache. Remove every key by match\n\t * @param {string|Array<string>} match string. Default is \"**\"\n\t * @returns {Promise}\n\t *\n\t * @memberof Cacher\n\t */\n\tclean(/*match = \"**\"*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Get a value from params or meta by `key`.\n\t * If the key starts with `#` it reads from `meta`, otherwise from `params`.\n\t *\n\t * @param {String} key\n\t * @param {Object} params\n\t * @param {Object} meta\n\t * @returns {any}\n\t * @memberof Cacher\n\t */\n\tgetParamMetaValue(key, params, meta) {\n\t\tif (key.startsWith(\"#\") && meta != null)\n\t\t\treturn _.get(meta, key.slice(1));\n\t\telse if (params != null)\n\t\t\treturn _.get(params, key);\n\t}\n\n\t/**\n\t * Default cache key generator\n\t *\n\t * @param {String} actionName\n\t * @param {Object|null} params\n\t * @param {Object} meta\n\t * @param {Array|null} keys\n\t * @returns {String}\n\t * @memberof Cacher\n\t */\n\tdefaultKeygen(actionName, params, meta, keys) {\n\t\tif (params || meta) {\n\t\t\tconst keyPrefix = actionName + \":\";\n\t\t\tif (keys) {\n\t\t\t\tif (keys.length == 1) {\n\t\t\t\t\t// Fast solution for ['id'] key\n\t\t\t\t\tconst val = this.getParamMetaValue(keys[0], params, meta);\n\t\t\t\t\treturn keyPrefix + this._hashedKey(isObject(val) ? this._hashedKey(this._generateKeyFromObject(val)) : val);\n\t\t\t\t}\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\treturn keyPrefix + this._hashedKey(keys.reduce((a, key, i) => {\n\t\t\t\t\t\tconst val = this.getParamMetaValue(key, params, meta);\n\t\t\t\t\t\treturn a + (i ? \"|\" : \"\") + (isObject(val) || Array.isArray(val) ? this._hashedKey(this._generateKeyFromObject(val)) : val);\n\t\t\t\t\t}, \"\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn keyPrefix + this._hashedKey(this._generateKeyFromObject(params));\n\t\t\t}\n\t\t}\n\t\treturn actionName;\n\t}\n\n\t_hashedKey(key) {\n\t\tconst maxParamsLength = this.opts.maxParamsLength;\n\t\tif (!maxParamsLength || maxParamsLength < 44 || key.length <= maxParamsLength)\n\t\t\treturn key;\n\n\t\tconst prefixLength = maxParamsLength - 44;\n\n\t\tconst base64Hash = crypto.createHash(\"sha256\").update(key).digest(\"base64\");\n\t\tif (prefixLength < 1)\n\t\t\treturn base64Hash;\n\n\t\treturn key.substring(0, prefixLength) + base64Hash;\n\t}\n\n\t_generateKeyFromObject(obj) {\n\t\tif (Array.isArray(obj)) {\n\t\t\treturn obj.map(o => this._generateKeyFromObject(o)).join(\"|\");\n\t\t}\n\t\telse if (isObject(obj)) {\n\t\t\treturn Object.keys(obj).map(key => [key, this._generateKeyFromObject(obj[key])].join(\"|\")).join(\"|\");\n\t\t}\n\t\telse if (obj != null) {\n\t\t\treturn obj.toString();\n\t\t} else {\n\t\t\treturn \"null\";\n\t\t}\n\t}\n\n\t/**\n\t * Get a cache key by name and params.\n\t * Concatenate the name and the hashed params object\n\t *\n\t * @param {String} name\n\t * @param {Object} params\n\t * @param {Object} meta\n\t * @param {Array|null} keys\n\t * @returns {String}\n\t */\n\tgetCacheKey(actionName, params, meta, keys) {\n\t\tif (isFunction(this.opts.keygen))\n\t\t\treturn this.opts.keygen.call(this, actionName, params, meta, keys);\n\t\telse\n\t\t\treturn this.defaultKeygen(actionName, params, meta, keys);\n\t}\n\n\t/**\n\t * Register cacher as a middleware\n\t *\n\t * @memberof Cacher\n\t */\n\tmiddleware() {\n\t\treturn (handler, action) => {\n\t\t\tconst opts = _.defaultsDeep({}, isObject(action.cache) ? action.cache : { enabled: !!action.cache });\n\t\t\topts.lock = _.defaultsDeep({}, isObject(opts.lock) ? opts.lock : { enabled: !!opts.lock });\n\t\t\tif (opts.enabled !== false) {\n\t\t\t\tconst isEnabledFunction = isFunction(opts.enabled);\n\n\t\t\t\treturn function cacherMiddleware(ctx) {\n\t\t\t\t\tif (isEnabledFunction) {\n\t\t\t\t\t\tif (!opts.enabled.call(ctx.service, ctx)) {\n\t\t\t\t\t\t\t// Cache is disabled. Call the handler only.\n\t\t\t\t\t\t\treturn handler(ctx);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Disable caching with `ctx.meta.$cache = false`\n\t\t\t\t\tif (ctx.meta[\"$cache\"] === false)\n\t\t\t\t\t\treturn handler(ctx);\n\n\t\t\t\t\tconst cacheKey = this.getCacheKey(action.name, ctx.params, ctx.meta, opts.keys);\n\t\t\t\t\t// Using lock\n\t\t\t\t\tif(opts.lock.enabled !== false){\n\t\t\t\t\t\tlet cachePromise;\n\t\t\t\t\t\tif(opts.lock.staleTime && this.getWithTTL){ // If enable cache refresh\n\t\t\t\t\t\t\tcachePromise = this.getWithTTL(cacheKey).then(({ data, ttl }) => {\n\t\t\t\t\t\t\t\tif (data != null) {\n\t\t\t\t\t\t\t\t\tif(opts.lock.staleTime && ttl && ttl < opts.lock.staleTime){\n\t\t\t\t\t\t\t\t\t\t// Cache is stale, try to refresh it.\n\t\t\t\t\t\t\t\t\t\tthis.tryLock(cacheKey, opts.lock.ttl).then(unlock=>{\n\t\t\t\t\t\t\t\t\t\t\treturn handler(ctx).then(result => {\n\t\t\t\t\t\t\t\t\t\t\t\t// Save the result to the cache and realse the lock.\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.set(cacheKey, result, opts.ttl).then(()=>unlock());\n\t\t\t\t\t\t\t\t\t\t\t}).catch((/*err*/) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.del(cacheKey).then(()=>unlock());\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}).catch((/*err*/)=>{\n\t\t\t\t\t\t\t\t\t\t\t// The cache is refreshing on somewhere else.\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcachePromise = this.get(cacheKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn cachePromise.then(data=>{\n\t\t\t\t\t\t\tif (data != null) {\n\t\t\t\t\t\t\t\t// Found in the cache! Don't call handler, return with the content\n\t\t\t\t\t\t\t\tctx.cachedResult = true;\n\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Not found in the cache! Acquire a lock\n\t\t\t\t\t\t\treturn this.lock(cacheKey, opts.lock.ttl).then(unlock => {\n\t\t\t\t\t\t\t\treturn this.get(cacheKey).then(content => {\n\t\t\t\t\t\t\t\t\tif (content != null) {\n\t\t\t\t\t\t\t\t\t\t// Cache found. Realse the lock and return the value.\n\t\t\t\t\t\t\t\t\t\tctx.cachedResult = true;\n\t\t\t\t\t\t\t\t\t\treturn unlock().then(() => {\n\t\t\t\t\t\t\t\t\t\t\treturn content;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Call the handler\n\t\t\t\t\t\t\t\t\treturn handler(ctx).then(result => {\n\t\t\t\t\t\t\t\t\t\t// Save the result to the cache and realse the lock.\n\t\t\t\t\t\t\t\t\t\tthis.set(cacheKey, result, opts.ttl).then(()=>unlock());\n\t\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t\t}).catch(e => {\n\t\t\t\t\t\t\t\t\t\treturn unlock().then(() => {\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// Not using lock\n\t\t\t\t\treturn this.get(cacheKey).then(content => {\n\t\t\t\t\t\tif (content != null) {\n\t\t\t\t\t\t\t// Found in the cache! Don't call handler, return with the content\n\t\t\t\t\t\t\tctx.cachedResult = true;\n\t\t\t\t\t\t\treturn content;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Call the handler\n\t\t\t\t\t\treturn handler(ctx).then(result => {\n\t\t\t\t\t\t\t// Save the result to the cache\n\t\t\t\t\t\t\tthis.set(cacheKey, result, opts.ttl);\n\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}.bind(this);\n\t\t\t}\n\n\t\t\treturn handler;\n\t\t};\n\t}\n\n}\n\nmodule.exports = Cacher;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nclass Lock {\n\tconstructor(){\n\t\tthis.locked = new Map();\n\t}\n\n\tacquire(key /*, ttl*/) {\n\t\tlet locked = this.locked.get(key);\n\t\tif (!locked) { // not locked\n\t\t\tlocked = [];\n\t\t\tthis.locked.set(key, locked);\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn new Promise(resolve => locked.push(resolve));\n\t\t}\n\t}\n\n\tisLocked(key) {\n\t\treturn !!this.locked.get(key);\n\t}\n\n\trelease(key){\n\t\tlet locked = this.locked.get(key);\n\t\tif(locked) {\n\t\t\tif(locked.length > 0) {\n\t\t\t\tlocked.shift()(); // Release the lock\n\t\t\t} else {\n\t\t\t\tthis.locked.delete(key);\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n\nmodule.exports = Lock;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst utils\t\t\t= require(\"../utils\");\nconst BaseCacher  \t= require(\"./base\");\nconst { METRIC }\t= require(\"../metrics\");\n\nconst Lock = require(\"../lock\");\n/**\n * Cacher factory for memory cache\n *\n * @class MemoryCacher\n */\nclass MemoryCacher extends BaseCacher {\n\n\t/**\n\t * Creates an instance of MemoryCacher.\n\t *\n\t * @param {object} opts\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\t// Cache container\n\t\tthis.cache = new Map();\n\t\t// Async lock\n\t\tthis._lock = new Lock();\n\t\t// Start TTL timer\n\t\tthis.timer = setInterval(() => {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.checkTTL();\n\t\t}, 30 * 1000);\n\t\tthis.timer.unref();\n\n\t\t// Set cloning\n\t\tthis.clone = this.opts.clone === true ? _.cloneDeep : this.opts.clone;\n\t}\n\n\t/**\n\t * Initialize cacher\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tinit(broker) {\n\t\tsuper.init(broker);\n\n\t\tbroker.localBus.on(\"$transporter.connected\", () => {\n\t\t\t// Clear all entries after transporter connected. Maybe we missed some \"cache.clear\" events.\n\t\t\treturn this.clean();\n\t\t});\n\t}\n\n\t/**\n\t * Close cacher\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tclose() {\n\t\tclearInterval(this.timer);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Get data from cache by key\n\t *\n\t * @param {any} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tget(key) {\n\t\tthis.logger.debug(`GET ${key}`);\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_GET_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_GET_TIME);\n\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.logger.debug(`FOUND ${key}`);\n\t\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_FOUND_TOTAL);\n\n\t\t\tlet item = this.cache.get(key);\n\t\t\tif (item.expire && item.expire < Date.now()) {\n\t\t\t\tthis.logger.debug(`EXPIRED ${key}`);\n\t\t\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_EXPIRED_TOTAL);\n\t\t\t\tthis.cache.delete(key);\n\t\t\t\ttimeEnd();\n\t\t\t\treturn this.broker.Promise.resolve(null);\n\t\t\t}\n\t\t\tconst res = this.clone ? this.clone(item.data) : item.data;\n\t\t\ttimeEnd();\n\n\t\t\treturn this.broker.Promise.resolve(res);\n\t\t} else {\n\t\t\ttimeEnd();\n\t\t}\n\t\treturn this.broker.Promise.resolve(null);\n\t}\n\n\t/**\n\t * Save data to cache by key\n\t *\n\t * @param {String} key\n\t * @param {any} data JSON object\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tset(key, data, ttl) {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_SET_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_SET_TIME);\n\n\t\tif (ttl == null)\n\t\t\tttl = this.opts.ttl;\n\n\t\tthis.cache.set(key, {\n\t\t\tdata,\n\t\t\texpire: ttl ? Date.now() + ttl * 1000 : null\n\t\t});\n\n\t\ttimeEnd();\n\t\tthis.logger.debug(`SET ${key}`);\n\n\t\treturn this.broker.Promise.resolve(data);\n\t}\n\n\t/**\n\t * Delete a key from cache\n\t *\n\t * @param {string|Array<string>} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tdel(keys) {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_DEL_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_DEL_TIME);\n\n\t\tkeys = Array.isArray(keys) ? keys : [keys];\n\t\tkeys.forEach(key => {\n\t\t\tthis.cache.delete(key);\n\t\t\tthis.logger.debug(`REMOVE ${key}`);\n\t\t});\n\t\ttimeEnd();\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Clean cache. Remove every key by match\n\t * @param {string|Array<string>} match string. Default is \"**\"\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tclean(match = \"**\") {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_CLEAN_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_CLEAN_TIME);\n\n\t\tconst matches = Array.isArray(match) ? match : [match];\n\t\tthis.logger.debug(`CLEAN ${matches.join(\", \")}`);\n\n\t\tthis.cache.forEach((value, key) => {\n\t\t\tif (matches.some(match => utils.match(key, match))) {\n\t\t\t\tthis.logger.debug(`REMOVE ${key}`);\n\t\t\t\tthis.cache.delete(key);\n\t\t\t}\n\t\t});\n\t\ttimeEnd();\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Get data and ttl from cache by key.\n\t *\n\t * @param {string|Array<string>} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tgetWithTTL(key){\n\t\tthis.logger.debug(`GET ${key}`);\n\t\tlet data = null;\n\t\tlet ttl = null;\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.logger.debug(`FOUND ${key}`);\n\n\t\t\tlet item = this.cache.get(key);\n\t\t\tlet now = Date.now();\n\t\t\tttl = (item.expire - now)/1000;\n\t\t\tttl = ttl > 0 ? ttl : null;\n\t\t\tif (this.opts.ttl) {\n\t\t\t\t// Update expire time (hold in the cache if we are using it)\n\t\t\t\titem.expire = now + this.opts.ttl * 1000;\n\t\t\t}\n\t\t\tdata = this.clone ? this.clone(item.data) : item.data;\n\t\t}\n\t\treturn this.broker.Promise.resolve({ data, ttl });\n\t}\n\n\t/**\n\t * Acquire a lock\n\t *\n\t * @param {string|Array<string>} key\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tlock(key, ttl) {\n\t\treturn this._lock.acquire(key, ttl).then(()=> {\n\t\t\treturn ()=>this._lock.release(key);\n\t\t});\n\t}\n\n\t/**\n\t * Try to acquire a lock\n\t *\n\t * @param {string|Array<string>} key\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\ttryLock(key, ttl) {\n\t\tif(this._lock.isLocked(key)){\n\t\t\treturn this.broker.Promise.reject(new Error(\"Locked.\"));\n\t\t}\n\t\treturn this._lock.acquire(key, ttl).then(()=> {\n\t\t\treturn ()=>this._lock.release(key);\n\t\t});\n\t}\n\n\t/**\n\t * Check & remove the expired cache items\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tcheckTTL() {\n\t\tlet now = Date.now();\n\t\tthis.cache.forEach((value, key) => {\n\t\t\tlet item = this.cache.get(key);\n\n\t\t\tif (item.expire && item.expire < now) {\n\t\t\t\tthis.logger.debug(`EXPIRED ${key}`);\n\t\t\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_EXPIRED_TOTAL);\n\t\t\t\tthis.cache.delete(key);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = MemoryCacher;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst utils\t\t\t= require(\"../utils\");\nconst BaseCacher  \t= require(\"./base\");\nconst LRU \t\t\t= require(\"lru-cache\");\nconst { METRIC }\t= require(\"../metrics\");\n\nconst Lock = require(\"../lock\");\n/**\n * Cacher factory for memory cache\n *\n * @class MemoryLRUCacher\n */\nclass MemoryLRUCacher extends BaseCacher {\n\n\t/**\n\t * Creates an instance of MemoryLRUCacher.\n\t *\n\t * @param {object} opts\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\t// Cache container\n\t\tthis.cache = new LRU({\n\t\t\tmax: this.opts.max,\n\t\t\tmaxAge: this.opts.ttl ? this.opts.ttl * 1000 : null,\n\t\t\tupdateAgeOnGet: !!this.opts.ttl\n\t\t});\n\t\t// Async lock\n\t\tthis._lock = new Lock();\n\t\t// Start TTL timer\n\t\tthis.timer = setInterval(() => {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.checkTTL();\n\t\t}, 30 * 1000);\n\t\tthis.timer.unref();\n\n\t\t// Set cloning\n\t\tthis.clone = this.opts.clone === true ? _.cloneDeep : this.opts.clone;\n\t}\n\n\t/**\n\t * Initialize cacher\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tinit(broker) {\n\t\tsuper.init(broker);\n\n\t\tbroker.localBus.on(\"$transporter.connected\", () => {\n\t\t\t// Clear all entries after transporter connected. Maybe we missed some \"cache.clear\" events.\n\t\t\treturn this.clean();\n\t\t});\n\t\tif(this.opts.lock && this.opts.lock.enabled !== false && this.opts.lock.staleTime){\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.logger.warn(\"setting lock.staleTime with MemoryLRUCacher is not supported.\");\n\t\t}\n\t}\n\n\t/**\n\t * Close cacher\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tclose() {\n\t\tclearInterval(this.timer);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Get data from cache by key\n\t *\n\t * @param {any} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tget(key) {\n\t\tthis.logger.debug(`GET ${key}`);\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_GET_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_GET_TIME);\n\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.logger.debug(`FOUND ${key}`);\n\t\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_FOUND_TOTAL);\n\n\t\t\tlet item = this.cache.get(key);\n\t\t\tconst res = this.clone ? this.clone(item) : item;\n\t\t\ttimeEnd();\n\n\t\t\treturn this.broker.Promise.resolve(res);\n\t\t} else {\n\t\t\ttimeEnd();\n\t\t}\n\t\treturn this.broker.Promise.resolve(null);\n\t}\n\n\t/**\n\t * Save data to cache by key\n\t *\n\t * @param {String} key\n\t * @param {any} data JSON object\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tset(key, data, ttl) {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_SET_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_SET_TIME);\n\n\t\tif (ttl == null)\n\t\t\tttl = this.opts.ttl;\n\n\t\tthis.cache.set(key, data, ttl ? ttl * 1000 : null);\n\n\t\ttimeEnd();\n\t\tthis.logger.debug(`SET ${key}`);\n\n\t\treturn this.broker.Promise.resolve(data);\n\t}\n\n\t/**\n\t * Delete a key from cache\n\t *\n\t * @param {string|Array<string>} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tdel(keys) {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_DEL_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_DEL_TIME);\n\n\t\tkeys = Array.isArray(keys) ? keys : [keys];\n\t\tkeys.forEach(key => {\n\t\t\tthis.cache.del(key);\n\t\t\tthis.logger.debug(`REMOVE ${key}`);\n\t\t});\n\t\ttimeEnd();\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Clean cache. Remove every key by match\n\t * @param {string|Array<string>} match string. Default is \"**\"\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tclean(match = \"**\") {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_CLEAN_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_CLEAN_TIME);\n\n\t\tconst matches = Array.isArray(match) ? match : [match];\n\t\tthis.logger.debug(`CLEAN ${matches.join(\", \")}`);\n\n\t\tthis.cache.keys().forEach(key => {\n\t\t\tif (matches.some(match => utils.match(key, match))) {\n\t\t\t\tthis.logger.debug(`REMOVE ${key}`);\n\t\t\t\tthis.cache.del(key);\n\t\t\t}\n\t\t});\n\t\ttimeEnd();\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\t/**\n\t * Get data and ttl from cache by key.\n\t *\n\t * @param {string|Array<string>} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tgetWithTTL(key){\n\t\t// There are no way to get the ttl of LRU cache :(\n\t\treturn this.get(key).then(data=>{\n\t\t\treturn { data, ttl: null };\n\t\t});\n\t}\n\n\t/**\n\t * Acquire a lock\n\t *\n\t * @param {string|Array<string>} key\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\n\tlock(key, ttl) {\n\t\treturn this._lock.acquire(key, ttl).then(()=> {\n\t\t\treturn ()=>this._lock.release(key);\n\t\t});\n\t}\n\n\t/**\n\t * Try to acquire a lock\n\t *\n\t * @param {string|Array<string>} key\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\ttryLock(key, ttl) {\n\t\tif(this._lock.isLocked(key)){\n\t\t\treturn this.broker.Promise.reject(new Error(\"Locked.\"));\n\t\t}\n\t\treturn this._lock.acquire(key, ttl).then(()=> {\n\t\t\treturn ()=>this._lock.release(key);\n\t\t});\n\t}\n\n\n\t/**\n\t * Check & remove the expired cache items\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tcheckTTL() {\n\t\tthis.cache.prune();\n\t}\n}\n\nmodule.exports = MemoryLRUCacher;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Cachers = {\n\tBase: require(\"./base\"),\n\tMemory: require(\"./memory\"),\n\tMemoryLRU: require(\"./memory-lru\"),\n\tRedis: require(\"./redis\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Cachers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Cachers[n];\n}\n\n/**\n * Resolve cacher by name\n *\n * @param {object|string} opt\n * @returns {Cacher}\n */\nfunction resolve(opt) {\n\tif (opt instanceof Cachers.Base) {\n\t\treturn opt;\n\t} else if (opt === true) {\n\t\treturn new Cachers.Memory();\n\t} else if (isString(opt)) {\n\t\tlet CacherClass = getByName(opt);\n\t\tif (CacherClass)\n\t\t\treturn new CacherClass();\n\n\t\tif (opt.startsWith(\"redis://\"))\n\t\t\tCacherClass = Cachers.Redis;\n\n\t\tif (CacherClass)\n\t\t\treturn new CacherClass(opt);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid cacher type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet CacherClass = getByName(opt.type || \"Memory\");\n\t\tif (CacherClass)\n\t\t\treturn new CacherClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid cacher type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn null;\n}\n\nfunction register(name, value) {\n\tCachers[name] = value;\n}\n\nmodule.exports = Object.assign(Cachers, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _\t= require(\"lodash\");\nconst P = require(\"../packets\");\nconst { flatten } = require(\"../utils\");\nconst { BrokerDisconnectedError } = require(\"../errors\");\n\n/**\n * Base Transporter class\n *\n * @class BaseTransporter\n */\nclass BaseTransporter {\n\n\t/**\n\t * Creates an instance of BaseTransporter.\n\t *\n\t * @param {any} opts\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = opts;\n\t\tthis.connected = false;\n\t\tthis.hasBuiltInBalancer = false;\n\t}\n\n\t/**\n\t * Init transporter\n\t *\n\t * @param {Transit} transit\n\t * @param {Function} messageHandler\n\t * @param {Function} afterConnect\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tinit(transit, messageHandler, afterConnect) {\n\t\tif (transit) {\n\t\t\tthis.transit = transit;\n\t\t\tthis.broker = transit.broker;\n\t\t\tthis.nodeID = transit.nodeID;\n\t\t\tthis.logger = this.broker.getLogger(\"transporter\");\n\n\t\t\tthis.prefix = \"MOL\";\n\t\t\tif (this.broker.namespace)\n\t\t\t\tthis.prefix += \"-\" + this.broker.namespace;\n\n\t\t}\n\t\tthis.messageHandler = messageHandler;\n\t\tthis.afterConnect = afterConnect;\n\t}\n\n\t/**\n\t * Connect to the transporter server\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tconnect() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Event handler for connected.\n\t *\n\t * @param {any} wasReconnect\n\t * @returns {Promise}\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tonConnected(wasReconnect) {\n\t\tthis.connected = true;\n\t\tif (this.afterConnect) {\n\t\t\treturn this.afterConnect(wasReconnect);\n\t\t}\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Disconnect from the transporter server\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tdisconnect() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Subscribe to all topics\n\t *\n\t * @param {Array<Object>} topics\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tmakeSubscriptions(topics) {\n\t\treturn this.broker.Promise.all(topics.map(({ cmd, nodeID }) => this.subscribe(cmd, nodeID)));\n\t}\n\n\t/**\n\t * Process incoming messages\n\t *\n\t * @param {String} cmd\n\t * @param {Buffer} msg\n\t * @returns\n\t * @memberof BaseTransporter\n\t */\n\tincomingMessage(cmd, msg) {\n\t\tif (!msg) return;\n\t\ttry {\n\t\t\tconst packet = this.deserialize(cmd, msg);\n\t\t\treturn this.messageHandler(cmd, packet);\n\t\t} catch(err) {\n\t\t\tthis.logger.warn(\"Invalid incoming packet. Type:\", cmd, err);\n\t\t\tthis.logger.debug(\"Content:\", msg.toString ? msg.toString() : msg);\n\t\t}\n\t}\n\n\t/**\n\t * Received data. It's a wrapper for middlewares.\n\t * @param {String} cmd\n\t * @param {Buffer} data\n\t */\n\treceive(cmd, data) {\n\t\treturn this.incomingMessage(cmd, data);\n\t}\n\n\t/**\n\t * Subscribe to a command\n\t *\n\t * @param {String} cmd\n\t * @param {String} nodeID\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tsubscribe(/*cmd, nodeID*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Subscribe to balanced action commands\n\t *\n\t * @param {String} action\n\t * @memberof AmqpTransporter\n\t */\n\tsubscribeBalancedRequest(/*action*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Subscribe to balanced event command\n\t *\n\t * @param {String} event\n\t * @param {String} group\n\t * @memberof AmqpTransporter\n\t */\n\tsubscribeBalancedEvent(/*event, group*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Unsubscribe all balanced request and event commands\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tunsubscribeFromBalancedCommands() {\n\t\t/* istanbul ignore next */\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Publish a normal not balanced packet\n\t *\n\t * @param {Packet} packet\n\t * @returns {Promise}\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tpublish(packet) {\n\t\tconst topic = this.getTopicName(packet.type, packet.target);\n\t\tconst data = this.serialize(packet);\n\n\t\treturn this.send(topic, data, { packet });\n\t}\n\n\t/**\n\t * Publish a balanced EVENT packet to a balanced queue\n\t *\n\t * @param {Packet} packet\n\t * @param {String} group\n\t * @returns {Promise}\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tpublishBalancedEvent(packet, group) {\n\t\tconst topic = `${this.prefix}.${P.PACKET_EVENT}B.${group}.${packet.payload.event}`;\n\t\tconst data = this.serialize(packet);\n\n\t\treturn this.send(topic, data, { packet, balanced: true });\n\t}\n\n\t/**\n\t * Publish a balanced REQ packet to a balanced queue\n\t *\n\t * @param {Packet} packet\n\t * @returns {Promise}\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tpublishBalancedRequest(packet) {\n\t\tconst topic = `${this.prefix}.${P.PACKET_REQUEST}B.${packet.payload.action}`;\n\t\tconst data = this.serialize(packet);\n\n\t\treturn this.send(topic, data, { packet, balanced: true });\n\t}\n\n\t/**\n\t * Send data buffer.\n\t *\n\t * @param {String} topic\n\t * @param {Buffer} data\n\t * @param {Object} meta\n\t *\n\t * @returns {Promise}\n\t */\n\tsend(/*topic, data, meta*/) {\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Get topic name from command & target nodeID\n\t *\n\t * @param {any} cmd\n\t * @param {any} nodeID\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tgetTopicName(cmd, nodeID) {\n\t\treturn this.prefix + \".\" + cmd + (nodeID ? \".\" + nodeID : \"\");\n\t}\n\n\t/**\n\t * Initialize queues for REQUEST & EVENT packets.\n\t *\n\t * @memberof AmqpTransporter\n\t */\n\tmakeBalancedSubscriptions() {\n\t\tif (!this.hasBuiltInBalancer) return this.broker.Promise.resolve();\n\n\t\treturn this.unsubscribeFromBalancedCommands().then(() => {\n\t\t\tconst services = this.broker.getLocalNodeInfo().services;\n\t\t\treturn this.broker.Promise.all(services.map(service => {\n\t\t\t\tconst p = [];\n\n\t\t\t\t// Service actions queues\n\t\t\t\tif (service.actions && typeof(service.actions) == \"object\") {\n\t\t\t\t\tp.push(Object.keys(service.actions).map(action => this.subscribeBalancedRequest(action)));\n\t\t\t\t}\n\n\t\t\t\t// Load-balanced/grouped events queues\n\t\t\t\tif (service.events && typeof(service.events) == \"object\") {\n\t\t\t\t\tp.push(Object.keys(service.events).map(event => {\n\t\t\t\t\t\tconst group = service.events[event].group || service.name;\n\t\t\t\t\t\tthis.subscribeBalancedEvent(event, group);\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\treturn this.broker.Promise.all(_.compact(flatten(p, true)));\n\t\t\t}));\n\t\t});\n\t}\n\n\t/**\n\t * Prepublish a packet. Handle balancing.\n\t *\n\t * @param {Packet} packet\n\t * @returns {Promise}\n\t * @memberof BaseTransporter\n\t */\n\tprepublish(packet) {\n\t\t// Safely handle disconnected state\n\t\tif (!this.connected) {\n\t\t\t// For packets that are triggered intentionally by users, throw a retryable error.\n\t\t\tif ([P.PACKET_REQUEST, P.PACKET_EVENT, P.PACKET_PING].includes(packet.type)) {\n\t\t\t\treturn this.broker.Promise.reject(new BrokerDisconnectedError());\n\t\t\t}\n\n\t\t\t// For internal packets like INFO and HEARTBEATS, skip sending and don't throw\n\t\t\telse {\n\t\t\t\treturn this.broker.Promise.resolve();\n\t\t\t}\n\t\t}\n\n\t\tif (packet.type === P.PACKET_EVENT && packet.target == null && packet.payload.groups) {\n\t\t\tconst groups = packet.payload.groups;\n\t\t\t// If the packet contains groups, we don't send the packet to\n\t\t\t// the targetted node, but we push them to the event group queues\n\t\t\t// and AMQP will load-balanced it.\n\t\t\tif (groups.length > 0) {\n\t\t\t\tgroups.forEach(group => {\n\t\t\t\t\t// Change the groups to this group to avoid multi handling in consumers.\n\t\t\t\t\tpacket.payload.groups = [group];\n\t\t\t\t\tthis.publishBalancedEvent(packet, group);\n\t\t\t\t});\n\t\t\t\treturn this.broker.Promise.resolve();\n\t\t\t}\n\t\t\t// If it's not contain, then it is a broadcasted event,\n\t\t\t// we sent it in the normal way (exchange)\n\n\t\t} else if (packet.type === P.PACKET_REQUEST && packet.target == null) {\n\t\t\treturn this.publishBalancedRequest(packet);\n\t\t}\n\n\t\t// Normal packet publishing...\n\t\treturn this.publish(packet);\n\t}\n\n\t/**\n\t * Serialize the Packet to Buffer\n\t *\n\t * @param {Packet} packet\n\t * @returns {Buffer}\n\t *\n\t * @memberof Transit\n\t */\n\tserialize(packet) {\n\t\tpacket.payload.ver = this.broker.PROTOCOL_VERSION;\n\t\tpacket.payload.sender = this.nodeID;\n\t\treturn this.broker.serializer.serialize(packet.payload, packet.type);\n\t}\n\n\t/**\n\t * Deserialize the incoming Buffer to Packet\n\t *\n\t * @param {String} type\n\t * @param {Buffer} buf\n\t * @returns {Packet}\n\t *\n\t * @memberof Transit\n\t */\n\tdeserialize(type, buf) {\n\t\tif (buf == null) return null;\n\n\t\tconst msg = this.broker.serializer.deserialize(buf, type);\n\t\treturn new P.Packet(type, null, msg);\n\n\t}\n}\n\nmodule.exports = BaseTransporter;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Transporter \t= require(\"./base\");\n\nconst EventEmitter2 = require(\"eventemitter2\").EventEmitter2;\n\n// Put to global to transfer messages between brokers in the same process\nglobal.bus = new EventEmitter2({\n\twildcard: true,\n\tmaxListeners: 100\n});\n\n/**\n * Fake Transporter\n *\n * @class FakeTransporter\n * @extends {Transporter}\n */\nclass FakeTransporter extends Transporter {\n\n\t/**\n\t * Creates an instance of FakeTransporter.\n\t *\n\t * @param {any} opts\n\t *\n\t * @memberof FakeTransporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\t// Local event bus\n\t\tthis.bus = global.bus;\n\t\tthis.hasBuiltInBalancer = true;\n\n\t\tthis.subscriptions = [];\n\t}\n\n\t/**\n\t * Connect to a NATS server\n\t *\n\t * @memberof FakeTransporter\n\t */\n\tconnect() {\n\t\treturn this.onConnected();\n\t}\n\n\t/**\n\t * Disconnect from a NATS server\n\t *\n\t * @memberof FakeTransporter\n\t */\n\tdisconnect() {\n\t\tthis.connected = false;\n\t\tthis.subscriptions.forEach(({ topic, handler }) => this.bus.off(topic, handler));\n\t\tthis.subscriptions = [];\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Subscribe to a command\n\t *\n\t * @param {String} cmd\n\t * @param {String} nodeID\n\t *\n\t * @memberof FakeTransporter\n\t */\n\tsubscribe(cmd, nodeID) {\n\t\tconst t = this.getTopicName(cmd, nodeID);\n\t\tconst handler = msg => this.receive(cmd, msg);\n\t\tthis.subscriptions.push({ topic: t, handler });\n\n\t\tthis.bus.on(t, handler);\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Subscribe to balanced action commands\n\t *\n\t * @param {String} action\n\t * @memberof AmqpTransporter\n\t */\n\tsubscribeBalancedRequest(/*action*/) {\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Subscribe to balanced event command\n\t *\n\t * @param {String} event\n\t * @param {String} group\n\t * @memberof AmqpTransporter\n\t */\n\tsubscribeBalancedEvent(/*event, group*/) {\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Send data buffer.\n\t *\n\t * @param {String} topic\n\t * @param {Buffer} data\n\t * @param {Object} meta\n\t *\n\t * @returns {Promise}\n\t */\n\tsend(topic, data) {\n\t\tthis.bus.emit(topic, data);\n\t\treturn this.broker.Promise.resolve();\n\t}\n}\n\nmodule.exports = FakeTransporter;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Transporters = {\n\tBase: require(\"./base\"),\n\tFake: require(\"./fake\"),\n\tNATS: require(\"./nats\"),\n\tMQTT: require(\"./mqtt\"),\n\tRedis: require(\"./redis\"),\n\tAMQP: require(\"./amqp\"),\n\tAMQP10: require(\"./amqp10\"),\n\tKafka: require(\"./kafka\"),\n\tSTAN: require(\"./stan\"),\n\tTCP: require(\"./tcp\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Transporters).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Transporters[n];\n}\n\n/**\n * Resolve transporter by name\n *\n * @param {object|string} opt\n * @returns {Transporter}\n */\nfunction resolve(opt) {\n\tif (opt instanceof Transporters.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet TransporterClass = getByName(opt);\n\t\tif (TransporterClass)\n\t\t\treturn new TransporterClass();\n\n\t\tif (opt.startsWith(\"nats://\"))\n\t\t\tTransporterClass = Transporters.NATS;\n\t\telse if (opt.startsWith(\"mqtt://\") || opt.startsWith(\"mqtts://\"))\n\t\t\tTransporterClass = Transporters.MQTT;\n\t\telse if (opt.startsWith(\"redis://\") || opt.startsWith(\"rediss://\"))\n\t\t\tTransporterClass = Transporters.Redis;\n\t\telse if (opt.startsWith(\"amqp://\") || opt.startsWith(\"amqps://\"))\n\t\t\tTransporterClass = Transporters.AMQP;\n\t\telse if (opt.startsWith(\"amqp10://\"))\n\t\t\tTransporterClass = Transporters.AMQP10;\n\t\telse if (opt.startsWith(\"kafka://\"))\n\t\t\tTransporterClass = Transporters.Kafka;\n\t\telse if (opt.startsWith(\"stan://\"))\n\t\t\tTransporterClass = Transporters.STAN;\n\t\telse if (opt.startsWith(\"tcp://\"))\n\t\t\tTransporterClass = Transporters.TCP;\n\n\t\tif (TransporterClass)\n\t\t\treturn new TransporterClass(opt);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid transporter type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet TransporterClass = getByName(opt.type || \"NATS\");\n\n\t\tif (TransporterClass)\n\t\t\treturn new TransporterClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid transporter type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn null;\n}\n\nfunction register(name, value) {\n\tTransporters[name] = value;\n}\n\n\nmodule.exports = Object.assign(Transporters, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst P = require(\"../packets\");\n\n/**\n * Abstract serializer class\n *\n * @class Serializer\n */\nclass Serializer {\n\n\t/**\n\t * Creates an instance of Serializer.\n\t *\n\t * @memberof Serializer\n\t */\n\tconstructor() {\n\t}\n\n\t/**\n\t * Initialize Serializer\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof Serializer\n\t */\n\tinit(broker) {\n\t\tthis.broker = broker;\n\t\t/*if (this.broker) {\n\t\t\tthis.logger = broker.getLogger(\"serializer\");\n\t\t}*/\n\t}\n\n\t/**\n\t * Serializer a JS object to Buffer\n\t *\n\t * @param {Object} obj\n\t * @param {String} type of packet\n\t * @returns {Buffer}\n\t *\n\t * @memberof Serializer\n\t */\n\tserialize(/*obj, type*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Deserialize Buffer to JS object\n\t *\n\t * @param {Buffer} buf\n\t * @param {String} type of packet\n\t * @returns {Object}\n\t *\n\t * @memberof Serializer\n\t */\n\tdeserialize(/*buf, type*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Serialize custom fields (stringify)\n\t *\n\t * @param {String} type\n\t * @param {Packet} obj\n\t * @returns {Packet}\n\t * @memberof Serializer\n\t */\n\tserializeCustomFields(type, obj) {\n\t\tswitch (type) {\n\t\t\tcase P.PACKET_INFO: {\n\t\t\t\tobj.services = JSON.stringify(obj.services);\n\t\t\t\tif (obj.config)\n\t\t\t\t\tobj.config = JSON.stringify(obj.config);\n\t\t\t\tif (obj.metadata)\n\t\t\t\t\tobj.metadata = JSON.stringify(obj.metadata);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_EVENT: {\n\t\t\t\tthis.convertDataToTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.stringify(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_REQUEST: {\n\t\t\t\tthis.convertDataToTransport(obj, \"params\", \"paramsType\");\n\t\t\t\tobj.meta = JSON.stringify(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_RESPONSE: {\n\t\t\t\tthis.convertDataToTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.stringify(obj.meta);\n\t\t\t\tif (obj.error)\n\t\t\t\t\tobj.error = JSON.stringify(obj.error);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_REQ: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.stringify(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.stringify(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_RES: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.stringify(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.stringify(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\t/**\n\t * Deserialize custom fields\n\t *\n\t * @param {String} type\n\t * @param {Packet} obj\n\t * @returns {Packet}\n\t * @memberof Serializer\n\t */\n\tdeserializeCustomFields(type, obj) {\n\t\tswitch (type) {\n\t\t\tcase P.PACKET_INFO: {\n\t\t\t\tobj.services = JSON.parse(obj.services);\n\t\t\t\tif (obj.config)\n\t\t\t\t\tobj.config = JSON.parse(obj.config);\n\t\t\t\tif (obj.metadata)\n\t\t\t\t\tobj.metadata = JSON.parse(obj.metadata);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_EVENT: {\n\t\t\t\tthis.convertDataFromTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.parse(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_REQUEST: {\n\t\t\t\tthis.convertDataFromTransport(obj, \"params\", \"paramsType\");\n\t\t\t\tobj.meta = JSON.parse(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_RESPONSE: {\n\t\t\t\tthis.convertDataFromTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.parse(obj.meta);\n\t\t\t\tif (obj.error)\n\t\t\t\t\tobj.error = JSON.parse(obj.error);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_REQ: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.parse(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.parse(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_RES: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.parse(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.parse(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\tconvertDataToTransport(obj, field, fieldType) {\n\t\tif (obj[field] === undefined) {\n\t\t\tobj[fieldType] = P.DATATYPE_UNDEFINED;\n\t\t} else if (obj[field] === null) {\n\t\t\tobj[fieldType] = P.DATATYPE_NULL;\n\t\t} else if (Buffer.isBuffer(obj[field])) {\n\t\t\tobj[fieldType] = P.DATATYPE_BUFFER;\n\t\t} else {\n\t\t\t// JSON\n\t\t\tobj[fieldType] = P.DATATYPE_JSON;\n\t\t\tobj[field] = Buffer.from(JSON.stringify(obj[field]));\n\t\t}\n\t}\n\n\tconvertDataFromTransport(obj, field, fieldType) {\n\t\tconst type = obj[fieldType];\n\t\tswitch(type) {\n\t\t\tcase P.DATATYPE_UNDEFINED: {\n\t\t\t\tobj[field] = undefined;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.DATATYPE_NULL: {\n\t\t\t\tobj[field] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.DATATYPE_BUFFER: {\n\t\t\t\tif (!Buffer.isBuffer(obj[field]))\n\t\t\t\t\tobj[field] = Buffer.from(obj[field]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// JSON\n\t\t\t\tobj[field] = JSON.parse(obj[field]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tdelete obj[fieldType];\n\t}\n}\n\nmodule.exports = Serializer;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseSerializer  \t= require(\"./base\");\n/**\n * JSON serializer for Moleculer\n *\n * @class JSONSerializer\n */\nclass JSONSerializer extends BaseSerializer {\n\n\t/**\n\t * Creates an instance of JSONSerializer.\n\t *\n\t * @memberof JSONSerializer\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * Serializer a JS object to Buffer\n\t *\n\t * @param {Object} obj\n\t * @param {String} type of packet\n\t * @returns {Buffer}\n\t *\n\t * @memberof Serializer\n\t */\n\tserialize(obj) {\n\t\treturn Buffer.from(JSON.stringify(obj));\n\t}\n\n\t/**\n\t * Deserialize Buffer to JS object\n\t *\n\t * @param {Buffer} buf\n\t * @param {String} type of packet\n\t * @returns {Object}\n\t *\n\t * @memberof Serializer\n\t */\n\tdeserialize(buf) {\n\t\treturn JSON.parse(buf);\n\t}\n}\n\nmodule.exports = JSONSerializer;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Serializers = {\n\tBase: require(\"./base\"),\n\tJSON: require(\"./json\"),\n\tAvro: require(\"./avro\"),\n\tMsgPack: require(\"./msgpack\"),\n\tProtoBuf: require(\"./protobuf\"),\n\tThrift: require(\"./thrift\"),\n\tNotepack: require(\"./notepack\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Serializers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Serializers[n];\n}\n\n/**\n * Resolve serializer by name\n *\n * @param {object|string} opt\n * @returns {Serializer}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Serializers.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet SerializerClass = getByName(opt);\n\t\tif (SerializerClass)\n\t\t\treturn new SerializerClass();\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid serializer type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet SerializerClass = getByName(opt.type || \"JSON\");\n\t\tif (SerializerClass)\n\t\t\treturn new SerializerClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid serializer type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn new Serializers.JSON();\n}\n\nfunction register(name, value) {\n\tSerializers[name] = value;\n}\n\nmodule.exports = Object.assign(Serializers, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst os = require(\"os\");\nconst { getIpList } = require(\"./utils\");\nconst MOLECULER_VERSION = require(\"../package.json\").version;\n\nconst getClientInfo = () => {\n\treturn {\n\t\ttype: \"nodejs\",\n\t\tversion: MOLECULER_VERSION,\n\t\tlangVersion: process.version\n\t};\n};\n\nconst getCpuInfo = () => {\n\tconst cpus = os.cpus();\n\tconst load = os.loadavg();\n\tconst cpu = {\n\t\tload1: load[0],\n\t\tload5: load[1],\n\t\tload15: load[2],\n\t\tcores: Array.isArray(cpus) ? os.cpus().length : null,\n\t};\n\tcpu.utilization = Math.min(Math.floor(load[0] * 100 / cpu.cores), 100);\n\n\treturn cpu;\n};\n\nconst getMemoryInfo = () => {\n\tconst mem = {\n\t\tfree: os.freemem(),\n\t\ttotal: os.totalmem()\n\t};\n\tmem.percent = (mem.free * 100 / mem.total);\n\n\treturn mem;\n};\n\nconst getUserInfo = () => {\n\ttry {\n\t\treturn os.userInfo();\n\t} catch (e) {\n\t\treturn {};\n\t}\n};\n\nconst getOsInfo = () => {\n\treturn {\n\t\tuptime: os.uptime(),\n\t\ttype: os.type(),\n\t\trelease: os.release(),\n\t\thostname: os.hostname(),\n\t\tarch: os.arch(),\n\t\tplatform: os.platform(),\n\t\tuser: getUserInfo()\n\t};\n};\n\nconst getProcessInfo = () => {\n\treturn {\n\t\tpid: process.pid,\n\t\tmemory: process.memoryUsage(),\n\t\tuptime: process.uptime(),\n\t\targv: process.argv\n\t};\n};\n\nconst getNetworkInterfacesInfo = () => {\n\treturn {\n\t\tip:  getIpList()\n\t};\n};\n\nconst getDateTimeInfo = () => {\n\treturn {\n\t\tnow: Date.now(),\n\t\tiso: new Date().toISOString(),\n\t\tutc: new Date().toUTCString()\n\t};\n};\n\nconst getHealthStatus = (/*broker*/) => {\n\treturn {\n\t\tcpu: getCpuInfo(),\n\t\tmem: getMemoryInfo(),\n\t\tos: getOsInfo(),\n\t\tprocess: getProcessInfo(),\n\t\tclient: getClientInfo(),\n\t\tnet: getNetworkInterfacesInfo(),\n\t\ttime: getDateTimeInfo()\n\t};\n};\n\nmodule.exports = {\n\tgetHealthStatus,\n\tgetCpuInfo,\n\tgetMemoryInfo,\n\tgetOsInfo,\n\tgetProcessInfo,\n\tgetClientInfo,\n\tgetNetworkInterfacesInfo,\n\tgetDateTimeInfo\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isFunction, isString } = require(\"../utils\");\n\nmodule.exports = function actionHookMiddleware(broker) {\n\n\tfunction callHook(hook, service, ctx, res) {\n\t\tif (isFunction(hook)) {\n\t\t\treturn hook.call(service, ctx, res);\n\t\t} else if (Array.isArray(hook)) {\n\t\t\treturn hook.reduce((p, fn) => p.then(res => fn.call(service, ctx, res)), broker.Promise.resolve(res));\n\t\t}\n\t}\n\n\tfunction callErrorHook(hook, service, ctx, err) {\n\t\tif (isFunction(hook)) {\n\t\t\treturn hook.call(service, ctx, err);\n\t\t} else if (Array.isArray(hook)) {\n\t\t\treturn hook.reduce((p, fn) => p.catch(err => fn.call(service, ctx, err)), broker.Promise.reject(err));\n\t\t}\n\t}\n\n\t/**\n\t * Sanitize hooks. If the hook is a string, convert it to Service method calling.\n\t *\n\t * @param {Function|String|Array<any>} hooks\n\t * @param {Service?} service\n\t * @returns\n\t */\n\tfunction sanitizeHooks(hooks, service) {\n\t\tif (isString(hooks))\n\t\t\treturn service && isFunction(service[hooks]) ? service[hooks] : null;\n\n\t\tif (Array.isArray(hooks)) {\n\t\t\treturn _.compact(hooks.map(h => {\n\t\t\t\tif (isString(h))\n\t\t\t\t\treturn service && isFunction(service[h]) ? service[h] : null;\n\n\t\t\t\treturn h;\n\t\t\t}));\n\t\t}\n\n\t\treturn hooks;\n\t}\n\n\tfunction wrapActionHookMiddleware(handler, action) {\n\t\tconst name = action.rawName || action.name;\n\t\tconst hooks = action.service && action.service.schema ? action.service.schema.hooks : null;\n\t\tif (hooks || action.hooks) {\n\t\t\t// Global hooks\n\t\t\tconst beforeAllHook = hooks && hooks.before ? sanitizeHooks(hooks.before[\"*\"], action.service) : null;\n\t\t\tconst afterAllHook = hooks && hooks.after ? sanitizeHooks(hooks.after[\"*\"], action.service) : null;\n\t\t\tconst errorAllHook = hooks && hooks.error ? sanitizeHooks(hooks.error[\"*\"], action.service) : null;\n\n\t\t\t// Hooks in service\n\t\t\tconst beforeHook = hooks && hooks.before ? sanitizeHooks(hooks.before[name], action.service) : null;\n\t\t\tconst afterHook = hooks && hooks.after ? sanitizeHooks(hooks.after[name], action.service) : null;\n\t\t\tconst errorHook = hooks && hooks.error ? sanitizeHooks(hooks.error[name], action.service) : null;\n\n\t\t\t// Hooks in action definition\n\t\t\tconst actionBeforeHook = action.hooks && action.hooks.before ? sanitizeHooks(action.hooks.before, action.service) : null;\n\t\t\tconst actionAfterHook = action.hooks && action.hooks.after ? sanitizeHooks(action.hooks.after, action.service) : null;\n\t\t\tconst actionErrorHook = action.hooks && action.hooks.error ? sanitizeHooks(action.hooks.error, action.service) : null;\n\n\t\t\tif (beforeAllHook || beforeHook || actionBeforeHook\n\t\t\t\t|| afterAllHook || afterHook || actionAfterHook\n\t\t\t\t|| errorAllHook || errorHook || actionErrorHook) {\n\t\t\t\treturn function actionHookMiddleware(ctx) {\n\t\t\t\t\tlet p = broker.Promise.resolve();\n\n\t\t\t\t\t// Before hook all\n\t\t\t\t\tif (beforeAllHook)\n\t\t\t\t\t\tp = p.then(() => callHook(beforeAllHook, ctx.service, ctx));\n\n\t\t\t\t\t// Before hook\n\t\t\t\t\tif (beforeHook)\n\t\t\t\t\t\tp = p.then(() => callHook(beforeHook, ctx.service, ctx));\n\n\t\t\t\t\t// Before hook in action definition\n\t\t\t\t\tif (actionBeforeHook)\n\t\t\t\t\t\tp = p.then(() => callHook(actionBeforeHook, ctx.service, ctx));\n\n\t\t\t\t\t// Action hook handler\n\t\t\t\t\tp = p.then(() => handler(ctx));\n\n\t\t\t\t\t// After hook in action definition\n\t\t\t\t\tif (actionAfterHook)\n\t\t\t\t\t\tp = p.then(res => callHook(actionAfterHook, ctx.service, ctx, res));\n\n\t\t\t\t\t// After hook\n\t\t\t\t\tif (afterHook)\n\t\t\t\t\t\tp = p.then(res => callHook(afterHook, ctx.service, ctx, res));\n\n\t\t\t\t\t// After hook all\n\t\t\t\t\tif (afterAllHook)\n\t\t\t\t\t\tp = p.then(res => callHook(afterAllHook, ctx.service, ctx, res));\n\n\t\t\t\t\t// Error hook in action definition\n\t\t\t\t\tif (actionErrorHook)\n\t\t\t\t\t\tp = p.catch(err => callErrorHook(actionErrorHook, ctx.service, ctx, err));\n\n\t\t\t\t\t// Error hook\n\t\t\t\t\tif (errorHook)\n\t\t\t\t\t\tp = p.catch(err => callErrorHook(errorHook, ctx.service, ctx, err));\n\n\t\t\t\t\t// Error hook all\n\t\t\t\t\tif (errorAllHook)\n\t\t\t\t\t\tp = p.catch(err => callErrorHook(errorAllHook, ctx.service, ctx, err));\n\n\t\t\t\t\treturn p;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"ActionHook\",\n\t\tlocalAction: wrapActionHookMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { QueueIsFullError } = require(\"../errors\");\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function bulkheadMiddleware(broker) {\n\n\tfunction wrapActionBulkheadMiddleware(handler, action) {\n\t\tconst service = action.service;\n\n\t\tconst opts = Object.assign({}, this.options.bulkhead || {}, action.bulkhead || {});\n\t\tif (opts.enabled) {\n\t\t\tconst queue = [];\n\t\t\tlet currentInFlight = 0;\n\n\t\t\t// Call the next request from the queue\n\t\t\tconst callNext = function callNext() {\n\t\t\t/* istanbul ignore next */\n\t\t\t\tif (queue.length == 0) return;\n\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (currentInFlight >= opts.concurrency) return;\n\n\t\t\t\tconst item = queue.shift();\n\n\t\t\t\tcurrentInFlight++;\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\n\t\t\t\thandler(item.ctx)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\t\titem.resolve(res);\n\t\t\t\t\t\tcallNext();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\t\titem.reject(err);\n\t\t\t\t\t\tcallNext();\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn function bulkheadMiddleware(ctx) {\n\t\t\t// Call handler without waiting\n\t\t\t\tif (currentInFlight < opts.concurrency) {\n\t\t\t\t\tcurrentInFlight++;\n\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\treturn handler(ctx)\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\t\t\tcallNext();\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\t\t\tcallNext();\n\t\t\t\t\t\t\treturn broker.Promise.reject(err);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Check whether the queue is full\n\t\t\t\tif (opts.maxQueueSize && queue.length >= opts.maxQueueSize) {\n\t\t\t\t\treturn broker.Promise.reject(new QueueIsFullError({ action: ctx.action.name, nodeID: ctx.nodeID }));\n\t\t\t\t}\n\n\t\t\t\t// Store the request in the queue\n\t\t\t\tconst p = new Promise((resolve, reject) => queue.push({ resolve, reject, ctx }));\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\n\t\t\t\treturn p;\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\tfunction wrapEventBulkheadMiddleware(handler, event) {\n\t\tconst service = event.service;\n\n\t\tconst opts = Object.assign({}, this.options.bulkhead || {}, event.bulkhead || {});\n\t\tif (opts.enabled) {\n\t\t\tconst queue = [];\n\t\t\tlet currentInFlight = 0;\n\n\t\t\t// Call the next request from the queue\n\t\t\tconst callNext = function callNext() {\n\t\t\t/* istanbul ignore next */\n\t\t\t\tif (queue.length == 0) return;\n\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (currentInFlight >= opts.concurrency) return;\n\n\t\t\t\tconst item = queue.shift();\n\n\t\t\t\tcurrentInFlight++;\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\n\t\t\t\thandler(item.ctx)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\t\titem.resolve(res);\n\t\t\t\t\t\tcallNext();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\t\titem.reject(err);\n\t\t\t\t\t\tcallNext();\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn function bulkheadMiddleware(ctx) {\n\t\t\t\t// Call handler without waiting\n\t\t\t\tif (currentInFlight < opts.concurrency) {\n\t\t\t\t\tcurrentInFlight++;\n\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\treturn handler(ctx)\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\t\t\tcallNext();\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\t\t\tcallNext();\n\t\t\t\t\t\t\treturn broker.Promise.reject(err);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Check whether the queue is full\n\t\t\t\tif (opts.maxQueueSize && queue.length >= opts.maxQueueSize) {\n\t\t\t\t\treturn broker.Promise.reject(new QueueIsFullError({ event: ctx.eventName, service: service.fullName, nodeID: ctx.nodeID }));\n\t\t\t\t}\n\n\t\t\t\t// Store the request in the queue\n\t\t\t\tconst p = new Promise((resolve, reject) => queue.push({ resolve, reject, ctx }));\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\n\t\t\t\treturn p;\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\n\treturn {\n\t\tname: \"Bulkhead\",\n\n\t\tcreated() {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, type: METRIC.TYPE_GAUGE, labelNames: [\"action\", \"service\"] });\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, type: METRIC.TYPE_GAUGE, labelNames: [\"action\", \"service\"] });\n\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, type: METRIC.TYPE_GAUGE, labelNames: [\"event\", \"service\"] });\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, type: METRIC.TYPE_GAUGE, labelNames: [\"event\", \"service\"] });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapActionBulkheadMiddleware,\n\t\tlocalEvent: wrapEventBulkheadMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { GracefulStopTimeoutError } = require(\"../errors\");\n\nmodule.exports = function ContextTrackerMiddleware(broker) {\n\n\tfunction addContext(ctx) {\n\t\tif (ctx.service) {\n\t\t// Local request\n\t\t\tctx.service._trackedContexts.push(ctx);\n\t\t} else {\n\t\t// Remote request\n\t\t\tctx.broker._trackedContexts.push(ctx);\n\t\t}\n\t}\n\n\tfunction removeContext(ctx) {\n\t\tif (ctx.service) {\n\t\t\tconst idx = ctx.service._trackedContexts.indexOf(ctx);\n\t\t\tif (idx !== -1)\n\t\t\t\tctx.service._trackedContexts.splice(idx, 1);\n\t\t} else {\n\t\t\tconst idx = ctx.broker._trackedContexts.indexOf(ctx);\n\t\t\tif (idx !== -1)\n\t\t\t\tctx.broker._trackedContexts.splice(idx, 1);\n\t\t}\n\t}\n\n\tfunction wrapTrackerMiddleware(handler) {\n\t\tif (this.options.tracking && this.options.tracking.enabled) {\n\n\t\t\treturn function ContextTrackerMiddleware(ctx) {\n\n\t\t\t\tconst tracked = ctx.options.tracking != null ? ctx.options.tracking : this.options.tracking.enabled;\n\n\t\t\t\t// If no need to track\n\t\t\t\tif (!tracked)\n\t\t\t\t\treturn handler(ctx);\n\n\t\t\t\t// Track the context\n\t\t\t\taddContext(ctx);\n\n\t\t\t\t// Call the handler\n\t\t\t\tlet p = handler(ctx);\n\n\t\t\t\tp = p.then(res => {\n\t\t\t\t\tremoveContext(ctx);\n\t\t\t\t\treturn res;\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tremoveContext(ctx);\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\n\t\t\t\treturn p;\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\tfunction waitingForActiveContexts(list, logger, time, service) {\n\t\tif (!list || list.length === 0)\n\t\t\treturn broker.Promise.resolve();\n\n\t\treturn new broker.Promise((resolve) => {\n\t\t\tlet timedOut = false;\n\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\ttimedOut = true;\n\t\t\t\tlogger.error(new GracefulStopTimeoutError({ service }));\n\t\t\t\tlist.length = 0; // Clear pointers\n\t\t\t\tresolve();\n\t\t\t}, time);\n\n\t\t\tlet first = true;\n\t\t\tconst checkForContexts = () => {\n\t\t\t\tif (list.length === 0) {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\tif (first) {\n\t\t\t\t\t\tlogger.warn(`Waiting for ${list.length} running context(s)...`);\n\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!timedOut)\n\t\t\t\t\t\tsetTimeout(checkForContexts, 100);\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetImmediate(checkForContexts);\n\t\t});\n\t}\n\n\treturn {\n\t\tname: \"ContextTracker\",\n\n\t\tlocalAction: wrapTrackerMiddleware,\n\t\tremoteAction: wrapTrackerMiddleware,\n\n\t\tlocalEvent: wrapTrackerMiddleware,\n\n\t\t// After the broker created\n\t\tcreated(broker) {\n\t\t\tbroker._trackedContexts = [];\n\t\t},\n\n\t\t// Before a local service started\n\t\tserviceStarting(service) {\n\t\t\tservice._trackedContexts = [];\n\t\t},\n\n\t\t// Before a local service stopping\n\t\tserviceStopping(service) {\n\t\t\treturn waitingForActiveContexts(service._trackedContexts, service.logger, service.settings.$shutdownTimeout || service.broker.options.tracking.shutdownTimeout, service);\n\t\t},\n\n\t\t// Before broker stopping\n\t\tstopping(broker) {\n\t\t\treturn waitingForActiveContexts(broker._trackedContexts, broker.logger, broker.options.tracking.shutdownTimeout);\n\t\t},\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst C \t\t\t= require(\"../constants\");\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function circuitBreakerMiddleware(broker) {\n\n\tlet windowTimer;\n\tconst store = new Map();\n\tlet logger;\n\n\t/**\n\t * Create timer to clear endpoint store\n\t *\n\t * @param {Number} windowTime\n\t */\n\tfunction createWindowTimer(windowTime) {\n\t\tif (!windowTimer) {\n\t\t\twindowTimer = setInterval(() => resetStore(), (windowTime || 60) * 1000);\n\t\t\twindowTimer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Clear endpoint state store\n\t */\n\tfunction resetStore() {\n\t\tif (!logger) return;\n\n\t\tlogger.debug(\"Reset circuit-breaker endpoint states...\");\n\t\tstore.forEach((item, key) => {\n\t\t\tif (item.count == 0) {\n\t\t\t\tlogger.debug(`Remove '${key}' endpoint state because it is not used`);\n\t\t\t\tstore.delete(key);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogger.debug(`Clean '${key}' endpoint state.`);\n\t\t\titem.count = 0;\n\t\t\titem.failures = 0;\n\t\t});\n\t}\n\n\t/**\n\t * Get Endpoint state from store. If not exists, create it.\n\t *\n\t * @param {Endpoint} ep\n\t * @param {Service} service\n\t * @param {Object} opts\n\t * @returns {Object}\n\t */\n\tfunction getEpState(ep, service, opts) {\n\t\tlet item = store.get(ep.name);\n\t\tif (!item) {\n\t\t\titem = {\n\t\t\t\tep,\n\t\t\t\tservice,\n\t\t\t\topts,\n\t\t\t\tcount: 0,\n\t\t\t\tfailures: 0,\n\t\t\t\tstate: C.CIRCUIT_CLOSE,\n\t\t\t\tcbTimer: null\n\t\t\t};\n\t\t\tstore.set(ep.name, item);\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t * Increment failure counter\n\t *\n\t * @param {Object} item\n\t * @param {Error} err\n\t * @param {Context} ctx\n\t */\n\tfunction failure(item, err, ctx) {\n\t\titem.count++;\n\t\titem.failures++;\n\n\t\tcheckThreshold(item, ctx);\n\t}\n\n\t/**\n\t * Increment request counter and switch CB to CLOSE if it is on HALF_OPEN_WAIT.\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction success(item, ctx) {\n\t\titem.count++;\n\n\t\tif (item.state === C.CIRCUIT_HALF_OPEN_WAIT)\n\t\t\tcircuitClose(item, ctx);\n\t\telse\n\t\t\tcheckThreshold(item, ctx);\n\t}\n\n\t/**\n\t * Check circuit-breaker failure threshold of Endpoint\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction checkThreshold(item, ctx) {\n\t\tif (item.count >= item.opts.minRequestCount) {\n\t\t\tconst rate = item.failures / item.count;\n\t\t\tif (rate >= item.opts.threshold)\n\t\t\t\ttrip(item, ctx);\n\t\t}\n\t}\n\n\t/**\n\t * Trip the circuit-breaker, change the status to open\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction trip(item, ctx) {\n\t\tif (item.state == C.CIRCUIT_OPEN) return;\n\n\t\titem.state = C.CIRCUIT_OPEN;\n\t\titem.ep.state = false;\n\n\t\tif (item.cbTimer) {\n\t\t\tclearTimeout(item.cbTimer);\n\t\t\titem.cbTimer = null;\n\t\t}\n\n\t\titem.cbTimer = setTimeout(() => halfOpen(item, ctx), item.opts.halfOpenTime);\n\t\titem.cbTimer.unref();\n\n\t\tconst action = item.ep.action;\n\t\tconst service = item.service.fullName;\n\n\t\tconst rate = item.count > 0 ? item.failures / item.count : 0;\n\t\tlogger.debug(`Circuit breaker has been opened on '${item.ep.name}' endpoint.`, { nodeID: item.ep.id, service, action: action.name, failures: item.failures, count: item.count, rate });\n\t\tbroker.broadcast(\"$circuit-breaker.opened\", { nodeID: item.ep.id, service, action: action.name, failures: item.failures, count: item.count, rate });\n\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, 1, { affectedNodeID: item.ep.id, service, action: action.name });\n\t\tbroker.metrics.increment(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL, { affectedNodeID: item.ep.id, service, action: action.name });\n\t}\n\n\t/**\n\t * Change circuit-breaker status to half-open\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction halfOpen(item) {\n\t\titem.state = C.CIRCUIT_HALF_OPEN;\n\t\titem.ep.state = true;\n\n\t\tconst action = item.ep.action;\n\t\tconst service = item.service.fullName;\n\n\t\tlogger.debug(`Circuit breaker has been half-opened on '${item.ep.name}' endpoint.`, { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.broadcast(\"$circuit-breaker.half-opened\", { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, 0, { affectedNodeID: item.ep.id, service, action: action.name });\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE, 1, { affectedNodeID: item.ep.id, service, action: action.name });\n\n\t\tif (item.cbTimer) {\n\t\t\tclearTimeout(item.cbTimer);\n\t\t\titem.cbTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Change circuit-breaker status to half-open waiting. First request is invoked after half-open.\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t*/\n\tfunction halfOpenWait(item, ctx) {\n\t\titem.state = C.CIRCUIT_HALF_OPEN_WAIT;\n\t\titem.ep.state = false;\n\n\t\t// Anti-stick protection\n\t\titem.cbTimer = setTimeout(() => halfOpen(item, ctx), item.opts.halfOpenTime);\n\t\titem.cbTimer.unref();\n\t}\n\n\t/**\n\t * Change circuit-breaker status to close\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction circuitClose(item) {\n\t\titem.state = C.CIRCUIT_CLOSE;\n\t\titem.ep.state = true;\n\t\titem.failures = 0;\n\t\titem.count = 0;\n\n\t\tconst action = item.ep.action;\n\t\tconst service = item.service.fullName;\n\n\t\tlogger.debug(`Circuit breaker has been closed on '${item.ep.name}' endpoint.`, { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.broadcast(\"$circuit-breaker.closed\", { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, 0, { affectedNodeID: item.ep.id, service, action: action.name });\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE, 0, { affectedNodeID: item.ep.id, service, action: action.name });\n\n\t\tif (item.cbTimer) {\n\t\t\tclearTimeout(item.cbTimer);\n\t\t\titem.cbTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Middleware wrapper function\n\t *\n\t * @param {Function} handler\n\t * @param {Action} action\n\t * @returns {Function}\n\t */\n\tfunction wrapCBMiddleware(handler, action) {\n\t\tconst service = action.service;\n\t\t// Merge action option and broker options\n\t\tconst opts = Object.assign({}, this.options.circuitBreaker || {}, action.circuitBreaker || {});\n\t\tif (opts.enabled) {\n\t\t\treturn function circuitBreakerMiddleware(ctx) {\n\t\t\t\t// Get endpoint state item\n\t\t\t\tconst ep = ctx.endpoint;\n\t\t\t\tconst item = getEpState(ep, service, opts);\n\n\t\t\t\t// Handle half-open state in circuit breaker\n\t\t\t\tif (item.state == C.CIRCUIT_HALF_OPEN) {\n\t\t\t\t\thalfOpenWait(item, ctx);\n\t\t\t\t}\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler(ctx).then(res => {\n\t\t\t\t\tconst item = getEpState(ep, service, opts);\n\t\t\t\t\tsuccess(item, ctx);\n\n\t\t\t\t\treturn res;\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tif (opts.check && opts.check(err)) {\n\t\t\t\t\t\t// Failure if error is created locally (not came from a 3rd node error)\n\t\t\t\t\t\tif (item && (!err.nodeID || err.nodeID == ctx.nodeID)) {\n\t\t\t\t\t\t\tconst item = getEpState(ep, service, opts);\n\t\t\t\t\t\t\tfailure(item, err, ctx);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.Promise.reject(err);\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\n\treturn {\n\t\tname: \"CircuitBreaker\",\n\n\t\tcreated(broker) {\n\t\t\tlogger = broker.getLogger(\"circuit-breaker\");\n\n\t\t\t// Expose the internal state store.\n\t\t\tbroker.CircuitBreakerStore = store;\n\n\t\t\tconst opts = broker.options.circuitBreaker;\n\t\t\tif (opts.enabled) {\n\t\t\t\tcreateWindowTimer(opts.windowTime);\n\n\t\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"affectedNodeID\", \"service\", \"action\"], description: \"Number of active opened circuit-breakers\" });\n\t\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"affectedNodeID\", \"service\", \"action\"], description: \"Number of opened circuit-breakers\" });\n\t\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"affectedNodeID\", \"service\", \"action\"], description: \"Number of active half-opened circuit-breakers\" });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapCBMiddleware,\n\t\tremoteAction: wrapCBMiddleware,\n\n\t\tstopped() {\n\t\t\tif (windowTimer) {\n\t\t\t\tclearInterval(windowTimer);\n\t\t\t}\n\n\t\t\tdelete broker.CircuitBreakerStore;\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { RequestTimeoutError } = require(\"../errors\");\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function(broker) {\n\n\tfunction wrapTimeoutMiddleware(handler, action) {\n\t\tconst actionTimeout = action.timeout;\n\t\tconst actionName = action.name;\n\t\tconst service = action.service ? action.service.fullName : null;\n\n\t\treturn function timeoutMiddleware(ctx) {\n\n\t\t\t// Load opts with default values\n\t\t\tif (ctx.options.timeout == null) {\n\t\t\t\tif (actionTimeout != null)\n\t\t\t\t\tctx.options.timeout = actionTimeout;\n\t\t\t\telse\n\t\t\t\t\tctx.options.timeout = broker.options.requestTimeout;\n\t\t\t}\n\n\t\t\tif (ctx.options.timeout > 0 && !ctx.startHrTime) {\n\t\t\t// For distributed timeout calculation need to be set\n\t\t\t\tctx.startHrTime = process.hrtime();\n\t\t\t}\n\n\t\t\t// Call the handler\n\t\t\tconst p = handler(ctx);\n\t\t\tif (ctx.options.timeout > 0 && p.timeout) {\n\t\t\t\treturn p.timeout(ctx.options.timeout)\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tif (err instanceof broker.Promise.TimeoutError) {\n\t\t\t\t\t\t\tconst nodeID = ctx.nodeID;\n\t\t\t\t\t\t\tthis.logger.warn(`Request '${actionName}' is timed out.`, { requestID: ctx.requestID, nodeID, timeout: ctx.options.timeout });\n\t\t\t\t\t\t\terr = new RequestTimeoutError({ action: actionName, nodeID });\n\n\t\t\t\t\t\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_TIMEOUT_TOTAL, { service, action: actionName });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t}.bind(this);\n\t}\n\n\treturn {\n\t\tname: \"Timeout\",\n\n\t\tcreated(broker) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_TIMEOUT_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\"], description: \"Number of timed out requests\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapTimeoutMiddleware,\n\t\tremoteAction: wrapTimeoutMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function RetryMiddleware(broker) {\n\n\tfunction wrapRetryMiddleware(handler, action) {\n\t\tconst actionName = action.name;\n\t\tconst service = action.service ? action.service.fullName : null;\n\t\t// Merge action option and broker options\n\t\tconst opts = Object.assign({}, this.options.retryPolicy, action.retryPolicy || {});\n\t\tif (opts.enabled) {\n\t\t\treturn function retryMiddleware(ctx) {\n\t\t\t\tconst attempts = typeof ctx.options.retries === \"number\" ? ctx.options.retries : opts.retries;\n\t\t\t\tif (ctx._retryAttempts == null)\n\t\t\t\t\tctx._retryAttempts = 0;\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler(ctx).catch(err => {\n\n\t\t\t\t\t// Skip retry if it is a remote call. The retry logic will run on the caller node\n\t\t\t\t\t// because the Retry middleware wrap the `remoteAction` hook, as well.\n\t\t\t\t\tif (ctx.nodeID != broker.nodeID && ctx.endpoint.local)\n\t\t\t\t\t\treturn Promise.reject(err);\n\n\t\t\t\t\t// Check the error's `retryable` property.\n\t\t\t\t\tif (opts.check(err)) {\n\t\t\t\t\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL, { service, action: action.name });\n\n\t\t\t\t\t\tif (ctx._retryAttempts < attempts) {\n\t\t\t\t\t\t\t// Retry call\n\t\t\t\t\t\t\tctx._retryAttempts++;\n\n\t\t\t\t\t\t\t// Correct tracing\n\t\t\t\t\t\t\tif (ctx.span) {\n\t\t\t\t\t\t\t\tctx.span.setError(err);\n\t\t\t\t\t\t\t\tctx.span.addTags({ retryAttempts: ctx._retryAttempts });\n\t\t\t\t\t\t\t\tctx.finishSpan(ctx.span);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Calculate next delay\n\t\t\t\t\t\t\tconst delay = Math.min(opts.delay * Math.pow(opts.factor, ctx._retryAttempts - 1), opts.maxDelay);\n\n\t\t\t\t\t\t\tbroker.logger.warn(`Retry to call '${actionName}' action after ${delay} ms...`, { requestID: ctx.requestID, attempts: ctx._retryAttempts });\n\n\t\t\t\t\t\t\t// Wait & recall\n\t\t\t\t\t\t\treturn broker.Promise.delay(delay)\n\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\tconst newCtx = ctx.copy();\n\t\t\t\t\t\t\t\t\tnewCtx._retryAttempts = ctx._retryAttempts;\n\n\t\t\t\t\t\t\t\t\tif (action.visibility == \"private\")\n\t\t\t\t\t\t\t\t\t\treturn ctx.service.actions[action.rawName](ctx.params, { ctx: newCtx });\n\n\t\t\t\t\t\t\t\t\treturn broker.call(actionName, ctx.params, { ctx: newCtx });\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Throw error\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"Retry\",\n\n\t\tcreated() {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\"], description: \"Number of retries\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapRetryMiddleware,\n\t\tremoteAction: wrapRetryMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { MoleculerError } = require(\"../errors\");\nconst { METRIC }\t= require(\"../metrics\");\nconst { isFunction, isString } = require(\"../utils\");\n\nmodule.exports = function FallbackMiddleware(broker) {\n\n\tfunction handleContextFallback(ctx, err) {\n\t\tbroker.logger.warn(`The '${ctx.action.name}' request is failed. Return fallback response.`, { requestID: ctx.requestID, err: err.message });\n\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_FALLBACK_TOTAL, { action: ctx.action.name });\n\t\tctx.fallbackResult = true;\n\n\t\tif (isFunction(ctx.options.fallbackResponse))\n\t\t\treturn ctx.options.fallbackResponse(ctx, err);\n\t\telse\n\t\t\treturn Promise.resolve(ctx.options.fallbackResponse);\n\t}\n\n\tfunction wrapFallbackMiddleware(handler, action) {\n\t\treturn function fallbackMiddleware(ctx) {\n\t\t\t// Call the handler\n\t\t\treturn handler(ctx).catch(err => {\n\n\t\t\t\t// Handle fallback response from calling options\n\t\t\t\tif (ctx.options.fallbackResponse) {\n\t\t\t\t\treturn handleContextFallback(ctx, err);\n\t\t\t\t}\n\n\t\t\t\t// Handle fallback from Action Definition (only locally)\n\t\t\t\tif (action.fallback && action.service) {\n\t\t\t\t\tconst svc = action.service;\n\n\t\t\t\t\tconst fallback = isString(action.fallback) ? svc[action.fallback] : action.fallback;\n\t\t\t\t\tif (!isFunction(fallback)) {\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tthrow new MoleculerError(`The 'fallback' of '${action.name}' action is not a Function or valid method name: ${action.fallback}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tsvc.logger.warn(`The '${ctx.action.name}' request is failed. Return fallback response.`, { requestID: ctx.requestID, err: err.message });\n\t\t\t\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_FALLBACK_TOTAL, { service: svc.fullName, action: action.name });\n\t\t\t\t\tctx.fallbackResult = true;\n\n\t\t\t\t\treturn fallback.call(svc, ctx, err);\n\t\t\t\t}\n\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}.bind(this);\n\t}\n\n\treturn {\n\t\tname: \"Fallback\",\n\n\t\tcreated(broker) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_FALLBACK_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\"], description: \"Number of fallbacked requests\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapFallbackMiddleware,\n\t\tremoteAction: wrapFallbackMiddleware,\n\n\t\t/*call(next) {\n\t\t\treturn (actionName, params, opts) => {\n\t\t\t\treturn next(actionName, params, opts).catch(err => {\n\t\t\t\t\tif (opts.fallbackResponse) {\n\t\t\t\t\t\treturn handleContextFallback(null, err);\n\t\t\t\t\t}\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\t\t\t};\n\t\t},*/\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { MoleculerError } = require(\"../errors\");\n\nfunction wrapActionErrorHandler(handler) {\n\treturn function errorHandlerMiddleware(ctx) {\n\t\t// Call the handler\n\t\treturn handler(ctx)\n\t\t\t.catch(err => {\n\t\t\t\tif (!(err instanceof Error))\n\t\t\t\t\terr = new MoleculerError(err, 500);\n\n\t\t\t\tif (ctx.nodeID !== this.nodeID) {\n\t\t\t\t\t// Remove pending request (the request didn't reach the target service)\n\t\t\t\t\tif (this.transit)\n\t\t\t\t\t\tthis.transit.removePendingRequest(ctx.id);\n\t\t\t\t}\n\n\t\t\t\tthis.logger.debug(`The '${ctx.action.name}' request is rejected.`, { requestID: ctx.requestID }, err);\n\n\t\t\t\tObject.defineProperty(err, \"ctx\", {\n\t\t\t\t\tvalue: ctx,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tenumerable: false\n\t\t\t\t});\n\n\t\t\t\t// Call global errorHandler\n\t\t\t\treturn ctx.broker.errorHandler(err, {\n\t\t\t\t\tctx,\n\t\t\t\t\tservice: ctx.service,\n\t\t\t\t\taction: ctx.action\n\t\t\t\t});\n\t\t\t});\n\n\t}.bind(this);\n}\n\nfunction wrapEventErrorHandler(handler) {\n\treturn function errorHandlerMiddleware(ctx) {\n\t\t// Call the handler\n\t\treturn handler(ctx)\n\t\t\t.catch(err => {\n\t\t\t\tif (!(err instanceof Error))\n\t\t\t\t\terr = new MoleculerError(err, 500);\n\n\t\t\t\tthis.logger.debug(`Error occured in the '${ctx.event.name}' event handler in the '${ctx.service.fullName}' service.`, { requestID: ctx.requestID }, err);\n\n\t\t\t\tObject.defineProperty(err, \"ctx\", {\n\t\t\t\t\tvalue: ctx,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tenumerable: false\n\t\t\t\t});\n\n\t\t\t\t// Call global errorHandler\n\t\t\t\treturn ctx.broker.errorHandler(err, {\n\t\t\t\t\tctx,\n\t\t\t\t\tservice: ctx.service,\n\t\t\t\t\tevent: ctx.event\n\t\t\t\t});\n\t\t\t}).catch(err => {\n\t\t\t\t// No global error Handler, or thrown further, so we handle it because it's an event handler.\n\t\t\t\tctx.broker.logger.error(err);\n\t\t\t});\n\n\t}.bind(this);\n}\n\nmodule.exports = function() {\n\treturn {\n\t\tname: \"ErrorHandler\",\n\n\t\tlocalAction: wrapActionErrorHandler,\n\t\tremoteAction: wrapActionErrorHandler,\n\n\t\tlocalEvent: wrapEventErrorHandler\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function MetricsMiddleware(broker) {\n\tconst metrics = broker.metrics;\n\n\tfunction getActionHandler(type, actionDef, next) {\n\t\tconst action = actionDef.name;\n\t\tconst service = actionDef.service ? actionDef.service.fullName : null;\n\n\t\treturn function metricsMiddleware(ctx) {\n\t\t\tconst caller = ctx.caller;\n\n\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_TOTAL, { service, action, caller, type });\n\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_ACTIVE, { service, action, caller, type });\n\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_LEVELS, { service, action, caller, level: ctx.level });\n\t\t\tconst timeEnd = metrics.timer(METRIC.MOLECULER_REQUEST_TIME, { service, action, caller, type });\n\n\t\t\t// Call the next handler\n\t\t\treturn next(ctx).then(res => {\n\t\t\t\ttimeEnd();\n\t\t\t\tmetrics.decrement(METRIC.MOLECULER_REQUEST_ACTIVE, { service, action, caller, type });\n\t\t\t\treturn res;\n\t\t\t}).catch(err => {\n\t\t\t\ttimeEnd();\n\t\t\t\tmetrics.decrement(METRIC.MOLECULER_REQUEST_ACTIVE, { service, action, caller, type });\n\t\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_ERROR_TOTAL, {\n\t\t\t\t\tservice,\n\t\t\t\t\taction,\n\t\t\t\t\tcaller,\n\t\t\t\t\ttype,\n\t\t\t\t\terrorName: err ? err.name : null,\n\t\t\t\t\terrorCode: err ? err.code : null,\n\t\t\t\t\terrorType: err ? err.type : null\n\t\t\t\t});\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\t};\n\t}\n\n\treturn {\n\t\tname: \"Metrics\",\n\n\t\tcreated() {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\t// --- MOLECULER REQUEST METRICS ---\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\", \"type\", \"caller\"], unit: METRIC.UNIT_REQUEST, description: \"Number of requests\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"service\", \"action\", \"type\", \"caller\"], unit: METRIC.UNIT_REQUEST, description: \"Number of active requests\" });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_ERROR_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\", \"type\", \"caller\", \"errorName\", \"errorCode\", \"errorType\"], unit: METRIC.UNIT_REQUEST, description: \"Number of request errors\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_TIME, type: METRIC.TYPE_HISTOGRAM, labelNames: [\"service\", \"action\", \"type\", \"caller\"], quantiles: true, buckets: true, unit: METRIC.UNIT_MILLISECONDS, description: \"Request times in milliseconds\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_LEVELS, type: METRIC.TYPE_COUNTER, labelNames: [\"level\"], unit: METRIC.UNIT_REQUEST, description: \"Number of requests by context level\" });\n\t\t\t\t//metrics.register({ name: METRIC.MOLECULER_REQUEST_DIRECTCALL_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"action\"], unit: METRIC.UNIT_REQUEST, description: \"Number of direct calls\", rate: true });\n\t\t\t\t//metrics.register({ name: METRIC.MOLECULER_REQUEST_MULTICALL_TOTAL, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_REQUEST, description: \"Number of multicalls\", rate: true });\n\n\t\t\t\t// --- MOLECULER EVENTS METRICS ---\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_EMIT_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"event\", \"groups\"], unit: METRIC.UNIT_EVENT, description: \"Number of emitted events\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_BROADCAST_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"event\", \"groups\"], unit: METRIC.UNIT_EVENT, description: \"Number of broadcast events\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_BROADCASTLOCAL_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"event\", \"groups\"], unit: METRIC.UNIT_EVENT, description: \"Number of local broadcast events\", rate: true });\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"group\", \"event\", \"caller\"], unit: METRIC.UNIT_EVENT, description: \"Number of received events\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"service\", \"group\", \"event\", \"caller\"], unit: METRIC.UNIT_REQUEST, description: \"Number of active event executions\" });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_ERROR_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"group\", \"event\", \"caller\", \"errorName\", \"errorCode\", \"errorType\"], unit: METRIC.UNIT_REQUEST, description: \"Number of event execution errors\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_TIME, type: METRIC.TYPE_HISTOGRAM, labelNames: [\"service\", \"group\", \"event\", \"caller\"], quantiles: true, buckets: true, unit: METRIC.UNIT_MILLISECONDS, description: \"Execution time of events in milliseconds\", rate: true });\n\n\t\t\t\t// --- MOLECULER TRANSIT METRICS ---\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_PUBLISH_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"type\"], unit: METRIC.UNIT_PACKET, description: \"Number of published packets\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_RECEIVE_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"type\"], unit: METRIC.UNIT_PACKET, description: \"Number of received packets\", rate: true });\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_REQUESTS_ACTIVE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_REQUEST, description: \"Number of active requests\" });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_STREAMS_SEND_ACTIVE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_STREAM, description: \"Number of active sent streams\" });\n\t\t\t\t//metrics.register({ name: METRIC.MOLECULER_TRANSIT_STREAMS_RECEIVE_ACTIVE, type: METRIC.TYPE_GAUGE, description: \"\" });\n\n\t\t\t\t// --- MOLECULER TRANSPORTER METRICS ---\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_PACKET, description: \"Number of sent packets\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_BYTES, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_BYTE, description: \"Number of sent bytes\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_PACKET, description: \"Number of received packets\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_BYTE, description: \"Number of received bytes\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction(next, action) {\n\t\t\tif (broker.isMetricsEnabled())\n\t\t\t\treturn getActionHandler(\"local\", action, next);\n\n\t\t\treturn next;\n\t\t},\n\n\t\tremoteAction(next, action) {\n\t\t\tif (broker.isMetricsEnabled())\n\t\t\t\treturn getActionHandler(\"remote\", action, next);\n\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap local event handlers\n\t\tlocalEvent(next, event) {\n\t\t\tconst service = event.service ? event.service.name : null;\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(ctx) {\n\t\t\t\t\tconst group = event.group || service;\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_RECEIVED_TOTAL, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\tconst timeEnd = metrics.timer(METRIC.MOLECULER_EVENT_RECEIVED_TIME, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\treturn next.apply(this, arguments).then(res => {\n\t\t\t\t\t\ttimeEnd();\n\t\t\t\t\t\tmetrics.decrement(METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\ttimeEnd();\n\t\t\t\t\t\tmetrics.decrement(METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_RECEIVED_ERROR_TOTAL, {\n\t\t\t\t\t\t\tservice, event: ctx.eventName, group, caller: ctx.caller,\n\t\t\t\t\t\t\terrorName: err ? err.name : null,\n\t\t\t\t\t\t\terrorCode: err ? err.code : null,\n\t\t\t\t\t\t\terrorType: err ? err.type : null\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t\t}.bind(this);\n\t\t\t}\n\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap broker.emit method\n\t\temit(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* event, payload */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_EMIT_TOTAL, { event: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap broker.broadcast method\n\t\tbroadcast(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* event, payload */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_BROADCAST_TOTAL, { event: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap broker.broadcastLocal method\n\t\tbroadcastLocal(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* event, payload */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_BROADCASTLOCAL_TOTAL, { event: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transit publishing a packet\n\t\ttransitPublish(next) {\n\t\t\tconst transit = this;\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* packet */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_PUBLISH_TOTAL, { type: arguments[0].type });\n\n\t\t\t\t\tconst p = next.apply(this, arguments);\n\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_REQUESTS_ACTIVE, null, transit.pendingRequests.size);\n\t\t\t\t\t//metrics.increment(METRIC.MOLECULER_TRANSIT_STREAMS_RECEIVE_ACTIVE, null, transit.);\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_STREAMS_SEND_ACTIVE, null, transit.pendingReqStreams.size + this.pendingResStreams.size);\n\n\t\t\t\t\treturn p;\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transit receives & handles a packet\n\t\ttransitMessageHandler(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* cmd, packet */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_RECEIVE_TOTAL, { type: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transporter send data\n\t\ttransporterSend(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* topic, data, meta */) {\n\t\t\t\t\tconst data = arguments[1];\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL);\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_BYTES, null, data && data.length ? data.length : 0);\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transporter received data\n\t\ttransporterReceive(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* cmd, data, s */) {\n\t\t\t\t\tconst data = arguments[1];\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL);\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES, null, data && data.length ? data.length : 0);\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t}\n\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isFunction, isPlainObject } = require(\"../utils\");\n\nmodule.exports = function TracingMiddleware(broker) {\n\n\tconst tracer = broker.tracer;\n\n\tfunction tracingLocalActionMiddleware(handler, action) {\n\t\tlet opts = action.tracing;\n\t\tif (opts === true || opts === false)\n\t\t\topts = { enabled: !!opts };\n\t\topts = _.defaultsDeep({}, opts, { enabled: true });\n\n\t\tif (opts.enabled) {\n\t\t\treturn function tracingLocalActionMiddleware(ctx) {\n\n\t\t\t\tctx.requestID = ctx.requestID || tracer.getCurrentTraceID();\n\t\t\t\tctx.parentID = ctx.parentID || tracer.getActiveSpanID();\n\n\t\t\t\tconst tags = {\n\t\t\t\t\tcallingLevel: ctx.level,\n\t\t\t\t\taction: ctx.action ? {\n\t\t\t\t\t\tname: ctx.action.name,\n\t\t\t\t\t\trawName: ctx.action.rawName\n\t\t\t\t\t} : null,\n\t\t\t\t\tremoteCall: ctx.nodeID !== ctx.broker.nodeID,\n\t\t\t\t\tcallerNodeID: ctx.nodeID,\n\t\t\t\t\tnodeID: ctx.broker.nodeID,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\ttimeout: ctx.options.timeout,\n\t\t\t\t\t\tretries: ctx.options.retries\n\t\t\t\t\t},\n\t\t\t\t\trequestID: ctx.requestID,\n\t\t\t\t};\n\t\t\t\tconst globalActionTags = tracer.opts.tags.action;\n\t\t\t\tlet actionTags;\n\t\t\t\t// local action tags take precedence\n\t\t\t\tif (isFunction(opts.tags)) {\n\t\t\t\t\tactionTags = opts.tags;\n\t\t\t\t} else if (!opts.tags && isFunction(globalActionTags)) {\n\t\t\t\t\tactionTags = globalActionTags;\n\t\t\t\t} else {\n\t\t\t\t\t// By default all params are captured. This can be overridden globally and locally\n\t\t\t\t\tactionTags = { ...{ params: true }, ...globalActionTags, ...opts.tags };\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(actionTags)) {\n\t\t\t\t\tconst res = actionTags.call(ctx.service, ctx);\n\t\t\t\t\tif (res)\n\t\t\t\t\t\tObject.assign(tags, res);\n\n\t\t\t\t} else if (isPlainObject(actionTags)) {\n\t\t\t\t\tif (actionTags.params === true)\n\t\t\t\t\t\ttags.params = ctx.params != null && isPlainObject(ctx.params) ? Object.assign({}, ctx.params) : ctx.params;\n\t\t\t\t\telse if (Array.isArray(actionTags.params))\n\t\t\t\t\t\ttags.params = _.pick(ctx.params, actionTags.params);\n\n\t\t\t\t\tif (actionTags.meta === true)\n\t\t\t\t\t\ttags.meta = ctx.meta != null ? Object.assign({}, ctx.meta) : ctx.meta;\n\t\t\t\t\telse if (Array.isArray(actionTags.meta))\n\t\t\t\t\t\ttags.meta = _.pick(ctx.meta, actionTags.meta);\n\t\t\t\t}\n\n\t\t\t\tlet spanName = `action '${ctx.action.name}'`;\n\t\t\t\tif (opts.spanName) {\n\t\t\t\t\tswitch(typeof opts.spanName) {\n\t\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\t\tspanName = opts.spanName;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\t\tspanName = opts.spanName.call(ctx.service, ctx);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst span = ctx.startSpan(spanName, {\n\t\t\t\t\tid: ctx.id,\n\t\t\t\t\ttype: \"action\",\n\t\t\t\t\ttraceID: ctx.requestID,\n\t\t\t\t\tparentID: ctx.parentID,\n\t\t\t\t\tservice: ctx.service,\n\t\t\t\t\tsampled: ctx.tracing,\n\t\t\t\t\ttags\n\t\t\t\t});\n\n\t\t\t\tctx.tracing = span.sampled;\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler(ctx).then(res => {\n\t\t\t\t\tconst tags = {\n\t\t\t\t\t\tfromCache: ctx.cachedResult\n\t\t\t\t\t};\n\n\t\t\t\t\tif (isFunction(actionTags)) {\n\t\t\t\t\t\tconst r = actionTags.call(ctx.service, ctx, res);\n\t\t\t\t\t\tif (r)\n\t\t\t\t\t\t\tObject.assign(tags, r);\n\n\t\t\t\t\t} else if (isPlainObject(actionTags)) {\n\t\t\t\t\t\tif (actionTags.response === true)\n\t\t\t\t\t\t\ttags.response = res != null && isPlainObject(res) ? Object.assign({}, res) : res;\n\t\t\t\t\t\telse if (Array.isArray(actionTags.response))\n\t\t\t\t\t\t\ttags.response = _.pick(res, actionTags.response);\n\t\t\t\t\t}\n\n\t\t\t\t\tspan.addTags(tags);\n\t\t\t\t\tctx.finishSpan(span);\n\n\t\t\t\t\t//ctx.duration = span.duration;\n\n\t\t\t\t\treturn res;\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tspan.setError(err);\n\t\t\t\t\tctx.finishSpan(span);\n\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\tfunction tracingLocalEventMiddleware(handler, event) {\n\t\tconst service = event.service;\n\n\t\tlet opts = event.tracing;\n\t\tif (opts === true || opts === false)\n\t\t\topts = { enabled: !!opts };\n\t\topts = _.defaultsDeep({}, opts, { enabled: true  });\n\n\t\tif (opts.enabled) {\n\t\t\treturn function tracingLocalEventMiddleware(ctx) {\n\n\t\t\t\tctx.requestID = ctx.requestID || tracer.getCurrentTraceID();\n\t\t\t\tctx.parentID = ctx.parentID || tracer.getActiveSpanID();\n\n\t\t\t\tconst tags = {\n\t\t\t\t\tevent: {\n\t\t\t\t\t\tname: event.name,\n\t\t\t\t\t\tgroup: event.group\n\t\t\t\t\t},\n\t\t\t\t\teventName: ctx.eventName,\n\t\t\t\t\teventType: ctx.eventType,\n\t\t\t\t\tcallerNodeID: ctx.nodeID,\n\t\t\t\t\tcallingLevel: ctx.level,\n\t\t\t\t\tremoteCall: ctx.nodeID !== broker.nodeID,\n\t\t\t\t\tnodeID: broker.nodeID,\n\t\t\t\t\trequestID: ctx.requestID,\n\t\t\t\t};\n\n\t\t\t\tconst globalEventTags = tracer.opts.tags.event;\n\t\t\t\tlet eventTags;\n\t\t\t\t// local event tags take precedence\n\t\t\t\tif (isFunction(opts.tags)) {\n\t\t\t\t\teventTags = opts.tags;\n\t\t\t\t} else if (!opts.tags && isFunction(globalEventTags)) {\n\t\t\t\t\teventTags = globalEventTags;\n\t\t\t\t} else {\n\t\t\t\t\t// By default all params are captured. This can be overridden globally and locally\n\t\t\t\t\teventTags = { ...{ params: true }, ...globalEventTags, ...opts.tags };\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(eventTags)) {\n\t\t\t\t\tconst res = eventTags.call(service, ctx);\n\t\t\t\t\tif (res)\n\t\t\t\t\t\tObject.assign(tags, res);\n\n\t\t\t\t} else if (isPlainObject(eventTags)) {\n\t\t\t\t\tif (eventTags.params === true)\n\t\t\t\t\t\ttags.params = ctx.params != null && isPlainObject(ctx.params) ? Object.assign({}, ctx.params) : ctx.params;\n\t\t\t\t\telse if (Array.isArray(eventTags.params))\n\t\t\t\t\t\ttags.params = _.pick(ctx.params, eventTags.params);\n\n\t\t\t\t\tif (eventTags.meta === true)\n\t\t\t\t\t\ttags.meta = ctx.meta != null ? Object.assign({}, ctx.meta) : ctx.meta;\n\t\t\t\t\telse if (Array.isArray(eventTags.meta))\n\t\t\t\t\t\ttags.meta = _.pick(ctx.meta, eventTags.meta);\n\t\t\t\t}\n\n\t\t\t\tlet spanName = `event '${ctx.eventName}' in '${service.fullName}'`;\n\t\t\t\tif (opts.spanName) {\n\t\t\t\t\tswitch(typeof opts.spanName) {\n\t\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\t\tspanName = opts.spanName;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\t\tspanName = opts.spanName.call(service, ctx);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst span = ctx.startSpan(spanName, {\n\t\t\t\t\tid: ctx.id,\n\t\t\t\t\ttype: \"event\",\n\t\t\t\t\ttraceID: ctx.requestID,\n\t\t\t\t\tparentID: ctx.parentID,\n\t\t\t\t\tservice,\n\t\t\t\t\tsampled: ctx.tracing,\n\t\t\t\t\ttags\n\t\t\t\t});\n\n\t\t\t\tctx.tracing = span.sampled;\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler.apply(service, arguments).then(() => {\n\t\t\t\t\tctx.finishSpan(span);\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tspan.setError(err);\n\t\t\t\t\tctx.finishSpan(span);\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\t/*\n\tfunction wrapRemoteTracingMiddleware(handler) {\n\n\t\tif (this.options.tracing) {\n\t\t\treturn function tracingMiddleware(ctx) {\n\t\t\t\tif (ctx.tracing == null) {\n\t\t\t\t\tctx.tracing = shouldTracing(ctx);\n\t\t\t\t}\n\t\t\t\treturn handler(ctx);\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}*/\n\treturn {\n\t\tname: \"Tracing\",\n\n\t\tlocalAction: broker.isTracingEnabled() && tracer.opts.actions ? tracingLocalActionMiddleware : null,\n\t\tlocalEvent: broker.isTracingEnabled() && tracer.opts.events ? tracingLocalEventMiddleware : null,\n\t\t//remoteAction: wrapRemoteTracingMiddleware\n\t};\n};\n","const fflate = require('fflate')\n\nmodule.exports = {\n  deflateRaw: (...args) => fflate.deflateSync(...args),\n  inflateRaw: (...args) => fflate.inflateSync(...args),\n  gzip: (...args) => fflate.gzip(...args),\n  gunzip: (...args) => fflate.gunzip(...args),\n  deflate: (...args) => fflate.zlibSync(...args),\n  inflate: (...args) => fflate.unzlibSync(...args)\n}\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { defaultsDeep } = require(\"lodash\");\nconst { parseByteString } = require(\"../../utils\");\nconst zlib = require(\"zlib\");\nconst { promisify } = require(\"util\");\n\n/**\n * This is a transmission compression middleware. It supports\n * the `deflate`, `deflateRaw` & `gzip` compression methods.\n *\n * @param {String?} opts.method\n * @param {String|Number} opts.threshold\n */\nmodule.exports = function CompressionMiddleware(opts) {\n\topts = defaultsDeep(opts, { method: \"deflate\", threshold: \"1kb\" });\n\n\tlet compress, decompress;\n\tconst threshold = parseByteString(opts.threshold);\n\n\tswitch(opts.method) {\n\t\tcase \"deflate\":\n\t\t\tcompress = promisify(zlib.deflate);\n\t\t\tdecompress = promisify(zlib.inflate);\n\t\t\tbreak;\n\t\tcase \"deflateRaw\":\n\t\t\tcompress = promisify(zlib.deflateRaw);\n\t\t\tdecompress = promisify(zlib.inflateRaw);\n\t\t\tbreak;\n\t\tcase \"gzip\":\n\t\t\tcompress = promisify(zlib.gzip);\n\t\t\tdecompress = promisify(zlib.gunzip);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t/* istanbul ignore next */\n\t\t\tthrow new Error(\"Unknow compression method: \" + opts.method);\n\t}\n\n\tlet logger;\n\n\treturn {\n\t\tname: \"Compression\",\n\n\t\tcreated(broker) {\n\t\t\tlogger = broker.getLogger(\"TX-COMPRESS\");\n\t\t\t/* istanbul ignore next */\n\t\t\tlogger.info(`The transmission is COMPRESSED by '${opts.method}'. Threshold: ${ threshold != null ? opts.threshold : \"none\"}`);\n\t\t},\n\n\t\ttransporterSend(next) {\n\t\t\treturn (topic, data, meta) => {\n\t\t\t\tif (threshold != null && data.length < threshold) {\n\t\t\t\t\tlogger.debug(`Packet '${topic}' is small and not compressed. Size: ${data.length}`);\n\t\t\t\t\treturn next(topic, Buffer.concat([Buffer.from([0x00]), data]), meta);\n\t\t\t\t}\n\t\t\t\treturn compress(data)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tlogger.debug(`Packet '${topic}' compressed. Saving: ${Number((1 - (res.length / data.length)) * 100).toFixed(0)}%`, data.length, res.length);\n\t\t\t\t\t\treturn next(topic, Buffer.concat([Buffer.from([0x01]), res]), meta);\n\t\t\t\t\t});\n\t\t\t};\n\t\t},\n\n\t\ttransporterReceive(next) {\n\t\t\treturn (cmd, data, s) => {\n\t\t\t\tconst isCompressed = data.readInt8(0);\n\t\t\t\tif (isCompressed == 0) {\n\t\t\t\t\tlogger.debug(`Packet '${cmd}' is small and not compressed. Size: ${data.length}`);\n\t\t\t\t\treturn next(cmd, data.slice(1), s);\n\t\t\t\t} else {\n\t\t\t\t\treturn decompress(data.slice(1))\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tlogger.debug(`Packet '${cmd}' decompressed. Saving: ${Number((1 - (data.length / res.length)) * 100).toFixed(0)}%`, res.length, data.length);\n\t\t\t\t\t\t\treturn next(cmd, res, s);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst kleur = require(\"kleur\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst { makeDirs } = require(\"../../utils\");\n\nmodule.exports = function TransitLoggerMiddleware(opts) {\n\topts = _.defaultsDeep(opts, {\n\t\tlogger: null,\n\t\tlogLevel: \"info\",\n\t\tlogPacketData: false,\n\n\t\tfolder: null,\n\t\textension: \".json\",\n\n\t\tcolors: {\n\t\t\treceive: \"grey\",\n\t\t\tsend: \"grey\"\n\t\t},\n\n\t\tpacketFilter: [\"HEARTBEAT\"]\n\t});\n\n\tlet logger;\n\tlet nodeID;\n\n\tlet targetFolder;\n\n\tfunction saveToFile(filename, payload) {\n\t\tconst data = JSON.stringify(payload, payload instanceof Error ? Object.getOwnPropertyNames(payload) : null, 4);\n\t\tfs.writeFile(path.join(targetFolder, filename), data, () => { /* Silent error */ });\n\t}\n\n\tconst coloringSend = opts.colors && opts.colors.send ? opts.colors.send.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\tconst coloringReceive = opts.colors && opts.colors.receive ? opts.colors.receive.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\n\tlet logFn;\n\n\treturn {\n\t\tname: \"TransitLogger\",\n\t\tcreated(broker) {\n\t\t\tlogger = opts.logger || broker.getLogger(\"debug\");\n\t\t\tnodeID = broker.nodeID;\n\n\t\t\tif (opts.folder) {\n\t\t\t\ttargetFolder = path.join(opts.folder, nodeID);\n\t\t\t\tmakeDirs(targetFolder);\n\t\t\t}\n\n\t\t\tlogFn = opts.logLevel ? logger[opts.logLevel] : null;\n\t\t},\n\n\t\ttransitPublish(next) {\n\t\t\treturn packet => {\n\t\t\t\t// Packet filtering\n\t\t\t\tif (opts.packetFilter.includes(packet.type)) {\n\t\t\t\t\treturn next(packet);\n\t\t\t\t}\n\n\t\t\t\tconst payload = packet.payload;\n\n\t\t\t\t// Logging to logger\n\t\t\t\tif (logFn) {\n\t\t\t\t\tlogFn(coloringSend(`=> Send ${packet.type} packet to '${packet.target || \"<all nodes>\"}'`));\n\t\t\t\t\tif (opts.logPacketData) {\n\t\t\t\t\t\tlogFn(\"=>\", payload);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (targetFolder) {\n\t\t\t\t\tsaveToFile(`${Date.now()}-send-${packet.type}-to-${packet.target || \"all\"}${opts.extension}`, payload);\n\t\t\t\t}\n\n\t\t\t\treturn next(packet);\n\t\t\t};\n\t\t},\n\n\t\ttransitMessageHandler(next) {\n\t\t\treturn (cmd, packet) => {\n\t\t\t\t// Packet filtering\n\t\t\t\tif (opts.packetFilter.includes(cmd)) {\n\t\t\t\t\treturn next(cmd, packet);\n\t\t\t\t}\n\n\t\t\t\tconst payload = packet.payload;\n\n\t\t\t\tif (logFn) {\n\t\t\t\t\tlogFn(coloringReceive(`<= Receive ${cmd} packet from '${payload.sender}'`));\n\t\t\t\t\tif (opts.logPacketData) {\n\t\t\t\t\t\tlogFn(\"<=\", packet.payload);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (targetFolder) {\n\t\t\t\t\tsaveToFile(`${Date.now()}-receive-${cmd}-from-${payload.sender}${opts.extension}`, payload);\n\t\t\t\t}\n\n\t\t\t\treturn next(cmd, packet);\n\t\t\t};\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst kleur = require(\"kleur\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst { makeDirs, match, isObject } = require(\"../../utils\");\n\nmodule.exports = function ActionLoggerMiddleware(opts) {\n\topts = _.defaultsDeep(opts, {\n\t\tlogger: null,\n\t\tlogLevel: \"info\",\n\t\tlogParams: false,\n\t\tlogResponse: false,\n\t\tlogMeta: false,\n\n\t\tfolder: null,\n\t\textension: \".json\",\n\n\t\tcolors: {\n\t\t\trequest: \"yellow\",\n\t\t\tresponse: \"cyan\",\n\t\t\terror: \"red\"\n\t\t},\n\t\twhitelist: [\"**\"]\n\t});\n\n\tlet logger;\n\tlet nodeID;\n\n\tlet targetFolder;\n\n\tfunction saveToFile(filename, payload) {\n\t\tconst data = JSON.stringify(payload, payload instanceof Error ? Object.getOwnPropertyNames(payload) : null, 4);\n\t\tfs.writeFile(path.join(targetFolder, filename), data, () => { /* Silent error */ });\n\t}\n\n\tfunction isWhiteListed(actionName) {\n\t\treturn !!opts.whitelist.find(pattern => match(actionName, pattern));\n\t}\n\n\tconst coloringRequest = opts.colors && opts.colors.request ? opts.colors.request.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\tconst coloringResponse = opts.colors && opts.colors.response ? opts.colors.response.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\tconst coloringError = opts.colors && opts.colors.error ? opts.colors.error.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\n\tlet logFn;\n\n\treturn {\n\t\tname: \"ActionLogger\",\n\t\tcreated(broker) {\n\t\t\tlogger = opts.logger || broker.getLogger(\"debug\");\n\t\t\tnodeID = broker.nodeID;\n\n\t\t\tif (opts.folder) {\n\t\t\t\ttargetFolder = path.join(opts.folder, nodeID);\n\t\t\t\tmakeDirs(targetFolder);\n\t\t\t}\n\n\t\t\tlogFn = opts.logLevel ? logger[opts.logLevel] : null;\n\t\t},\n\n\t\tcall(next) {\n\t\t\treturn (actionName, params, callingOpts) => {\n\t\t\t\t// Whitelist filtering\n\t\t\t\tif (!isWhiteListed(isObject(actionName) ? actionName.action.name : actionName)) {\n\t\t\t\t\treturn next(actionName, params, callingOpts);\n\t\t\t\t}\n\n\t\t\t\t// Logging to logger\n\t\t\t\tif (logFn) {\n\t\t\t\t\tconst msg = coloringRequest(`Calling '${actionName}'` + (opts.logParams ? \" with params:\" : \".\"));\n\t\t\t\t\topts.logParams ? logFn(msg, params) : logFn(msg);\n\t\t\t\t\tif (opts.logMeta && callingOpts && callingOpts.meta) {\n\t\t\t\t\t\tlogFn(\"Meta:\", callingOpts.meta);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Logging to file\n\t\t\t\tif (targetFolder) {\n\t\t\t\t\tif (opts.logParams) {\n\t\t\t\t\t\tsaveToFile(`${Date.now()}-call-${actionName}-request${opts.extension}`, params);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (opts.logMeta && callingOpts && callingOpts.meta) {\n\t\t\t\t\t\tsaveToFile(`${Date.now()}-call-${actionName}-meta${opts.extension}`, callingOpts.meta);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Call the original method\n\t\t\t\tconst p = next(actionName, params, callingOpts);\n\n\t\t\t\tconst p2 = p\n\t\t\t\t\t.then(response => {\n\n\t\t\t\t\t\t// Log response to logger\n\t\t\t\t\t\tif (logFn) {\n\t\t\t\t\t\t\tconst msg = coloringResponse(`Response for '${actionName}' is received` + (opts.logResponse ? \":\" : \".\"));\n\t\t\t\t\t\t\topts.logResponse ? logFn(msg, response) : logFn(msg);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Log response to file\n\t\t\t\t\t\tif (targetFolder && opts.logResponse)\n\t\t\t\t\t\t\tsaveToFile(`${Date.now()}-call-${actionName}-response${opts.extension}`, response);\n\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\n\t\t\t\t\t\t// Log error to logger\n\t\t\t\t\t\tif (logFn) {\n\t\t\t\t\t\t\tlogFn(coloringError(`Error for '${actionName}' is received:`), err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Logger error to file\n\t\t\t\t\t\tif (targetFolder && opts.logResponse)\n\t\t\t\t\t\t\tsaveToFile(`${Date.now()}-call-${actionName}-error${opts.extension}`, err);\n\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\n\t\t\t\t// Context issue workaround: https://github.com/moleculerjs/moleculer/issues/413\n\t\t\t\tp2.ctx = p.ctx;\n\n\t\t\t\treturn p2;\n\t\t\t};\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Middlewares = {\n\tActionHook: require(\"./action-hook\"),\n\tBulkhead: require(\"./bulkhead\"),\n\tContextTracker: require(\"./context-tracker\"),\n\tCircuitBreaker: require(\"./circuit-breaker\"),\n\tTimeout: require(\"./timeout\"),\n\tRetry: require(\"./retry\"),\n\tFallback: require(\"./fallback\"),\n\tErrorHandler: require(\"./error-handler\"),\n\tMetrics: require(\"./metrics\"),\n\tTracing: require(\"./tracing\"),\n\n\tDebounce: require(\"./debounce\"),\n\tThrottle: require(\"./throttle\"),\n\n\tHotReload: require(\"./hot-reload\"),\n\n\tTransmit: {\n\t\tEncryption: require(\"./transmit/encryption\"),\n\t\tCompression: require(\"./transmit/compression\")\n\t},\n\n\tDebugging: {\n\t\tTransitLogger: require(\"./debugging/transit-logger\"),\n\t\tActionLogger: require(\"./debugging/action-logger\"),\n\t}\n};\n\nmodule.exports = Middlewares;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = function debounceMiddleware(broker) {\n\n\tfunction wrapEventDebounceMiddleware(handler, event) {\n\t\tif (event.debounce > 0) {\n\t\t\tlet timer;\n\n\t\t\treturn function debounceMiddleware(ctx) {\n\t\t\t\tif (timer)\n\t\t\t\t\tclearTimeout(timer);\n\n\t\t\t\ttimer = setTimeout(() => {\n\t\t\t\t\ttimer = null;\n\t\t\t\t\treturn handler(ctx);\n\t\t\t\t}, event.debounce);\n\n\t\t\t\treturn broker.Promise.resolve();\n\t\t\t}.bind(this);\n\t\t}\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"Debounce\",\n\n\t\tlocalEvent: wrapEventDebounceMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = function throttleMiddleware(broker) {\n\n\tfunction wrapEventThrottleMiddleware(handler, event) {\n\t\tif (event.throttle > 0) {\n\t\t\tlet lastInvoke = 0;\n\n\t\t\treturn function throttleMiddleware(ctx) {\n\t\t\t\tconst now = Date.now();\n\t\t\t\tif (now - lastInvoke < event.throttle) {\n\t\t\t\t\treturn broker.Promise.resolve();\n\t\t\t\t}\n\t\t\t\tlastInvoke = now;\n\t\t\t\treturn handler(ctx);\n\t\t\t}.bind(this);\n\t\t}\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"Throttle\",\n\n\t\tlocalEvent: wrapEventThrottleMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst crypto = require(\"crypto\");\n\n/**\n * This is a AES encryption middleware to protect the whole\n * Moleculer transporter communication with AES.\n *\n * @param {String|Buffer} password\n * @param {String?} algorithm\n * @param {String|Buffer?} iv\n */\nmodule.exports = function EncryptionMiddleware(password, algorithm = \"aes-256-cbc\", iv) {\n\tif (!password || password.length == 0) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Must be set a password for encryption\");\n\t}\n\n\treturn {\n\t\tname: \"Encryption\",\n\n\t\tcreated() {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.logger.info(`The transmission is ENCRYPTED by '${algorithm}'.`);\n\t\t},\n\n\t\ttransporterSend(next) {\n\t\t\treturn (topic, data, meta) => {\n\t\t\t\tconst encrypter = iv ? crypto.createCipheriv(algorithm, password, iv) : crypto.createCipher(algorithm, password);\n\t\t\t\tconst res = Buffer.concat([encrypter.update(data), encrypter.final()]);\n\t\t\t\treturn next(topic, res, meta);\n\t\t\t};\n\t\t},\n\n\t\ttransporterReceive(next) {\n\t\t\treturn (cmd, data, s) => {\n\t\t\t\tconst decrypter = iv ? crypto.createDecipheriv(algorithm, password, iv) : crypto.createDecipher(algorithm, password);\n\t\t\t\tconst res = Buffer.concat([decrypter.update(data), decrypter.final()]);\n\t\t\t\treturn next(cmd, res, s);\n\t\t\t};\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst Middlewares \t= require(\"./middlewares\");\nconst { BrokerOptionsError } = require(\"./errors\");\nconst { isObject, isFunction, isString }\t= require(\"./utils\");\n\nclass MiddlewareHandler {\n\n\tconstructor(broker) {\n\t\tthis.broker = broker;\n\n\t\tthis.list = [];\n\n\t\tthis.registeredHooks = {};\n\t}\n\n\tadd(mw) {\n\t\tif (!mw) return;\n\n\t\tif (isString(mw)) {\n\t\t\tconst found = _.get(Middlewares, mw);\n\t\t\tif (!found)\n\t\t\t\tthrow new BrokerOptionsError(`Invalid built-in middleware type '${mw}'.`, { type: mw });\n\t\t\tmw = found;\n\t\t}\n\n\t\tif (isFunction(mw))\n\t\t\tmw = mw.call(this.broker, this.broker);\n\n\t\tif (!isObject(mw))\n\t\t\tthrow new BrokerOptionsError(`Invalid middleware type '${typeof mw}'. Accepted only Object of Function.`, { type: typeof mw });\n\n\t\tObject.keys(mw).forEach(key => {\n\t\t\tif (isFunction(mw[key])) {\n\t\t\t\tif (Array.isArray(this.registeredHooks[key]))\n\t\t\t\t\tthis.registeredHooks[key].push(mw[key]);\n\t\t\t\telse\n\t\t\t\t\tthis.registeredHooks[key] = [mw[key]];\n\t\t\t}\n\t\t});\n\n\t\tthis.list.push(mw);\n\t}\n\n\t/**\n\t * Wrap a handler\n\t *\n\t * @param {string} method\n\t * @param {Function} handler\n\t * @param {Object} def\n\t * @returns {Function}\n\t * @memberof MiddlewareHandler\n\t */\n\twrapHandler(method, handler, def) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\thandler = this.registeredHooks[method].reduce((handler, fn) => {\n\t\t\t\treturn fn.call(this.broker, handler, def);\n\t\t\t}, handler);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\t/**\n\t * Call a handler asynchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns {Promise}\n\t * @memberof MiddlewareHandler\n\t */\n\tcallHandlers(method, args, opts = {}) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\tconst list = opts.reverse ? Array.from(this.registeredHooks[method]).reverse() : this.registeredHooks[method];\n\t\t\treturn list.reduce((p, fn) => p.then(() => fn.apply(this.broker, args)), this.broker.Promise.resolve());\n\t\t}\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Call a handler synchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns {Array<any}\n\t * @memberof MiddlewareHandler\n\t */\n\tcallSyncHandlers(method, args, opts = {}) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\tconst list = opts.reverse ? Array.from(this.registeredHooks[method]).reverse() : this.registeredHooks[method];\n\t\t\treturn list.map(fn => fn.apply(this.broker, args));\n\t\t}\n\t\treturn;\n\t}\n\n\t/**\n\t * Get count of registered middlewares\n\t *\n\t * @returns {Number}\n\t * @memberof MiddlewareHandler\n\t */\n\tcount() {\n\t\treturn this.list.length;\n\t}\n\n\t/**\n\t * Wrap a method\n\t *\n\t * @param {string} method\n\t * @param {Function} handler\n\t * @param {any} bindTo\n\t * @param {Object} opts\n\t * @returns {Function}\n\t * @memberof MiddlewareHandler\n\t */\n\twrapMethod(method, handler, bindTo = this.broker, opts = {}) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\tconst list = opts.reverse ? Array.from(this.registeredHooks[method]).reverse() : this.registeredHooks[method];\n\t\t\thandler = list.reduce((next, fn) => fn.call(bindTo, next), handler.bind(bindTo));\n\t\t}\n\n\t\treturn handler;\n\t}\n\n}\n\nmodule.exports = MiddlewareHandler;\n\n/*\n{\n    // After broker is created\n    created(broker) {\n\t\treturn;\n    },\n\n    // Wrap local action handlers (legacy middleware handler)\n    localAction(next, action) {\n\t\treturn ctx => {\n\t\t\treturn next(ctx);\n\t\t};\n    },\n\n    // Wrap remote action handlers\n    remoteAction(next, action) {\n\t\treturn ctx => {\n\t\t\treturn next(ctx);\n\t\t};\n    },\n\n\t// Wrap local event handlers\n\tlocalEvent(next, event) {\n\t\treturn (payload, sender, event) => {\n\t\t\treturn next(payload, sender, event);\n\t\t};\n\t},\n\n    // Wrap local method handlers\n    localMethod(next, method) {\n\t\treturn () => {\n\t\t\treturn next(...arguments);\n\t\t};\n\t},\n\n\t// Wrap broker.createService method\n\tcreateService(next) {\n\t\treturn (schema, schemaMods) => {\n\t\t\treturn next(schema, schemaMods);\n\t\t};\n\t},\n\n\t// Wrap broker.registerLocalService method\n\tregisterLocalService(next) {\n\t\treturn (svc) => {\n\t\t\treturn next(svc);\n\t\t};\n\t},\n\n\t// Wrap broker.destroyService method\n\tdestroyService(next) {\n\t\treturn (svc) => {\n\t\t\treturn next(svc);\n\t\t};\n\t},\n\n\t// Wrap broker.call method\n\tcall(next) {\n\t\treturn (actionName, params, opts) => {\n\t\t\treturn next(actionName, params, opts);\n\t\t};\n\t},\n\n\t// Wrap broker.mcall method\n\tmcall(next) {\n\t\treturn (def) => {\n\t\t\treturn next(def);\n\t\t};\n\t},\n\n    // Wrap broker.emit method\n    emit(next) {\n\t\treturn (event, payload) => {\n\t\t\treturn next(event, payload);\n\t\t};\n    },\n\n    // Wrap broker.broadcast method\n    broadcast(next) {\n\t\treturn (event, payload) => {\n\t\t\treturn next(event, payload);\n\t\t};\n    },\n\n    // Wrap broker.broadcastLocal method\n    broadcastLocal(next) {\n\t\treturn (event, payload) => {\n\t\t\treturn next(event, payload);\n\t\t};\n    },\n\n\t// While a new local service creating (after mixins are mixed)\n\tserviceCreating(service, schema) {\n\t\treturn;\n\t},\n\n\t// After a new local service created\n\tserviceCreated(service) {\n\t\treturn;\n\t},\n\n\t// Before a local service started\n\tserviceStarting(service) {\n\t\treturn Promise.resolve();\n\t},\n\n\t// After a local service started\n\tserviceStarted(service) {\n\t\treturn Promise.resolve();\n\t},\n\n\t// Before a local service stopping\n\tserviceStopping(service) {\n\t\treturn Promise.resolve();\n\t},\n\n\t// After a local service stopped\n\tserviceStopped(service) {\n\t\treturn Promise.resolve();\n\t},\n\n    // Before broker starting\n    starting(broker) {\n\t\treturn Promise.resolve();\n    },\n\n    // After broker started\n    started(broker) {\n\t\treturn Promise.resolve();\n    },\n\n    // Before broker stopping\n    stopping(broker) {\n\t\treturn Promise.resolve();\n    },\n\n    // After broker stopped\n    stopped(broker) {\n\t\treturn Promise.resolve();\n    },\n\n\t// When transit publishing a packet\n\ttransitPublish(next) {\n\t\treturn (packet) => {\n\t\t\treturn next(packet);\n\t\t};\n\t},\n\n\t// When transit receives & handles a packet\n\ttransitMessageHandler(next) {\n\t\treturn (cmd, packet) => {\n\t\t\treturn next(cmd, packet);\n\t\t};\n\t},\n\n\t// When transporter send data\n\ttransporterSend(next) {\n\t\treturn (topic, data, meta) => {\n\t\t\treturn next(topic, data, meta);\n\t\t};\n\t},\n\n\t// When transporter received data\n\ttransporterReceive(next) {\n\t\treturn (cmd, data, s) => {\n\t\t\treturn next(cmd, data, s);\n\t\t};\n\t},\n\n\t// When transporter received data\n\tnewLogEntry(type, args, bindings) {\n\t\t// Do something\n\t}\n}\n\n*/\n","\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isObject } = require(\"../../utils\");\n\n/**\n * Abstract Trace Exporter\n *\n * @class BaseTraceExporter\n */\nclass BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of BaseTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof BaseTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = opts || {};\n\t\tthis.Promise = Promise; // default promise before logger is initialized\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof BaseTraceExporter\n\t */\n\tinit(tracer) {\n\t\tthis.tracer = tracer;\n\t\tthis.broker = tracer.broker;\n\t\tthis.Promise = this.broker.Promise;\n\t\tthis.logger = this.opts.logger || this.tracer.logger;\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanStarted(/*span*/) {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanFinished(/*span*/) {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Flattening tags to one-level object.\n\t * E.g.\n\t *  **From:**\n\t * \t```js\n\t * \t{\n\t * \t\terror: {\n\t * \t\t\tname: \"MoleculerError\"\n\t * \t\t}\n\t * \t}\n\t *  ```\n\t *\n\t * \t**To:**\n\t * \t```js\n\t *  {\n\t * \t\t\"error.name\": \"MoleculerError\"\n\t *  }\n\t *  ```\n\t *\n\t * @param {Object} obj\n\t * @param {boolean} [convertToString=false]\n\t * @param {string} [path=\"\"]\n\t * @returns {Object}\n\t * @memberof BaseTraceExporter\n\t */\n\tflattenTags(obj, convertToString = false, path = \"\") {\n\t\tif (!obj) return null;\n\n\t\treturn Object.keys(obj).reduce((res, k) => {\n\t\t\tconst o = obj[k];\n\t\t\tconst pp = (path ? path + \".\" : \"\") + k;\n\n\t\t\tif (isObject(o))\n\t\t\t\tObject.assign(res, this.flattenTags(o, convertToString, pp));\n\t\t\telse if (o !== undefined) {\n\t\t\t\tres[pp] = convertToString ? String(o) : o;\n\t\t\t}\n\n\t\t\treturn res;\n\t\t}, {});\n\t}\n\n\t/**\n\t * Convert Error to POJO.\n\t *\n\t * @param {Error} err\n\t * @returns {Object}\n\t * @memberof BaseTraceExporter\n\t */\n\terrorToObject(err) {\n\t\tif (!err) return null;\n\n\t\treturn _.pick(err, this.tracer.opts.errorFields);\n\t}\n}\n\nmodule.exports = BaseTraceExporter;\n","\"use strict\";\n\nconst _ \t\t\t\t\t\t= require(\"lodash\");\nconst r \t\t\t\t\t\t= _.repeat;\nconst kleur \t\t\t\t\t= require(\"kleur\");\nconst { humanize, isFunction }  = require(\"../../utils\");\n\nconst BaseTraceExporter = require(\"./base\");\n\n/**\n * Console Trace Exporter only for debugging\n *\n * @class ConsoleTraceExporter\n */\nclass ConsoleTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of ConsoleTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof ConsoleTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\tlogger: null,\n\t\t\tcolors: true,\n\t\t\twidth: 100,\n\t\t\tgaugeWidth: 40\n\t\t});\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\n\t\tthis.spans = {};\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof ConsoleTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tthis.spans = {};\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof ConsoleTraceExporter\n\t */\n\tspanStarted(span) {\n\t\tthis.spans[span.id] = {\n\t\t\tspan,\n\t\t\tchildren: []\n\t\t};\n\n\t\tif (span.parentID) {\n\t\t\tconst parentItem = this.spans[span.parentID];\n\t\t\tif (parentItem)\n\t\t\t\tparentItem.children.push(span.id);\n\t\t}\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof ConsoleTraceExporter\n\t */\n\tspanFinished(span) {\n\t\t//this.log(span);\n\t\tif (!this.spans[span.parentID]) {\n\t\t\tthis.printRequest(span.id);\n\n\t\t\t// remove old printed requests\n\t\t\tthis.removeSpanWithChildren(span.id);\n\t\t}\n\t}\n\n\t/**\n\t * Remove a finished span with children.\n\t *\n\t * @param {String} spanID\n\t * @memberof ConsoleTraceExporter\n\t */\n\tremoveSpanWithChildren(spanID) {\n\t\tconst span = this.spans[spanID];\n\t\tif (span) {\n\t\t\tif (span.children && span.children.length > 0) {\n\t\t\t\tspan.children.forEach(child => this.removeSpanWithChildren(child));\n\t\t\t}\n\t\t\tdelete this.spans[spanID];\n\t\t}\n\t}\n\n\tdrawTableTop() {\n\t\tthis.log(kleur.grey(\"┌\" + r(\"─\", this.opts.width - 2) + \"┐\"));\n\t}\n\n\tdrawHorizonalLine() {\n\t\tthis.log(kleur.grey(\"├\" + r(\"─\", this.opts.width - 2) + \"┤\"));\n\t}\n\n\tdrawLine(text) {\n\t\tthis.log(kleur.grey(\"│ \") + text + kleur.grey(\" │\"));\n\t}\n\n\tdrawTableBottom() {\n\t\tthis.log(kleur.grey(\"└\" + r(\"─\", this.opts.width - 2) + \"┘\"));\n\t}\n\n\tgetAlignedTexts(str, space) {\n\t\tconst len = str.length;\n\n\t\tlet left;\n\t\tif (len <= space)\n\t\t\tleft = str + r(\" \", space - len);\n\t\telse {\n\t\t\tleft = str.slice(0, Math.max(space - 3, 0));\n\t\t\tleft += r(\".\", Math.min(3, space));\n\t\t}\n\n\t\treturn left;\n\t}\n\n\tdrawGauge(gstart, gstop) {\n\t\tconst gw = this.opts.gaugeWidth;\n\t\tconst p1 = Math.floor(gw * gstart / 100);\n\t\tconst p2 = Math.max(Math.floor(gw * gstop / 100) - p1, 1);\n\t\tconst p3 = Math.max(gw - (p1 + p2), 0);\n\n\t\treturn [\n\t\t\tkleur.grey(\"[\"),\n\t\t\tkleur.grey(r(\".\", p1)),\n\t\t\tr(\"■\", p2),\n\t\t\tkleur.grey(r(\".\", p3)),\n\t\t\tkleur.grey(\"]\")\n\t\t].join(\"\");\n\t}\n\n\tgetCaption(span) {\n\t\tlet caption = span.name;\n\n\t\tif (span.tags.fromCache)\n\t\t\tcaption += \" *\";\n\t\tif (span.tags.remoteCall)\n\t\t\tcaption += \" »\";\n\t\tif (span.error)\n\t\t\tcaption += \" ×\";\n\n\t\treturn caption;\n\t}\n\n\tgetColor(span) {\n\t\tlet c = kleur.bold;\n\t\tif (span.tags.fromCache)\n\t\t\tc = c().yellow;\n\t\tif (span.tags.remoteCall)\n\t\t\tc = c().cyan;\n\t\tif (span.duration == null)\n\t\t\tc = c().grey;\n\t\tif (span.error)\n\t\t\tc = c().red;\n\n\t\treturn c;\n\t}\n\n\tgetTraceInfo(main) {\n\t\tlet depth = 0;\n\t\tlet total = 0;\n\t\tlet check = (item, level, parents) => {\n\t\t\titem.level = level;\n\t\t\titem.parents = parents || [];\n\t\t\ttotal++;\n\t\t\tif (level > depth)\n\t\t\t\tdepth = level;\n\n\t\t\tif (item.children.length > 0) {\n\t\t\t\titem.children.forEach((spanID, idx) => {\n\t\t\t\t\tconst span = this.spans[spanID];\n\t\t\t\t\tspan.first = idx == 0;\n\t\t\t\t\tspan.last = idx == item.children.length - 1;\n\t\t\t\t\tcheck(span, item.level + 1, [].concat(item.parents, [item]));\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcheck(main, 1);\n\n\t\treturn { depth, total };\n\t}\n\n\tgetSpanIndent(spanItem) {\n\t\tif (spanItem.level > 1) {\n\t\t\tlet s = spanItem.parents.map((item, idx) => {\n\t\t\t\tif (idx > 0)\n\t\t\t\t\treturn item.last ? \"  \" : \"│ \";\n\n\t\t\t\treturn \"\";\n\t\t\t}).join(\"\");\n\n\t\t\ts += spanItem.last ? \"└─\" : \"├─\";\n\n\t\t\treturn s + (spanItem.children.length > 0 ? \"┬─\" : \"──\") + \" \";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Print a span row\n\t *\n\t * @param {Object} span\n\t * @param {Object} main\n\t */\n\tprintSpanTime(spanItem, mainItem, level) {\n\t\tconst span = spanItem.span;\n\t\tconst mainSpan = mainItem.span;\n\t\tconst margin = 2 * 2;\n\t\tconst w = (this.opts.width || 80) - margin;\n\t\tconst gw = this.opts.gaugeWidth || 40;\n\n\t\tconst time = span.duration == null ? \"?\" : humanize(span.duration);\n\t\tconst indent = this.getSpanIndent(spanItem);\n\t\tconst caption = this.getCaption(span);\n\t\tconst info = kleur.grey(indent) + this.getAlignedTexts(caption, w - gw - 3 - time.length - 1 - indent.length) + \" \" + time;\n\n\t\tconst startTime = span.startTime || mainSpan.startTime;\n\t\tconst finishTime = span.finishTime || mainSpan.finishTime;\n\n\t\tlet gstart = (startTime - mainSpan.startTime) / (mainSpan.finishTime - mainSpan.startTime) * 100;\n\t\tlet gstop = (finishTime - mainSpan.startTime) / (mainSpan.finishTime - mainSpan.startTime) * 100;\n\n\t\tif (Number.isNaN(gstart) && Number.isNaN(gstop)) {\n\t\t\tgstart = 0;\n\t\t\tgstop = 100;\n\t\t}\n\t\tif (gstop > 100)\n\t\t\tgstop = 100;\n\n\t\tconst c = this.getColor(span);\n\t\tthis.drawLine(c(info + \" \" + this.drawGauge(gstart, gstop)));\n\n\t\tif (spanItem.children.length > 0)\n\t\t\tspanItem.children.forEach((spanID, idx) =>\n\t\t\t\tthis.printSpanTime(this.spans[spanID], mainItem, level + 1, spanItem, {\n\t\t\t\t\tfirst: idx == 0,\n\t\t\t\t\tlast: idx == spanItem.children.length - 1\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\t/**\n\t * Print request traces\n\t *\n\t * @param {String} id\n\t */\n\tprintRequest(id) {\n\t\tconst main = this.spans[id];\n\t\tif (!main) return ; // Async span\n\n\t\tconst margin = 2 * 2;\n\t\tconst w = this.opts.width - margin;\n\n\t\tthis.drawTableTop();\n\n\t\tconst { total, depth } = this.getTraceInfo(main);\n\n\t\tconst truncatedID = this.getAlignedTexts(id, w - \"ID: \".length - \"Depth: \".length - (\"\"+depth).length - \"Total: \".length - (\"\"+total).length - 2);\n\t\tconst line = kleur.grey(\"ID: \") + kleur.bold(truncatedID) + \" \" + kleur.grey(\"Depth: \") + kleur.bold(depth) + \" \" + kleur.grey(\"Total: \") + kleur.bold(total);\n\t\tthis.drawLine(line);\n\n\t\tthis.drawHorizonalLine();\n\n\t\tthis.printSpanTime(main, main, 1, null, {});\n\n\t\tthis.drawTableBottom();\n\t}\n\n\tlog(...args) {\n\t\tif (isFunction(this.opts.logger)) {\n\t\t\treturn this.opts.logger(...args);\n\t\t} else {\n\t\t\treturn this.logger.info(...args);\n\t\t}\n\t}\n}\n\nmodule.exports = ConsoleTraceExporter;\n","\"use strict\";\n\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst BaseTraceExporter \t= require(\"./base\");\nconst { isFunction } \t\t= require(\"../../utils\");\n\n/**\n * Event Trace Exporter.\n *\n * @class EventTraceExporter\n */\nclass EventTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of EventTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof EventTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\t/** @type {String} Base URL for Zipkin server. */\n\t\t\teventName: \"$tracing.spans\",\n\n\t\t\tsendStartSpan: false,\n\t\t\tsendFinishSpan: true,\n\n\t\t\tbroadcast: false,\n\n\t\t\tgroups: null,\n\n\t\t\t/** @type {Number} Batch send time interval. */\n\t\t\tinterval: 5,\n\n\t\t\tspanConverter: null,\n\n\t\t\t/** @type {Object?} Default span tags */\n\t\t\tdefaultTags: null\n\t\t});\n\n\t\tthis.queue = [];\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof EventTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.flush(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\n\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, tracer) : this.opts.defaultTags;\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = null;\n\t\t}\n\t\treturn this.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanStarted(span) {\n\t\tif (this.opts.sendStartSpan) {\n\t\t\tthis.queue.push(span);\n\t\t\tif (!this.timer)\n\t\t\t\tthis.flush();\n\t\t}\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof EventTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tif (this.opts.sendFinishSpan) {\n\t\t\tthis.queue.push(span);\n\t\t\tif (!this.timer)\n\t\t\t\tthis.flush();\n\t\t}\n\t}\n\n\t/**\n\t * Flush tracing data to Datadog server\n\t *\n\t * @memberof EventTraceExporter\n\t */\n\tflush() {\n\t\tif (this.queue.length == 0) return;\n\n\t\tconst data = this.generateTracingData();\n\t\tthis.queue.length = 0;\n\n\t\tif (this.opts.broadcast) {\n\t\t\tthis.logger.debug(`Send tracing spans (${data.length} spans) broadcast events.`);\n\t\t\tthis.broker.broadcast(this.opts.eventName, data, { groups: this.opts.groups });\n\t\t} else {\n\t\t\tthis.logger.debug(`Send tracing spans (${data.length} spans) events.`);\n\t\t\tthis.broker.emit(this.opts.eventName, data, { groups: this.opts.groups });\n\t\t}\n\t}\n\n\t/**\n\t * Generate tracing data with custom converter\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof EventTraceExporter\n\t */\n\tgenerateTracingData() {\n\t\tif (isFunction(this.opts.spanConverter))\n\t\t\treturn this.queue.map(span => this.opts.spanConverter.call(this, span));\n\n\t\treturn Array.from(this.queue).map(span => {\n\t\t\tconst newSpan = Object.assign({}, span);\n\t\t\tif (newSpan.error)\n\t\t\t\tnewSpan.error = this.errorToObject(span.error);\n\n\t\t\treturn newSpan;\n\t\t});\n\t}\n\n}\n\nmodule.exports = EventTraceExporter;\n","\"use strict\";\n\nconst _ \t\t\t\t\t\t= require(\"lodash\");\nconst BaseTraceExporter \t\t= require(\"./base\");\nconst { isObject, isFunction }\t= require(\"../../utils\");\n\n/**\n * Event Trace Exporter. It sends same trace events as in Moleculer <= v0.13.\n *\n * @class EventLegacyTraceExporter\n */\nclass EventLegacyTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of EventLegacyTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof EventLegacyTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t});\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof EventLegacyTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\t\tthis.broker = tracer.broker;\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanStarted(span) {\n\t\tconst payload = this.generateMetricPayload(span);\n\t\tthis.broker.emit(\"metrics.trace.span.start\", payload);\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof EventLegacyTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tconst payload = this.generateMetricPayload(span);\n\t\tthis.broker.emit(\"metrics.trace.span.finish\", payload);\n\t}\n\n\t/**\n\t * Generate metrics payload\n\t *\n\t * @param {Context} ctx\n\t * @returns {Object}\n\t */\n\tgenerateMetricPayload(span) {\n\t\tlet payload = {\n\t\t\tid: span.id,\n\t\t\trequestID: span.traceID,\n\t\t\tlevel: span.tags.callingLevel,\n\t\t\tstartTime: span.startTime,\n\t\t\tremoteCall: span.tags.remoteCall\n\t\t};\n\n\t\t// Process extra metrics\n\t\tif (span.opts.ctx)\n\t\t\tthis.processExtraMetrics(span.opts.ctx, payload);\n\n\t\tpayload.action = span.tags.action;\n\t\tpayload.service = span.service;\n\n\t\tif (span.parentID)\n\t\t\tpayload.parent = span.parentID;\n\n\t\tpayload.nodeID = this.broker.nodeID;\n\t\tif (payload.remoteCall)\n\t\t\tpayload.callerNodeID = span.tags.callerNodeID;\n\n\t\tif (span.finishTime) {\n\t\t\tpayload.endTime = span.finishTime;\n\t\t\tpayload.duration = span.duration;\n\t\t\tpayload.fromCache = span.tags.fromCache;\n\n\t\t\tif (span.error) {\n\t\t\t\tpayload.error = this.errorToObject(span.error);\n\t\t\t}\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * Assign extra metrics taking into account action definitions\n\t *\n\t * @param {Context} ctx\n\t * @param {string} name Field of the context to be assigned.\n\t * @param {any} payload Object for assignment.\n\t *\n\t * @private\n\t */\n\tassignExtraMetrics(ctx, name, payload) {\n\t\tlet def = ctx.action.metrics[name];\n\t\t// if metrics definitions is boolean do default, metrics=true\n\t\tif (def === true) {\n\t\t\tpayload[name] = ctx[name];\n\t\t} else if (Array.isArray(def)) {\n\t\t\tpayload[name] = _.pick(ctx[name], def);\n\t\t} else if (isFunction(def)) {\n\t\t\tpayload[name] = def(ctx[name]);\n\t\t}\n\t}\n\n\t/**\n\t * Decide and process extra metrics taking into account action definitions\n\t *\n\t * @param {Context} ctx\n\t * @param {any} payload Object for assignment.\n\t *\n\t * @private\n\t */\n\tprocessExtraMetrics(ctx, payload) {\n\t\t// extra metrics (params and meta)\n\t\tif (isObject(ctx.action.metrics)) {\n\t\t\t// custom metrics def\n\t\t\tthis.assignExtraMetrics(ctx, \"params\", payload);\n\t\t\tthis.assignExtraMetrics(ctx, \"meta\", payload);\n\t\t}\n\t}\n\n\n}\n\nmodule.exports = EventLegacyTraceExporter;\n","/* global self */\n\nconst scope = (typeof global !== 'undefined' && global) ||\n            (typeof self !== 'undefined' && self) ||\n            window\n\nmodule.exports = (...args) => scope.fetch(...args)\n","\"use strict\";\n\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst fetch \t\t\t\t= require(\"node-fetch\");\nconst BaseTraceExporter \t= require(\"./base\");\nconst { isFunction } \t\t= require(\"../../utils\");\n\n/**\n * Trace Exporter for Zipkin.\n *\n * API v2: https://zipkin.io/zipkin-api/#/\n * API v1: https://zipkin.io/pages/data_model.html\n *\n * Running Zipkin in Docker:\n *\n * \t docker run -d -p 9411:9411 --name=zipkin openzipkin/zipkin\n *\n * @class ZipkinTraceExporter\n */\nclass ZipkinTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of ZipkinTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof ZipkinTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\t/** @type {String} Base URL for Zipkin server. */\n\t\t\tbaseURL: process.env.ZIPKIN_URL || \"http://localhost:9411\",\n\n\t\t\t/** @type {String} Zipkin REST API version. */\n\t\t\t//version: \"v2\",\n\n\t\t\t/** @type {Number} Batch send time interval in seconds. */\n\t\t\tinterval: 5,\n\n\t\t\t/** @type {Object} Additional payload options. */\n\t\t\tpayloadOptions: {\n\n\t\t\t\t/** @type {Boolean} Set `debug` property in v2 payload. */\n\t\t\t\tdebug: false,\n\n\t\t\t\t/** @type {Boolean} Set `shared` property in v2 payload. */\n\t\t\t\tshared: false\n\t\t\t},\n\n\t\t\t/** @type {Object?} Default span tags */\n\t\t\tdefaultTags: null\n\t\t});\n\n\t\tthis.queue = [];\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof ZipkinTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\n\t\tfetch.Promise = this.broker.Promise;\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.flush(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\n\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, tracer) : this.opts.defaultTags;\n\t\tif (this.defaultTags) {\n\t\t\tthis.defaultTags = this.flattenTags(this.defaultTags, true);\n\t\t}\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = null;\n\t\t}\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof ZipkinTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tthis.queue.push(span);\n\t}\n\n\t/**\n\t * Flush tracing data to Datadog server\n\t *\n\t * @memberof ZipkinTraceExporter\n\t */\n\tflush() {\n\t\tif (this.queue.length == 0) return;\n\n\t\tconst data = this.generateTracingData();\n\t\tthis.queue.length = 0;\n\n\t\tfetch(`${this.opts.baseURL}/api/v2/spans`, {\n\t\t\tmethod: \"post\",\n\t\t\tbody: JSON.stringify(data),\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t}\n\t\t}).then(res => {\n\t\t\tif (res.status >= 400) {\n\t\t\t\tthis.logger.warn(`Unable to upload tracing spans to Zipkin. Status: ${res.status} ${res.statusText}`);\n\t\t\t} else {\n\t\t\t\tthis.logger.debug(`Tracing spans (${data.length} spans) are uploaded to Zipkin. Status: ${res.statusText}`);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.logger.warn(\"Unable to upload tracing spans to Zipkin. Error:\" + err.message, err);\n\t\t});\n\t}\n\n\t/**\n\t * Generate tracing data for Zipkin\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof ZipkinTraceExporter\n\t */\n\tgenerateTracingData() {\n\t\treturn this.queue.map(span => this.makePayload(span));\n\t}\n\n\t/**\n\t * Create Zipkin v2 payload from metric event\n\t *\n\t * @param {Span} span\n\t * @returns {Object}\n\t */\n\tmakePayload(span) {\n\t\tconst serviceName = span.service ? span.service.fullName : null;\n\t\tconst payload = {\n\t\t\tname: span.name,\n\t\t\tkind: \"SERVER\",\n\n\t\t\t// Trace & span IDs\n\t\t\ttraceId: this.convertID(span.traceID),\n\t\t\tid: this.convertID(span.id),\n\t\t\tparentId: this.convertID(span.parentID),\n\n\t\t\tlocalEndpoint: { serviceName },\n\t\t\tremoteEndpoint: { serviceName },\n\n\t\t\tannotations: [],\n\n\t\t\ttimestamp: this.convertTime(span.startTime),\n\t\t\tduration: this.convertTime(span.duration),\n\n\t\t\ttags: {\n\t\t\t\tservice: serviceName,\n\t\t\t\t\"span.type\": span.type,\n\t\t\t},\n\n\t\t\tdebug: this.opts.payloadOptions.debug,\n\t\t\tshared: this.opts.payloadOptions.shared\n\t\t};\n\n\t\tif (span.error) {\n\t\t\tpayload.tags[\"error\"] = span.error.message;\n\n\t\t\tpayload.annotations.push({\n\t\t\t\tvalue: \"error\",\n\t\t\t\tendpoint: { serviceName: serviceName, ipv4: \"\", port: 0 },\n\t\t\t\ttimestamp: this.convertTime(span.finishTime)\n\t\t\t});\n\t\t}\n\n\t\tObject.assign(\n\t\t\tpayload.tags,\n\t\t\tthis.defaultTags || {},\n\t\t\tthis.flattenTags(span.tags, true),\n\t\t\tthis.flattenTags(this.errorToObject(span.error), true, \"error\") || {}\n\t\t);\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * Convert Context ID to Zipkin format\n\t *\n\t * @param {String} id\n\t * @returns {String}\n\t */\n\tconvertID(id) {\n\t\treturn id ? id.replace(/-/g, \"\").substring(0, 16) : null;\n\t}\n\n\t/**\n\t * Convert JS timestamp to microseconds\n\t *\n\t * @param {Number} ts\n\t * @returns {Number}\n\t */\n\tconvertTime(ts) {\n\t\treturn ts != null ? Math.round(ts * 1000) : null;\n\t}\n\n}\n\nmodule.exports = ZipkinTraceExporter;\n","\"use strict\";\n\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst fetch \t\t\t\t= require(\"node-fetch\");\nconst BaseTraceExporter \t= require(\"./base\");\nconst { isFunction } \t\t= require(\"../../utils\");\n\n/**\n * Trace Exporter for NewRelic using Zipkin data.\n *\n * NewRelic zipkin tracer: https://docs.newrelic.com/docs/understand-dependencies/distributed-tracing/trace-api/report-zipkin-format-traces-trace-api\n * API v2: https://zipkin.io/zipkin-api/#/\n *\n * @class NewRelicTraceExporter\n */\nclass NewRelicTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of NewRelicTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof NewRelicTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\t/** @type {String} Base URL for NewRelic server. */\n\t\t\tbaseURL:\n\t\t\tprocess.env.NEW_RELIC_TRACE_API_URL || \"https://trace-api.newrelic.com\",\n\n\t\t  /** @type {String} NewRelic Insert API Key */\n\t\t  insertKey: \"\",\n\n\t\t  /** @type {Number} Batch send time interval in seconds. */\n\t\t  interval: 5,\n\n\t\t  /** @type {Object} Additional payload options. */\n\t\t  payloadOptions: {\n\t\t\t/** @type {Boolean} Set `debug` property in v2 payload. */\n\t\t\t\tdebug: false,\n\n\t\t\t\t/** @type {Boolean} Set `shared` property in v2 payload. */\n\t\t\t\tshared: false,\n\t\t  },\n\n\t\t  /** @type {Object?} Default span tags */\n\t\t  defaultTags: null,\n\t\t});\n\n\t\tthis.queue = [];\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof NewRelicTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\n\t\tfetch.Promise = this.broker.Promise;\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.flush(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\n\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, tracer) : this.opts.defaultTags;\n\t\tif (this.defaultTags) {\n\t\t\tthis.defaultTags = this.flattenTags(this.defaultTags, true);\n\t\t}\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = null;\n\t\t}\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof NewRelicTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tthis.queue.push(span);\n\t}\n\n\t/**\n\t * Flush tracing data to NewRelic Zipkin api endpoint\n\t *\n\t * @memberof NewRelicTraceExporter\n\t */\n\tflush() {\n\t\tif (this.queue.length == 0) return;\n\n\t\tconst data = this.generateTracingData();\n\t\tthis.queue.length = 0;\n\n\t\tfetch(`${this.opts.baseURL}/trace/v1`,\n\t\t\t{\n\t\t\t\tmethod: \"post\",\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"Api-Key\": this.opts.insertKey,\n \t\t\t\t\"Data-Format\": \"zipkin\",\n \t\t\t\t\"Data-Format-Version\": \"2\"\n\t\t\t\t}\n\t\t\t}).then(res => {\n\t\t\tif (res.status >= 400) {\n\t\t\t\tthis.logger.warn(`Unable to upload tracing spans to NewRelic. Status: ${res.status} ${res.statusText}`);\n\t\t\t} else {\n\t\t\t\tthis.logger.debug(`Tracing spans (${data.length} spans) uploaded to NewRelic. Status: ${res.statusText}`);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.logger.warn(\"Unable to upload tracing spans to NewRelic. Error:\" + err.message, err);\n\t\t});\n\t}\n\n\t/**\n\t * Generate tracing data for NewRelic\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof NewRelicTraceExporter\n\t */\n\tgenerateTracingData() {\n\t\treturn this.queue.map(span => this.makePayload(span));\n\t}\n\n\t/**\n\t * Create Zipkin v2 payload from metric event\n\t *\n\t * @param {Span} span\n\t * @returns {Object}\n\t */\n\tmakePayload(span) {\n\t\tconst serviceName = span.service ? span.service.fullName : null;\n\t\tconst payload = {\n\t\t\tname: span.name,\n\t\t\tkind: \"CONSUMER\",\n\n\t\t\t// Trace & span IDs\n\t\t\ttraceId: this.convertID(span.traceID),\n\t\t\tid: this.convertID(span.id),\n\t\t\tparentId: this.convertID(span.parentID),\n\n\t\t\tlocalEndpoint: { serviceName },\n\t\t\tremoteEndpoint: { serviceName },\n\n\t\t\tannotations: [\n\t\t\t\t{ timestamp: this.convertTime(span.startTime), value: \"sr\" },\n\t\t\t\t{ timestamp: this.convertTime(span.finishTime), value: \"ss\" },\n\t\t\t],\n\n\t\t\ttimestamp: this.convertTime(span.startTime),\n\t\t\tduration: this.convertTime(span.duration),\n\n\t\t\ttags: {\n\t\t\t\tservice: serviceName,\n\t\t\t\t\"span.type\": span.type,\n\t\t\t},\n\n\t\t\tdebug: this.opts.payloadOptions.debug,\n\t\t\tshared: this.opts.payloadOptions.shared\n\t\t};\n\n\t\tif (span.error) {\n\t\t\tpayload.tags[\"error\"] = span.error.message;\n\n\t\t\tpayload.annotations.push({\n\t\t\t\tvalue: \"error\",\n\t\t\t\tendpoint: { serviceName: serviceName, ipv4: \"\", port: 0 },\n\t\t\t\ttimestamp: this.convertTime(span.finishTime)\n\t\t\t});\n\t\t}\n\n\t\tObject.assign(\n\t\t\tpayload.tags,\n\t\t\tthis.defaultTags || {},\n\t\t\tthis.flattenTags(span.tags, true),\n\t\t\tthis.flattenTags(this.errorToObject(span.error), true, \"error\") || {}\n\t\t);\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * Convert Context ID to Zipkin format\n\t *\n\t * @param {String} id\n\t * @returns {String}\n\t */\n\tconvertID(id) {\n\t\treturn id ? id.replace(/-/g, \"\").substring(0, 16) : null;\n\t}\n\n\t/**\n\t * Convert JS timestamp to microseconds\n\t *\n\t * @param {Number} ts\n\t * @returns {Number}\n\t */\n\tconvertTime(ts) {\n\t\treturn ts != null ? Math.round(ts * 1000) : null;\n\t}\n\n}\n\nmodule.exports = NewRelicTraceExporter;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../../utils\");\nconst { BrokerOptionsError } = require(\"../../errors\");\n\nconst Exporters = {\n\tBase: require(\"./base\"),\n\tConsole: require(\"./console\"),\n\tDatadog: require(\"./datadog\"),\n\t//DatadogSimple: require(\"./datadog-simple\"),\n\tEvent: require(\"./event\"),\n\tEventLegacy: require(\"./event-legacy\"),\n\tJaeger: require(\"./jaeger\"),\n\tZipkin: require(\"./zipkin\"),\n\tNewRelic: require(\"./newrelic\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Exporters).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Exporters[n];\n}\n\n/**\n * Resolve exporter by name\n *\n * @param {object|string} opt\n * @returns {Exporters.Base}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Exporters.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet ExporterClass = getByName(opt);\n\t\tif (ExporterClass)\n\t\t\treturn new ExporterClass();\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid tracing exporter type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet ExporterClass = getByName(opt.type);\n\t\tif (ExporterClass)\n\t\t\treturn new ExporterClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid tracing exporter type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\tthrow new BrokerOptionsError(`Invalid tracing exporter type '${opt}'.`, { type: opt });\n}\n\nfunction register(name, value) {\n\tExporters[name] = value;\n}\n\nmodule.exports = Object.assign(Exporters, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\n/**\n * Rate Limiter class for Tracing.\n *\n * Inspired by\n * \thttps://github.com/jaegertracing/jaeger-client-node/blob/master/src/rate_limiter.js\n *\n * @class RateLimiter\n */\nclass RateLimiter {\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\ttracesPerSecond: 1\n\t\t});\n\n\t\tthis.lastTime = Date.now();\n\t\tthis.balance = 0;\n\t\tthis.maxBalance = this.opts.tracesPerSecond < 1 ? 1 : this.opts.tracesPerSecond;\n\t}\n\n\tcheck(cost = 1) {\n\t\tconst now = Date.now();\n\t\tconst elapsedTime = (now - this.lastTime) / 1000;\n\t\tthis.lastTime = now;\n\n\t\tthis.balance += elapsedTime * this.opts.tracesPerSecond;\n\t\tif (this.balance > this.maxBalance)\n\t\t\tthis.balance = this.maxBalance;\n\n\t\tif (this.balance >= cost) {\n\t\t\tthis.balance -= cost;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nmodule.exports = RateLimiter;\n","const loadTime = getNanoSeconds();\nconst nodeLoadTime = loadTime - process.uptime() * 1e9;\n\nfunction getNanoSeconds() {\n\tconst time = process.hrtime();\n\treturn time[0] * 1e9 + time[1];\n}\n\nfunction now() {\n\treturn (getNanoSeconds() - nodeLoadTime) / 1e6;\n}\n\nconst loadNs = now();\nconst loadMs = Date.now();\n\nmodule.exports = () => loadMs + now() - loadNs;\n","\"use strict\";\n\nconst now = require(\"./now\");\n\nfunction defProp(instance, propName, value, readOnly = false) {\n\tObject.defineProperty(instance, propName, {\n\t\tvalue,\n\t\twritable: !!readOnly,\n\t\tenumerable: false\n\t});\n}\n\n/**\n * Trace Span class\n *\n * @class Span\n */\nclass Span {\n\n\t/**\n\t * Creates an instance of Span.\n\t * @param {Tracer} tracer\n\t * @param {String} name\n\t * @param {Object?} opts\n\t *\n\t * @memberof Span\n\t */\n\tconstructor(tracer, name, opts) {\n\t\tdefProp(this, \"tracer\", tracer, true);\n\t\tdefProp(this, \"logger\", this.tracer.logger, true);\n\t\tdefProp(this, \"opts\", opts || {});\n\t\tdefProp(this, \"meta\", {});\n\n\t\tthis.name = name;\n\t\tthis.type = this.opts.type || \"custom\";\n\t\tthis.id = this.opts.id || this.tracer.broker.generateUid();\n\t\tthis.traceID = this.opts.traceID || this.id;\n\t\tthis.parentID = this.opts.parentID;\n\n\t\tif (this.opts.service) {\n\t\t\tif (typeof this.opts.service == \"string\") {\n\t\t\t\tthis.service = {\n\t\t\t\t\tname: this.opts.service,\n\t\t\t\t\tfullName: this.opts.service,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tthis.service = {\n\t\t\t\t\tname: this.opts.service.name,\n\t\t\t\t\tversion: this.opts.service.version,\n\t\t\t\t\tfullName: this.opts.service.fullName,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthis.priority = this.opts.priority != null ? this.opts.priority : 5;\n\t\tthis.sampled = this.opts.sampled != null ? this.opts.sampled : this.tracer.shouldSample(this);\n\n\t\tthis.startTime = null;\n\t\tthis.finishTime = null;\n\t\tthis.duration = null;\n\n\t\tthis.error = null;\n\n\t\tthis.logs = [];\n\t\tthis.tags = {};\n\n\t\tif (this.opts.defaultTags)\n\t\t\tthis.addTags(this.opts.defaultTags);\n\n\t\tif (this.opts.tags)\n\t\t\tthis.addTags(this.opts.tags);\n\t}\n\n\t/**\n\t * Start span.\n\t *\n\t * @param {Number?} time\n\t * @returns {Span}\n\t * @memberof Span\n\t */\n\tstart(time) {\n\t\tthis.logger.debug(`[${this.id}] Span '${this.name}' is started.`);\n\n\t\tthis.startTime = time || now();\n\t\t// console.log(`\"${this.name}\" start time: ${this.startTime}`);\n\n\t\tthis.tracer.spanStarted(this);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add tags. It will be merged with previous tags.\n\t *\n\t * @param {Object} obj\n\t * @returns {Span}\n\t *\n\t * @memberof Span\n\t */\n\taddTags(obj) {\n\t\tObject.assign(this.tags, obj);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Log a trace event.\n\t *\n\t * @param {String} name\n\t * @param {Object?} fields\n\t * @param {Number?} time\n\t * @returns {Span}\n\t * @memberof Span\n\t */\n\tlog(name, fields, time) {\n\t\ttime = time || now();\n\n\t\tthis.logs.push({\n\t\t\tname,\n\t\t\tfields: fields || {},\n\t\t\ttime,\n\t\t\telapsed: time - this.startTime\n\t\t});\n\n\t\tthis.logger.debug(`[${this.id}] Span '${this.name}' has a new log event: ${name}.`);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set error span.\n\t *\n\t * @param {Error} err\n\t * @memberof Span\n\t */\n\tsetError(err) {\n\t\tthis.error = err != null ? err : true;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Finish span.\n\t *\n\t * @param {Number?} time\n\t * @returns {Span}\n\t * @memberof Span\n\t */\n\tfinish(time) {\n\t\tthis.finishTime = time ? time : now();\n\t\tthis.duration = this.finishTime - this.startTime;\n\n\t\t// console.log(`\"${this.name}\" stop time: ${this.finishTime}  Duration: ${this.duration}`);\n\n\t\tthis.logger.debug(`[${this.id}] Span '${this.name}' is finished. Duration: ${Number(this.duration).toFixed(3)} ms`, this.tags);\n\n\t\tthis.tracer.spanFinished(this);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Check the span is active or finished.\n\t *\n\t * @returns {boolean}\n\t */\n\tisActive() {\n\t\treturn this.finishTime == null;\n\t}\n\n\t/**\n\t * Start a child span.\n\t *\n\t * @param {String} name\n\t * @param {Object?} opts\n\t * @returns {Span} Child span\n\t * @memberof Span\n\t */\n\tstartSpan(name, opts) {\n\t\tconst r = {\n\t\t\ttraceID: this.traceID,\n\t\t\tparentID: this.id,\n\t\t\tsampled: this.sampled,\n\t\t\tservice: this.service\n\t\t};\n\t\treturn this.tracer.startSpan(name, opts ? Object.assign(r, opts) : r);\n\t}\n\n}\n\nmodule.exports = Span;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst Exporters = require(\"./exporters\");\n//const AsyncStorage = require(\"../async-storage\");\nconst RateLimiter = require(\"./rate-limiter\");\nconst Span = require(\"./span\");\nconst { isFunction } = require(\"../utils\");\n\n/**\n * Moleculer Tracer class\n */\nclass Tracer {\n\n\t/**\n\t * Creates an instance of Tracer.\n\t *\n\t * @param {ServiceBroker} broker\n\t * @param {Object} opts\n\t * @memberof Tracer\n\t */\n\tconstructor(broker, opts) {\n\t\tthis.broker = broker;\n\t\tthis.logger = broker.getLogger(\"tracer\");\n\n\t\tif (opts === true || opts === false)\n\t\t\topts = { enabled: opts };\n\n\t\tthis.opts = _.defaultsDeep({}, opts, {\n\t\t\tenabled: true,\n\n\t\t\texporter: null,\n\n\t\t\tsampling: {\n\t\t\t\t// Constants sampling\n\t\t\t\trate: 1.0, // 0.0 - Never, 1.0 > x > 0.0 - Fix, 1.0 - Always\n\n\t\t\t\t// Ratelimiting sampling https://opencensus.io/tracing/sampling/ratelimited/\n\t\t\t\ttracesPerSecond: null, // 1: 1 trace / sec, 5: 5 traces / sec, 0.1: 1 trace / 10 secs\n\n\t\t\t\tminPriority: null\n\t\t\t},\n\n\t\t\tactions: true,\n\t\t\tevents: false,\n\n\t\t\terrorFields: [\"name\", \"message\", \"code\", \"type\", \"data\"],\n\t\t\tstackTrace: false,\n\n\t\t\tdefaultTags: null,\n\n\t\t\ttags: {\n\t\t\t\taction: null,\n\t\t\t\tevent: null,\n\t\t\t}\n\t\t});\n\n\t\tif (this.opts.stackTrace && this.opts.errorFields.indexOf(\"stack\") === -1)\n\t\t\tthis.opts.errorFields.push(\"stack\");\n\n\t\tthis.sampleCounter = 0;\n\n\t\tif (this.opts.sampling.tracesPerSecond != null && this.opts.sampling.tracesPerSecond > 0) {\n\t\t\tthis.rateLimiter = new RateLimiter({\n\t\t\t\ttracesPerSecond: this.opts.sampling.tracesPerSecond\n\t\t\t});\n\t\t}\n\n\t\t//this.scope = new AsyncStorage(this.broker);\n\t\t//this.scope.enable();\n\t\t//this._scopeEnabled = true;\n\n\t\tif (this.opts.enabled)\n\t\t\tthis.logger.info(\"Tracing: Enabled\");\n\t}\n\n\t/**\n\t * Initialize Tracer.\n\t */\n\tinit() {\n\t\tif (this.opts.enabled) {\n\n\t\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, this) : this.opts.defaultTags;\n\n\t\t\t// Create Exporter instances\n\t\t\tif (this.opts.exporter) {\n\t\t\t\tconst exporters = Array.isArray(this.opts.exporter) ? this.opts.exporter : [this.opts.exporter];\n\n\t\t\t\tthis.exporter = _.compact(exporters).map(r => {\n\t\t\t\t\tconst exporter = Exporters.resolve(r);\n\t\t\t\t\texporter.init(this);\n\t\t\t\t\treturn exporter;\n\t\t\t\t});\n\n\t\t\t\tconst exporterNames = this.exporter.map(exporter => this.broker.getConstructorName(exporter));\n\t\t\t\tthis.logger.info(`Tracing exporter${exporterNames.length > 1 ? \"s\": \"\"}: ${exporterNames.join(\", \")}`);\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/**\n\t * Stop Tracer.\n\t */\n\tstop() {\n\t\tif (this.exporter) {\n\t\t\treturn this.broker.Promise.all(this.exporter.map(r => r.stop()));\n\t\t}\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Check tracing is enabled\n\t *\n\t * @returns {boolean}\n\t * @memberof MetricRegistry\n\t */\n\tisEnabled() {\n\t\treturn this.opts.enabled;\n\t}\n\n\t/**\n\t * Disable trace hooks and clear the store - noop if scope is already stopped\n\t *\n\t * @memberof Tracer\n\t *\n\tstopAndClearScope() {\n\t\tif (this._scopeEnabled) {\n\t\t\tthis.scope.stop();\n\t\t\tthis._scopeEnabled = false;\n\t\t}\n\t}*/\n\n\t/**\n\t * Renable the trace hooks - noop if scope is already enabled\n\t *\n\t * @memberof Tracer\n\t *\n\trestartScope() {\n\t\tif (!this._scopeEnabled) {\n\t\t\tthis.scope.enable();\n\t\t\tthis._scopeEnabled = true;\n\t\t}\n\t}*/\n\n\t/**\n\t * Decide that span should be sampled.\n\t *\n\t * @param {Span} span\n\t * @returns {Boolean}\n\t * @memberof Tracer\n\t */\n\tshouldSample(span) {\n\t\tif (this.opts.sampling.minPriority != null) {\n\t\t\tif (span.priority < this.opts.sampling.minPriority)\n\t\t\t\treturn false;\n\t\t}\n\n\t\tif (this.rateLimiter) {\n\t\t\treturn this.rateLimiter.check();\n\t\t}\n\n\t\tif (this.opts.sampling.rate == 0)\n\t\t\treturn false;\n\n\t\tif (this.opts.sampling.rate == 1)\n\t\t\treturn true;\n\n\t\tif (++this.sampleCounter * this.opts.sampling.rate >= 1.0) {\n\t\t\tthis.sampleCounter = 0;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Start a new Span.\n\t *\n\t * @param {String} name\n\t * @param {Object?} opts\n\t * @returns {Span}\n\t *\n\t * @memberof Tracer\n\t */\n\tstartSpan(name, opts = {}) {\n\t\tlet parentOpts = {};\n\t\tif (opts.parentSpan) {\n\t\t\tparentOpts.traceID = opts.parentSpan.traceID;\n\t\t\tparentOpts.parentID = opts.parentSpan.id;\n\t\t\tparentOpts.sampled = opts.parentSpan.sampled;\n\t\t}\n\n\t\tconst span = new Span(this, name, Object.assign({\n\t\t\ttype: \"custom\",\n\t\t\tdefaultTags: this.defaultTags\n\t\t}, parentOpts, opts, { parentSpan: undefined }));\n\n\t\tspan.start();\n\n\t\treturn span;\n\t}\n\n\t/**\n\t * Invoke Exporter method.\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @memberof Tracer\n\t */\n\tinvokeExporter(method, args) {\n\t\tif (this.exporter) {\n\t\t\tthis.exporter.forEach(exporter => exporter[method].apply(exporter, args));\n\t\t}\n\t}\n\n\t/**\n\t * Set the active span\n\t *\n\t * @param {Span} span\n\t * @memberof Tracer\n\t *\n\tsetCurrentSpan(span) {\n\t\tconst state = this.scope.getSessionData() || {\n\t\t\tspans: []\n\t\t};\n\n\t\tstate.spans.push(span);\n\t\tthis.scope.setSessionData(state);\n\n\t\tspan.meta.state = state;\n\t}*/\n\n\t/**\n\t * Remove the active span (because async block destroyed)\n\t *\n\t * @param {Span} span\n\t * @memberof Tracer\n\t *\n\tremoveCurrentSpan(span) {\n\t\tconst state = span.meta.state || this.scope.getSessionData();\n\t\tif (state && state.spans.length > 0) {\n\t\t\tconst idx = state.spans.indexOf(span);\n\t\t\tif (idx >= 0)\n\t\t\t\tstate.spans.splice(idx, 1);\n\t\t}\n\t}*/\n\n\t/**\n\t * Get the current active span\n\t *\n\t * @returns {Span}\n\t * @memberof Tracer\n\t *\n\tgetCurrentSpan() {\n\t\tconst state = this.scope.getSessionData();\n\t\treturn state ? state.spans[state.spans.length - 1] : null;\n\t}*/\n\n\t/**\n\t * Get the current trace ID\n\t *\n\t * @returns\n\t * @memberof Tracer\n\t */\n\tgetCurrentTraceID() {\n\t\treturn null;\n\t\t//const span = this.getCurrentSpan();\n\t\t//return span ? span.traceID : null;\n\t}\n\n\t/**\n\t * Get the active span ID (for the next span as parent ID)\n\t *\n\t * @returns\n\t * @memberof Tracer\n\t */\n\tgetActiveSpanID() {\n\t\treturn null;\n\t\t//const span = this.getCurrentSpan();\n\t\t//return span ? span.id : null;\n\t}\n\n\t/**\n\t * Called when a span started. Call exporters.\n\t *\n\t * @param {Span} span\n\t * @memberof Tracer\n\t */\n\tspanStarted(span) {\n\t\t//this.setCurrentSpan(span);\n\n\t\tif (span.sampled)\n\t\t\tthis.invokeExporter(\"spanStarted\", [span]);\n\t}\n\n\t/**\n\t * Called when a span finished. Call exporters.\n\t *\n\t * @param {Span} span\n\t * @memberof Tracer\n\t */\n\tspanFinished(span) {\n\t\t//this.removeCurrentSpan(span);\n\n\t\tif (span.sampled)\n\t\t\tthis.invokeExporter(\"spanFinished\", [span]);\n\t}\n}\n\nmodule.exports = Tracer;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = {\n\tTracer: require(\"./tracer\"),\n\tSpan: require(\"./span\"),\n\tExporters: require(\"./exporters\"),\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t\t\t\t= require(\"lodash\");\nconst functionArguments \t\t= require(\"fn-args\");\nconst { ServiceSchemaError, MoleculerError } \t= require(\"./errors\");\nconst { isObject, isFunction, flatten }\t= require(\"./utils\");\n\n/**\n * Wrap a handler Function to an object with a `handler` property.\n *\n * @param {Function|Object} o\n * @returns {Object}\n */\nfunction wrapToHander(o) {\n\treturn isFunction(o) ? { handler: o } : o;\n}\n\n/**\n * Wrap any value to an array.\n * @param {any} o\n * @returns {Array}\n */\nfunction wrapToArray(o) {\n\treturn Array.isArray(o) ? o : [o];\n}\n\nfunction isNewSignature(args) {\n\treturn args.length > 0 && [\"ctx\", \"context\"].indexOf(args[0].toLowerCase()) !== -1;\n}\n\n\n/**\n * Service class\n *\n * @class Service\n */\nclass Service {\n\n\t/**\n\t * Creates an instance of Service by schema.\n\t *\n\t * @param {ServiceBroker} \tbroker\tbroker of service\n\t * @param {Object} \t\t\tschema\tschema of service\n\t *\n\t * @memberof Service\n\t */\n\tconstructor(broker, schema) {\n\t\tif (!isObject(broker))\n\t\t\tthrow new ServiceSchemaError(\"Must set a ServiceBroker instance!\");\n\n\t\tthis.broker = broker;\n\n\t\tif (broker)\n\t\t\tthis.Promise = broker.Promise;\n\n\t\tif (schema)\n\t\t\tthis.parseServiceSchema(schema);\n\t}\n\n\t/**\n\t * Parse Service schema & register as local service\n\t *\n\t * @param {Object} schema of Service\n\t */\n\tparseServiceSchema(schema) {\n\t\tif (!isObject(schema))\n\t\t\tthrow new ServiceSchemaError(\"The service schema can't be null. Maybe is it not a service schema?\");\n\n\t\tthis.originalSchema = _.cloneDeep(schema);\n\n\t\tif (schema.mixins) {\n\t\t\tschema = Service.applyMixins(schema);\n\t\t}\n\n\t\tif (isFunction(schema.merged)) {\n\t\t\tschema.merged.call(this, schema);\n\t\t} else if (Array.isArray(schema.merged)) {\n\t\t\tschema.merged.forEach(fn => fn.call(this, schema));\n\t\t}\n\n\t\tthis.broker.callMiddlewareHookSync(\"serviceCreating\", [this, schema]);\n\n\t\tif (!schema.name) {\n\t\t\t/* eslint-disable-next-line */\n\t\t\tconsole.error(\"Service name can't be empty! Maybe it is not a valid Service schema. Maybe is it not a service schema?\", { schema });\n\t\t\tthrow new ServiceSchemaError(\"Service name can't be empty! Maybe it is not a valid Service schema. Maybe is it not a service schema?\", { schema });\n\t\t}\n\n\t\tthis.name = schema.name;\n\t\tthis.version = schema.version;\n\t\tthis.settings = schema.settings || {};\n\t\tthis.metadata = schema.metadata || {};\n\t\tthis.schema = schema;\n\n\t\tthis.fullName = Service.getVersionedFullName(this.name, this.settings.$noVersionPrefix !== true ? this.version : undefined);\n\n\t\tthis.logger = this.broker.getLogger(this.fullName, {\n\t\t\tsvc: this.name,\n\t\t\tver: this.version\n\t\t});\n\n\t\tthis.actions = {}; // external access to actions\n\t\tthis.events = {}; // external access to event handlers.\n\n\t\t// Service item for Registry\n\t\tconst serviceSpecification = {\n\t\t\tname: this.name,\n\t\t\tversion: this.version,\n\t\t\tfullName: this.fullName,\n\t\t\tsettings: this._getPublicSettings(this.settings),\n\t\t\tmetadata: this.metadata,\n\t\t\tactions: {},\n\t\t\tevents: {}\n\t\t};\n\n\t\t// Register methods\n\t\tif (isObject(schema.methods)) {\n\n\t\t\t_.forIn(schema.methods, (method, name) => {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif ([\"name\", \"version\", \"settings\", \"metadata\", \"dependencies\", \"schema\", \"broker\", \"actions\", \"logger\", \"created\", \"started\", \"stopped\", \"_start\", \"_stop\", \"_init\"].indexOf(name) != -1) {\n\t\t\t\t\tthrow new ServiceSchemaError(`Invalid method name '${name}' in '${this.name}' service!`);\n\t\t\t\t}\n\n\t\t\t\tthis._createMethod(method, name);\n\t\t\t});\n\t\t}\n\n\t\t// Register actions\n\t\tif (isObject(schema.actions)) {\n\t\t\t_.forIn(schema.actions, (action, name) => {\n\t\t\t\tif (action === false)\n\t\t\t\t\treturn;\n\n\t\t\t\tlet innerAction = this._createAction(action, name);\n\n\t\t\t\tserviceSpecification.actions[innerAction.name] = innerAction;\n\n\t\t\t\tconst wrappedHandler = this.broker.middlewares.wrapHandler(\"localAction\", innerAction.handler, innerAction);\n\n\t\t\t\t// Expose to be callable as `this.actions.find({ ...params })`\n\t\t\t\tconst ep = this.broker.registry.createPrivateActionEndpoint(innerAction);\n\t\t\t\tthis.actions[name] = (params, opts) => {\n\t\t\t\t\tlet ctx;\n\t\t\t\t\tif (opts && opts.ctx) {\n\t\t\t\t\t\t// Reused context (in case of retry)\n\t\t\t\t\t\tctx = opts.ctx;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx = this.broker.ContextFactory.create(this.broker, ep, params, opts || {});\n\t\t\t\t\t}\n\t\t\t\t\treturn wrappedHandler(ctx);\n\t\t\t\t};\n\n\t\t\t});\n\t\t}\n\n\t\t// Event subscriptions\n\t\tif (isObject(schema.events)) {\n\t\t\t_.forIn(schema.events, (event, name) => {\n\t\t\t\tconst innerEvent = this._createEvent(event, name);\n\t\t\t\tserviceSpecification.events[innerEvent.name] = innerEvent;\n\n\t\t\t\t// Expose to be callable as `this.events[''](params, opts);\n\t\t\t\tthis.events[innerEvent.name] = (params, opts) => {\n\t\t\t\t\tlet ctx;\n\t\t\t\t\tif (opts && opts.ctx) {\n\t\t\t\t\t\t// Reused context (in case of retry)\n\t\t\t\t\t\tctx = opts.ctx;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst ep = {\n\t\t\t\t\t\t\tid: this.broker.nodeID,\n\t\t\t\t\t\t\tevent: innerEvent\n\t\t\t\t\t\t};\n\t\t\t\t\t\tctx = this.broker.ContextFactory.create(this.broker, ep, params, opts || {});\n\t\t\t\t\t}\n\t\t\t\t\tctx.eventName = name;\n\t\t\t\t\tctx.eventType = \"emit\";\n\t\t\t\t\tctx.eventGroups = [innerEvent.group || this.name];\n\n\t\t\t\t\treturn innerEvent.handler(ctx);\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tthis._serviceSpecification = serviceSpecification;\n\n\t\t// Initialize\n\t\tthis._init();\n\t}\n\n\t/**\n\t * Return a service settings without protected properties.\n\t *\n\t * @param {Object?} settings\n\t */\n\t_getPublicSettings(settings) {\n\t\tif (settings && Array.isArray(settings.$secureSettings)) {\n\t\t\treturn _.omit(settings, [].concat(settings.$secureSettings, [\"$secureSettings\"]));\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\t/**\n\t * Initialize service. It called `created` handler in schema\n\t *\n\t * @private\n\t * @memberof Service\n\t */\n\t_init() {\n\t\tthis.logger.debug(`Service '${this.fullName}' is creating...`);\n\t\tif (isFunction(this.schema.created)) {\n\t\t\tthis.schema.created.call(this);\n\t\t} else if (Array.isArray(this.schema.created)) {\n\t\t\tthis.schema.created.forEach(fn => fn.call(this));\n\t\t}\n\n\t\tthis.broker.addLocalService(this);\n\n\t\tthis.broker.callMiddlewareHookSync(\"serviceCreated\", [this]);\n\n\t\tthis.logger.debug(`Service '${this.fullName}' created.`);\n\t}\n\n\t/**\n\t * Start service\n\t *\n\t * @returns {Promise}\n\t * @private\n\t * @memberof Service\n\t */\n\t_start() {\n\t\tthis.logger.debug(`Service '${this.fullName}' is starting...`);\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\treturn this.broker.callMiddlewareHook(\"serviceStarting\", [this]);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Wait for dependent services\n\t\t\t\tif (this.schema.dependencies)\n\t\t\t\t\treturn this.waitForServices(this.schema.dependencies, this.settings.$dependencyTimeout || 0, this.settings.$dependencyInterval || this.broker.options.dependencyInterval);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (isFunction(this.schema.started))\n\t\t\t\t\treturn this.Promise.method(this.schema.started).call(this);\n\n\t\t\t\tif (Array.isArray(this.schema.started)) {\n\t\t\t\t\treturn this.schema.started\n\t\t\t\t\t\t.map(fn => this.Promise.method(fn.bind(this)))\n\t\t\t\t\t\t.reduce((p, fn) => p.then(() => fn()), this.Promise.resolve());\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Register service\n\t\t\t\tthis.broker.registerLocalService(this._serviceSpecification);\n\t\t\t\treturn null;\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.broker.callMiddlewareHook(\"serviceStarted\", [this]);\n\t\t\t})\n\t\t\t.then(() => this.logger.info(`Service '${this.fullName}' started.`));\n\t}\n\n\t/**\n\t * Stop service\n\t *\n\t * @returns {Promise}\n\t * @private\n\t * @memberof Service\n\t */\n\t_stop() {\n\t\tthis.logger.debug(`Service '${this.fullName}' is stopping...`);\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\treturn this.broker.callMiddlewareHook(\"serviceStopping\", [this], { reverse: true });\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (isFunction(this.schema.stopped))\n\t\t\t\t\treturn this.Promise.method(this.schema.stopped).call(this);\n\n\t\t\t\tif (Array.isArray(this.schema.stopped)) {\n\t\t\t\t\tconst arr = Array.from(this.schema.stopped).reverse();\n\t\t\t\t\treturn arr\n\t\t\t\t\t\t.map(fn => this.Promise.method(fn.bind(this)))\n\t\t\t\t\t\t.reduce((p, fn) => p.then(() => fn()), this.Promise.resolve());\n\t\t\t\t}\n\n\t\t\t\treturn this.Promise.resolve();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.broker.callMiddlewareHook(\"serviceStopped\", [this], { reverse: true });\n\t\t\t})\n\t\t\t.then(() => this.logger.info(`Service '${this.fullName}' stopped.`));\n\t}\n\n\t/**\n\t * Create an external action handler for broker (internal command!)\n\t *\n\t * @param {Object|Function} actionDef\n\t * @param {String} name\n\t * @returns {Object}\n\t *\n\t * @private\n\t * @memberof Service\n\t */\n\t_createAction(actionDef, name) {\n\t\tlet action;\n\t\tif (isFunction(actionDef)) {\n\t\t\t// Wrap to an object\n\t\t\taction = {\n\t\t\t\thandler: actionDef\n\t\t\t};\n\t\t} else if (isObject(actionDef)) {\n\t\t\taction = _.cloneDeep(actionDef);\n\t\t} else {\n\t\t\tthrow new ServiceSchemaError(`Invalid action definition in '${name}' action in '${this.fullName}' service!`);\n\t\t}\n\n\t\tlet handler = action.handler;\n\t\tif (!isFunction(handler)) {\n\t\t\tthrow new ServiceSchemaError(`Missing action handler on '${name}' action in '${this.fullName}' service!`);\n\t\t}\n\n\t\taction.rawName = action.name || name;\n\t\tif (this.settings.$noServiceNamePrefix !== true)\n\t\t\taction.name = this.fullName + \".\" + action.rawName;\n\t\telse\n\t\t\taction.name = action.rawName;\n\n\t\tif (action.cache === undefined && this.settings.$cache !== undefined) {\n\t\t\taction.cache = this.settings.$cache;\n\t\t}\n\n\t\taction.service = this;\n\t\taction.handler = this.Promise.method(handler.bind(this));\n\n\t\treturn action;\n\t}\n\n\t/**\n\t * Create an internal service method.\n\t *\n\t * @param {Object|Function} methodDef\n\t * @param {String} name\n\t * @returns {Object}\n\t */\n\t_createMethod(methodDef, name) {\n\t\tlet method;\n\t\tif (isFunction(methodDef)) {\n\t\t\t// Wrap to an object\n\t\t\tmethod = {\n\t\t\t\thandler: methodDef\n\t\t\t};\n\t\t} else if (isObject(methodDef)) {\n\t\t\tmethod = methodDef;\n\t\t} else {\n\t\t\tthrow new ServiceSchemaError(`Invalid method definition in '${name}' method in '${this.fullName}' service!`);\n\t\t}\n\n\t\tif (!isFunction(method.handler)) {\n\t\t\tthrow new ServiceSchemaError(`Missing method handler on '${name}' method in '${this.fullName}' service!`);\n\t\t}\n\n\t\tmethod.name = name;\n\t\tmethod.service = this;\n\t\tmethod.handler = method.handler.bind(this);\n\n\t\tthis[name] = this.broker.middlewares.wrapHandler(\"localMethod\", method.handler, method);\n\n\t\treturn method;\n\t}\n\n\t/**\n\t * Create an event subscription for broker\n\t *\n\t * @param {Object|Function} eventDef\n\t * @param {String} name\n\t * @returns {Object}\n\t *\n\t * @private\n\t * @memberof Service\n\t */\n\t_createEvent(eventDef, name) {\n\t\tlet event;\n\t\tif (isFunction(eventDef) || Array.isArray(eventDef)) {\n\t\t\tevent = {\n\t\t\t\thandler: eventDef\n\t\t\t};\n\t\t} else if (isObject(eventDef)) {\n\t\t\tevent = _.cloneDeep(eventDef);\n\t\t} else {\n\t\t\tthrow new ServiceSchemaError(`Invalid event definition in '${name}' event in '${this.fullName}' service!`);\n\t\t}\n\n\t\tif (!isFunction(event.handler) && !Array.isArray(event.handler)) {\n\t\t\tthrow new ServiceSchemaError(`Missing event handler on '${name}' event in '${this.fullName}' service!`);\n\t\t}\n\n\t\t// Detect new or legacy parameter list of event handler\n\t\t// Legacy: handler(payload, sender, eventName)\n\t\t// New: handler(ctx)\n\t\tlet handler;\n\t\tif (isFunction(event.handler)) {\n\t\t\tconst args = functionArguments(event.handler);\n\t\t\thandler = this.Promise.method(event.handler);\n\t\t\thandler.__newSignature = event.context === true || isNewSignature(args);\n\t\t} else if (Array.isArray(event.handler)) {\n\t\t\thandler = event.handler.map(h => {\n\t\t\t\tconst args = functionArguments(h);\n\t\t\t\th = this.Promise.method(h);\n\t\t\t\th.__newSignature = event.context === true || isNewSignature(args);\n\t\t\t\treturn h;\n\t\t\t});\n\t\t}\n\n\t\tif (!event.name)\n\t\t\tevent.name = name;\n\n\t\tevent.service = this;\n\t\tconst self = this;\n\t\tif (isFunction(handler)) {\n\t\t\t// Call single handler\n\t\t\tevent.handler = function(ctx) {\n\t\t\t\treturn handler.apply(self, handler.__newSignature ? [ctx] : [ctx.params, ctx.nodeID, ctx.eventName, ctx]);\n\t\t\t};\n\t\t} else if (Array.isArray(handler)) {\n\t\t\t// Call multiple handler\n\t\t\tevent.handler = function(ctx) {\n\t\t\t\treturn self.Promise.all(handler.map(fn => fn.apply(self, fn.__newSignature ? [ctx] : [ctx.params, ctx.nodeID, ctx.eventName, ctx])));\n\t\t\t};\n\t\t}\n\n\t\treturn event;\n\t}\n\n\t/**\n\t * Call a local event handler. Useful for unit tests.\n\t *\n\t * @param {String} eventName\n\t * @param {any?} params\n\t * @param {Object?} opts\n\t */\n\temitLocalEventHandler(eventName, params, opts) {\n\t\tif (!this.events[eventName])\n\t\t\treturn Promise.reject(new MoleculerError(`No '${eventName}' registered local event handler`, 500, \"NOT_FOUND_EVENT\", { eventName }));\n\n\t\treturn this.events[eventName](params, opts);\n\t}\n\n\t/**\n\t * Getter of current Context.\n\t * @returns {Context?}\n\t *\n\t * @memberof Service\n\t *\n\tget currentContext() {\n\t\treturn this.broker.getCurrentContext();\n\t}*/\n\n\t/**\n\t * Setter of current Context\n\t *\n\t * @memberof Service\n\t *\n\tset currentContext(ctx) {\n\t\tthis.broker.setCurrentContext(ctx);\n\t}*/\n\n\t/**\n\t * Wait for other services\n\t *\n\t * @param {String|Array<String>} serviceNames\n\t * @param {Number} timeout Timeout in milliseconds\n\t * @param {Number} interval Check interval in milliseconds\n\t * @returns {Promise}\n\t * @memberof Service\n\t */\n\twaitForServices(serviceNames, timeout, interval) {\n\t\treturn this.broker.waitForServices(serviceNames, timeout, interval, this.logger);\n\t}\n\n\t/**\n\t * Apply `mixins` list in schema. Merge the schema with mixins schemas. Returns with the mixed schema\n\t *\n\t * @static\n\t * @param {Schema} schema\n\t * @returns {Schema}\n\t *\n\t * @memberof Service\n\t */\n\tstatic applyMixins(schema) {\n\t\tif (schema.mixins) {\n\t\t\tconst mixins = Array.isArray(schema.mixins) ? schema.mixins : [schema.mixins];\n\t\t\tif (mixins.length > 0) {\n\t\t\t\tconst mixedSchema = Array.from(mixins).reverse().reduce((s, mixin) => {\n\t\t\t\t\tif (mixin.mixins)\n\t\t\t\t\t\tmixin = Service.applyMixins(mixin);\n\n\t\t\t\t\treturn s ? Service.mergeSchemas(s, mixin) : mixin;\n\t\t\t\t}, null);\n\n\t\t\t\treturn Service.mergeSchemas(mixedSchema, schema);\n\t\t\t}\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\treturn schema;\n\t}\n\n\t/**\n\t * Merge two Service schema\n\t *\n\t * @static\n\t * @param {Object} mixinSchema\t\tMixin schema\n\t * @param {Object} svcSchema \t\tService schema\n\t * @returns {Object} Mixed schema\n\t *\n\t * @memberof Service\n\t */\n\tstatic mergeSchemas(mixinSchema, svcSchema) {\n\t\tconst res = _.cloneDeep(mixinSchema);\n\t\tconst mods = _.cloneDeep(svcSchema);\n\n\t\tObject.keys(mods).forEach(key => {\n\t\t\tif ([\"name\", \"version\"].indexOf(key) !== -1 && mods[key] !== undefined) {\n\t\t\t\t// Simple overwrite\n\t\t\t\tres[key] = mods[key];\n\t\t\t} else if (key == \"settings\") {\n\t\t\t\t// Merge with defaultsDeep\n\t\t\t\tres[key] = Service.mergeSchemaSettings(mods[key], res[key]);\n\n\t\t\t} else if (key == \"metadata\") {\n\t\t\t\t// Merge with defaultsDeep\n\t\t\t\tres[key] = Service.mergeSchemaMetadata(mods[key], res[key]);\n\n\t\t\t} else if (key == \"hooks\") {\n\t\t\t\t// Merge & concat\n\t\t\t\tres[key] = Service.mergeSchemaHooks(mods[key], res[key] || {});\n\n\t\t\t} else if (key == \"actions\") {\n\t\t\t\t// Merge with defaultsDeep\n\t\t\t\tres[key] = Service.mergeSchemaActions(mods[key], res[key] || {});\n\n\t\t\t} else if (key == \"methods\") {\n\t\t\t\t// Overwrite\n\t\t\t\tres[key] = Service.mergeSchemaMethods(mods[key], res[key]);\n\n\t\t\t} else if (key == \"events\") {\n\t\t\t\t// Merge & concat by groups\n\t\t\t\tres[key] = Service.mergeSchemaEvents(mods[key], res[key] || {});\n\n\t\t\t} else if ([\"merged\", \"created\", \"started\", \"stopped\"].indexOf(key) !== -1) {\n\t\t\t\t// Concat lifecycle event handlers\n\t\t\t\tres[key] = Service.mergeSchemaLifecycleHandlers(mods[key], res[key]);\n\n\t\t\t} else if (key == \"mixins\") {\n\t\t\t\t// Concat mixins\n\t\t\t\tres[key] = Service.mergeSchemaUniqArray(mods[key], res[key]);\n\n\t\t\t} else if (key == \"dependencies\") {\n\t\t\t\t// Concat mixins\n\t\t\t\tres[key] = Service.mergeSchemaUniqArray(mods[key], res[key]);\n\n\t\t\t} else {\n\t\t\t\tconst customFnName = \"mergeSchema\" + key.replace(/./, key[0].toUpperCase()); // capitalize first letter\n\t\t\t\tif (isFunction(Service[customFnName])) {\n\t\t\t\t\tres[key] = Service[customFnName](mods[key], res[key]);\n\t\t\t\t} else {\n\t\t\t\t\tres[key] = Service.mergeSchemaUnknown(mods[key], res[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Merge `settings` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaSettings(src, target) {\n\t\tif ((target && target.$secureSettings) || (src && src.$secureSettings)) {\n\t\t\tconst srcSS = src && src.$secureSettings ? src.$secureSettings : [];\n\t\t\tconst targetSS = target && target.$secureSettings ? target.$secureSettings : [];\n\t\t\tif (!target) target = {};\n\n\t\t\ttarget.$secureSettings = _.uniq([].concat(srcSS, targetSS));\n\t\t}\n\n\t\treturn _.defaultsDeep(src, target);\n\t}\n\n\t/**\n\t * Merge `metadata` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaMetadata(src, target) {\n\t\treturn _.defaultsDeep(src, target);\n\t}\n\n\t/**\n\t * Merge `mixins` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaUniqArray(src, target) {\n\t\treturn _.uniqWith(_.compact(flatten([src, target])), _.isEqual);\n\t}\n\n\t/**\n\t * Merge `dependencies` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaDependencies(src, target) {\n\t\treturn Service.mergeSchemaUniqArray(src, target);\n\t}\n\n\t/**\n\t * Merge `hooks` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaHooks(src, target) {\n\t\tObject.keys(src).forEach(k => {\n\t\t\tif (target[k] == null)\n\t\t\t\ttarget[k] = {};\n\n\t\t\tObject.keys(src[k]).forEach(k2 => {\n\t\t\t\tconst modHook = wrapToArray(src[k][k2]);\n\t\t\t\tconst resHook = wrapToArray(target[k][k2]);\n\n\t\t\t\ttarget[k][k2] = _.compact(flatten(k == \"before\" ? [resHook, modHook] : [modHook, resHook]));\n\t\t\t});\n\t\t});\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Merge `actions` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property (real schema)\n\t * @param {Object} target Target schema property (mixin schema)\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaActions(src, target) {\n\t\tObject.keys(src).forEach(k => {\n\t\t\tif (src[k] === false && target[k]) {\n\t\t\t\tdelete target[k];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst srcAction = wrapToHander(src[k]);\n\t\t\tconst targetAction = wrapToHander(target[k]);\n\n\t\t\tif (srcAction && srcAction.hooks && targetAction && targetAction.hooks) {\n\t\t\t\tObject.keys(srcAction.hooks).forEach(k => {\n\t\t\t\t\tconst modHook = wrapToArray(srcAction.hooks[k]);\n\t\t\t\t\tconst resHook = wrapToArray(targetAction.hooks[k]);\n\n\t\t\t\t\tsrcAction.hooks[k] = _.compact(flatten(k == \"before\" ? [resHook, modHook] : [modHook, resHook]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttarget[k] = _.defaultsDeep(srcAction, targetAction);\n\t\t});\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Merge `methods` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaMethods(src, target) {\n\t\treturn Object.assign(target || {}, src || {});\n\t}\n\n\t/**\n\t * Merge `events` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaEvents(src, target) {\n\t\tObject.keys(src).forEach(k => {\n\t\t\tconst modEvent = wrapToHander(src[k]);\n\t\t\tconst resEvent = wrapToHander(target[k]);\n\n\t\t\tlet handler = _.compact(flatten([resEvent ? resEvent.handler : null, modEvent ? modEvent.handler : null]));\n\t\t\tif (handler.length == 1) handler = handler[0];\n\n\t\t\ttarget[k] = _.defaultsDeep(modEvent, resEvent);\n\t\t\ttarget[k].handler = handler;\n\t\t});\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Merge `started`, `stopped`, `created` event handler properties in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaLifecycleHandlers(src, target) {\n\t\treturn _.compact(flatten([target, src]));\n\t}\n\n\t/**\n\t * Merge unknown properties in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaUnknown(src, target) {\n\t\tif (src !== undefined)\n\t\t\treturn src;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Return a versioned full service name.\n\t * @param {String} name\n\t * @param {String|Number?} version\n\t */\n\tstatic getVersionedFullName(name, version) {\n\t\tif (version != null)\n\t\t\treturn (typeof(version) == \"number\" ? \"v\" + version : version) + \".\" + name;\n\n\t\treturn name;\n\t}\n\n}\n\nmodule.exports = Service;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst { isString } = require(\"./utils\");\nconst _ = require(\"lodash\");\nconst { RequestSkippedError, MaxCallLevelError } = require(\"./errors\");\n\n/**\n * Merge metadata\n *\n * @param {Object} newMeta\n *\n * @private\n * @memberof Context\n */\nfunction mergeMeta(ctx, newMeta) {\n\tif (newMeta)\n\t\tObject.assign(ctx.meta, newMeta);\n\treturn ctx.meta;\n}\n\n/**\n * Context class for action calls\n *\n * @property {String} id - Context ID\n * @property {ServiceBroker} broker - Broker instance\n * @property {Action} action - Action definition\n * @property {String} [nodeID=null] - Node ID\n * @property {String} parentID - Parent Context ID\n * @property {Boolean} tracing - Enable tracing\n * @property {Number} [level=1] - Level of context\n *\n * @class Context\n */\nclass Context {\n\n\t/**\n\t * Creates an instance of Context.\n\t *\n\t * @param {ServiceBroker} broker - Broker instance\n\t * @param {Endpoint} endpoint\n\t *\n\t * @memberof Context\n\t */\n\tconstructor(broker, endpoint) {\n\n\t\tthis.broker = broker;\n\t\tif (this.broker) {\n\t\t\tthis.nodeID = this.broker.nodeID;\n\t\t\tthis.id = this.broker.generateUid();\n\t\t} else {\n\t\t\tthis.nodeID = null;\n\t\t}\n\n\t\tif (endpoint) {\n\t\t\tthis.setEndpoint(endpoint);\n\t\t} else {\n\t\t\tthis.endpoint = null;\n\t\t\tthis.service = null;\n\t\t\tthis.action = null;\n\t\t\tthis.event = null;\n\t\t}\n\n\t\t// The emitted event \"user.created\" because `ctx.event.name` can be \"user.**\"\n\t\tthis.eventName = null;\n\t\t// Type of event (\"emit\" or \"broadcast\")\n\t\tthis.eventType = null;\n\t\t// The groups of event\n\t\tthis.eventGroups = null;\n\n\t\tthis.options = {\n\t\t\ttimeout: null,\n\t\t\tretries: null,\n\t\t};\n\n\t\tthis.parentID = null;\n\t\tthis.caller = null;\n\n\t\tthis.level = 1;\n\n\t\tthis.params = null;\n\t\tthis.meta = {};\n\t\tthis.locals = {};\n\n\t\tthis.requestID = this.id;\n\n\t\tthis.tracing = null;\n\t\tthis.span = null;\n\t\tthis._spanStack = [];\n\n\t\tthis.needAck = null;\n\t\tthis.ackID = null;\n\n\t\t//this.startTime = null;\n\t\t//his.startHrTime = null;\n\t\t//this.stopTime = null;\n\t\t//this.duration = null;\n\n\t\t//this.error = null;\n\t\tthis.cachedResult = false;\n\t}\n\n\t/**\n\t * Create a new Context instance\n\t *\n\t * @param {ServiceBroker} broker\n\t * @param {Endpoint} endpoint\n\t * @param {Object?} params\n\t * @param {Object} opts\n\t * @returns {Context}\n\t *\n\t * @static\n\t * @memberof Context\n\t */\n\tstatic create(broker, endpoint, params, opts = {}) {\n\t\tconst ctx = new broker.ContextFactory(broker, endpoint);\n\n\t\tif (endpoint != null)\n\t\t\tctx.setEndpoint(endpoint);\n\n\t\tif (params != null) {\n\t\t\tlet cloning = broker ? broker.options.contextParamsCloning : false;\n\t\t\tif (opts.paramsCloning != null)\n\t\t\t\tcloning = opts.paramsCloning;\n\t\t\tctx.setParams(params, cloning);\n\t\t}\n\n\t\t//Object.assign(ctx.options, opts);\n\t\tctx.options = opts;\n\n\t\t// RequestID\n\t\tif (opts.requestID != null)\n\t\t\tctx.requestID = opts.requestID;\n\t\telse if (opts.parentCtx != null && opts.parentCtx.requestID != null)\n\t\t\tctx.requestID = opts.parentCtx.requestID;\n\n\t\t// Meta\n\t\tif (opts.parentCtx != null && opts.parentCtx.meta != null)\n\t\t\tctx.meta = Object.assign({}, opts.parentCtx.meta || {}, opts.meta || {});\n\t\telse if (opts.meta != null)\n\t\t\tctx.meta = opts.meta;\n\n\t\t// ParentID, Level, Caller, Tracing\n\t\tif (opts.parentCtx != null) {\n\t\t\tctx.tracing = opts.parentCtx.tracing;\n\t\t\tctx.level = opts.parentCtx.level + 1;\n\n\t\t\tif (opts.parentCtx.span)\n\t\t\t\tctx.parentID = opts.parentCtx.span.id;\n\t\t\telse\n\t\t\t\tctx.parentID = opts.parentCtx.id;\n\n\t\t\tif (opts.parentCtx.service)\n\t\t\t\tctx.caller = opts.parentCtx.service.fullName;\n\t\t}\n\n\t\t// caller\n\t\tif (opts.caller) {\n\t\t\tctx.caller = opts.caller;\n\t\t}\n\n\t\t// Parent span\n\t\tif (opts.parentSpan != null) {\n\t\t\tctx.parentID = opts.parentSpan.id;\n\t\t\tctx.requestID = opts.parentSpan.traceID;\n\t\t\tctx.tracing = opts.parentSpan.sampled;\n\t\t}\n\n\t\t// Event acknowledgement\n\t\tif (opts.needAck) {\n\t\t\tctx.needAck = opts.needAck;\n\t\t}\n\n\t\treturn ctx;\n\t}\n\n\t/**\n\t * Copy itself without ID.\n\t * @param {Endpoint} ep\n\t * @returns {Context}\n\t */\n\tcopy(ep) {\n\t\tconst newCtx = new this.constructor(this.broker);\n\n\t\tnewCtx.nodeID = this.nodeID;\n\t\tnewCtx.setEndpoint(ep || this.endpoint);\n\t\tnewCtx.options = this.options;\n\t\tnewCtx.parentID = this.parentID;\n\t\tnewCtx.caller = this.caller;\n\t\tnewCtx.level = this.level;\n\t\tnewCtx.params = this.params;\n\t\tnewCtx.meta = this.meta;\n\t\tnewCtx.locals = this.locals;\n\t\tnewCtx.requestID = this.requestID;\n\t\tnewCtx.tracing = this.tracing;\n\t\tnewCtx.span = this.span;\n\t\tnewCtx.needAck = this.needAck;\n\t\tnewCtx.ackID = this.ackID;\n\t\tnewCtx.eventName = this.eventName;\n\t\tnewCtx.eventType = this.eventType;\n\t\tnewCtx.eventGroups = this.eventGroups;\n\n\t\tnewCtx.cachedResult = this.cachedResult;\n\n\t\treturn newCtx;\n\t}\n\n\t/**\n\t * Set endpoint of context\n\t *\n\t * @param {Endpoint} endpoint\n\t * @memberof Context\n\t */\n\tsetEndpoint(endpoint) {\n\t\tthis.endpoint = endpoint;\n\t\tif (endpoint) {\n\t\t\tthis.nodeID = endpoint.id;\n\t\t\tif (endpoint.action) {\n\t\t\t\tthis.action = endpoint.action;\n\t\t\t\tthis.service = this.action.service;\n\t\t\t\tthis.event = null;\n\t\t\t} else if (endpoint.event) {\n\t\t\t\tthis.event =  endpoint.event;\n\t\t\t\tthis.service = this.event.service;\n\t\t\t\tthis.action = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set params of context\n\t *\n\t * @param {Object} newParams\n\t * @param {Boolean} cloning\n\t *\n\t * @memberof Context\n\t */\n\tsetParams(newParams, cloning = false) {\n\t\tif (cloning && newParams)\n\t\t\tthis.params = Object.assign({}, newParams);\n\t\telse\n\t\t\tthis.params = newParams;\n\t}\n\n\t/**\n\t * Call an other action. It creates a sub-context.\n\t *\n\t * @param {String} actionName\n\t * @param {Object?} params\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @example <caption>Call an other service with params & options</caption>\n\t * ctx.call(\"posts.get\", { id: 12 }, { timeout: 1000 });\n\t *\n\t * @memberof Context\n\t */\n\tcall(actionName, params, _opts) {\n\t\tconst opts = Object.assign({\n\t\t\tparentCtx: this\n\t\t}, _opts);\n\n\t\tif (this.options.timeout > 0 && this.startHrTime) {\n\t\t\t// Distributed timeout handling. Decrementing the timeout value with the elapsed time.\n\t\t\t// If the timeout below 0, skip the call.\n\t\t\tconst diff = process.hrtime(this.startHrTime);\n\t\t\tconst duration = (diff[0] * 1e3) + (diff[1] / 1e6);\n\t\t\tconst distTimeout = this.options.timeout - duration;\n\n\t\t\tif (distTimeout <= 0) {\n\t\t\t\treturn this.broker.Promise.reject(new RequestSkippedError({ action: actionName, nodeID: this.broker.nodeID }));\n\t\t\t}\n\n\t\t\tif (!opts.timeout || distTimeout < opts.timeout)\n\t\t\t\topts.timeout = distTimeout;\n\t\t}\n\n\t\t// Max calling level check to avoid calling loops\n\t\tif (this.broker.options.maxCallLevel > 0 && this.level >= this.broker.options.maxCallLevel) {\n\t\t\treturn this.broker.Promise.reject(new MaxCallLevelError({ nodeID: this.broker.nodeID, level: this.level }));\n\t\t}\n\n\t\tlet p = this.broker.call(actionName, params, opts);\n\n\t\t// Merge metadata with sub context metadata\n\t\treturn p.then(res => {\n\t\t\tif (p.ctx)\n\t\t\t\tmergeMeta(this, p.ctx.meta);\n\n\t\t\treturn res;\n\t\t}).catch(err => {\n\t\t\tif (p.ctx)\n\t\t\t\tmergeMeta(this, p.ctx.meta);\n\n\t\t\treturn this.broker.Promise.reject(err);\n\t\t});\n\t}\n\n\tmcall(def, _opts) {\n\t\tconst opts = Object.assign({\n\t\t\tparentCtx: this\n\t\t}, _opts);\n\n\t\tif (this.options.timeout > 0 && this.startHrTime) {\n\t\t\t// Distributed timeout handling. Decrementing the timeout value with the elapsed time.\n\t\t\t// If the timeout below 0, skip the call.\n\t\t\tconst diff = process.hrtime(this.startHrTime);\n\t\t\tconst duration = (diff[0] * 1e3) + (diff[1] / 1e6);\n\t\t\tconst distTimeout = this.options.timeout - duration;\n\n\t\t\tif (distTimeout <= 0) {\n\t\t\t\tconst action = (Array.isArray(def) ? def : Object.values(def)).map(d => d.action).join(\", \");\n\t\t\t\treturn this.broker.Promise.reject(new RequestSkippedError({ action, nodeID: this.broker.nodeID }));\n\t\t\t}\n\n\t\t\tif (!opts.timeout || distTimeout < opts.timeout)\n\t\t\t\topts.timeout = distTimeout;\n\t\t}\n\n\t\t// Max calling level check to avoid calling loops\n\t\tif (this.broker.options.maxCallLevel > 0 && this.level >= this.broker.options.maxCallLevel) {\n\t\t\treturn this.broker.Promise.reject(new MaxCallLevelError({ nodeID: this.broker.nodeID, level: this.level }));\n\t\t}\n\n\t\tlet p = this.broker.mcall(def, opts);\n\n\t\t// Merge metadata with sub context metadata\n\t\treturn p.then(res => {\n\t\t\tif (Array.isArray(p.ctx) && p.ctx.length)\n\t\t\t\tp.ctx.forEach(ctx => mergeMeta(this, ctx.meta));\n\n\t\t\treturn res;\n\t\t}).catch(err => {\n\t\t\tif (Array.isArray(p.ctx) && p.ctx.length)\n\t\t\t\tp.ctx.forEach(ctx => mergeMeta(this, ctx.meta));\n\n\t\t\treturn this.broker.Promise.reject(err);\n\t\t});\n\t}\n\n\t/**\n\t * Emit an event (grouped & balanced global event)\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @example\n\t * ctx.emit(\"user.created\", { entity: user, creator: ctx.meta.user });\n\t *\n\t * @memberof Context\n\t */\n\temit(eventName, data, opts) {\n\t\tif (Array.isArray(opts) || isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\topts.parentCtx = this;\n\t\treturn this.broker.emit(eventName, data, opts);\n\t}\n\n\t/**\n\t * Emit an event for all local & remote services\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @example\n\t * ctx.broadcast(\"user.created\", { entity: user, creator: ctx.meta.user });\n\t *\n\t * @memberof Context\n\t */\n\tbroadcast(eventName, data, opts) {\n\t\tif (Array.isArray(opts) || isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\topts.parentCtx = this;\n\t\treturn this.broker.broadcast(eventName, data, opts);\n\t}\n\n\t/**\n\t * Start a new child tracing span.\n\t *\n\t * @param {String} name\n\t * @param {Object?} opts\n\t * @returns {Span}\n\t * @memberof Context\n\t */\n\tstartSpan(name, opts) {\n\t\tlet span;\n\t\tif (this.span) {\n\t\t\tspan = this.span.startSpan(name, Object.assign({ ctx: this }, opts));\n\t\t} else {\n\t\t\tspan = this.broker.tracer.startSpan(name, Object.assign({ ctx: this }, opts));\n\t\t}\n\n\t\tthis._spanStack.push(span);\n\t\tthis.span = span;\n\n\t\treturn span;\n\t}\n\n\t/**\n\t * Finish an active span.\n\t *\n\t * @param {Span} span\n\t * @param {Number?} time\n\t */\n\tfinishSpan(span, time) {\n\t\tif (!span.isActive()) return;\n\n\t\tspan.finish(time);\n\n\t\tconst idx = this._spanStack.findIndex(sp => sp == span);\n\t\tif (idx !== -1) {\n\t\t\tthis._spanStack.splice(idx, 1);\n\t\t\tthis.span = this._spanStack[this._spanStack.length - 1];\n\t\t} else {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.service.logger.warn(\"This span is not assigned to this context\", span);\n\t\t}\n\t}\n\n\t/**\n\t * Convert Context to a printable POJO object.\n\t */\n\ttoJSON() {\n\t\tconst res = _.pick(this, [\n\t\t\t\"id\",\n\t\t\t\"nodeID\",\n\t\t\t\"action.name\",\n\t\t\t\"event.name\",\n\t\t\t\"service.name\",\n\t\t\t\"service.version\",\n\t\t\t\"service.fullName\",\n\t\t\t\"options\",\n\t\t\t\"parentID\",\n\t\t\t\"caller\",\n\t\t\t\"level\",\n\t\t\t\"params\",\n\t\t\t\"meta\",\n\t\t\t//\"locals\",\n\t\t\t\"requestID\",\n\t\t\t\"tracing\",\n\t\t\t\"span\",\n\t\t\t\"needAck\",\n\t\t\t\"ackID\",\n\t\t\t\"eventName\",\n\t\t\t\"eventType\",\n\t\t\t\"eventGroups\",\n\t\t\t\"cachedResult\"\n\t\t]);\n\n\t\treturn res;\n\t}\n\n\t/* istanbul ignore next */\n\t[util.inspect.custom](depth, options) {\n\t\t// https://nodejs.org/docs/latest-v8.x/api/util.html#util_custom_inspection_functions_on_objects\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(\"[Context]\", \"special\");\n\t\t}\n\n\t\tconst inner = util.inspect(this.toJSON(), options);\n\t\treturn `${options.stylize(\"Context\", \"special\")}< ${inner} >`;\n\t}\n}\n\nmodule.exports = Context;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { MoleculerClientError } = require(\"./errors\");\nconst utils = require(\"./utils\");\n\nmodule.exports = function() {\n\tconst schema = {\n\t\tname: \"$node\",\n\n\t\tactions: {\n\t\t\tlist: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\twithServices: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tonlyAvailable: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\treturn this.broker.registry.getNodeList(ctx.params);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tservices: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\tonlyLocal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tskipInternal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\twithActions: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\twithEvents: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tonlyAvailable: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tgrouping: { type: \"boolean\", optional: true, convert: true, default: true },\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\treturn this.broker.registry.getServiceList(ctx.params);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tactions: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\tonlyLocal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tskipInternal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\twithEndpoints: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tonlyAvailable: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\treturn this.broker.registry.getActionList(ctx.params);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tevents: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\tonlyLocal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tskipInternal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\twithEndpoints: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tonlyAvailable: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\treturn this.broker.registry.getEventList(ctx.params);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thealth: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\thandler() {\n\t\t\t\t\treturn this.broker.getHealthStatus();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\toptions: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {},\n\t\t\t\thandler() {\n\t\t\t\t\treturn utils.safetyObject(this.broker.options, this.broker.options);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tmetrics: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\ttypes: { type: \"multi\", optional: true, rules: [ { type: \"string\" }, { type: \"array\", items: \"string\" } ] },\n\t\t\t\t\tincludes: { type: \"multi\", optional: true, rules: [ { type: \"string\" }, { type: \"array\", items: \"string\" } ] },\n\t\t\t\t\texcludes: { type: \"multi\", optional: true, rules: [ { type: \"string\" }, { type: \"array\", items: \"string\" } ] }\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\tif (!this.broker.isMetricsEnabled())\n\t\t\t\t\t\treturn this.Promise.reject(new MoleculerClientError(\"Metrics feature is disabled\", 400, \"METRICS_DISABLED\"));\n\n\t\t\t\t\treturn this.broker.metrics.list(ctx.params);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn schema;\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst EventEmitter2 \t\t= require(\"eventemitter2\").EventEmitter2;\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst glob \t\t\t\t\t= require(\"glob\");\nconst path \t\t\t\t\t= require(\"path\");\n\nconst Transit \t\t\t\t= require(\"./transit\");\nconst Registry \t\t\t\t= require(\"./registry\");\nconst E \t\t\t\t\t= require(\"./errors\");\nconst utils \t\t\t\t= require(\"./utils\");\nconst LoggerFactory\t\t\t= require(\"./logger-factory\");\nconst Validators \t\t\t= require(\"./validators\");\n//const AsyncStorage \t\t\t= require(\"./async-storage\");\n\nconst Cachers \t\t\t\t= require(\"./cachers\");\nconst Transporters \t\t\t= require(\"./transporters\");\nconst Serializers \t\t\t= require(\"./serializers\");\nconst H \t\t\t\t\t= require(\"./health\");\nconst MiddlewareHandler\t\t= require(\"./middleware\");\nconst cpuUsage \t\t\t\t= require(\"./cpu-usage\");\n\nconst { MetricRegistry, METRIC }\t= require(\"./metrics\");\nconst { Tracer }\t\t\t= require(\"./tracing\");\n\n/**\n * Default broker options\n */\nconst defaultOptions = {\n\tnamespace: \"\",\n\tnodeID: null,\n\n\tlogger: true,\n\tlogLevel: null,\n\n\ttransporter: null, //\"TCP\",\n\n\trequestTimeout: 0 * 1000,\n\tretryPolicy: {\n\t\tenabled: false,\n\t\tretries: 5,\n\t\tdelay: 100,\n\t\tmaxDelay: 1000,\n\t\tfactor: 2,\n\t\tcheck: err => err && !!err.retryable\n\t},\n\n\tcontextParamsCloning: false,\n\tmaxCallLevel: 0,\n\theartbeatInterval: 10,\n\theartbeatTimeout: 30,\n\n\ttracking: {\n\t\tenabled: false,\n\t\tshutdownTimeout: 5000,\n\t},\n\n\tdisableBalancer: false,\n\n\tregistry: {\n\t\tstrategy: \"RoundRobin\",\n\t\tpreferLocal: true\n\t},\n\n\tcircuitBreaker: {\n\t\tenabled: false,\n\t\tthreshold: 0.5,\n\t\twindowTime: 60,\n\t\tminRequestCount: 20,\n\t\thalfOpenTime: 10 * 1000,\n\t\tcheck: err => err && err.code >= 500\n\t},\n\n\tbulkhead: {\n\t\tenabled: false,\n\t\tconcurrency: 10,\n\t\tmaxQueueSize: 100,\n\t},\n\n\ttransit: {\n\t\tmaxQueueSize: 50 * 1000, // 50k ~ 400MB,\n\t\tmaxChunkSize: 256*1024, // 256KB\n\t\tdisableReconnect: false,\n\t\tdisableVersionCheck: false\n\t},\n\n\tuidGenerator: null,\n\n\terrorHandler: null,\n\n\tcacher: null,\n\tserializer: null,\n\n\tvalidator: true,\n\n\tmetrics: false,\n\ttracing: false,\n\n\tinternalServices: true,\n\tinternalMiddlewares: true,\n\tdependencyInterval: 1000,\n\n\thotReload: false,\n\n\tmiddlewares: null,\n\n\treplCommands: null,\n\treplDelimiter: null,\n\n\tmetadata: {},\n\n\tskipProcessEventRegistration: false,\n\n\t/**\n\t * Maximum size of objects that can be serialized\n\t *\n\t * On serialization process, check each object property size (based on length or size property value)\n\t * and trim it, if object size bigger than maxSafeObjectSize value\n\t *\n\t * @type {(number|null)}\n\t */\n\tmaxSafeObjectSize: null,\n\t// ServiceFactory: null,\n\t// ContextFactory: null\n\t// Promise: null\n};\n\n/**\n * Service broker class\n *\n * @class ServiceBroker\n */\nclass ServiceBroker {\n\n\t/**\n\t * Creates an instance of ServiceBroker.\n\t *\n\t * @param {Object} options\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tconstructor(options) {\n\t\ttry {\n\t\t\tthis.options = _.defaultsDeep(options, defaultOptions);\n\n\t\t\t// Custom Promise lib\n\t\t\tif (this.options.Promise) {\n\t\t\t\tthis.Promise = this.options.Promise;\n\t\t\t} else {\n\t\t\t\t// Use native Promise lib\n\t\t\t\tthis.Promise = Promise;\n\t\t\t}\n\t\t\tutils.polyfillPromise(this.Promise);\n\t\t\tServiceBroker.Promise = this.Promise;\n\n\t\t\t// Broker started flag\n\t\t\tthis.started = false;\n\n\t\t\t// Class factories\n\t\t\tthis.ServiceFactory = this.options.ServiceFactory || require(\"./service\");\n\t\t\tthis.ContextFactory = this.options.ContextFactory || require(\"./context\");\n\n\t\t\t// Namespace\n\t\t\tthis.namespace = this.options.namespace || \"\";\n\n\t\t\t// Metadata\n\t\t\tthis.metadata = this.options.metadata || {};\n\n\t\t\t// Self nodeID\n\t\t\tthis.nodeID = this.options.nodeID || utils.getNodeID();\n\n\t\t\t// Instance ID\n\t\t\tthis.instanceID = utils.generateToken();\n\n\t\t\t// Internal maps\n\t\t\tthis.services = [];\n\n\t\t\t// Internal event bus\n\t\t\tthis.localBus = new EventEmitter2({\n\t\t\t\twildcard: true,\n\t\t\t\tmaxListeners: 100\n\t\t\t});\n\n\t\t\t// Log Factory\n\t\t\tthis.loggerFactory = new LoggerFactory(this);\n\t\t\tthis.loggerFactory.init(this.options.logger);\n\n\t\t\t// Logger\n\t\t\tthis.logger = this.getLogger(\"broker\");\n\n\t\t\tthis.logger.info(`Moleculer v${this.MOLECULER_VERSION} is starting...`);\n\t\t\tthis.logger.info(`Namespace: ${this.namespace || \"<not defined>\"}`);\n\t\t\tthis.logger.info(`Node ID: ${this.nodeID}`);\n\n\t\t\t// Async storage for Contexts\n\t\t\t//this.scope = new AsyncStorage(this);\n\n\t\t\t// Metrics Registry\n\t\t\tthis.metrics = new MetricRegistry(this, this.options.metrics);\n\t\t\tthis.metrics.init();\n\t\t\tthis.registerMoleculerMetrics();\n\n\t\t\t// Middleware handler\n\t\t\tthis.middlewares = new MiddlewareHandler(this);\n\n\t\t\t// Service registry\n\t\t\tthis.registry = new Registry(this);\n\n\t\t\t// Cacher\n\t\t\tthis.cacher = Cachers.resolve(this.options.cacher);\n\t\t\tif (this.cacher) {\n\t\t\t\tthis.cacher.init(this);\n\n\t\t\t\tconst name = this.getConstructorName(this.cacher);\n\t\t\t\tthis.logger.info(`Cacher: ${name}`);\n\t\t\t}\n\n\t\t\t// Serializer\n\t\t\tthis.serializer = Serializers.resolve(this.options.serializer);\n\t\t\tthis.serializer.init(this);\n\n\t\t\tconst serializerName = this.getConstructorName(this.serializer);\n\t\t\tthis.logger.info(`Serializer: ${serializerName}`);\n\n\t\t\t// Validator\n\t\t\tif (this.options.validator) {\n\t\t\t\tthis.validator = Validators.resolve(this.options.validator);\n\t\t\t\tif (this.validator) {\n\t\t\t\t\tconst validatorName = this.getConstructorName(this.validator);\n\t\t\t\t\tthis.logger.info(`Validator: ${validatorName}`);\n\t\t\t\t\tthis.validator.init(this);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tracing\n\t\t\tthis.tracer = new Tracer(this, this.options.tracing);\n\t\t\tthis.tracer.init();\n\n\t\t\t// Register middlewares\n\t\t\tthis.registerMiddlewares(this.options.middlewares);\n\n\t\t\t// Transit & Transporter\n\t\t\tif (this.options.transporter) {\n\t\t\t\tconst tx = Transporters.resolve(this.options.transporter);\n\t\t\t\tthis.transit = new Transit(this, tx, this.options.transit);\n\n\t\t\t\tconst txName = this.getConstructorName(tx);\n\t\t\t\tthis.logger.info(`Transporter: ${txName}`);\n\n\t\t\t\tif (this.options.disableBalancer) {\n\t\t\t\t\tif (tx.hasBuiltInBalancer) {\n\t\t\t\t\t\tthis.logger.info(\"The broker built-in balancer is DISABLED.\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logger.warn(`The ${txName} has no built-in balancer. Broker balancer is ENABLED.`);\n\t\t\t\t\t\tthis.options.disableBalancer = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Change the call method if balancer is disabled\n\t\t\tif (this.options.disableBalancer) {\n\t\t\t\tthis.call = this.callWithoutBalancer;\n\t\t\t}\n\n\t\t\tthis.registry.init(this);\n\n\t\t\t// Register internal actions\n\t\t\tif (this.options.internalServices)\n\t\t\t\tthis.registerInternalServices(this.options.internalServices);\n\n\t\t\t// Call `created` event handler in middlewares\n\t\t\tthis.callMiddlewareHookSync(\"created\", [this]);\n\n\t\t\t// Call `created` event handler from options\n\t\t\tif (utils.isFunction(this.options.created))\n\t\t\t\tthis.options.created(this);\n\n\t\t\t// Graceful exit\n\t\t\tthis._closeFn = () => {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.stop()\n\t\t\t\t\t.catch(err => this.logger.error(err))\n\t\t\t\t\t.then(() => process.exit(0));\n\t\t\t};\n\n\t\t\tprocess.setMaxListeners(0);\n\t\t\tif (this.options.skipProcessEventRegistration === false) {\n\t\t\t\tprocess.on(\"beforeExit\", this._closeFn);\n\t\t\t\tprocess.on(\"exit\", this._closeFn);\n\t\t\t\tprocess.on(\"SIGINT\", this._closeFn);\n\t\t\t\tprocess.on(\"SIGTERM\", this._closeFn);\n\t\t\t}\n\n\t\t} catch(err) {\n\t\t\tif (this.logger)\n\t\t\t\tthis.fatal(\"Unable to create ServiceBroker.\", err, true);\n\t\t\telse {\n\t\t\t\t/* eslint-disable-next-line no-console */\n\t\t\t\tconsole.error(\"Unable to create ServiceBroker.\", err);\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Register middlewares (user & internal)\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tregisterMiddlewares(userMiddlewares) {\n\t\t// Register user middlewares\n\t\tif (Array.isArray(userMiddlewares) && userMiddlewares.length > 0) {\n\t\t\t_.compact(userMiddlewares).forEach(mw => this.middlewares.add(mw));\n\n\t\t\tthis.logger.info(`Registered ${this.middlewares.count()} custom middleware(s).`);\n\t\t}\n\n\t\tif (this.options.internalMiddlewares) {\n\t\t\t// Register internal middlewares\n\n\t\t\tconst prevCount = this.middlewares.count();\n\n\t\t\t// 0. ActionHook\n\t\t\tthis.middlewares.add(\"ActionHook\");\n\n\t\t\t// 1. Validator\n\t\t\tif (this.validator && utils.isFunction(this.validator.middleware)) {\n\t\t\t\tconst mw = this.validator.middleware(this);\n\t\t\t\tif (utils.isPlainObject(mw))\n\t\t\t\t\tthis.middlewares.add(mw);\n\t\t\t\telse\n\t\t\t\t\tthis.middlewares.add({ localAction: mw });\n\t\t\t}\n\n\t\t\t// 2. Bulkhead\n\t\t\tthis.middlewares.add(\"Bulkhead\");\n\n\t\t\t// 3. Cacher\n\t\t\tif (this.cacher && utils.isFunction(this.cacher.middleware)) {\n\t\t\t\tconst mw = this.cacher.middleware();\n\t\t\t\tif (utils.isPlainObject(mw))\n\t\t\t\t\tthis.middlewares.add(mw);\n\t\t\t\telse\n\t\t\t\t\tthis.middlewares.add({ localAction: mw });\n\t\t\t}\n\n\t\t\t// 4. Context tracker\n\t\t\tthis.middlewares.add(\"ContextTracker\");\n\n\t\t\t// 5. CircuitBreaker\n\t\t\tthis.middlewares.add(\"CircuitBreaker\");\n\n\t\t\t// 6. Timeout\n\t\t\tthis.middlewares.add(\"Timeout\");\n\n\t\t\t// 7. Retry\n\t\t\tthis.middlewares.add(\"Retry\");\n\n\t\t\t// 8. Fallback\n\t\t\tthis.middlewares.add(\"Fallback\");\n\n\t\t\t// 9. Error handler\n\t\t\tthis.middlewares.add(\"ErrorHandler\");\n\n\t\t\t// 10. Tracing\n\t\t\tthis.middlewares.add(\"Tracing\");\n\n\t\t\t// 11. Metrics\n\t\t\tthis.middlewares.add(\"Metrics\");\n\n\t\t\t// 12. Debounce\n\t\t\tthis.middlewares.add(\"Debounce\");\n\n\t\t\t// 13. Throttle\n\t\t\tthis.middlewares.add(\"Throttle\");\n\n\t\t\tif (this.options.hotReload) {\n\t\t\t\t// 14. Hot Reload\n\t\t\t\tthis.middlewares.add(\"HotReload\");\n\t\t\t}\n\n\t\t\tthis.logger.info(`Registered ${this.middlewares.count() - prevCount} internal middleware(s).`);\n\t\t}\n\n\t\tthis.createService = this.wrapMethod(\"createService\", this.createService);\n\t\tthis.registerLocalService = this.wrapMethod(\"registerLocalService\", this.registerLocalService);\n\t\tthis.destroyService = this.wrapMethod(\"destroyService\", this.destroyService);\n\t\tthis.call = this.wrapMethod(\"call\", this.call);\n\t\tthis.callWithoutBalancer = this.wrapMethod(\"call\", this.callWithoutBalancer);\n\t\tthis.mcall = this.wrapMethod(\"mcall\", this.mcall);\n\t\tthis.emit = this.wrapMethod(\"emit\", this.emit);\n\t\tthis.broadcast = this.wrapMethod(\"broadcast\", this.broadcast);\n\t\tthis.broadcastLocal = this.wrapMethod(\"broadcastLocal\", this.broadcastLocal);\n\n\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_MIDDLEWARES_TOTAL,this.middlewares.count());\n\t}\n\n\t/**\n\t * Register Moleculer Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tif (!this.isMetricsEnabled()) return;\n\n\t\t// --- MOLECULER NODE METRICS ---\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_NODE_TYPE, type: METRIC.TYPE_INFO, description: \"Moleculer implementation type\" }).set(\"nodejs\");\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_NODE_VERSIONS_MOLECULER, type: METRIC.TYPE_INFO, description: \"Moleculer version number\" }).set(ServiceBroker.MOLECULER_VERSION);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_NODE_VERSIONS_PROTOCOL, type: METRIC.TYPE_INFO, description: \"Moleculer protocol version\" }).set(ServiceBroker.PROTOCOL_VERSION);\n\n\t\t// --- MOLECULER BROKER METRICS ---\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_BROKER_NAMESPACE, type: METRIC.TYPE_INFO, description: \"Moleculer namespace\" }).set(this.namespace);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_BROKER_STARTED, type: METRIC.TYPE_GAUGE, description: \"ServiceBroker started\" }).set(0);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_BROKER_LOCAL_SERVICES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of local services\" }).set(0);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_BROKER_MIDDLEWARES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of local middlewares\" }).set(0);\n\t}\n\n\t/**\n\t * Start broker. If has transporter, transporter.connect will be called.\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tstart() {\n\t\tconst startTime = Date.now();\n\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\t//this.tracer.restartScope();\n\t\t\t\t//this.scope.enable();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.callMiddlewareHook(\"starting\", [this]);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.transit)\n\t\t\t\t\treturn this.transit.connect();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Call service `started` handlers\n\t\t\t\treturn this.Promise.all(this.services.map(svc => svc._start.call(svc)))\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tthis.logger.error(\"Unable to start all services.\", err);\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.started = true;\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_STARTED, 1);\n\t\t\t\tthis.broadcastLocal(\"$broker.started\");\n\t\t\t\tthis.registry.regenerateLocalRawInfo(true);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.transit)\n\t\t\t\t\treturn this.transit.ready();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.callMiddlewareHook(\"started\", [this]);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (utils.isFunction(this.options.started))\n\t\t\t\t\treturn this.options.started(this);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tconst duration = Date.now() - startTime;\n\t\t\t\tthis.logger.info(`✔ ServiceBroker with ${this.services.length} service(s) is started successfully in ${utils.humanize(duration)}.`);\n\t\t\t});\n\t}\n\n\t/**\n\t * Stop broker. If has transporter, transporter.disconnect will be called.\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tstop() {\n\t\tthis.started = false;\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\tif (this.transit) {\n\t\t\t\t\tthis.registry.regenerateLocalRawInfo(true);\n\t\t\t\t\t// Send empty node info in order to block incoming requests\n\t\t\t\t\treturn this.registry.discoverer.sendLocalNodeInfo();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.callMiddlewareHook(\"stopping\", [this], { reverse: true });\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Call service `stopped` handlers\n\t\t\t\treturn this.Promise.all(this.services.map(svc => svc._stop.call(svc)))\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tthis.logger.error(\"Unable to stop all services.\", err);\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.transit) {\n\t\t\t\t\treturn this.transit.disconnect();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.cacher) {\n\t\t\t\t\treturn this.cacher.close();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.metrics) {\n\t\t\t\t\treturn this.metrics.stop();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.tracer) {\n\t\t\t\t\treturn this.tracer.stop();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.registry.stop();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.callMiddlewareHook(\"stopped\", [this], { reverse: true });\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (utils.isFunction(this.options.stopped))\n\t\t\t\t\treturn this.options.stopped(this);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.logger.error(err);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.logger.info(\"ServiceBroker is stopped. Good bye.\");\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_STARTED, 0);\n\n\t\t\t\tthis.broadcastLocal(\"$broker.stopped\");\n\n\t\t\t\tif (this.options.skipProcessEventRegistration === false) {\n\t\t\t\t\tprocess.removeListener(\"beforeExit\", this._closeFn);\n\t\t\t\t\tprocess.removeListener(\"exit\", this._closeFn);\n\t\t\t\t\tprocess.removeListener(\"SIGINT\", this._closeFn);\n\t\t\t\t\tprocess.removeListener(\"SIGTERM\", this._closeFn);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.loggerFactory.stop();\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\t// Silent\n\t\t\t});\n\t}\n\n\t/**\n\t * Switch the console to REPL mode.\n\t *\n\t * @example\n\t * broker.start().then(() => broker.repl());\n\t * @returns {object}\n\t */\n\trepl() {\n\t\tlet repl;\n\t\ttry {\n\t\t\trepl = require(\"moleculer-repl\");\n\t\t}\n\t\tcatch (error) {\n\t\t\tconsole.error(\"The 'moleculer-repl' package is missing. Please install it with 'npm install moleculer-repl' command.\"); // eslint-disable-line no-console\n\t\t\tthis.logger.error(\"The 'moleculer-repl' package is missing. Please install it with 'npm install moleculer-repl' command.\");\n\t\t\tthis.logger.debug(\"ERROR\", error);\n\t\t\treturn;\n\t\t}\n\n\t\tif (repl)\n\t\t{\n\t\t\tlet opts = null;\n\t\t\tconst delimiter = this.options.replDelimiter;\n\t\t\tconst customCommands = this.options.replCommands;\n\t\t\tdelimiter && (opts = { delimiter });\n\t\t\tcustomCommands && (opts = { ...opts,customCommands });\n\t\t\treturn repl(this, opts);\n\t\t}\n\t}\n\n\t/**\n\t * Global error handler.\n\t *\n\t * @param {Error} err\n\t * @param {object} info\n\t * @returns\n\t * @memberof ServiceBroker\n\t */\n\terrorHandler(err, info) {\n\t\tif (this.options.errorHandler) {\n\t\t\treturn this.options.errorHandler.call(this, err, info);\n\t\t}\n\n\t\tthrow err;\n\t}\n\n\t/**\n\t * Wrap a method with middlewares\n\t *\n\t * @param {string} method\n\t * @param {Function} handler\n\t * @param {any} bindTo\n\t * @param {Object} opts\n\t * @returns {Function}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\twrapMethod(name, handler, bindTo, opts) {\n\t\treturn this.middlewares.wrapMethod(name, handler, bindTo, opts);\n\t}\n\n\t/**\n\t * Call a handler asynchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns {Promise}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tcallMiddlewareHook(name, args, opts) {\n\t\treturn this.middlewares.callHandlers(name, args, opts);\n\t}\n\n\t/**\n\t * Call a handler synchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tcallMiddlewareHookSync(name, args, opts) {\n\t\treturn this.middlewares.callSyncHandlers(name, args, opts);\n\t}\n\n\t/**\n\t * Check metrics are enabled.\n\t *\n\t * @returns {boolean}\n\t * @memberof ServiceBroker\n\t */\n\tisMetricsEnabled() {\n\t\treturn this.metrics.isEnabled();\n\t}\n\n\t/**\n\t * Check tracing is enabled.\n\t *\n\t * @returns {boolean}\n\t * @memberof ServiceBroker\n\t */\n\tisTracingEnabled() {\n\t\treturn this.tracer.isEnabled();\n\t}\n\n\t/**\n\t * Get a custom logger for sub-modules (service, transporter, cacher, context...etc)\n\t *\n\t * @param {String} mod\tName of module\n\t * @param {Object} props\tModule properties (service name, version, ...etc\n\t * @returns {ModuleLogger}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tgetLogger(mod, props) {\n\t\tlet bindings = Object.assign({\n\t\t\tnodeID: this.nodeID,\n\t\t\tns: this.namespace,\n\t\t\tmod\n\t\t}, props);\n\n\t\treturn this.loggerFactory.getLogger(bindings);\n\t}\n\n\t/**\n\t * Fatal error. Print the message to console and exit the process (if need)\n\t *\n\t * @param {String} message\n\t * @param {Error?} err\n\t * @param {boolean} [needExit=true]\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tfatal(message, err, needExit = true) {\n\t\tif (this.logger)\n\t\t\tthis.logger.fatal(message, err);\n\t\telse\n\t\t\tconsole.error(message, err); // eslint-disable-line no-console\n\n\t\tif (needExit)\n\t\t\tprocess.exit(1);\n\t}\n\n\t/**\n\t * Load services from a folder\n\t *\n\t * @param {string} [folder=\"./services\"]\t\tFolder of services\n\t * @param {string} [fileMask=\"**\\/*.service.js\"]\tService filename mask\n\t * @returns\t{Number}\t\t\t\t\t\t\tNumber of found services\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tloadServices(folder = \"./services\", fileMask = \"**/*.service.js\") {\n\t\tthis.logger.debug(`Search services in '${folder}/${fileMask}'...`);\n\n\t\tlet serviceFiles;\n\n\t\tif (Array.isArray(fileMask))\n\t\t\tserviceFiles = fileMask.map(f => path.join(folder, f));\n\t\telse\n\t\t\tserviceFiles = glob.sync(path.join(folder, fileMask));\n\n\t\tif (serviceFiles)\n\t\t\tserviceFiles.forEach(filename => this.loadService(filename));\n\n\t\treturn serviceFiles.length;\n\t}\n\n\t/**\n\t * Load a service from file\n\t *\n\t * @param {string} \t\tPath of service\n\t * @returns\t{Service}\tLoaded service\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tloadService(filePath) {\n\t\tlet fName, schema;\n\n\t\ttry {\n\t\t\tfName = require.resolve(path.resolve(filePath));\n\t\t\tthis.logger.debug(`Load service '${path.basename(fName)}'...`);\n\n\t\t\tconst r = require(fName);\n\t\t\tschema = r.default != null ? r.default : r;\n\n\t\t\tlet svc;\n\t\t\tschema = this.normalizeSchemaConstructor(schema);\n\t\t\tif (Object.prototype.isPrototypeOf.call(this.ServiceFactory, schema)) {\n\t\t\t\t// Service implementation\n\t\t\t\tsvc = new schema(this);\n\n\t\t\t\t// If broker is started, call the started lifecycle event of service\n\t\t\t\tif (this.started)\n\t\t\t\t\tthis._restartService(svc);\n\n\t\t\t} else if (utils.isFunction(schema)) {\n\t\t\t\t// Function\n\t\t\t\tsvc = schema(this);\n\t\t\t\tif (!(svc instanceof this.ServiceFactory)) {\n\t\t\t\t\tsvc = this.createService(svc);\n\t\t\t\t} else {\n\t\t\t\t\t// If broker is started, call the started lifecycle event of service\n\t\t\t\t\tif (this.started)\n\t\t\t\t\t\tthis._restartService(svc);\n\t\t\t\t}\n\n\t\t\t} else if (schema) {\n\t\t\t\t// Schema object\n\t\t\t\tsvc = this.createService(schema);\n\t\t\t}\n\n\t\t\tif (svc) {\n\t\t\t\tsvc.__filename = fName;\n\t\t\t}\n\n\t\t\treturn svc;\n\n\t\t} catch (e) {\n\t\t\tthis.logger.error(`Failed to load service '${filePath}'`, e);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Create a new service by schema\n\t *\n\t * @param {any} schema\tSchema of service or a Service class\n\t * @param {any=} schemaMods\tModified schema\n\t * @returns {Service}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tcreateService(schema, schemaMods) {\n\t\tlet service;\n\n\t\tschema = this.normalizeSchemaConstructor(schema);\n\t\tif (Object.prototype.isPrototypeOf.call(this.ServiceFactory, schema)) {\n\t\t\tservice = new schema(this, schemaMods);\n\t\t} else {\n\t\t\tlet s = schema;\n\t\t\tif (schemaMods)\n\t\t\t\ts = this.ServiceFactory.mergeSchemas(schema, schemaMods);\n\n\t\t\tservice = new this.ServiceFactory(this, s);\n\t\t}\n\n\t\t// If broker has started yet, call the started lifecycle event of service\n\t\tif (this.started)\n\t\t\tthis._restartService(service);\n\n\t\treturn service;\n\t}\n\n\t/**\n\t * Restart a hot-reloaded service after creation.\n\t *\n\t * @param {Service} service\n\t * @returns {Promise}\n\t * @memberof ServiceBroker\n\t * @private\n\t */\n\t_restartService(service) {\n\t\treturn service._start.call(service)\n\t\t\t.catch(err => this.logger.error(\"Unable to start service.\", err));\n\t}\n\n\t/**\n\t * Add a local service instance\n\t *\n\t * @param {Service} service\n\t * @memberof ServiceBroker\n\t */\n\taddLocalService(service) {\n\t\tthis.services.push(service);\n\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_LOCAL_SERVICES_TOTAL, this.services.length);\n\t}\n\n\t/**\n\t * Register a local service to Service Registry\n\t *\n\t * @param {Object} registryItem\n\t * @memberof ServiceBroker\n\t */\n\tregisterLocalService(registryItem) {\n\t\tthis.registry.registerLocalService(registryItem);\n\t}\n\n\t/**\n\t * Destroy a local service\n\t *\n\t * @param {Service|string|object} service\n\t * @returns Promise<void>\n\t * @memberof ServiceBroker\n\t */\n\tdestroyService(service) {\n\t\tlet serviceName;\n\t\tlet serviceVersion;\n\t\tif (utils.isString(service)) {\n\t\t\tserviceName = service;\n\t\t\tservice = this.getLocalService(service);\n\t\t} else if (utils.isPlainObject(service)) {\n\t\t\tserviceName = service.name;\n\t\t\tserviceVersion  = service.version;\n\t\t\tservice = this.getLocalService(service.name, service.version);\n\t\t}\n\n\t\tif (!service) {\n\t\t\treturn this.Promise.reject(new E.ServiceNotFoundError({ service: serviceName, version: serviceVersion }));\n\t\t}\n\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => service._stop())\n\t\t\t.catch(err => {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.logger.error(`Unable to stop '${service.fullName}' service.`, err);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tutils.removeFromArray(this.services, service);\n\t\t\t\tthis.registry.unregisterService(service.fullName, this.nodeID);\n\n\t\t\t\tthis.logger.info(`Service '${service.fullName}' is stopped.`);\n\t\t\t\tthis.servicesChanged(true);\n\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_LOCAL_SERVICES_TOTAL, this.services.length);\n\t\t\t});\n\t}\n\n\t/**\n\t * It will be called when a new local or remote service\n\t * is registered or unregistered.\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tservicesChanged(localService = false) {\n\t\tthis.broadcastLocal(\"$services.changed\", { localService });\n\n\t\t// Should notify remote nodes, because our service list is changed.\n\t\tif (this.started && localService && this.transit) {\n\t\t\tthis.registry.discoverer.sendLocalNodeInfo();\n\t\t}\n\t}\n\n\t/**\n\t * Register internal services\n\t * @param {Object?} opts\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tregisterInternalServices(opts) {\n\t\topts = utils.isObject(opts) ? opts : {};\n\t\tthis.createService(require(\"./internals\")(this), opts[\"$node\"]);\n\t}\n\n\t/**\n\t * Get a local service by name\n\t *\n\t * Example:\n\t * \tgetLocalService(\"v2.posts\");\n\t * \tgetLocalService({ name: \"posts\", version: 2 });\n\t *\n\t * @param {String|ServiceSearchObj} name\n\t * @param {String|Number?} version\n\t * @returns {Service}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tgetLocalService(name, version) {\n\t\tif (arguments.length == 1) {\n\t\t\tif (utils.isString(name))\n\t\t\t\treturn this.services.find(service => service.fullName == name);\n\t\t\telse if (utils.isPlainObject(name))\n\t\t\t\treturn this.services.find(service => service.name == name.name && service.version == name.version);\n\t\t}\n\t\t// Deprecated\n\t\treturn this.services.find(service => service.name == name && service.version == version);\n\t}\n\n\t/**\n\t * Wait for other services\n\t *\n\t * @param {String|Array<String>} serviceNames\n\t * @param {Number} timeout Timeout in milliseconds\n\t * @param {Number} interval Check interval in milliseconds\n\t * @returns {Promise}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\twaitForServices(serviceNames, timeout, interval, logger = this.logger) {\n\t\tif (!Array.isArray(serviceNames))\n\t\t\tserviceNames = [serviceNames];\n\n\t\tserviceNames = _.uniq(_.compact(serviceNames.map(x => {\n\t\t\tif (utils.isPlainObject(x) && x.name)\n\t\t\t\treturn this.ServiceFactory.getVersionedFullName(x.name, x.version);\n\n\t\t\tif (utils.isString(x))\n\t\t\t\treturn x;\n\t\t})));\n\n\t\tif (serviceNames.length == 0)\n\t\t\treturn this.Promise.resolve();\n\n\t\tlogger.info(`Waiting for service(s) '${serviceNames.join(\", \")}'...`);\n\n\t\tconst startTime = Date.now();\n\t\treturn new this.Promise((resolve, reject) => {\n\t\t\tconst check = () => {\n\t\t\t\tconst count = serviceNames.filter(fullName => {\n\t\t\t\t\treturn this.registry.hasService(fullName);\n\t\t\t\t});\n\n\t\t\t\tif (count.length == serviceNames.length) {\n\t\t\t\t\tlogger.info(`Service(s) '${serviceNames.join(\", \")}' are available.`);\n\t\t\t\t\treturn resolve();\n\t\t\t\t}\n\n\t\t\t\tlogger.debug(`${count.length} of ${serviceNames.length} services are available. Waiting further...`);\n\n\t\t\t\tif (timeout && Date.now() - startTime > timeout)\n\t\t\t\t\treturn reject(new E.MoleculerServerError(\"Services waiting is timed out.\", 500, \"WAITFOR_SERVICES\", { services: serviceNames }));\n\n\t\t\t\tsetTimeout(check, interval || this.options.dependencyInterval || 1000);\n\t\t\t};\n\n\t\t\tcheck();\n\t\t});\n\t}\n\n\t/**\n\t * Find the next available endpoint for action\n\t *\n\t * @param {String} actionName\n\t * @param {Object?} opts\n\t * @param {Context?} ctx\n\t * @returns {Endpoint|Error}\n\t *\n\t * @performance-critical\n\t * @memberof ServiceBroker\n\t */\n\tfindNextActionEndpoint(actionName, opts, ctx) {\n\t\tif (typeof actionName !== \"string\") {\n\t\t\treturn actionName;\n\t\t} else {\n\t\t\tif (opts && opts.nodeID) {\n\t\t\t\tconst nodeID = opts.nodeID;\n\t\t\t\t// Direct call\n\t\t\t\tconst endpoint = this.registry.getActionEndpointByNodeId(actionName, nodeID);\n\t\t\t\tif (!endpoint) {\n\t\t\t\t\tthis.logger.warn(`Service '${actionName}' is not found on '${nodeID}' node.`);\n\t\t\t\t\treturn new E.ServiceNotFoundError({ action: actionName, nodeID });\n\t\t\t\t}\n\t\t\t\treturn endpoint;\n\n\t\t\t} else {\n\t\t\t\t// Get endpoint list by action name\n\t\t\t\tconst epList = this.registry.getActionEndpoints(actionName);\n\t\t\t\tif (!epList) {\n\t\t\t\t\tthis.logger.warn(`Service '${actionName}' is not registered.`);\n\t\t\t\t\treturn new E.ServiceNotFoundError({ action: actionName });\n\t\t\t\t}\n\n\t\t\t\t// Get the next available endpoint\n\t\t\t\tconst endpoint = epList.next(ctx);\n\t\t\t\tif (!endpoint) {\n\t\t\t\t\tconst errMsg = `Service '${actionName}' is not available.`;\n\t\t\t\t\tthis.logger.warn(errMsg);\n\t\t\t\t\treturn new E.ServiceNotAvailableError({ action: actionName });\n\t\t\t\t}\n\t\t\t\treturn endpoint;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Call an action\n\t *\n\t * @param {String} actionName\tname of action\n\t * @param {Object?} params\t\tparams of action\n\t * @param {Object?} opts\t\toptions of call (optional)\n\t * @returns {Promise}\n\t *\n\t * @performance-critical\n\t * @memberof ServiceBroker\n\t */\n\tcall(actionName, params, opts = {}) {\n\t\tif (params === undefined)\n\t\t\tparams = {}; // Backward compatibility\n\n\t\t// Create context\n\t\tlet ctx;\n\t\tif (opts.ctx != null) {\n\n\t\t\tconst endpoint = this.findNextActionEndpoint(actionName, opts, opts.ctx);\n\t\t\tif (endpoint instanceof Error) {\n\t\t\t\treturn this.Promise.reject(endpoint).catch(err => this.errorHandler(err, { actionName, params, opts }));\n\t\t\t}\n\n\t\t\t// Reused context\n\t\t\tctx = opts.ctx;\n\t\t\tctx.endpoint = endpoint;\n\t\t\tctx.nodeID = endpoint.id;\n\t\t\tctx.action = endpoint.action;\n\t\t\tctx.service = endpoint.action.service;\n\t\t} else {\n\t\t\t// New root context\n\t\t\tctx = this.ContextFactory.create(this, null, params, opts);\n\n\t\t\tconst endpoint = this.findNextActionEndpoint(actionName, opts, ctx);\n\t\t\tif (endpoint instanceof Error) {\n\t\t\t\treturn this.Promise.reject(endpoint).catch(err => this.errorHandler(err, { actionName, params, opts }));\n\t\t\t}\n\n\t\t\tctx.setEndpoint(endpoint);\n\t\t}\n\n\t\tif (ctx.endpoint.local)\n\t\t\tthis.logger.debug(\"Call action locally.\", { action: ctx.action.name, requestID: ctx.requestID });\n\t\telse\n\t\t\tthis.logger.debug(\"Call action on remote node.\", { action: ctx.action.name, nodeID: ctx.nodeID, requestID: ctx.requestID });\n\n\t\t//this.setCurrentContext(ctx);\n\n\t\tlet p = ctx.endpoint.action.handler(ctx);\n\n\t\t// Pointer to Context\n\t\tp.ctx = ctx;\n\n\t\treturn p;\n\t}\n\n\t/**\n\t * Call an action without built-in balancer.\n\t * You don't call it directly. Broker will replace the\n\t * original 'call' method to this if you disable the\n\t * built-in balancer with the \"disableBalancer\" option.\n\t *\n\t * @param {String} actionName\tname of action\n\t * @param {Object?} params\t\tparams of action\n\t * @param {Object?} opts \t\toptions of call (optional)\n\t * @returns {Promise}\n\t *\n\t * @private\n\t * @memberof ServiceBroker\n\t */\n\tcallWithoutBalancer(actionName, params, opts = {}) {\n\t\tif (params === undefined)\n\t\t\tparams = {}; // Backward compatibility\n\n\t\tlet nodeID = null;\n\t\tlet endpoint = null;\n\t\tif (typeof actionName !== \"string\") {\n\t\t\tendpoint = actionName;\n\t\t\tactionName = endpoint.action.name;\n\t\t\tnodeID = endpoint.id;\n\t\t} else {\n\t\t\tif (opts.nodeID) {\n\t\t\t\tnodeID = opts.nodeID;\n\t\t\t\tendpoint = this.registry.getActionEndpointByNodeId(actionName, nodeID);\n\t\t\t\tif (!endpoint) {\n\t\t\t\t\tthis.logger.warn(`Service '${actionName}' is not found on '${nodeID}' node.`);\n\t\t\t\t\treturn this.Promise.reject(new E.ServiceNotFoundError({ action: actionName, nodeID })).catch(err => this.errorHandler(err, { nodeID, actionName, params, opts }));\n\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Get endpoint list by action name\n\t\t\t\tconst epList = this.registry.getActionEndpoints(actionName);\n\t\t\t\tif (epList == null) {\n\t\t\t\t\tthis.logger.warn(`Service '${actionName}' is not registered.`);\n\t\t\t\t\treturn this.Promise.reject(new E.ServiceNotFoundError({ action: actionName })).catch(err => this.errorHandler(err, { actionName, params, opts }));\n\n\t\t\t\t}\n\n\t\t\t\tendpoint = epList.getFirst();\n\t\t\t\tif (endpoint == null) {\n\t\t\t\t\tconst errMsg = `Service '${actionName}' is not available.`;\n\t\t\t\t\tthis.logger.warn(errMsg);\n\t\t\t\t\treturn this.Promise.reject(new E.ServiceNotAvailableError({ action: actionName })).catch(err => this.errorHandler(err, { actionName, params, opts }));\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Create context\n\t\tlet ctx;\n\t\tif (opts.ctx != null) {\n\t\t\t// Reused context\n\t\t\tctx = opts.ctx;\n\t\t\tif (endpoint) {\n\t\t\t\tctx.endpoint = endpoint;\n\t\t\t\tctx.action = endpoint.action;\n\t\t\t}\n\t\t} else {\n\t\t\t// New root context\n\t\t\tctx = this.ContextFactory.create(this, endpoint, params, opts);\n\t\t}\n\t\tctx.nodeID = nodeID;\n\n\t\tthis.logger.debug(\"Call action on a node.\", { action: ctx.action.name, nodeID: ctx.nodeID, requestID: ctx.requestID });\n\n\t\tlet p = endpoint.action.remoteHandler(ctx);\n\n\t\t// Pointer to Context\n\t\tp.ctx = ctx;\n\n\t\treturn p;\n\t}\n\n\t_getLocalActionEndpoint(actionName, ctx) {\n\t\t// Find action by name\n\t\tlet epList = this.registry.getActionEndpoints(actionName);\n\t\tif (epList == null || !epList.hasLocal()) {\n\t\t\tthis.logger.warn(`Service '${actionName}' is not registered locally.`);\n\t\t\tthrow new E.ServiceNotFoundError({ action: actionName, nodeID: this.nodeID });\n\t\t}\n\n\t\t// Get local endpoint\n\t\tlet endpoint = epList.nextLocal(ctx);\n\t\tif (!endpoint) {\n\t\t\tthis.logger.warn(`Service '${actionName}' is not available locally.`);\n\t\t\tthrow new E.ServiceNotAvailableError({ action: actionName, nodeID: this.nodeID });\n\t\t}\n\n\t\treturn endpoint;\n\t}\n\n\t/**\n\t * Multiple action calls.\n\t *\n\t * @param {Array<Object>|Object} def Calling definitions.\n\t * @returns {Promise<Array<Object>|Object>}\n\t *\n\t * @example\n\t * Call `mcall` with an array:\n\t * ```js\n\t * broker.mcall([\n\t * \t{ action: \"posts.find\", params: { limit: 5, offset: 0 } },\n\t * \t{ action: \"users.find\", params: { limit: 5, sort: \"username\" }, opts: { timeout: 500 } }\n\t * ]).then(results => {\n\t * \tlet posts = results[0];\n\t * \tlet users = results[1];\n\t * })\n\t * ```\n\t *\n\t * @example\n\t * Call `mcall` with an Object:\n\t * ```js\n\t * broker.mcall({\n\t * \tposts: { action: \"posts.find\", params: { limit: 5, offset: 0 } },\n\t * \tusers: { action: \"users.find\", params: { limit: 5, sort: \"username\" }, opts: { timeout: 500 } }\n\t * }).then(results => {\n\t * \tlet posts = results.posts;\n\t * \tlet users = results.users;\n\t * })\n\t * ```\n\t * @throws MoleculerServerError - If the `def` is not an `Array` and not an `Object`.\n\t * @memberof ServiceBroker\n\t */\n\tmcall(def, opts) {\n\t\tif (Array.isArray(def)) {\n\t\t\treturn this.Promise.all(def.map(item => this.call(item.action, item.params, item.options || opts)));\n\n\t\t} else if (utils.isObject(def)) {\n\t\t\tlet results = {};\n\t\t\tlet promises = Object.keys(def).map(name => {\n\t\t\t\tconst item = def[name];\n\t\t\t\tconst options = item.options || opts;\n\t\t\t\treturn this.call(item.action, item.params, options).then(res => results[name] = res);\n\t\t\t});\n\n\t\t\tlet p = this.Promise.all(promises);\n\n\t\t\t// Pointer to Context\n\t\t\tp.ctx = promises.map(promise => promise.ctx);\n\n\t\t\treturn p.then(() => results);\n\t\t} else {\n\t\t\treturn this.Promise.reject(new E.MoleculerServerError(\"Invalid calling definition.\", 500, \"INVALID_PARAMETERS\"));\n\t\t}\n\t}\n\n\n\t/**\n\t * Emit an event (grouped & balanced global event)\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise<any>}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\temit(eventName, payload, opts) {\n\t\tif (Array.isArray(opts) || utils.isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\tconst promises = [];\n\n\t\tconst ctx = this.ContextFactory.create(this, null, payload, opts);\n\t\tctx.eventName = eventName;\n\t\tctx.eventType = \"emit\";\n\t\tctx.eventGroups = opts.groups;\n\n\t\tthis.logger.debug(`Emit '${eventName}' event`+ (opts.groups ? ` to '${opts.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\t// Call local/internal subscribers\n\t\tif (/^\\$/.test(eventName))\n\t\t\tthis.localBus.emit(eventName, payload);\n\n\t\tif (!this.options.disableBalancer) {\n\n\t\t\tconst endpoints = this.registry.events.getBalancedEndpoints(eventName, opts.groups);\n\n\t\t\t// Grouping remote events (reduce the network traffic)\n\t\t\tconst groupedEP = {};\n\n\t\t\tendpoints.forEach(([ep, group]) => {\n\t\t\t\tif (ep.id == this.nodeID) {\n\t\t\t\t\t// Local service, call handler\n\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\tpromises.push(this.registry.events.callEventHandler(newCtx));\n\t\t\t\t} else {\n\t\t\t\t\t// Remote service\n\t\t\t\t\tconst e = groupedEP[ep.id];\n\t\t\t\t\tif (e)\n\t\t\t\t\t\te.groups.push(group);\n\t\t\t\t\telse\n\t\t\t\t\t\tgroupedEP[ep.id] = {\n\t\t\t\t\t\t\tep,\n\t\t\t\t\t\t\tgroups: [group]\n\t\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.transit) {\n\t\t\t\t// Remote service\n\t\t\t\t_.forIn(groupedEP, item => {\n\t\t\t\t\tconst newCtx = ctx.copy(item.ep);\n\t\t\t\t\tnewCtx.eventGroups = item.groups;\n\t\t\t\t\tpromises.push(this.transit.sendEvent(newCtx));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this.Promise.all(promises);\n\n\t\t} else if (this.transit) {\n\t\t\t// Disabled balancer case\n\t\t\tlet groups = opts.groups;\n\n\t\t\tif (!groups || groups.length == 0) {\n\t\t\t\t// Apply to all groups\n\t\t\t\tgroups = this.getEventGroups(eventName);\n\t\t\t}\n\n\t\t\tif (groups.length == 0)\n\t\t\t\treturn this.Promise.resolve();\n\n\t\t\tctx.eventGroups = groups;\n\t\t\treturn this.transit.sendEvent(ctx);\n\t\t}\n\t}\n\n\t/**\n\t * Broadcast an event for all local & remote services\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tbroadcast(eventName, payload, opts) {\n\t\tif (Array.isArray(opts) || utils.isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\tconst promises = [];\n\n\t\tthis.logger.debug(`Broadcast '${eventName}' event`+ (opts.groups ? ` to '${opts.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\tif (this.transit) {\n\t\t\tconst ctx = this.ContextFactory.create(this, null, payload, opts);\n\t\t\tctx.eventName = eventName;\n\t\t\tctx.eventType = \"broadcast\";\n\t\t\tctx.eventGroups = opts.groups;\n\n\t\t\tif (!this.options.disableBalancer) {\n\t\t\t\tconst endpoints = this.registry.events.getAllEndpoints(eventName, opts.groups);\n\n\t\t\t\t// Send to remote services\n\t\t\t\tendpoints.forEach(ep => {\n\t\t\t\t\tif (ep.id != this.nodeID) {\n\t\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\t\tpromises.push(this.transit.sendEvent(newCtx));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Disabled balancer case\n\t\t\t\tlet groups = opts.groups;\n\n\t\t\t\tif (!groups || groups.length == 0) {\n\t\t\t\t\t// Apply to all groups\n\t\t\t\t\tgroups = this.getEventGroups(eventName);\n\t\t\t\t}\n\n\t\t\t\tif (groups.length == 0)\n\t\t\t\t\treturn; // Return here because balancer disabled, so we can't call the local services.\n\n\t\t\t\tconst endpoints = this.registry.events.getAllEndpoints(eventName, groups);\n\n\t\t\t\t// Return here because balancer disabled, so we can't call the local services.\n\t\t\t\treturn this.Promise.all(endpoints.map(ep => {\n\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\tnewCtx.eventGroups = groups;\n\t\t\t\t\treturn this.transit.sendEvent(newCtx);\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\t// Send to local services\n\t\tpromises.push(this.broadcastLocal(eventName, payload, opts));\n\n\t\treturn this.Promise.all(promises);\n\t}\n\n\t/**\n\t * Broadcast an event for all local services\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} groups\n\t * @returns\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tbroadcastLocal(eventName, payload, opts) {\n\t\tif (Array.isArray(opts) || utils.isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\tthis.logger.debug(`Broadcast '${eventName}' local event`+ (opts.groups ? ` to '${opts.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\t// Call internal subscribers\n\t\tif (/^\\$/.test(eventName))\n\t\t\tthis.localBus.emit(eventName, payload);\n\n\t\tconst ctx = this.ContextFactory.create(this, null, payload, opts);\n\t\tctx.eventName = eventName;\n\t\tctx.eventType = \"broadcastLocal\";\n\t\tctx.eventGroups = opts.groups;\n\n\t\treturn this.emitLocalServices(ctx);\n\t}\n\n\t/**\n\t * Send ping to a node (or all nodes if nodeID is null)\n\t *\n\t * @param {String|Array<String>?} nodeID\n\t * @param {Number?} timeout\n\t * @returns {Promise}\n\t * @memberof ServiceBroker\n\t */\n\tping(nodeID, timeout = 2000) {\n\t\tif (this.transit && this.transit.connected) {\n\t\t\tif (utils.isString(nodeID)) {\n\t\t\t\t// Ping a single node\n\t\t\t\treturn new this.Promise(resolve => {\n\n\t\t\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t\t\tthis.localBus.off(\"$node.pong\", handler);\n\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t}, timeout);\n\n\t\t\t\t\tconst handler = pong => {\n\t\t\t\t\t\tif (pong.nodeID == nodeID) {\n\t\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\t\tthis.localBus.off(\"$node.pong\", handler);\n\t\t\t\t\t\t\tresolve(pong);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.localBus.on(\"$node.pong\", handler);\n\n\t\t\t\t\tthis.transit.sendPing(nodeID);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tconst pongs = {};\n\t\t\t\tlet nodes = nodeID;\n\t\t\t\tif (!nodes) {\n\t\t\t\t\tnodes = this.registry.getNodeList({ onlyAvailable: true })\n\t\t\t\t\t\t.filter(node => node.id != this.nodeID)\n\t\t\t\t\t\t.map(node => node.id);\n\t\t\t\t}\n\n\t\t\t\tnodes.forEach(id => pongs[id] = null);\n\t\t\t\tconst processing = new Set(nodes);\n\n\t\t\t\t// Ping multiple nodes\n\t\t\t\treturn new this.Promise(resolve => {\n\n\t\t\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t\t\tthis.localBus.off(\"$node.pong\", handler);\n\t\t\t\t\t\tresolve(pongs);\n\t\t\t\t\t}, timeout);\n\n\t\t\t\t\tconst handler = pong => {\n\t\t\t\t\t\tpongs[pong.nodeID] = pong;\n\t\t\t\t\t\tprocessing.delete(pong.nodeID);\n\n\t\t\t\t\t\tif (processing.size == 0) {\n\t\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\t\tthis.localBus.off(\"$node.pong\", handler);\n\t\t\t\t\t\t\tresolve(pongs);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.localBus.on(\"$node.pong\", handler);\n\n\t\t\t\t\tnodes.forEach(id => this.transit.sendPing(id));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn this.Promise.resolve(nodeID ? null : []);\n\t}\n\n\t/**\n\t * Get local node health status\n\t *\n\t * @returns {Promise}\n\t * @memberof ServiceBroker\n\t */\n\tgetHealthStatus() {\n\t\treturn H.getHealthStatus(this);\n\t}\n\n\t/**\n\t * Get local node info.\n\t *\n\t * @returns\n\t * @memberof ServiceBroker\n\t */\n\tgetLocalNodeInfo() {\n\t\treturn this.registry.getLocalNodeInfo();\n\t}\n\n\t/**\n\t * Get event groups by event name\n\t *\n\t * @param {String} eventName\n\t * @returns\n\t * @memberof ServiceBroker\n\t */\n\tgetEventGroups(eventName) {\n\t\treturn this.registry.events.getGroups(eventName);\n\t}\n\n\t/**\n\t * Has registered event listener for an event name?\n\t *\n\t * @param {String} eventName\n\t * @returns {boolean}\n\t */\n\thasEventListener(eventName) {\n\t\treturn this.registry.events.getAllEndpoints(eventName).length > 0;\n\t}\n\n\t/**\n\t * Get all registered event listener for an event name.\n\t *\n\t * @param {String} eventName\n\t * @returns {Array<Object>}\n\t */\n\tgetEventListeners(eventName) {\n\t\treturn this.registry.events.getAllEndpoints(eventName);\n\t}\n\n\t/**\n\t * Emit event to local nodes. It is called from transit when a remote event received\n\t * or from `broadcastLocal`\n\t *\n\t * @param {Context} ctx\n\t * @returns\n\t * @memberof ServiceBroker\n\t */\n\temitLocalServices(ctx) {\n\t\treturn this.registry.events.emitLocalServices(ctx);\n\t}\n\n\t/**\n\t * Set the current Context to the async storage.\n\t *\n\t * @param {Context} ctx\n\t * @memberof ServiceBroker\n\t *\n\tsetCurrentContext(ctx) {\n\t\tthis.scope.setSessionData(ctx);\n\t}*/\n\n\t/**\n\t * Get the current Context from the async storage.\n\t *\n\t * @returns {Context?}\n\t * @memberof ServiceBroker\n\t *\n\tgetCurrentContext() {\n\t\treturn this.scope.getSessionData();\n\t}*/\n\n\t/**\n\t * Get node overall CPU usage\n\t *\n\t * @returns {Promise<object>}\n\t * @memberof ServiceBroker\n\t */\n\tgetCpuUsage() {\n\t\treturn cpuUsage();\n\t}\n\n\t/**\n\t * Generate an UUID.\n\t *\n\t * @returns {String} uuid\n\t */\n\tgenerateUid() {\n\t\tif (this.options.uidGenerator)\n\t\t\treturn this.options.uidGenerator.call(this, this);\n\n\t\treturn utils.generateToken();\n\t}\n\n\n\t/**\n\t * Get the Constructor name of any object if it exists\n\t * @param {any} obj\n\t * @returns {string}\n\t *\n\t */\n\tgetConstructorName(obj) {\n\t\tlet target = obj.prototype;\n\t\tif (target && target.constructor && target.constructor.name){\n\t\t\treturn target.constructor.name;\n\t\t}\n\t\tif (obj.constructor && obj.constructor.name){\n\t\t\treturn obj.constructor.name;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Ensure the service schema will be prototype of ServiceFactory;\n\t *\n\t * @param {any} schema\n\t * @returns {string}\n\t *\n\t */\n\tnormalizeSchemaConstructor(schema) {\n\t\tif (Object.prototype.isPrototypeOf.call(this.ServiceFactory, schema)) {\n\t\t\treturn schema;\n\t\t}\n\t\t// Sometimes the schame was loaded from another node_module or is a object copy.\n\t\t// Then we will check if the constructor name is the same, asume that is a derivate object\n\t\t// and adjust the prototype of the schema.\n\t\tlet serviceName = this.getConstructorName(this.ServiceFactory);\n\t\tlet target = this.getConstructorName(schema);\n\t\tif (serviceName === target){\n\t\t\tObject.setPrototypeOf(schema, this.ServiceFactory);\n\t\t\treturn schema;\n\t\t}\n\t\t// Depending how the schema was create the correct constructor name (from base class) will be locate on __proto__.\n\t\ttarget = this.getConstructorName(schema.__proto__);\n\t\tif (serviceName === target){\n\t\t\tObject.setPrototypeOf(schema.__proto__, this.ServiceFactory);\n\t\t\treturn schema;\n\t\t}\n\t\t// This is just to handle some idiosyncrasies from Jest.\n\t\tif (schema._isMockFunction){\n\t\t\ttarget = this.getConstructorName(schema.prototype.__proto__);\n\t\t\tif (serviceName === target){\n\t\t\t\tObject.setPrototypeOf(schema, this.ServiceFactory);\n\t\t\t\treturn schema;\n\t\t\t}\n\t\t}\n\t\treturn schema;\n\t}\n}\n\n/**\n * Version of Moleculer\n */\nServiceBroker.MOLECULER_VERSION = require(\"../package.json\").version;\nServiceBroker.prototype.MOLECULER_VERSION = ServiceBroker.MOLECULER_VERSION;\n\n/**\n * Version of Protocol\n */\nServiceBroker.PROTOCOL_VERSION = \"4\";\nServiceBroker.prototype.PROTOCOL_VERSION = ServiceBroker.PROTOCOL_VERSION;\n\n/**\n * Default configuration\n */\nServiceBroker.defaultOptions = defaultOptions;\n\nmodule.exports = ServiceBroker;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst {\n\tCIRCUIT_CLOSE,\n\tCIRCUIT_HALF_OPEN,\n\tCIRCUIT_HALF_OPEN_WAIT,\n\tCIRCUIT_OPEN\n} = require(\"./src/constants\");\n\nmodule.exports = {\n\tServiceBroker: require(\"./src/service-broker\"),\n\tLoggers: require(\"./src/loggers\"),\n\tService: require(\"./src/service\"),\n\tContext: require(\"./src/context\"),\n\n\tCachers: require(\"./src/cachers\"),\n\n\tTransporters: require(\"./src/transporters\"),\n\tSerializers: require(\"./src/serializers\"),\n\tStrategies: require(\"./src/strategies\"),\n\tValidators: require(\"./src/validators\"),\n\tValidator: require(\"./src/validators/fastest\"), // deprecated\n\tTracerExporters: require(\"./src/tracing/exporters\"),\n\tMetricTypes: require(\"./src/metrics/types\"),\n\tMetricReporters: require(\"./src/metrics/reporters\"),\n\tMETRIC: require(\"./src/metrics/constants\"),\n\n\tRegistry: require(\"./src/registry\"),\n\tDiscoverers: require(\"./src/registry/discoverers\"),\n\n\tMiddlewares: require(\"./src/middlewares\"),\n\n\tErrors: require(\"./src/errors\"),\n\n\tRunner: require(\"./src/runner\"),\n\tUtils: require(\"./src/utils\"),\n\n\tCIRCUIT_CLOSE,\n\tCIRCUIT_HALF_OPEN,\n\tCIRCUIT_HALF_OPEN_WAIT,\n\tCIRCUIT_OPEN,\n\n\tMOLECULER_VERSION: require(\"./src/service-broker\").MOLECULER_VERSION,\n\tPROTOCOL_VERSION: require(\"./src/service-broker\").PROTOCOL_VERSION\n};\n"],"names":["CIRCUIT_CLOSE","CIRCUIT_HALF_OPEN","CIRCUIT_HALF_OPEN_WAIT","CIRCUIT_OPEN","_process","Process","queueMicrotask","nextTick","handler","args","memoryUsage","performance","memory","rss","heapTotal","Number","MAX_SAFE_INTEGER","heapUsed","external","totalJSHeapSize","usedJSHeapSize","_getActiveHandles","_getActiveRequests","setTimeout","require$$0","PACKET_UNKNOWN","PACKET_EVENT","PACKET_REQUEST","PACKET_RESPONSE","PACKET_DISCOVER","PACKET_INFO","PACKET_DISCONNECT","PACKET_HEARTBEAT","PACKET_PING","PACKET_PONG","PACKET_GOSSIP_REQ","PACKET_GOSSIP_RES","PACKET_GOSSIP_HELLO","DATATYPE_UNDEFINED","DATATYPE_NULL","DATATYPE_JSON","DATATYPE_BUFFER","Packet","[object Object]","type","target","payload","this","MoleculerError","ExtendableError","message","code","data","super","retryable","MoleculerRetryableError","MoleculerClientError","module","MoleculerServerError","ServiceNotFoundError","msg","nodeID","action","service","version","ServiceNotAvailableError","ValidationError","RequestTimeoutError","RequestSkippedError","RequestRejectedError","QueueIsFullError","MaxCallLevelError","level","ServiceSchemaError","BrokerOptionsError","GracefulStopTimeoutError","name","ProtocolVersionMismatchError","InvalidPacketDataError","BrokerDisconnectedError","stack","recreateError","err","Class","exports","TYPE_COUNTER","TYPE_GAUGE","TYPE_HISTOGRAM","TYPE_INFO","PROCESS_ARGUMENTS","PROCESS_PID","PROCESS_PPID","PROCESS_MEMORY_HEAP_SIZE_TOTAL","PROCESS_MEMORY_HEAP_SIZE_USED","PROCESS_MEMORY_RSS","PROCESS_MEMORY_EXTERNAL","PROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL","PROCESS_MEMORY_HEAP_SPACE_SIZE_USED","PROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE","PROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL","PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL","PROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL","PROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL","PROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL","PROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE","PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT","PROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY","PROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY","PROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE","PROCESS_UPTIME","PROCESS_INTERNAL_ACTIVE_HANDLES","PROCESS_INTERNAL_ACTIVE_REQUESTS","PROCESS_VERSIONS_NODE","PROCESS_EVENTLOOP_LAG_MIN","PROCESS_EVENTLOOP_LAG_AVG","PROCESS_EVENTLOOP_LAG_MAX","PROCESS_EVENTLOOP_LAG_COUNT","PROCESS_GC_TIME","PROCESS_GC_TOTAL_TIME","PROCESS_GC_EXECUTED_TOTAL","OS_MEMORY_FREE","OS_MEMORY_USED","OS_MEMORY_TOTAL","OS_UPTIME","OS_TYPE","OS_RELEASE","OS_HOSTNAME","OS_ARCH","OS_PLATFORM","OS_USER_UID","OS_USER_GID","OS_USER_USERNAME","OS_USER_HOMEDIR","OS_DATETIME_UNIX","OS_DATETIME_ISO","OS_DATETIME_UTC","OS_DATETIME_TZ_OFFSET","OS_NETWORK_ADDRESS","OS_NETWORK_MAC","OS_CPU_LOAD_1","OS_CPU_LOAD_5","OS_CPU_LOAD_15","OS_CPU_UTILIZATION","OS_CPU_USER","OS_CPU_SYSTEM","OS_CPU_TOTAL","OS_CPU_INFO_MODEL","OS_CPU_INFO_SPEED","OS_CPU_INFO_TIMES_USER","OS_CPU_INFO_TIMES_SYS","MOLECULER_NODE_TYPE","MOLECULER_NODE_VERSIONS_MOLECULER","MOLECULER_NODE_VERSIONS_LANG","MOLECULER_NODE_VERSIONS_PROTOCOL","MOLECULER_BROKER_NAMESPACE","MOLECULER_BROKER_STARTED","MOLECULER_BROKER_LOCAL_SERVICES_TOTAL","MOLECULER_BROKER_MIDDLEWARES_TOTAL","MOLECULER_REGISTRY_NODES_TOTAL","MOLECULER_REGISTRY_NODES_ONLINE_TOTAL","MOLECULER_REGISTRY_SERVICES_TOTAL","MOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL","MOLECULER_REGISTRY_ACTIONS_TOTAL","MOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL","MOLECULER_REGISTRY_EVENTS_TOTAL","MOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL","MOLECULER_REQUEST_TOTAL","MOLECULER_REQUEST_ACTIVE","MOLECULER_REQUEST_ERROR_TOTAL","MOLECULER_REQUEST_TIME","MOLECULER_REQUEST_LEVELS","MOLECULER_EVENT_EMIT_TOTAL","MOLECULER_EVENT_BROADCAST_TOTAL","MOLECULER_EVENT_BROADCASTLOCAL_TOTAL","MOLECULER_EVENT_RECEIVED_TOTAL","MOLECULER_EVENT_RECEIVED_ACTIVE","MOLECULER_EVENT_RECEIVED_ERROR_TOTAL","MOLECULER_EVENT_RECEIVED_TIME","MOLECULER_TRANSIT_PUBLISH_TOTAL","MOLECULER_TRANSIT_RECEIVE_TOTAL","MOLECULER_TRANSIT_REQUESTS_ACTIVE","MOLECULER_TRANSIT_STREAMS_SEND_ACTIVE","MOLECULER_TRANSIT_READY","MOLECULER_TRANSIT_CONNECTED","MOLECULER_TRANSIT_PONG_TIME","MOLECULER_TRANSIT_PONG_SYSTIME_DIFF","MOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL","MOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL","MOLECULER_TRANSPORTER_PACKETS_SENT_BYTES","MOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL","MOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES","MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE","MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL","MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE","MOLECULER_REQUEST_FALLBACK_TOTAL","MOLECULER_REQUEST_BULKHEAD_INFLIGHT","MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE","MOLECULER_EVENT_BULKHEAD_INFLIGHT","MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE","MOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL","MOLECULER_REQUEST_TIMEOUT_TOTAL","MOLECULER_CACHER_GET_TOTAL","MOLECULER_CACHER_GET_TIME","MOLECULER_CACHER_FOUND_TOTAL","MOLECULER_CACHER_SET_TOTAL","MOLECULER_CACHER_SET_TIME","MOLECULER_CACHER_DEL_TOTAL","MOLECULER_CACHER_DEL_TIME","MOLECULER_CACHER_CLEAN_TOTAL","MOLECULER_CACHER_CLEAN_TIME","MOLECULER_CACHER_EXPIRED_TOTAL","MOLECULER_DISCOVERER_REDIS_COLLECT_TOTAL","MOLECULER_DISCOVERER_REDIS_COLLECT_TIME","MOLECULER_DISCOVERER_ETCD_COLLECT_TOTAL","MOLECULER_DISCOVERER_ETCD_COLLECT_TIME","UNIT_BIT","UNIT_BYTE","UNIT_KILOBYTES","UNIT_MEGABYTE","UNIT_GIGABYTE","UNIT_TERRABYTE","UNIT_PETABYTE","UNIT_EXOBYTE","UNIT_NANOSECONDS","UNIT_MICROSECONDS","UNIT_MILLISECONDS","UNIT_SECONDS","UNIT_MINUTE","UNIT_HOUR","UNIT_DAY","UNIT_WEEK","UNIT_MONTH","UNIT_YEAR","UNIT_HANDLE","UNIT_CPU","UNIT_GHZ","UNIT_REQUEST","UNIT_CONNECTION","UNIT_PACKET","UNIT_MESSAGE","UNIT_STREAM","UNIT_EVENT","setInterval","_osLoadAvg","time","Math","floor","Date","now","init","avg","getCpuUsage","sampleTime","engine","RafPerf","performances","enabled","samplesCount","sampleDuration","Promise","resolve","reject","once","ratio","stop","Error","avgByCpu","cpus","length","currentTime","updateLoadAvg","usages","map","cpu","start","loadavg","value","cpuUsage","totalmem","freemem","os","lut","i","toString","RegexCache","Map","deprecateList","byteMultipliers","b","kb","mb","gb","tb","pow","pb","parseByteStringRe","TimeoutError","units","divisors","utils","isFunction","fn","isString","s","String","isObject","o","isPlainObject","Object","getPrototypeOf","prototype","flatten","arr","Array","reduce","call","a","concat","milli","val","d0","random","d1","d2","d3","item","idx","indexOf","splice","getNodeID","hostname","toLowerCase","process","pid","list","ilist","interfaces","networkInterfaces","iface","f","family","internal","push","address","isPromise","p","then","P","method","apply","arguments","delay","ms","res","timeout","timer","race","clearTimeout","catch","mapSeries","promFn","r","slice","filename","keys","require","cache","forEach","key","text","pattern","firstStarPosition","len","endsWith","substring","startsWith","lastIndexOf","origPattern","regex","get","replace","RegExp","set","test","prop","console","warn","kleur","yellow","bold","safetyObject","obj","options","JSON","parse","stringify","maxSafeObjectSize","Infinity","seen","WeakSet","objectType","constructor","size","has","add","circularReplacer","path","parts","split","part","shift","hasOwnProperty","dotSet","join","sep","prevPath","folder","currentPath","fs","existsSync","mkdirSync","v","isNaN","floatValue","results","exec","unit","parseFloat","parseInt","opts","registry","description","labelNames","aggregator","defaultAggregator","lastSnapshot","dirty","values","labels","hash","hashingLabels","changed","generateSnapshot","clearDirty","timestamp","setDirty","snapshot","metric","min","rate","lastValue","lastTickTime","tick","INTERVAL","unref","elapsedSec","diff","oneMinRate","abs","pick","BaseMetric","METRIC","update","MetricRate","from","GaugeMetric","sortAscending","setProp","k","HistogramMetric","linearBuckets","buckets","generateLinearBuckets","width","count","exponentialBuckets","generateExponentialBuckets","factor","isArray","defaultBuckets","sort","quantiles","defaultQuantiles","maxAgeSeconds","defaultMaxAgeSeconds","ageBuckets","defaultAgeBuckets","resetItem","_","sum","bucketValues","quantileValues","bound","generateItemSnapshot","assign","createBucketValues","TimeWindowQuantiles","ringBuckets","Bucket","currentBucket","rotate","clear","samples","mean","variance","stdDev","sqrt","max","q","ceil","Types","Base","require$$1","Counter","require$$2","Gauge","require$$3","Histogram","require$$4","Info","require$$5","TypeClass","n","find","getByName","register","match","defaultsDeep","includes","excludes","metricNamePrefix","metricNameSuffix","metricNameFormatter","labelNameFormatter","broker","logger","some","every","BaseReporter","interval","colors","onlyChanges","lastChanges","Set","print","gray","formatLabelName","magenta","filter","log","cyan","formatMetricName","pluralizeUnit","labelStr","labelsToStr","grey","green","toFixed","info","matchMetricName","eventName","broadcast","groups","sendEvent","debug","emit","Reporters","Console","CSV","Event","Datadog","require$$6","Prometheus","require$$7","StatsD","require$$8","opt","ReporterClass","v8","eventLoop","e","startGCWatcher","gc","on","stats","pause","increment","gctype","startEventLoopStats","registerCommonMetrics","argv","arg","index","ppid","versions","node","release","arch","platform","userInfo","getUserInfo","uid","gid","username","homedir","store","updateCommonMetrics","end","procMem","getHeapSpaceStatistics","space","space_name","space_size","space_used_size","space_available_size","physical_space_size","getHeapStatistics","stat","total_heap_size","total_heap_size_executable","total_physical_size","total_available_size","used_heap_size","heap_size_limit","malloced_memory","peak_malloced_memory","does_zap_garbage","uptime","freeMem","totalMem","usedMem","getNetworkInterfaces","interface","mac","d","valueOf","toISOString","toUTCString","getTimezoneOffset","load","sense","num","duration","first","times","second","third","first_idle","idle","first_total","user","nice","sys","irq","second_idle","second_total","third_idle","per_usage","model","speed","METRIC_NAME_REGEXP","METRIC_LABEL_REGEXP","getLogger","collectProcessMetrics","env","NODE_ENV","collectInterval","reporter","reporters","compact","reporterNames","getConstructorName","collectTimer","clearInterval","all","MetricClass","getMetric","decrement","observe","reset","resetAll","hrtime","delta","metricChanged","types","toObject","CounterMetric","HistrogramMetric","InfoMetric","Transform","transporter","metrics","instanceID","tx","discoverer","pendingRequests","pendingReqStreams","pendingResStreams","packets","sent","bytes","received","connected","disconnecting","isReady","wrappedMessageHandler","cmd","packet","messageHandler","publish","wrapMethod","afterConnect","bind","send","receive","reverse","__connectResolve","registerMoleculerMetrics","isMetricsEnabled","wasReconnect","sendLocalNodeInfo","makeSubscriptions","discoverAllNodes","broadcastLocal","doConnect","reconnectStarted","errorHandler","disableReconnect","connect","graceFul","localNodeDisconnected","disconnect","localNodeReady","subscribing","E","ver","PROTOCOL_VERSION","disableVersionCheck","sender","actual","fatal","requestHandler","responseHandler","eventHandler","processRemoteNodeInfo","remoteNodeDisconnected","heartbeatReceived","sendPong","processPong","error","event","started","ctx","ContextFactory","id","setParams","contextParamsCloning","eventGroups","eventType","meta","tracing","parentID","requestID","caller","emitLocalServices","pass","undefined","stream","_handleIncomingRequestStream","endpoint","_getLocalActionEndpoint","setEndpoint","params","sendResponse","isNew","seq","objectMode","transform","chunk","encoding","done","$prevSeq","$pool","_createErrFromPayload","delete","write","Buffer","nextSeq","nextPacket","setImmediate","req","_handleIncomingResponseStream","removePendingRequest","success","maxQueueSize","limit","_sendRequest","isStream","readable","pipe","request","readableObjectMode","_readableState","nodeName","publishCatch","chunks","maxChunkSize","ch","copy","resume","_createPayloadErrorField","needAck","disableBalancer","makeBalancedSubscriptions","services","ipList","client","config","metadata","generateUid","arrived","elapsedTime","timeDiff","round","targetNodeID","localNode","topic","subscribe","prepublish","BaseStrategy","counter","sampleCount","lowLatency","collectCount","pingInterval","brokerStopped","hostAvgLatency","hostMap","transit","localBus","listenerCount","addNode","removeHostMap","discovery","removeHostLatency","updateLatency","sendPing","pingHosts","hosts","host","nodeList","nodes","getHostLatency","historicLatency","avgLatency","latency","minEp","minLatency","ep","epLatency","shardKey","vnodes","ringSize","cacheSize","LRU","maxAge","needRebuild","ring","getKeyFromContext","rebuild","getNodeIDByKey","cached","hashNum","getHash","found","ringLen","crypto","createHash","digest","total","j","Strategies","RoundRobin","Random","CpuUsage","Latency","Shard","isPrototypeOf","StrategyClass","heartbeatInterval","heartbeatTimeout","disableHeartbeatChecks","disableOfflineNodeRemoving","cleanOfflineNodesTimeout","heartbeatTimer","checkNodesTimer","offlineTimer","startHeartbeatTimers","stopHeartbeatTimers","beat","checkRemoteNodes","checkOfflineNodes","updateLocalInfo","sendHeartbeat","toArray","local","available","lastHeartbeatTime","disconnected","discoverNode","heartbeat","processNodeInfo","sendDisconnectPacket","isUnexpected","BaseDiscoverer","discoverNodes","getLocalNodeInfo","sendNodeInfo","Discoverers","Local","Etcd3","Redis","DiscovererClass","port","udpAddress","rawInfo","cpuSeq","offlineSince","isReconnected","newSeq","newVal","getIpList","createLocalNode","Node","MOLECULER_VERSION","langVersion","registerServices","reconnected","updateMetrics","unregisterServicesByNode","unexpected","removePendingRequestByNodeID","onlyAvailable","withServices","omit","fullName","settings","actions","events","svc","removeFromArray","ServiceItem","equals","onlyLocal","skipInternal","withActions","withEvents","grouping","forIn","protected","dependencies","remove","removeByService","group","EndPointFactory","StrategyFactory","strategyOptions","strategy","endpoints","localEndpoints","setLocalEndpoints","ret","select","hasLocal","nextLocal","isAvailable","preferLocal","epList","destroy","state","Endpoint","EndpointFactory","EventEndpoint","groupName","strategyFactory","EndpointList","next","uniq","groupNames","uniqBy","isBroadcast","promises","newCtx","callEventHandler","removeByNodeID","withEndpoints","hasAvailable","ActionEndpoint","actionName","NodeCatalog","ServiceCatalog","ActionCatalog","EventCatalog","onlineCount","registerActions","registerEvents","regenerateLocalRawInfo","servicesChanged","serviceList","prevActions","prevEvents","ServiceFactory","getVersionedFullName","unregisterAction","unregisterEvent","exist","unregisterService","visibility","checkActionVisibility","middlewares","wrapHandler","remoteHandler","addAction","getEndpointByNodeID","removeAllByNodeID","addEvent","incSeq","getLocalNodeServices","force","BaseLogger","createLogger","loggerFactory","mod","toUpperCase","m","LEVELS","moduleColors","formatter","objectPrinter","autoPadding","maxPrefixLength","util","inspect","showHidden","depth","breakLength","POSITIVE_INFINITY","levelColorStr","red","inverse","getColor","padEnd","charCodeAt","repeat","bindings","modColorName","getNextColor","c","moduleColorName","printArgs","ts","prefixLen","substr","padLeft","render","str","FormattedLogger","getLogLevel","levelIdx","getFormatter","pargs","Loggers","Formatted","Bunyan","Debug","File","Log4js","Pino","require$$9","Winston","require$$10","LoggerClass","noop","cwd","appenders","globalLogLevel","logLevel","app","appender","_prepareStackTrace","prepareStackTrace","site","getFileName","lineNumber","getLineNumber","columnNumber","getColumnNumber","methodName","getMethodName","functionName","getFunctionName","getBindingsKey","logHandlers","getLogHandler","registeredHooks","newLogEntry","callSyncHandlers","paramName","self","localAction","check","compile","localEvent","BaseValidator","validator","Validator","schema","validate","Validators","Fastest","ValidatorClass","ttl","keygen","maxParamsLength","prefix","namespace","keyPrefix","_hashedKey","_generateKeyFromObject","getParamMetaValue","prefixLength","base64Hash","defaultKeygen","lock","isEnabledFunction","cacheKey","getCacheKey","cachePromise","staleTime","getWithTTL","tryLock","unlock","result","del","cachedResult","content","locked","BaseCacher","_lock","Lock","checkTTL","clone","cloneDeep","clean","timeEnd","expire","matches","acquire","isLocked","updateAgeOnGet","prune","Cachers","Memory","MemoryLRU","CacherClass","hasBuiltInBalancer","topics","deserialize","incomingMessage","getTopicName","serialize","balanced","unsubscribeFromBalancedCommands","subscribeBalancedRequest","subscribeBalancedEvent","publishBalancedEvent","publishBalancedRequest","serializer","buf","EventEmitter2","bus","wildcard","maxListeners","Transporter","global","subscriptions","onConnected","off","t","Transporters","Fake","NATS","MQTT","AMQP","AMQP10","Kafka","STAN","TCP","require$$11","TransporterClass","convertDataToTransport","online","offline","convertDataFromTransport","field","fieldType","isBuffer","BaseSerializer","Serializers","Avro","MsgPack","ProtoBuf","Thrift","Notepack","SerializerClass","getClientInfo","getCpuInfo","load1","load5","load15","cores","utilization","getMemoryInfo","mem","free","percent","getOsInfo","getProcessInfo","getNetworkInterfacesInfo","ip","getDateTimeInfo","iso","utc","net","wrapActionErrorHandler","defineProperty","writable","enumerable","wrapEventErrorHandler","fflate","deflateSync","inflateSync","gzip","gunzip","zlibSync","unzlibSync","parseByteString","promisify","makeDirs","ActionHook","callHook","hook","callErrorHook","sanitizeHooks","hooks","h","rawName","beforeAllHook","before","afterAllHook","after","errorAllHook","beforeHook","afterHook","errorHook","actionBeforeHook","actionAfterHook","actionErrorHook","Bulkhead","bulkhead","queue","currentInFlight","callNext","concurrency","ContextTracker","removeContext","_trackedContexts","wrapTrackerMiddleware","tracking","addContext","waitingForActiveContexts","timedOut","checkForContexts","remoteAction","serviceStopping","$shutdownTimeout","shutdownTimeout","stopping","CircuitBreaker","windowTimer","createWindowTimer","windowTime","failures","resetStore","getEpState","C","cbTimer","affectedNodeID","circuitClose","checkThreshold","minRequestCount","threshold","halfOpen","halfOpenTime","trip","wrapCBMiddleware","circuitBreaker","halfOpenWait","failure","CircuitBreakerStore","Timeout","wrapTimeoutMiddleware","actionTimeout","requestTimeout","startHrTime","Retry","wrapRetryMiddleware","retryPolicy","attempts","retries","_retryAttempts","span","setError","addTags","retryAttempts","finishSpan","maxDelay","Fallback","wrapFallbackMiddleware","fallbackResponse","fallbackResult","handleContextFallback","fallback","ErrorHandler","Metrics","getActionHandler","actionDef","errorName","errorCode","errorType","transitMessageHandler","transporterSend","transporterReceive","Tracing","tracer","isTracingEnabled","getCurrentTraceID","getActiveSpanID","tags","callingLevel","remoteCall","callerNodeID","globalActionTags","actionTags","spanName","startSpan","traceID","sampled","fromCache","response","globalEventTags","eventTags","Debounce","debounce","Throttle","throttle","lastInvoke","HotReload","require$$12","Transmit","Encryption","password","algorithm","iv","encrypter","createCipheriv","createCipher","final","decrypter","createDecipheriv","createDecipher","Compression","compress","decompress","zlib","readInt8","Debugging","TransitLogger","targetFolder","saveToFile","getOwnPropertyNames","writeFile","coloringSend","logPacketData","extension","packetFilter","coloringReceive","logFn","transitPublish","ActionLogger","coloringRequest","logParams","logResponse","logMeta","whitelist","coloringResponse","coloringError","callingOpts","isWhiteListed","p2","mw","Middlewares","def","bindTo","convertToString","pp","flattenTags","errorFields","humanize","BaseTraceExporter","gaugeWidth","spans","children","parentItem","printRequest","removeSpanWithChildren","spanID","child","left","gstart","gstop","gw","p1","p3","caption","main","parents","last","spanItem","mainItem","mainSpan","w","indent","getSpanIndent","getCaption","getAlignedTexts","startTime","finishTime","drawLine","drawGauge","printSpanTime","drawTableTop","getTraceInfo","truncatedID","line","drawHorizonalLine","drawTableBottom","sendStartSpan","sendFinishSpan","spanConverter","defaultTags","flush","generateTracingData","newSpan","errorToObject","generateMetricPayload","processExtraMetrics","parent","endTime","assignExtraMetrics","scope","window","fetch","baseURL","ZIPKIN_URL","payloadOptions","shared","body","headers","Content-Type","status","statusText","makePayload","serviceName","kind","traceId","convertID","parentId","localEndpoint","remoteEndpoint","annotations","convertTime","span.type","ipv4","NEW_RELIC_TRACE_API_URL","insertKey","Api-Key","Data-Format","Data-Format-Version","Exporters","EventLegacy","Jaeger","Zipkin","NewRelic","ExporterClass","tracesPerSecond","lastTime","balance","maxBalance","cost","nodeLoadTime","getNanoSeconds","loadNs","loadMs","defProp","instance","propName","readOnly","priority","shouldSample","logs","spanStarted","fields","elapsed","spanFinished","Tracer","exporter","sampling","minPriority","stackTrace","sampleCounter","rateLimiter","RateLimiter","exporters","exporterNames","parentOpts","parentSpan","Span","invokeExporter","wrapToHander","wrapToArray","isNewSignature","Service","parseServiceSchema","originalSchema","mixins","applyMixins","merged","callMiddlewareHookSync","$noVersionPrefix","serviceSpecification","_getPublicSettings","methods","_createMethod","innerAction","_createAction","wrappedHandler","createPrivateActionEndpoint","create","innerEvent","_createEvent","_serviceSpecification","_init","$secureSettings","created","addLocalService","callMiddlewareHook","waitForServices","$dependencyTimeout","$dependencyInterval","dependencyInterval","registerLocalService","stopped","$noServiceNamePrefix","$cache","methodDef","eventDef","functionArguments","__newSignature","context","serviceNames","mixedSchema","mixin","mergeSchemas","mixinSchema","svcSchema","mods","mergeSchemaSettings","mergeSchemaMetadata","mergeSchemaHooks","mergeSchemaActions","mergeSchemaMethods","mergeSchemaEvents","mergeSchemaLifecycleHandlers","mergeSchemaUniqArray","customFnName","mergeSchemaUnknown","src","srcSS","targetSS","uniqWith","isEqual","k2","modHook","resHook","srcAction","targetAction","modEvent","resEvent","mergeMeta","newMeta","Context","locals","_spanStack","ackID","cloning","paramsCloning","parentCtx","newParams","_opts","distTimeout","maxCallLevel","mcall","isActive","finish","findIndex","sp","custom","stylize","inner","toJSON","MetricRegistry","defaultOptions","uidGenerator","cacher","internalServices","internalMiddlewares","hotReload","replCommands","replDelimiter","skipProcessEventRegistration","ServiceBroker","polyfillPromise","generateToken","LoggerFactory","MiddlewareHandler","Registry","serializerName","validatorName","registerMiddlewares","Transit","txName","callWithoutBalancer","registerInternalServices","_closeFn","exit","setMaxListeners","userMiddlewares","prevCount","middleware","createService","destroyService","_start","ready","_stop","close","removeListener","repl","delimiter","customCommands","callHandlers","isEnabled","props","ns","needExit","fileMask","serviceFiles","glob","sync","loadService","filePath","fName","basename","default","normalizeSchemaConstructor","_restartService","__filename","schemaMods","registryItem","serviceVersion","getLocalService","localService","optional","convert","getNodeList","getServiceList","getActionList","getEventList","health","getHealthStatus","rules","items","x","hasService","getActionEndpointByNodeId","getActionEndpoints","errMsg","findNextActionEndpoint","getFirst","promise","getBalancedEndpoints","groupedEP","getEventGroups","getAllEndpoints","pong","pongs","processing","H","getGroups","setPrototypeOf","__proto__","_isMockFunction","TracerExporters","MetricTypes","MetricReporters","require$$13","require$$14","require$$15","require$$16","require$$17","Errors","require$$18","Runner","require$$19","Utils","require$$20"],"mappings":"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"}