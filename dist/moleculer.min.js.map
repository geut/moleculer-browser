{"version":3,"file":"moleculer.min.js","sources":["../src/moleculer/src/constants.js","../src/process.js","../src/timeout.js","../src/moleculer/src/packets.js","../src/moleculer/src/errors.js","../src/moleculer/src/metrics/constants.js","../src/interval.js","../node_modules/kleur/index.js","../src/cpu-usage.js","../src/os.js","../src/moleculer/src/utils.js","../src/moleculer/src/metrics/types/base.js","../src/moleculer/src/metrics/rates.js","../src/moleculer/src/metrics/types/gauge.js","../src/moleculer/src/metrics/types/counter.js","../src/moleculer/src/metrics/types/histogram.js","../src/moleculer/src/metrics/types/info.js","../src/moleculer/src/metrics/types/index.js","../src/moleculer/src/metrics/reporters/base.js","../src/moleculer/src/metrics/reporters/console.js","../src/no-impl.js","../src/moleculer/src/metrics/reporters/event.js","../src/moleculer/src/metrics/reporters/index.js","../src/moleculer/src/metrics/commons.js","../src/moleculer/src/cpu-usage.js","../src/moleculer/src/metrics/registry.js","../src/moleculer/src/metrics/index.js","../src/moleculer/src/transit.js","../src/moleculer/src/strategies/base.js","../src/moleculer/src/strategies/round-robin.js","../src/moleculer/src/strategies/random.js","../src/moleculer/src/strategies/latency.js","../src/moleculer/src/strategies/shard.js","../src/moleculer/src/strategies/index.js","../src/moleculer/src/registry/discoverers/base.js","../src/moleculer/src/registry/discoverers/local.js","../src/moleculer/src/registry/discoverers/index.js","../src/moleculer/src/registry/node.js","../src/moleculer/src/registry/node-catalog.js","../src/moleculer/src/registry/service-item.js","../src/moleculer/src/registry/service-catalog.js","../src/moleculer/src/registry/endpoint-list.js","../src/moleculer/src/registry/endpoint.js","../src/moleculer/src/registry/endpoint-event.js","../src/moleculer/src/registry/event-catalog.js","../src/moleculer/src/registry/endpoint-action.js","../src/moleculer/src/registry/action-catalog.js","../src/moleculer/src/registry/registry.js","../src/moleculer/src/registry/index.js","../src/moleculer/src/loggers/base.js","../src/moleculer/src/loggers/formatted.js","../src/moleculer/src/loggers/console.js","../src/moleculer/src/loggers/index.js","../src/moleculer/src/logger-factory.js","../src/moleculer/src/validators/base.js","../src/moleculer/src/validators/fastest.js","../src/moleculer/src/validators/index.js","../src/moleculer/src/cachers/base.js","../src/moleculer/src/lock.js","../src/moleculer/src/cachers/memory.js","../src/moleculer/src/cachers/memory-lru.js","../src/moleculer/src/cachers/index.js","../src/moleculer/src/transporters/base.js","../src/moleculer/src/transporters/fake.js","../src/moleculer/src/transporters/index.js","../src/moleculer/src/serializers/base.js","../src/moleculer/src/serializers/json.js","../src/moleculer/src/serializers/index.js","../src/moleculer/src/health.js","../src/moleculer/src/middlewares/action-hook.js","../src/moleculer/src/middlewares/bulkhead.js","../src/moleculer/src/middlewares/context-tracker.js","../src/moleculer/src/middlewares/circuit-breaker.js","../src/moleculer/src/middlewares/timeout.js","../src/moleculer/src/middlewares/retry.js","../src/moleculer/src/middlewares/fallback.js","../src/moleculer/src/middlewares/error-handler.js","../src/moleculer/src/middlewares/metrics.js","../src/moleculer/src/middlewares/tracing.js","../src/zlib.js","../src/moleculer/src/middlewares/transmit/compression.js","../src/moleculer/src/middlewares/debugging/transit-logger.js","../src/moleculer/src/middlewares/debugging/action-logger.js","../src/moleculer/src/middlewares/index.js","../src/moleculer/src/middlewares/debounce.js","../src/moleculer/src/middlewares/throttle.js","../src/moleculer/src/middlewares/transmit/encryption.js","../src/moleculer/src/middleware.js","../src/moleculer/src/tracing/exporters/base.js","../src/moleculer/src/tracing/exporters/console.js","../src/moleculer/src/tracing/exporters/event.js","../src/moleculer/src/tracing/exporters/event-legacy.js","../src/fetch.js","../src/moleculer/src/tracing/exporters/zipkin.js","../src/moleculer/src/tracing/exporters/newrelic.js","../src/moleculer/src/tracing/exporters/index.js","../src/moleculer/src/tracing/rate-limiter.js","../src/moleculer/src/tracing/now.js","../src/moleculer/src/tracing/span.js","../src/moleculer/src/tracing/tracer.js","../src/moleculer/src/tracing/index.js","../src/moleculer/src/service.js","../src/moleculer/src/context.js","../src/moleculer/src/internals.js","../src/moleculer/src/service-broker.js","../src/moleculer/index.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = {\n\n\t// Circuit-breaker states\n\tCIRCUIT_CLOSE: \t\t\t\t\"close\",\n\tCIRCUIT_HALF_OPEN: \t\t\t\"half_open\",\n\tCIRCUIT_HALF_OPEN_WAIT: \t\"half_open_wait\",\n\tCIRCUIT_OPEN: \t\t\t\t\"open\"\n\n};\n","/* global performance */\nconst _process = require('bfs-process')\n\nif (typeof queueMicrotask !== 'undefined') {\n  _process.nextTick = function nextTick (handler, ...args) {\n    queueMicrotask(() => handler(...args))\n  }\n}\n\n// memoryUsage\n_process.memoryUsage = () => {\n  if (!performance && !performance.memory) {\n    return {\n      rss: 0,\n      heapTotal: Number.MAX_SAFE_INTEGER,\n      heapUsed: 0,\n      external: 0\n    }\n  }\n\n  const { memory } = performance\n\n  return {\n    rss: 0,\n    heapTotal: memory.totalJSHeapSize,\n    heapUsed: memory.usedJSHeapSize,\n    external: 0\n  }\n}\n\n_process._getActiveHandles = function () {\n  return []\n}\n\n_process._getActiveRequests = function () {\n  return []\n}\n\nmodule.exports = _process\n","const { setTimeout } = require('timers-browserify')\n\nmodule.exports = setTimeout\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n// Packet types\nconst PACKET_UNKNOWN\t\t= \"???\";\nconst PACKET_EVENT \t\t\t= \"EVENT\";\nconst PACKET_REQUEST \t\t= \"REQ\";\nconst PACKET_RESPONSE\t\t= \"RES\";\nconst PACKET_DISCOVER \t\t= \"DISCOVER\";\nconst PACKET_INFO \t\t\t= \"INFO\";\nconst PACKET_DISCONNECT \t= \"DISCONNECT\";\nconst PACKET_HEARTBEAT \t\t= \"HEARTBEAT\";\nconst PACKET_PING \t\t\t= \"PING\";\nconst PACKET_PONG \t\t\t= \"PONG\";\n\nconst PACKET_GOSSIP_REQ\t\t= \"GOSSIP_REQ\";\nconst PACKET_GOSSIP_RES\t\t= \"GOSSIP_RES\";\nconst PACKET_GOSSIP_HELLO\t= \"GOSSIP_HELLO\";\n\nconst DATATYPE_UNDEFINED = 0;\nconst DATATYPE_NULL = 1;\nconst DATATYPE_JSON = 2;\nconst DATATYPE_BUFFER = 3;\n\n/**\n * Packet for transporters\n *\n * @class Packet\n */\nclass Packet {\n\t/**\n\t * Creates an instance of Packet.\n\t *\n\t * @param {String} type\n\t * @param {String} target\n\t * @param {any} payload\n\t *\n\t * @memberof Packet\n\t */\n\tconstructor(type, target, payload) {\n\t\tthis.type = type || PACKET_UNKNOWN;\n\t\tthis.target = target;\n\t\tthis.payload = payload || {};\n\t}\n}\n\nmodule.exports = {\n\tPACKET_UNKNOWN,\n\tPACKET_EVENT,\n\tPACKET_REQUEST,\n\tPACKET_RESPONSE,\n\tPACKET_DISCOVER,\n\tPACKET_INFO,\n\tPACKET_DISCONNECT,\n\tPACKET_HEARTBEAT,\n\tPACKET_PING,\n\tPACKET_PONG,\n\tPACKET_GOSSIP_REQ,\n\tPACKET_GOSSIP_RES,\n\tPACKET_GOSSIP_HELLO,\n\n\tDATATYPE_UNDEFINED,\n\tDATATYPE_NULL,\n\tDATATYPE_JSON,\n\tDATATYPE_BUFFER,\n\n\tPacket\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst ExtendableError = require(\"es6-error\");\n\n/**\n * Custom Moleculer Error class\n *\n * @class MoleculerError\n * @extends {ExtendableError}\n */\nclass MoleculerError extends ExtendableError {\n\t/**\n\t * Creates an instance of MoleculerError.\n\t *\n\t * @param {String?} message\n\t * @param {Number?} code\n\t * @param {String?} type\n\t * @param {any} data\n\t *\n\t * @memberof MoleculerError\n\t */\n\tconstructor(message, code, type, data) {\n\t\tsuper(message);\n\t\tthis.code = code || 500;\n\t\tthis.type = type;\n\t\tthis.data = data;\n\t\tthis.retryable = false;\n\t}\n}\n\n/**\n * Custom Moleculer Error class for retryable errors.\n *\n * @class MoleculerRetryableError\n * @extends {MoleculerError}\n */\nclass MoleculerRetryableError extends MoleculerError {\n\t/**\n\t * Creates an instance of MoleculerRetryableError.\n\t *\n\t * @param {String?} message\n\t * @param {Number?} code\n\t * @param {String?} type\n\t * @param {any} data\n\t *\n\t * @memberof MoleculerRetryableError\n\t */\n\tconstructor(message, code, type, data) {\n\t\tsuper(message);\n\t\tthis.code = code || 500;\n\t\tthis.type = type;\n\t\tthis.data = data;\n\t\tthis.retryable = true;\n\t}\n}\n\n/**\n * Moleculer Error class for Broker disconnections which is retryable.\n *\n * @class MoleculerServerError\n * @extends {MoleculerRetryableError}\n */\nclass BrokerDisconnectedError extends MoleculerRetryableError {\n\tconstructor() {\n\t\tsuper(\"The broker's transporter has disconnected. Please try again when a connection is reestablished.\", 502, \"BAD_GATEWAY\");\n\t\t// Stack trace is hidden because it creates a lot of logs and, in this case, won't help users find the issue\n\t\tthis.stack = \"\";\n\t}\n}\n\n/**\n * Moleculer Error class for server error which is retryable.\n *\n * @class MoleculerServerError\n * @extends {MoleculerRetryableError}\n */\nclass MoleculerServerError extends MoleculerRetryableError {\n}\n\n/**\n * Moleculer Error class for client errors which is not retryable.\n *\n * @class MoleculerClientError\n * @extends {MoleculerError}\n */\nclass MoleculerClientError extends MoleculerError {\n\t/**\n\t * Creates an instance of MoleculerClientError.\n\t *\n\t * @param {String?} message\n\t * @param {Number?} code\n\t * @param {String?} type\n\t * @param {any} data\n\t *\n\t * @memberof MoleculerClientError\n\t */\n\tconstructor(message, code, type, data) {\n\t\tsuper(message, code || 400, type, data);\n\t}\n}\n\n\n/**\n * 'Service not found' Error message\n *\n * @class ServiceNotFoundError\n * @extends {MoleculerRetryableError}\n */\nclass ServiceNotFoundError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of ServiceNotFoundError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof ServiceNotFoundError\n\t */\n\tconstructor(data = {}) {\n\t\tlet msg;\n\t\tif (data.nodeID && data.action)\n\t\t\tmsg = `Service '${data.action}' is not found on '${data.nodeID}' node.`;\n\t\telse if (data.action)\n\t\t\tmsg = `Service '${data.action}' is not found.`;\n\n\t\tif (data.service && data.version)\n\t\t\tmsg = `Service '${data.version}.${data.service}' not found.`;\n\t\telse if (data.service)\n\t\t\tmsg = `Service '${data.service}' not found.`;\n\n\t\tsuper(msg, 404, \"SERVICE_NOT_FOUND\", data);\n\t}\n}\n\n/**\n * 'Service not available' Error message\n *\n * @class ServiceNotAvailableError\n * @extends {MoleculerRetryableError}\n */\nclass ServiceNotAvailableError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of ServiceNotAvailableError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof ServiceNotAvailableError\n\t */\n\tconstructor(data) {\n\t\tlet msg;\n\t\tif (data.nodeID)\n\t\t\tmsg = `Service '${data.action}' is not available on '${data.nodeID}' node.`;\n\t\telse\n\t\t\tmsg = `Service '${data.action}' is not available.`;\n\n\t\tsuper(msg, 404, \"SERVICE_NOT_AVAILABLE\", data);\n\t}\n}\n\n/**\n * 'Request timed out' Error message. Retryable.\n *\n * @class RequestTimeoutError\n * @extends {MoleculerRetryableError}\n */\nclass RequestTimeoutError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of RequestTimeoutError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof RequestTimeoutError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Request is timed out when call '${data.action}' action on '${data.nodeID}' node.`, 504, \"REQUEST_TIMEOUT\", data);\n\t}\n}\n\n/**\n * 'Request skipped for timeout' Error message\n *\n * @class RequestSkippedError\n * @extends {MoleculerError}\n */\nclass RequestSkippedError extends MoleculerError {\n\t/**\n\t * Creates an instance of RequestSkippedError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof RequestSkippedError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Calling '${data.action}' is skipped because timeout reached on '${data.nodeID}' node.`, 514, \"REQUEST_SKIPPED\", data);\n\t\tthis.retryable = false;\n\t}\n}\n\n/**\n * 'Request rejected' Error message. Retryable.\n *\n * @class RequestRejectedError\n * @extends {MoleculerRetryableError}\n */\nclass RequestRejectedError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of RequestRejectedError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof RequestRejectedError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Request is rejected when call '${data.action}' action on '${data.nodeID}' node.`, 503, \"REQUEST_REJECTED\", data);\n\t}\n}\n\n/**\n * 'Queue is full' error message. Retryable.\n *\n * @class QueueIsFullError\n * @extends {MoleculerRetryableError}\n */\nclass QueueIsFullError extends MoleculerRetryableError {\n\t/**\n\t * Creates an instance of QueueIsFullError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof QueueIsFullError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Queue is full. Request '${data.action}' action on '${data.nodeID}' node is rejected.`, 429, \"QUEUE_FULL\", data);\n\t}\n}\n\n/**\n * 'Parameters of action call validation error\n *\n * @class ValidationError\n * @extends {MoleculerClientError}\n */\nclass ValidationError extends MoleculerClientError {\n\t/**\n\t * Creates an instance of ValidationError.\n\t *\n\t * @param {String} message\n\t * @param {String} type\n\t * @param {any} data\n\t *\n\t * @memberof ValidationError\n\t */\n\tconstructor(message, type, data) {\n\t\tsuper(message, 422, type || \"VALIDATION_ERROR\", data);\n\t}\n}\n\n/**\n * 'Max request call level!' Error message\n *\n * @class MaxCallLevelError\n * @extends {MoleculerError}\n */\nclass MaxCallLevelError extends MoleculerError {\n\t/**\n\t * Creates an instance of MaxCallLevelError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof MaxCallLevelError\n\t */\n\tconstructor(data) {\n\t\tsuper(`Request level is reached the limit (${data.level}) on '${data.nodeID}' node.`, 500, \"MAX_CALL_LEVEL\", data);\n\t\tthis.retryable = false;\n\t}\n}\n\n/**\n * Custom Moleculer Error class for Service schema errors\n *\n * @class ServiceSchemaError\n * @extends {Error}\n */\nclass ServiceSchemaError extends MoleculerError {\n\t/**\n\t * Creates an instance of ServiceSchemaError.\n\t *\n\t * @param {String} msg\n\t * @param {Object} data\n\t * @memberof ServiceSchemaError\n\t */\n\tconstructor(msg, data) {\n\t\tsuper(msg, 500, \"SERVICE_SCHEMA_ERROR\", data);\n\t}\n}\n\n/**\n * Custom Moleculer Error class for broker option errors\n *\n * @class BrokerOptionsError\n * @extends {Error}\n */\nclass BrokerOptionsError extends MoleculerError {\n\t/**\n\t * Creates an instance of BrokerOptionsError.\n\t *\n\t * @param {String} msg\n\t * @param {Object} data\n\t * @memberof BrokerOptionsError\n\t */\n\tconstructor(msg, data) {\n\t\tsuper(msg, 500, \"BROKER_OPTIONS_ERROR\", data);\n\t}\n}\n\n/**\n * Custom Moleculer Error class for Graceful stopping\n *\n * @class GracefulStopTimeoutError\n * @extends {Error}\n */\nclass GracefulStopTimeoutError extends MoleculerError {\n\t/**\n\t * Creates an instance of GracefulStopTimeoutError.\n\t *\n\t * @param {Object?} data\n\t * @memberof GracefulStopTimeoutError\n\t */\n\tconstructor(data) {\n\t\tif (data && data.service)  {\n\t\t\tsuper(`Unable to stop '${data.service.name}' service gracefully.`, 500, \"GRACEFUL_STOP_TIMEOUT\", data && data.service ? {\n\t\t\t\tname: data.service.name,\n\t\t\t\tversion: data.service.version\n\t\t\t} : null);\n\t\t} else {\n\t\t\tsuper(\"Unable to stop ServiceBroker gracefully.\", 500, \"GRACEFUL_STOP_TIMEOUT\");\n\t\t}\n\t}\n}\n\n/**\n * Protocol version is mismatch\n *\n * @class ProtocolVersionMismatchError\n * @extends {Error}\n */\nclass ProtocolVersionMismatchError extends MoleculerError {\n\t/**\n\t * Creates an instance of ProtocolVersionMismatchError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof ProtocolVersionMismatchError\n\t */\n\tconstructor(data) {\n\t\tsuper(\"Protocol version mismatch.\", 500, \"PROTOCOL_VERSION_MISMATCH\", data);\n\t}\n}\n\n/**\n * Invalid packet format error\n *\n * @class InvalidPacketDataError\n * @extends {Error}\n */\nclass InvalidPacketDataError extends MoleculerError {\n\t/**\n\t * Creates an instance of InvalidPacketDataError.\n\t *\n\t * @param {Object} data\n\t *\n\t * @memberof InvalidPacketDataError\n\t */\n\tconstructor(data) {\n\t\tsuper(\"Invalid packet data.\", 500, \"INVALID_PACKET_DATA\", data);\n\t}\n}\n\n/**\n * Recreate an error from a transferred payload `err`\n *\n * @param {Error} err\n * @returns {MoleculerError}\n */\nfunction recreateError(err) {\n\tconst Class = module.exports[err.name];\n\tif (Class) {\n\t\tswitch(err.name) {\n\t\t\tcase \"MoleculerError\": return new Class(err.message, err.code, err.type, err.data);\n\t\t\tcase \"MoleculerRetryableError\": return new Class(err.message, err.code, err.type, err.data);\n\t\t\tcase \"MoleculerServerError\": return new Class(err.message, err.code, err.type, err.data);\n\t\t\tcase \"MoleculerClientError\": return new Class(err.message, err.code, err.type, err.data);\n\n\t\t\tcase \"ValidationError\": return new Class(err.message, err.type, err.data);\n\n\t\t\tcase \"ServiceNotFoundError\": return new Class(err.data);\n\t\t\tcase \"ServiceNotAvailableError\": return new Class(err.data);\n\t\t\tcase \"RequestTimeoutError\": return new Class(err.data);\n\t\t\tcase \"RequestSkippedError\": return new Class(err.data);\n\t\t\tcase \"RequestRejectedError\": return new Class(err.data);\n\t\t\tcase \"QueueIsFullError\": return new Class(err.data);\n\t\t\tcase \"MaxCallLevelError\": return new Class(err.data);\n\t\t\tcase \"GracefulStopTimeoutError\": return new Class(err.data);\n\t\t\tcase \"ProtocolVersionMismatchError\": return new Class(err.data);\n\t\t\tcase \"InvalidPacketDataError\": return new Class(err.data);\n\n\t\t\tcase \"ServiceSchemaError\":\n\t\t\tcase \"BrokerOptionsError\": return new Class(err.message, err.data);\n\t\t}\n\t}\n}\n\n\nmodule.exports = {\n\tMoleculerError,\n\tMoleculerRetryableError,\n\tMoleculerServerError,\n\tMoleculerClientError,\n\n\tServiceNotFoundError,\n\tServiceNotAvailableError,\n\n\tValidationError,\n\tRequestTimeoutError,\n\tRequestSkippedError,\n\tRequestRejectedError,\n\tQueueIsFullError,\n\tMaxCallLevelError,\n\n\tServiceSchemaError,\n\tBrokerOptionsError,\n\tGracefulStopTimeoutError,\n\n\tProtocolVersionMismatchError,\n\tInvalidPacketDataError,\n\n\tBrokerDisconnectedError,\n\n\trecreateError\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = {\n\n\t// --- METRIC TYPES ---\n\n\tTYPE_COUNTER:  \t\"counter\",\n\tTYPE_GAUGE:  \t\"gauge\",\n\tTYPE_HISTOGRAM: \"histogram\",\n\tTYPE_INFO:  \t\"info\",\n\n\t// --- METRICREGISTRY METRICS ---\n\n\t// MOLECULER_METRICS_COMMON_COLLECT_TOTAL: \"moleculer.metrics.common.collect.total\",\n\t// MOLECULER_METRICS_COMMON_COLLECT_TIME: \"moleculer.metrics.common.collect.time\",\n\n\t// --- PROCESS METRICS ---\n\n\tPROCESS_ARGUMENTS: \"process.arguments\",\n\n\tPROCESS_PID: \"process.pid\",\n\tPROCESS_PPID: \"process.ppid\",\n\n\tPROCESS_MEMORY_HEAP_SIZE_TOTAL: \"process.memory.heap.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_SIZE_USED: \"process.memory.heap.size.used\", // bytes\n\tPROCESS_MEMORY_RSS: \"process.memory.rss\", // bytes\n\tPROCESS_MEMORY_EXTERNAL: \"process.memory.external\", // bytes\n\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL: \"process.memory.heap.space.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_USED: \"process.memory.heap.space.size.used\", // bytes\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE: \"process.memory.heap.space.size.available\", // bytes\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL: \"process.memory.heap.space.size.physical\", // bytes\n\n\tPROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL: \"process.memory.heap.stat.heap.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL: \"process.memory.heap.stat.executable.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL: \"process.memory.heap.stat.physical.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL: \"process.memory.heap.stat.available.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE: \"process.memory.heap.stat.used.heap.size\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT: \"process.memory.heap.stat.heap.size.limit\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY: \"process.memory.heap.stat.mallocated.memory\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY: \"process.memory.heap.stat.peak.mallocated.memory\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE: \"process.memory.heap.stat.zap.garbage\",\n\n\tPROCESS_UPTIME: \"process.uptime\", // seconds\n\tPROCESS_INTERNAL_ACTIVE_HANDLES: \"process.internal.active.handles\",\n\tPROCESS_INTERNAL_ACTIVE_REQUESTS: \"process.internal.active.requests\",\n\n\tPROCESS_VERSIONS_NODE: \"process.versions.node\",\n\n\t// --- EVENT LOOP METRICS ---\n\n\tPROCESS_EVENTLOOP_LAG_MIN: \"process.eventloop.lag.min\", // msec\n\tPROCESS_EVENTLOOP_LAG_AVG: \"process.eventloop.lag.avg\", // msec\n\tPROCESS_EVENTLOOP_LAG_MAX: \"process.eventloop.lag.max\", // msec\n\tPROCESS_EVENTLOOP_LAG_COUNT: \"process.eventloop.lag.count\",\n\n\t// --- GARBAGE COLLECTOR METRICS ---\n\n\tPROCESS_GC_TIME: \"process.gc.time\", // nanoseconds\n\tPROCESS_GC_TOTAL_TIME: \"process.gc.total.time\", // milliseconds\n\tPROCESS_GC_EXECUTED_TOTAL: \"process.gc.executed.total\",\n\n\t// --- OS METRICS ---\n\n\tOS_MEMORY_FREE: \"os.memory.free\", // bytes\n\tOS_MEMORY_USED: \"os.memory.used\", // bytes\n\tOS_MEMORY_TOTAL: \"os.memory.total\", // bytes\n\tOS_UPTIME: \"os.uptime\", // seconds\n\tOS_TYPE: \"os.type\",\n\tOS_RELEASE: \"os.release\",\n\tOS_HOSTNAME: \"os.hostname\",\n\tOS_ARCH: \"os.arch\",\n\tOS_PLATFORM: \"os.platform\",\n\tOS_USER_UID: \"os.user.uid\",\n\tOS_USER_GID: \"os.user.gid\",\n\tOS_USER_USERNAME: \"os.user.username\",\n\tOS_USER_HOMEDIR: \"os.user.homedir\",\n\n\tOS_DATETIME_UNIX: \"os.datetime.unix\",\n\tOS_DATETIME_ISO: \"os.datetime.iso\",\n\tOS_DATETIME_UTC: \"os.datetime.utc\",\n\tOS_DATETIME_TZ_OFFSET: \"os.datetime.tz.offset\",\n\n\tOS_NETWORK_ADDRESS: \"os.network.address\",\n\tOS_NETWORK_MAC: \"os.network.mac\",\n\n\tOS_CPU_LOAD_1: \"os.cpu.load.1\",\n\tOS_CPU_LOAD_5: \"os.cpu.load.5\",\n\tOS_CPU_LOAD_15: \"os.cpu.load.15\",\n\tOS_CPU_UTILIZATION: \"os.cpu.utilization\",\n\n\tOS_CPU_USER: \"os.cpu.user\", // seconds\n\tOS_CPU_SYSTEM: \"os.cpu.system\", // seconds\n\n\tOS_CPU_TOTAL: \"os.cpu.total\",\n\tOS_CPU_INFO_MODEL: \"os.cpu.info.model\",\n\tOS_CPU_INFO_SPEED: \"os.cpu.info.speed\",\n\tOS_CPU_INFO_TIMES_USER: \"os.cpu.info.times.user\",\n\tOS_CPU_INFO_TIMES_SYS: \"os.cpu.info.times.sys\",\n\n\t// --- MOLECULER NODE METRICS ---\n\n\tMOLECULER_NODE_TYPE: \"moleculer.node.type\",\n\tMOLECULER_NODE_VERSIONS_MOLECULER: \"moleculer.node.versions.moleculer\",\n\tMOLECULER_NODE_VERSIONS_LANG: \"moleculer.node.versions.lang\",\n\tMOLECULER_NODE_VERSIONS_PROTOCOL: \"moleculer.node.versions.protocol\",\n\n\t// --- MOLECULER BROKER METRICS ---\n\n\tMOLECULER_BROKER_NAMESPACE: \"moleculer.broker.namespace\",\n\tMOLECULER_BROKER_STARTED: \"moleculer.broker.started\",\n\tMOLECULER_BROKER_LOCAL_SERVICES_TOTAL: \"moleculer.broker.local.services.total\",\n\tMOLECULER_BROKER_MIDDLEWARES_TOTAL: \"moleculer.broker.middlewares.total\",\n\n\t// --- MOLECULER REGISTRY METRICS ---\n\n\tMOLECULER_REGISTRY_NODES_TOTAL: \"moleculer.registry.nodes.total\",\n\tMOLECULER_REGISTRY_NODES_ONLINE_TOTAL: \"moleculer.registry.nodes.online.total\",\n\tMOLECULER_REGISTRY_SERVICES_TOTAL: \"moleculer.registry.services.total\",\n\tMOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL: \"moleculer.registry.service.endpoints.total\",\n\tMOLECULER_REGISTRY_ACTIONS_TOTAL: \"moleculer.registry.actions.total\",\n\tMOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL: \"moleculer.registry.action.endpoints.total\",\n\tMOLECULER_REGISTRY_EVENTS_TOTAL: \"moleculer.registry.events.total\",\n\tMOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL: \"moleculer.registry.event.endpoints.total\",\n\n\t// --- MOLECULER REQUEST METRICS ---\n\n\tMOLECULER_REQUEST_TOTAL: \"moleculer.request.total\",\n\tMOLECULER_REQUEST_ACTIVE: \"moleculer.request.active\",\n\tMOLECULER_REQUEST_ERROR_TOTAL: \"moleculer.request.error.total\",\n\tMOLECULER_REQUEST_TIME: \"moleculer.request.time\", //msec\n\tMOLECULER_REQUEST_LEVELS: \"moleculer.request.levels\",\n\t//MOLECULER_REQUEST_DIRECTCALL_TOTAL: \"moleculer.request.directcall.total\",\n\t//MOLECULER_REQUEST_MULTICALL_TOTAL: \"moleculer.request.multicall.total\",\n\n\t// --- MOLECULER EVENTS METRICS ---\n\n\tMOLECULER_EVENT_EMIT_TOTAL: \"moleculer.event.emit.total\",\n\tMOLECULER_EVENT_BROADCAST_TOTAL: \"moleculer.event.broadcast.total\",\n\tMOLECULER_EVENT_BROADCASTLOCAL_TOTAL: \"moleculer.event.broadcast-local.total\",\n\tMOLECULER_EVENT_RECEIVED_TOTAL: \"moleculer.event.received.total\",\n\tMOLECULER_EVENT_RECEIVED_ACTIVE: \"moleculer.event.received.active\",\n\tMOLECULER_EVENT_RECEIVED_ERROR_TOTAL: \"moleculer.event.received.error.total\",\n\tMOLECULER_EVENT_RECEIVED_TIME: \"moleculer.event.received.time\", //msec\n\n\t// --- MOLECULER TRANSIT METRICS ---\n\n\tMOLECULER_TRANSIT_PUBLISH_TOTAL: \"moleculer.transit.publish.total\",\n\tMOLECULER_TRANSIT_RECEIVE_TOTAL: \"moleculer.transit.receive.total\",\n\n\tMOLECULER_TRANSIT_REQUESTS_ACTIVE: \"moleculer.transit.requests.active\",\n\tMOLECULER_TRANSIT_STREAMS_SEND_ACTIVE: \"moleculer.transit.streams.send.active\",\n\t//MOLECULER_TRANSIT_STREAMS_RECEIVE_ACTIVE: \"moleculer.transit.streams.receive.active\",\n\tMOLECULER_TRANSIT_READY: \"moleculer.transit.ready\", // true/false\n\tMOLECULER_TRANSIT_CONNECTED: \"moleculer.transit.connected\", // true/false\n\n\tMOLECULER_TRANSIT_PONG_TIME: \"moleculer.transit.pong.time\", // true/false\n\tMOLECULER_TRANSIT_PONG_SYSTIME_DIFF: \"moleculer.transit.pong.systime-diff\", // true/false\n\n\tMOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL: \"moleculer.transit.orphan.response.total\",\n\n\t// --- MOLECULER TRANSPORTER METRICS ---\n\n\tMOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL: \"moleculer.transporter.packets.sent.total\",\n\tMOLECULER_TRANSPORTER_PACKETS_SENT_BYTES: \"moleculer.transporter.packets.sent.bytes\", // bytes\n\tMOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL: \"moleculer.transporter.packets.received.total\",\n\tMOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES: \"moleculer.transporter.packets.received.bytes\", // bytes\n\n\t// --- MOLECULER CIRCUIT BREAKER METRICS ---\n\n\tMOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE: \"moleculer.circuit-breaker.opened.active\",\n\tMOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL: \"moleculer.circuit-breaker.opened.total\",\n\tMOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE: \"moleculer.circuit-breaker.half-opened.active\",\n\n\t// --- MOLECULER FALLBACK METRICS ---\n\n\tMOLECULER_REQUEST_FALLBACK_TOTAL: \"moleculer.request.fallback.total\",\n\n\t// --- MOLECULER BULKHEAD METRICS ---\n\n\tMOLECULER_REQUEST_BULKHEAD_INFLIGHT: \"moleculer.request.bulkhead.inflight\",\n\tMOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE: \"moleculer.request.bulkhead.queue.size\",\n\n\tMOLECULER_EVENT_BULKHEAD_INFLIGHT: \"moleculer.event.bulkhead.inflight\",\n\tMOLECULER_EVENT_BULKHEAD_QUEUE_SIZE: \"moleculer.event.bulkhead.queue.size\",\n\n\t// --- MOLECULER RETRY METRICS ---\n\n\tMOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL: \"moleculer.request.retry.attempts.total\",\n\n\t// --- MOLECULER TIMEOUT METRICS ---\n\n\tMOLECULER_REQUEST_TIMEOUT_TOTAL: \"moleculer.request.timeout.total\",\n\n\t// --- MOLECULER CACHER METRICS ---\n\n\tMOLECULER_CACHER_GET_TOTAL: \"moleculer.cacher.get.total\",\n\tMOLECULER_CACHER_GET_TIME: \"moleculer.cacher.get.time\",\n\tMOLECULER_CACHER_FOUND_TOTAL: \"moleculer.cacher.found.total\",\n\tMOLECULER_CACHER_SET_TOTAL: \"moleculer.cacher.set.total\",\n\tMOLECULER_CACHER_SET_TIME: \"moleculer.cacher.set.time\",\n\tMOLECULER_CACHER_DEL_TOTAL: \"moleculer.cacher.del.total\",\n\tMOLECULER_CACHER_DEL_TIME: \"moleculer.cacher.del.time\",\n\tMOLECULER_CACHER_CLEAN_TOTAL: \"moleculer.cacher.clean.total\",\n\tMOLECULER_CACHER_CLEAN_TIME: \"moleculer.cacher.clean.time\",\n\tMOLECULER_CACHER_EXPIRED_TOTAL: \"moleculer.cacher.expired.total\",\n\n\tMOLECULER_DISCOVERER_REDIS_COLLECT_TOTAL: \"moleculer.discoverer.redis.collect.total\",\n\tMOLECULER_DISCOVERER_REDIS_COLLECT_TIME: \"moleculer.discoverer.redis.collect.time\",\n\n\tMOLECULER_DISCOVERER_ETCD_COLLECT_TOTAL: \"moleculer.discoverer.etcd.collect.total\",\n\tMOLECULER_DISCOVERER_ETCD_COLLECT_TIME: \"moleculer.discoverer.etcd.collect.time\",\n\n\t// --- COMMON UNITS ---\n\t// Inspired by https://docs.datadoghq.com/developers/metrics/#units\n\n\t// Bytes\n\tUNIT_BIT: \"bit\",\n\tUNIT_BYTE: \"byte\",\n\tUNIT_KILOBYTES: \"kilobyte\",\n\tUNIT_MEGABYTE: \"megabyte\",\n\tUNIT_GIGABYTE: \"gigabyte\",\n\tUNIT_TERRABYTE: \"terrabyte\",\n\tUNIT_PETABYTE: \"petabyte\",\n\tUNIT_EXOBYTE: \"exabyte\",\n\n\t// Time\n\tUNIT_NANOSECONDS: \"nanosecond\",\n\tUNIT_MICROSECONDS: \"microsecond\",\n\tUNIT_MILLISECONDS: \"millisecond\",\n\tUNIT_SECONDS: \"second\",\n\tUNIT_MINUTE: \"minute\",\n\tUNIT_HOUR: \"hour\",\n\tUNIT_DAY: \"day\",\n\tUNIT_WEEK: \"week\",\n\tUNIT_MONTH: \"month\",\n\tUNIT_YEAR: \"year\",\n\n\t// Process\n\tUNIT_HANDLE: \"handle\",\n\tUNIT_CPU: \"cpu\",\n\tUNIT_GHZ: \"GHz\",\n\n\t// Network\n\tUNIT_REQUEST: \"request\",\n\tUNIT_CONNECTION: \"connection\",\n\tUNIT_PACKET: \"packet\",\n\tUNIT_MESSAGE: \"message\",\n\tUNIT_STREAM: \"stream\",\n\tUNIT_EVENT: \"event\",\n};\n","const { setInterval } = require('timers-browserify')\n\nmodule.exports = setInterval\n","'use strict';\n\nlet FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY=true;\nif (typeof process !== 'undefined') {\n\t({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env);\n\tisTTY = process.stdout && process.stdout.isTTY;\n}\n\nconst $ = {\n\tenabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== 'dumb' && (\n\t\tFORCE_COLOR != null && FORCE_COLOR !== '0' || isTTY\n\t),\n\n\t// modifiers\n\treset: init(0, 0),\n\tbold: init(1, 22),\n\tdim: init(2, 22),\n\titalic: init(3, 23),\n\tunderline: init(4, 24),\n\tinverse: init(7, 27),\n\thidden: init(8, 28),\n\tstrikethrough: init(9, 29),\n\n\t// colors\n\tblack: init(30, 39),\n\tred: init(31, 39),\n\tgreen: init(32, 39),\n\tyellow: init(33, 39),\n\tblue: init(34, 39),\n\tmagenta: init(35, 39),\n\tcyan: init(36, 39),\n\twhite: init(37, 39),\n\tgray: init(90, 39),\n\tgrey: init(90, 39),\n\n\t// background colors\n\tbgBlack: init(40, 49),\n\tbgRed: init(41, 49),\n\tbgGreen: init(42, 49),\n\tbgYellow: init(43, 49),\n\tbgBlue: init(44, 49),\n\tbgMagenta: init(45, 49),\n\tbgCyan: init(46, 49),\n\tbgWhite: init(47, 49)\n};\n\nfunction run(arr, str) {\n\tlet i=0, tmp, beg='', end='';\n\tfor (; i < arr.length; i++) {\n\t\ttmp = arr[i];\n\t\tbeg += tmp.open;\n\t\tend += tmp.close;\n\t\tif (str.includes(tmp.close)) {\n\t\t\tstr = str.replace(tmp.rgx, tmp.close + tmp.open);\n\t\t}\n\t}\n\treturn beg + str + end;\n}\n\nfunction chain(has, keys) {\n\tlet ctx = { has, keys };\n\n\tctx.reset = $.reset.bind(ctx);\n\tctx.bold = $.bold.bind(ctx);\n\tctx.dim = $.dim.bind(ctx);\n\tctx.italic = $.italic.bind(ctx);\n\tctx.underline = $.underline.bind(ctx);\n\tctx.inverse = $.inverse.bind(ctx);\n\tctx.hidden = $.hidden.bind(ctx);\n\tctx.strikethrough = $.strikethrough.bind(ctx);\n\n\tctx.black = $.black.bind(ctx);\n\tctx.red = $.red.bind(ctx);\n\tctx.green = $.green.bind(ctx);\n\tctx.yellow = $.yellow.bind(ctx);\n\tctx.blue = $.blue.bind(ctx);\n\tctx.magenta = $.magenta.bind(ctx);\n\tctx.cyan = $.cyan.bind(ctx);\n\tctx.white = $.white.bind(ctx);\n\tctx.gray = $.gray.bind(ctx);\n\tctx.grey = $.grey.bind(ctx);\n\n\tctx.bgBlack = $.bgBlack.bind(ctx);\n\tctx.bgRed = $.bgRed.bind(ctx);\n\tctx.bgGreen = $.bgGreen.bind(ctx);\n\tctx.bgYellow = $.bgYellow.bind(ctx);\n\tctx.bgBlue = $.bgBlue.bind(ctx);\n\tctx.bgMagenta = $.bgMagenta.bind(ctx);\n\tctx.bgCyan = $.bgCyan.bind(ctx);\n\tctx.bgWhite = $.bgWhite.bind(ctx);\n\n\treturn ctx;\n}\n\nfunction init(open, close) {\n\tlet blk = {\n\t\topen: `\\x1b[${open}m`,\n\t\tclose: `\\x1b[${close}m`,\n\t\trgx: new RegExp(`\\\\x1b\\\\[${close}m`, 'g')\n\t};\n\treturn function (txt) {\n\t\tif (this !== void 0 && this.has !== void 0) {\n\t\t\tthis.has.includes(open) || (this.has.push(open),this.keys.push(blk));\n\t\t\treturn txt === void 0 ? this : $.enabled ? run(this.keys, txt+'') : txt+'';\n\t\t}\n\t\treturn txt === void 0 ? chain([open], [blk]) : $.enabled ? run([blk], txt+'') : txt+'';\n\t};\n}\n\nmodule.exports = $;\n","const cpus = require('cpus')\nconst RafPerf = require('raf-perf')\n\n// Simulate https://nodejs.org/api/os.html#os_os_loadavg\nconst _osLoadAvg = [\n  // 1 minute\n  {\n    time: Math.floor(Date.now() / 1000),\n    init: false,\n    avg: 0\n  },\n\n  // 5 minutes\n  {\n    time: Math.floor(Date.now() / 1000),\n    avg: 0\n  },\n\n  // 15 minutes\n  {\n    time: Math.floor(Date.now() / 1000),\n    avg: 0\n  }\n]\n\nfunction updateLoadAvg (avg) {\n  const currentTime = Math.floor(Date.now() / 1000)\n  if (!_osLoadAvg[0].init || (currentTime - _osLoadAvg[0].time) > 60) {\n    _osLoadAvg[0].init = true\n    _osLoadAvg[0].time = currentTime\n    _osLoadAvg[0].avg = avg\n  }\n\n  if ((currentTime - _osLoadAvg[1].time) > 60 * 5) {\n    _osLoadAvg[1].time = currentTime\n    _osLoadAvg[1].avg = avg\n  }\n\n  if ((currentTime - _osLoadAvg[2].time) > 60 * 15) {\n    _osLoadAvg[2].time = currentTime\n    _osLoadAvg[2].avg = avg\n  }\n}\n\nfunction loadavg () {\n  return _osLoadAvg.map(value => value.avg)\n}\n\n/**\n * getCpuUsage\n *\n * Simulate cpuUsage of the browser based on the FPS performance.\n *\n * rate 1 (60fps) -> 0% usage\n * rate 0.5 (30fps) -> 50% usage\n * rate 0 (0fps) -> 100% usage\n *\n * @param {Boolean=100} sampleTime\n * @returns {Promise<Result>}\n */\nfunction getCpuUsage (sampleTime = 100) {\n  const engine = new RafPerf({\n    performances: {\n      enabled: true,\n      samplesCount: 3,\n      sampleDuration: sampleTime\n    }\n  })\n\n  return new Promise((resolve, reject) => {\n    engine.once('perf', ratio => {\n      engine.stop()\n\n      if (!ratio) {\n        return reject(new Error('CpuUsage: ratio perf not found.'))\n      }\n\n      const avg = 100 - (ratio * 100)\n      const avgByCpu = avg / cpus().length\n\n      updateLoadAvg(avg)\n\n      resolve({\n        avg,\n        usages: cpus().map(cpu => avgByCpu)\n      })\n    })\n\n    engine.start()\n  })\n}\n\ngetCpuUsage.loadavg = loadavg\n\nmodule.exports = getCpuUsage\n","/* global performance */\n\nconst os = require('os-browserify')\nconst cpus = require('cpus')\nconst cpuUsage = require('./cpu-usage')\n\nos.cpus = cpus\nos.loadavg = cpuUsage.loadavg\nos.totalmem = () => performance ? performance.memory.totalJSHeapSize : 0\nos.freemem = () => performance ? performance.memory.totalJSHeapSize - performance.memory.usedJSHeapSize : 0\n\nmodule.exports = os\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst kleur\t\t= require(\"kleur\");\nconst os \t \t= require(\"os\");\nconst path \t \t= require(\"path\");\nconst fs \t \t= require(\"fs\");\nconst ExtendableError = require(\"es6-error\");\n\nconst lut = [];\nfor (let i=0; i<256; i++) { lut[i] = (i<16?\"0\":\"\")+(i).toString(16); }\n\nconst RegexCache = new Map();\n\nconst deprecateList = [];\n\nconst byteMultipliers = {\n\tb:  1,\n\tkb: 1 << 10,\n\tmb: 1 << 20,\n\tgb: 1 << 30,\n\ttb: Math.pow(1024, 4),\n\tpb: Math.pow(1024, 5),\n};\n// eslint-disable-next-line security/detect-unsafe-regex\nconst parseByteStringRe = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\nclass TimeoutError extends ExtendableError {}\n\n/**\n * Circular replacing of unsafe properties in object\n *\n * @param {Object=} options List of options to change circularReplacer behaviour\n * @param {number=} options.maxSafeObjectSize Maximum size of objects for safe object converting\n * @return {function(...[*]=)}\n */\nfunction circularReplacer(options = { maxSafeObjectSize: Infinity }) {\n\tconst seen = new WeakSet();\n\treturn function(key, value) {\n\t\tif (typeof value === \"object\" && value !== null) {\n\t\t\tconst objectType = value.constructor && value.constructor.name || typeof value;\n\n\t\t\tif (options.maxSafeObjectSize && \"length\" in value && value.length > options.maxSafeObjectSize) {\n\t\t\t\treturn `[${objectType} ${value.length}]`;\n\t\t\t}\n\n\t\t\tif (options.maxSafeObjectSize && \"size\" in value && value.size > options.maxSafeObjectSize) {\n\t\t\t\treturn `[${objectType} ${value.size}]`;\n\t\t\t}\n\n\t\t\tif (seen.has(value)) {\n\t\t\t\t//delete this[key];\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tseen.add(value);\n\t\t}\n\t\treturn value;\n\t};\n}\n\nconst units = [\"h\", \"m\", \"s\", \"ms\", \"μs\", \"ns\"];\nconst divisors = [60 * 60 * 1000, 60 * 1000, 1000, 1, 1e-3, 1e-6];\n\nconst utils = {\n\n\tisFunction(fn) {\n\t\treturn typeof fn === \"function\";\n\t},\n\n\tisString(s) {\n\t\treturn typeof s === \"string\" || s instanceof String;\n\t},\n\n\tisObject(o) {\n\t\treturn o !== null && typeof o === \"object\" && !(o instanceof String);\n\t},\n\n\tisPlainObject(o) {\n\t\treturn o !=null ? Object.getPrototypeOf(o) === Object.prototype || Object.getPrototypeOf(o) === null : false;\n\t},\n\n\tflatten(arr) {\n\t\treturn Array.prototype.reduce.call(arr, (a, b) => a.concat(b), []);\n\t},\n\n\thumanize(milli) {\n\t\tif (milli == null) return \"?\";\n\n\t\tfor (let i = 0; i < divisors.length; i++) {\n\t\t\tconst val = milli / divisors[i];\n\t\t\tif (val >= 1.0)\n\t\t\t\treturn \"\" + Math.floor(val) + units[i];\n\t\t}\n\n\t\treturn \"now\";\n\t},\n\n\t// Fast UUID generator: e7 https://jsperf.com/uuid-generator-opt/18\n\tgenerateToken() {\n\t\tconst d0 = Math.random()*0xffffffff|0;\n\t\tconst d1 = Math.random()*0xffffffff|0;\n\t\tconst d2 = Math.random()*0xffffffff|0;\n\t\tconst d3 = Math.random()*0xffffffff|0;\n\t\treturn lut[d0&0xff]+lut[d0>>8&0xff]+lut[d0>>16&0xff]+lut[d0>>24&0xff]+\"-\"+\n\t\t\tlut[d1&0xff]+lut[d1>>8&0xff]+\"-\"+lut[d1>>16&0x0f|0x40]+lut[d1>>24&0xff]+\"-\"+\n\t\t\tlut[d2&0x3f|0x80]+lut[d2>>8&0xff]+\"-\"+lut[d2>>16&0xff]+lut[d2>>24&0xff]+\n\t\t\tlut[d3&0xff]+lut[d3>>8&0xff]+lut[d3>>16&0xff]+lut[d3>>24&0xff];\n\t},\n\n\tremoveFromArray(arr, item) {\n\t\tif (!arr || arr.length == 0) return arr;\n\t\tconst idx = arr.indexOf(item);\n\t\tif (idx !== -1)\n\t\t\tarr.splice(idx, 1);\n\n\t\treturn arr;\n\t},\n\n\t/**\n\t * Get default NodeID (computerName)\n\t *\n\t * @returns\n\t */\n\tgetNodeID() {\n\t\treturn os.hostname().toLowerCase() + \"-\" + process.pid;\n\t},\n\n\t/**\n\t * Get list of local IPs\n\t *\n\t * @returns\n\t */\n\tgetIpList() {\n\t\tconst list = [];\n\t\tconst ilist = [];\n\t\tconst interfaces = os.networkInterfaces();\n\t\tfor (let iface in interfaces) {\n\t\t\tfor (let i in interfaces[iface]) {\n\t\t\t\tconst f = interfaces[iface][i];\n\t\t\t\tif (f.family === \"IPv4\") {\n\t\t\t\t\tif (f.internal) {\n\t\t\t\t\t\tilist.push(f.address);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist.push(f.address);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list.length > 0 ? list : ilist;\n\t},\n\n\t/**\n\t * Check the param is a Promise instance\n\t *\n\t * @param {any} p\n\t * @returns\n\t */\n\tisPromise(p) {\n\t\treturn (p != null && typeof p.then === \"function\");\n\t},\n\n\t/**\n\t * Polyfill a Promise library with missing Bluebird features.\n\t *\n\t * NOT USED & NOT TESTED YET !!!\n\t *\n\t * @param {PromiseClass} P\n\t */\n\tpolyfillPromise(P) {\n\t\tif (!utils.isFunction(P.method)) {\n\t\t\t// Based on https://github.com/petkaantonov/bluebird/blob/master/src/method.js#L8\n\t\t\tP.method = function(fn) {\n\t\t\t\treturn function() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst val = fn.apply(this, arguments);\n\t\t\t\t\t\treturn P.resolve(val);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\treturn P.reject(err);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\tif (!utils.isFunction(P.delay)) {\n\t\t\t// Based on https://github.com/petkaantonov/bluebird/blob/master/src/timers.js#L15\n\t\t\tP.delay = function(ms) {\n\t\t\t\treturn new P(resolve => setTimeout(resolve, +ms));\n\t\t\t};\n\t\t\tP.prototype.delay = function(ms) {\n\t\t\t\treturn this.then(res => P.delay(ms).then(() => res));\n\t\t\t\t//return this.then(res => new P(resolve => setTimeout(() => resolve(res), +ms)));\n\t\t\t};\n\t\t}\n\n\t\tif (!utils.isFunction(P.prototype.timeout)) {\n\t\t\tP.TimeoutError = TimeoutError;\n\n\t\t\tP.prototype.timeout = function(ms, message) {\n\t\t\t\tlet timer;\n\t\t\t\tconst timeout = new P((resolve, reject) => {\n\t\t\t\t\ttimer = setTimeout(() => reject(new P.TimeoutError(message)), +ms);\n\t\t\t\t});\n\n\t\t\t\treturn P.race([\n\t\t\t\t\ttimeout,\n\t\t\t\t\tthis\n\t\t\t\t])\n\t\t\t\t\t.then(value => {\n\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\tif (!utils.isFunction(P.mapSeries)) {\n\n\t\t\tP.mapSeries = function(arr, fn) {\n\t\t\t\tconst promFn = Promise.method(fn);\n\t\t\t\tconst res = [];\n\n\t\t\t\treturn arr.reduce((p, item, i) => {\n\t\t\t\t\treturn p.then(r => {\n\t\t\t\t\t\tres[i] = r;\n\t\t\t\t\t\treturn promFn(item, i);\n\t\t\t\t\t});\n\t\t\t\t}, P.resolve()).then(r => {\n\t\t\t\t\tres[arr.length] = r;\n\t\t\t\t\treturn res.slice(1);\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Clear `require` cache. Used for service hot reloading\n\t *\n\t * @param {String} filename\n\t */\n\tclearRequireCache(filename) {\n\t\t/* istanbul ignore next */\n\t\tObject.keys(require.cache).forEach(function(key) {\n\t\t\tif (key == filename) {\n\t\t\t\tdelete require.cache[key];\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * String matcher to handle dot-separated event/action names.\n\t *\n\t * @param {String} text\n\t * @param {String} pattern\n\t * @returns {Boolean}\n\t */\n\tmatch(text, pattern) {\n\t\t// Simple patterns\n\t\tif (pattern.indexOf(\"?\") == -1) {\n\n\t\t\t// Exact match (eg. \"prefix.event\")\n\t\t\tconst firstStarPosition = pattern.indexOf(\"*\");\n\t\t\tif (firstStarPosition == -1) {\n\t\t\t\treturn pattern === text;\n\t\t\t}\n\n\t\t\t// Eg. \"prefix**\"\n\t\t\tconst len = pattern.length;\n\t\t\tif (len > 2 && pattern.endsWith(\"**\") && firstStarPosition > len - 3) {\n\t\t\t\tpattern = pattern.substring(0, len - 2);\n\t\t\t\treturn text.startsWith(pattern);\n\t\t\t}\n\n\t\t\t// Eg. \"prefix*\"\n\t\t\tif (len > 1 && pattern.endsWith(\"*\") && firstStarPosition > len - 2) {\n\t\t\t\tpattern = pattern.substring(0, len - 1);\n\t\t\t\tif (text.startsWith(pattern)) {\n\t\t\t\t\treturn text.indexOf(\".\", len) == -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Accept simple text, without point character (*)\n\t\t\tif (len == 1 && firstStarPosition == 0) {\n\t\t\t\treturn text.indexOf(\".\") == -1;\n\t\t\t}\n\n\t\t\t// Accept all inputs (**)\n\t\t\tif (len == 2 && firstStarPosition == 0 && pattern.lastIndexOf(\"*\") == 1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Regex (eg. \"prefix.ab?cd.*.foo\")\n\t\tconst origPattern = pattern;\n\t\tlet regex = RegexCache.get(origPattern);\n\t\tif (regex == null) {\n\t\t\tif (pattern.startsWith(\"$\")) {\n\t\t\t\tpattern = \"\\\\\" + pattern;\n\t\t\t}\n\t\t\tpattern = pattern.replace(/\\?/g, \".\");\n\t\t\tpattern = pattern.replace(/\\*\\*/g, \"§§§\");\n\t\t\tpattern = pattern.replace(/\\*/g, \"[^\\\\.]*\");\n\t\t\tpattern = pattern.replace(/§§§/g, \".*\");\n\n\t\t\tpattern = \"^\" + pattern + \"$\";\n\n\t\t\t// eslint-disable-next-line security/detect-non-literal-regexp\n\t\t\tregex = new RegExp(pattern, \"\");\n\t\t\tRegexCache.set(origPattern, regex);\n\t\t}\n\t\treturn regex.test(text);\n\t},\n\n\t/**\n\t * Deprecate a method or property\n\t *\n\t * @param {Object|Function|String} prop\n\t * @param {String} msg\n\t */\n\tdeprecate(prop, msg) {\n\t\tif (arguments.length == 1)\n\t\t\tmsg = prop;\n\n\t\tif (deprecateList.indexOf(prop) === -1) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.warn(kleur.yellow().bold(`DeprecationWarning: ${msg}`));\n\t\t\tdeprecateList.push(prop);\n\t\t}\n\t},\n\n\t/**\n\t * Remove circular references & Functions from the JS object\n\t *\n\t * @param {Object|Array} obj\n\t * @param {Object=} options List of options to change circularReplacer behaviour\n\t * @param {number=} options.maxSafeObjectSize List of options to change circularReplacer behaviour\n\t * @returns {Object|Array}\n\t */\n\tsafetyObject(obj, options) {\n\t\treturn JSON.parse(JSON.stringify(obj, circularReplacer(options)));\n\t},\n\n\t/**\n\t * Sets a variable on an object based on its dot path.\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t * @param {*} value\n\t * @returns {Object}\n\t */\n\tdotSet(obj, path, value) {\n\t\tconst parts = path.split(\".\");\n\t\tconst part = parts.shift();\n\t\tif (parts.length > 0) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(obj, part)) {\n\t\t\t\tobj[part] = {};\n\t\t\t} else if (obj[part] == null) {\n\t\t\t\tobj[part] = {};\n\t\t\t} else {\n\t\t\t\tif (typeof obj[part] !== \"object\") {\n\t\t\t\t\tthrow new Error(\"Value already set and it's not an object\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj[part] = utils.dotSet(obj[part], parts.join(\".\"), value);\n\t\t\treturn obj;\n\t\t}\n\t\tobj[path] = value;\n\t\treturn obj;\n\t},\n\n\t/**\n\t * Make directories recursively\n\t * @param {String} p - directory path\n\t */\n\tmakeDirs(p) {\n\t\tp.split(path.sep)\n\t\t\t.reduce((prevPath, folder) => {\n\t\t\t\tconst currentPath = path.join(prevPath, folder, path.sep);\n\t\t\t\tif (!fs.existsSync(currentPath)) {\n\t\t\t\t\tfs.mkdirSync(currentPath);\n\t\t\t\t}\n\t\t\t\treturn currentPath;\n\t\t\t}, \"\");\n\t},\n\n\t/**\n\t * Parse a byte string to number of bytes. E.g \"1kb\" -> 1024\n\t * Credits: https://github.com/visionmedia/bytes.js\n\t *\n\t * @param {String} v\n\t * @returns {Number}\n\t */\n\tparseByteString(v) {\n\t\tif (typeof v === \"number\" && !isNaN(v)) {\n\t\t\treturn v;\n\t\t}\n\n\t\tif (typeof v !== \"string\") {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Test if the string passed is valid\n\t\tlet results = parseByteStringRe.exec(v);\n\t\tlet floatValue;\n\t\tlet unit = \"b\";\n\n\t\tif (!results) {\n\t\t\t// Nothing could be extracted from the given string\n\t\t\tfloatValue = parseInt(v, 10);\n\t\t\tif (Number.isNaN(floatValue))\n\t\t\t\treturn null;\n\n\t\t\tunit = \"b\";\n\t\t} else {\n\t\t\t// Retrieve the value and the unit\n\t\t\tfloatValue = parseFloat(results[1]);\n\t\t\tunit = results[4].toLowerCase();\n\t\t}\n\n\t\treturn Math.floor(byteMultipliers[unit] * floatValue);\n\t}\n};\n\nmodule.exports = utils;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Abstract Base Metric class.\n *\n * @class BaseMetric\n */\nclass BaseMetric {\n\n\t/**\n\t * Creates an instance of BaseMetric.\n\t *\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof BaseMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tthis.registry = registry;\n\t\tthis.type = opts.type;\n\t\tthis.name = opts.name;\n\t\tthis.description = opts.description;\n\t\tthis.labelNames = opts.labelNames || [];\n\t\tthis.unit = opts.unit;\n\t\tthis.aggregator = opts.aggregator || registry.opts.defaultAggregator;\n\n\t\tthis.lastSnapshot = null;\n\t\tthis.dirty = true;\n\n\t\tthis.values = new Map();\n\t}\n\n\t/**\n\t * Set dirty flag\n\t *\n\t * @memberof BaseMetric\n\t */\n\tsetDirty() {\n\t\tthis.dirty = true;\n\t}\n\n\t/**\n\t * Clear dirty flag\n\t *\n\t * @memberof BaseMetric\n\t */\n\tclearDirty() {\n\t\tthis.dirty = false;\n\t}\n\n\t/**\n\t * Get metric item by labels\n\t *\n\t * @param {Object?} labels\n\t * @returns {Object}\n\t * @memberof BaseMetric\n\t */\n\tget(labels) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\treturn this.values.get(hash);\n\t}\n\n\t/**\n\t * Reset item by labels\n\t *\n\t * @memberof BaseMetric\n\t */\n\treset(/*labels, timestamp*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Reset all items\n\t *\n\t * @memberof BaseMetric\n\t */\n\tresetAll(/*timestamp*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Clear metric values.\n\t *\n\t * @memberof BaseMetric\n\t */\n\tclear() {\n\t\tthis.values = new Map();\n\t\tthis.changed();\n\t}\n\n\t/**\n\t * Create a hash from label values. It will\n\t * be used as a key in Map.\n\t *\n\t * @param {Object} labels\n\t * @returns {String}\n\t * @memberof BaseMetric\n\t */\n\thashingLabels(labels) {\n\t\tif (this.labelNames.length == 0 || labels == null || typeof labels !== \"object\")\n\t\t\treturn \"\";\n\n\t\tconst parts = [];\n\t\tfor (let i = 0; i < this.labelNames.length; i++) {\n\t\t\tconst v = labels[this.labelNames[i]];\n\t\t\tif (typeof v == \"number\")\n\t\t\t\tparts.push(v);\n\t\t\telse if (typeof v === \"string\")\n\t\t\t\tparts.push(\"\\\"\" + v + \"\\\"\");\n\t\t\telse if (typeof v === \"boolean\")\n\t\t\t\tparts.push(\"\" + v);\n\t\t\telse\n\t\t\t\tparts.push(\"\");\n\t\t}\n\t\treturn parts.join(\"|\");\n\t}\n\n\t/**\n\t * Get a snapshot.\n\t *\n\t * @returns {Object}\n\t * @memberof BaseMetric\n\t */\n\tsnapshot() {\n\t\tif (!this.dirty && this.lastSnapshot)\n\t\t\treturn this.lastSnapshot;\n\n\t\tthis.lastSnapshot = this.generateSnapshot();\n\t\tthis.clearDirty();\n\n\t\treturn this.lastSnapshot;\n\t}\n\n\t/**\n\t * Generate a snapshot.\n\t *\n\t * @memberof BaseMetric\n\t */\n\tgenerateSnapshot() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Metric has been changed.\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t */\n\tchanged(value, labels, timestamp) {\n\t\tthis.setDirty();\n\t\tthis.registry.changed(this, value, labels, timestamp);\n\t}\n\n\t/**\n\t * Export to a POJO.\n\t */\n\ttoObject() {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tname: this.name,\n\t\t\tdescription: this.description,\n\t\t\tlabelNames: this.labelNames,\n\t\t\tunit: this.unit,\n\n\t\t\tvalues: this.snapshot()\n\t\t};\n\t}\n}\n\nmodule.exports = BaseMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst INTERVAL = 5;\nconst SECONDS_PER_MINUTE = 60.0;\n\n// https://github.com/dropwizard/metrics/blob/4.0-maintenance/metrics-core/src/main/java/com/codahale/metrics/EWMA.java\n/* istanbul ignore next\nfunction getAlpha(min) {\n\treturn 1 - Math.exp(-INTERVAL / SECONDS_PER_MINUTE / min);\n}\n*/\n\nclass MetricRate {\n\n\tconstructor(metric, item, min) {\n\t\tthis.metric = metric;\n\t\tthis.item = item;\n\t\tthis.min = min;\n\t\t//this.alpha = getAlpha(min);\n\n\t\tthis.rate = 0;\n\n\t\tthis.lastValue = 0;\n\t\tthis.lastTickTime = Date.now();\n\t\tthis.value = null;\n\n\t\tthis.timer = setInterval(() => this.tick(), INTERVAL * 1000).unref();\n\t}\n\n\tupdate(value) {\n\t\tthis.value = value;\n\t}\n\n\ttick() {\n\t\t// Get elapsed seconds\n\t\tconst now = Date.now();\n\t\tconst elapsedSec = (now - this.lastTickTime) / 1000;\n\t\tthis.lastTickTime = now;\n\n\t\t// Get difference between new and old value\n\t\tconst diff = this.value - this.lastValue;\n\t\tthis.lastValue = this.value;\n\n\t\t// Calculate the current requests/minute\n\t\tconst oneMinRate = diff / elapsedSec * SECONDS_PER_MINUTE;\n\n\t\t// Weighted calculation\n\t\tlet rate = this.rate + (oneMinRate - this.rate) * 0.5;\n\t\t// EWMA: const rate = this.rate + (this.alpha * (oneMinRate - this.rate));\n\n\t\t// Rounding\n\t\tif (Math.abs(rate) < 0.05) rate = 0;\n\t\tconst changed = Math.abs(rate - this.rate) > 0.01;\n\n\t\tthis.rate = rate;\n\n\t\tif (changed)\n\t\t\tthis.metric.changed(this.item.value, this.item.labels, now);\n\t}\n\n\treset() {\n\t\tthis.lastValue = 0;\n\t\tthis.value = null;\n\n\t\tthis.rate = 0;\n\t}\n\n}\nmodule.exports = MetricRate;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { pick } = require(\"lodash\");\nconst BaseMetric = require(\"./base\");\nconst METRIC = require(\"../constants\");\nconst MetricRate = require(\"../rates\");\n\n/**\n * Gauge metric class.\n *\n * @class GaugeMetric\n * @extends {BaseMetric}\n */\nclass GaugeMetric extends BaseMetric {\n\n\t/**\n\t * Creates an instance of GaugeMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof GaugeMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_GAUGE;\n\t\tthis.rate = opts.rate;\n\t}\n\n\t/**\n\t * Increment value\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} value\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\tincrement(labels, value, timestamp) {\n\t\tif (value == null)\n\t\t\tvalue = 1;\n\n\t\tconst item = this.get(labels);\n\t\treturn this.set((item ? item.value : 0) + value, labels, timestamp);\n\t}\n\n\t/**\n\t * Decrement value.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} value\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\tdecrement(labels, value, timestamp) {\n\t\tif (value == null)\n\t\t\tvalue = 1;\n\n\t\tconst item = this.get(labels);\n\t\treturn this.set((item ? item.value : 0) - value, labels, timestamp);\n\t}\n\n\t/**\n\t * Set value.\n\t *\n\t * @param {Number?} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\tset(value, labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tlet item = this.values.get(hash);\n\t\tif (item) {\n\t\t\tif (item.value != value) {\n\t\t\t\titem.value = value;\n\t\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\n\t\t\t\tif (item.rate)\n\t\t\t\t\titem.rate.update(value);\n\n\t\t\t\tthis.changed(value, labels, timestamp);\n\t\t\t}\n\t\t} else {\n\t\t\titem = {\n\t\t\t\tvalue,\n\t\t\t\tlabels: pick(labels, this.labelNames),\n\t\t\t\ttimestamp: timestamp == null ? Date.now() : timestamp,\n\t\t\t};\n\t\t\tthis.values.set(hash, item);\n\n\t\t\tif (this.rate) {\n\t\t\t\titem.rate = new MetricRate(this, item, 1);\n\t\t\t\titem.rate.update(value);\n\t\t\t}\n\n\t\t\tthis.changed(value, labels, timestamp);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Reset item by labels.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\treset(labels, timestamp) {\n\t\treturn this.set(0, labels, timestamp);\n\t}\n\n\t/**\n\t * Reset all items.\n\t *\n\t * @param {Number?} timestamp\n\t * @memberof GaugeMetric\n\t */\n\tresetAll(timestamp) {\n\t\tthis.values.forEach(item => {\n\t\t\titem.value = 0;\n\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\t});\n\t\tthis.changed(null, null, timestamp);\n\t}\n\n\t/**\n\t * Generate a snapshot.\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof GaugeMetric\n\t */\n\tgenerateSnapshot() {\n\t\tconst snapshot = Array.from(this.values.keys()).map(key => {\n\t\t\tconst item = this.values.get(key);\n\t\t\tconst res = {\n\t\t\t\tkey,\n\t\t\t\tvalue: item.value,\n\t\t\t\tlabels: item.labels,\n\t\t\t\ttimestamp: item.timestamp\n\t\t\t};\n\n\t\t\tif (item.rate)\n\t\t\t\tres.rate = item.rate.rate;\n\n\t\t\treturn res;\n\t\t});\n\n\t\treturn snapshot;\n\t}\n}\n\nmodule.exports = GaugeMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst GaugeMetric = require(\"./gauge\");\nconst METRIC = require(\"../constants\");\n\n/**\n * Counter metric class.\n *\n * @class CounterMetric\n * @extends {GaugeMetric}\n */\nclass CounterMetric extends GaugeMetric {\n\n\t/**\n\t * Creates an instance of CounterMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof CounterMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_COUNTER;\n\t}\n\n\t/**\n\t * Disabled decrement method.\n\t *\n\t * @memberof CounterMetric\n\t */\n\tdecrement() {\n\t\tthrow new Error(\"Counter can't be decreased.\");\n\t}\n}\n\nmodule.exports = CounterMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseMetric = require(\"./base\");\nconst _ = require(\"lodash\");\nconst METRIC = require(\"../constants\");\nconst MetricRate = require(\"../rates\");\nconst { isPlainObject } = require(\"../../utils\");\nconst sortAscending = (a, b) => a - b;\nconst setProp = (o, k, v) => {\n\to[k] = v;\n\treturn o;\n};\n\n/**\n * Histogram metric class.\n *\n * @class HistogramMetric\n * @extends {BaseMetric}\n */\nclass HistogramMetric extends BaseMetric {\n\n\t/**\n\t * Creates an instance of HistogramMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof HistogramMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_HISTOGRAM;\n\n\t\t// Create buckets\n\t\tif (isPlainObject(opts.linearBuckets)) {\n\t\t\tthis.buckets = HistogramMetric.generateLinearBuckets(opts.linearBuckets.start, opts.linearBuckets.width, opts.linearBuckets.count);\n\t\t} else if (isPlainObject(opts.exponentialBuckets)) {\n\t\t\tthis.buckets = HistogramMetric.generateExponentialBuckets(opts.exponentialBuckets.start, opts.exponentialBuckets.factor, opts.exponentialBuckets.count);\n\t\t} else if (Array.isArray(opts.buckets)) {\n\t\t\tthis.buckets = Array.from(opts.buckets);\n\t\t} else if (opts.buckets === true) {\n\t\t\tthis.buckets = this.registry.opts.defaultBuckets;\n\t\t}\n\t\tif (this.buckets) {\n\t\t\tthis.buckets.sort(sortAscending);\n\t\t}\n\n\t\t// Create quantiles\n\t\tif (Array.isArray(opts.quantiles)) {\n\t\t\tthis.quantiles = Array.from(opts.quantiles);\n\t\t} else if (opts.quantiles === true) {\n\t\t\tthis.quantiles = this.registry.opts.defaultQuantiles;\n\t\t}\n\t\tif (this.quantiles) {\n\t\t\tthis.quantiles.sort(sortAscending);\n\t\t\tthis.maxAgeSeconds = opts.maxAgeSeconds || this.registry.opts.defaultMaxAgeSeconds; // 1 minute\n\t\t\tthis.ageBuckets = opts.ageBuckets || this.registry.opts.defaultAgeBuckets; // 10 secs per bucket\n\t\t}\n\n\t\tthis.rate = opts.rate;\n\t}\n\n\t/**\n\t * Observe a value.\n\t *\n\t * @param {Number} value\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof HistogramMetric\n\t */\n\tobserve(value, labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tlet item = this.values.get(hash);\n\t\tif (!item) {\n\t\t\titem = this.resetItem({\n\t\t\t\tlabels: _.pick(labels, this.labelNames)\n\t\t\t});\n\n\t\t\tif (this.rate)\n\t\t\t\titem.rate = new MetricRate(this, item, 1);\n\n\t\t\tthis.values.set(hash, item);\n\t\t}\n\n\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\titem.sum += value;\n\t\titem.count++;\n\t\titem.lastValue = value;\n\n\t\tif (item.bucketValues) {\n\t\t\tconst len = this.buckets.length;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tif (value <= this.buckets[i]) {\n\t\t\t\t\titem.bucketValues[this.buckets[i]] += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (item.quantileValues) {\n\t\t\titem.quantileValues.add(value);\n\t\t}\n\n\t\tif (item.rate)\n\t\t\titem.rate.update(item.count);\n\n\t\tthis.changed(value, labels, timestamp);\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Create new bucket values based on options.\n\t *\n\t * @returns {Object}\n\t * @memberof HistogramMetric\n\t */\n\tcreateBucketValues() {\n\t\treturn this.buckets.reduce((a, bound) => setProp(a, bound, 0), {});\n\t}\n\n\t/**\n\t * Generate a snapshot\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof HistogramMetric\n\t */\n\tgenerateSnapshot() {\n\t\treturn Array.from(this.values.keys()).map(key => this.generateItemSnapshot(this.values.get(key), key));\n\t}\n\n\t/**\n\t * Generate a snapshot for an item\n\t *\n\t * @param {Object} item\n\t * @param {String} key\n\t * @returns {Object}\n\t * @memberof HistogramMetric\n\t */\n\tgenerateItemSnapshot(item, key) {\n\t\tconst snapshot = {\n\t\t\tkey,\n\t\t\tlabels: item.labels,\n\t\t\tcount: item.count,\n\t\t\tsum: item.sum,\n\t\t\tlastValue: item.lastValue,\n\t\t\ttimestamp: item.timestamp,\n\t\t};\n\n\t\tif (this.buckets)\n\t\t\tsnapshot.buckets = this.buckets.reduce((a, b) => setProp(a, b, item.bucketValues[b]), {});\n\n\t\tif (this.quantiles)\n\t\t\tObject.assign(snapshot, item.quantileValues.snapshot());\n\n\t\tif (item.rate)\n\t\t\tsnapshot.rate = item.rate.rate;\n\n\t\treturn snapshot;\n\t}\n\n\t/**\n\t * Reset value of item.\n\t *\n\t * @param {Object} item\n\t * @param {Number?} timestamp\n\t */\n\tresetItem(item, timestamp) {\n\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\titem.sum = 0;\n\t\titem.count = 0;\n\t\titem.lastValue = null;\n\n\t\tif (this.buckets) {\n\t\t\titem.bucketValues = this.createBucketValues();\n\t\t}\n\n\t\tif (this.quantiles) {\n\t\t\titem.quantileValues = new TimeWindowQuantiles(this, this.quantiles, this.maxAgeSeconds, this.ageBuckets);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Reset item by labels.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof HistogramMetric\n\t */\n\treset(labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tconst item = this.values.get(hash);\n\t\tif (item) {\n\t\t\tthis.resetItem(item, timestamp);\n\t\t\tthis.changed(null, labels, timestamp);\n\t\t}\n\t}\n\n\t/**\n\t * Reset all items.\n\t *\n\t * @param {Number?} timestamp\n\t * @memberof HistogramMetric\n\t */\n\tresetAll(timestamp) {\n\t\tthis.values.forEach(item => this.resetItem(item, timestamp));\n\t\tthis.changed();\n\t}\n\n\t/**\n\t * Generate linear buckets\n\t *\n\t * @static\n\t * @param {Number} start\n\t * @param {Number} width\n\t * @param {Number} count\n\t * @returns {Array<Number>}\n\t * @memberof HistogramMetric\n\t */\n\tstatic generateLinearBuckets(start, width, count) {\n\t\tconst buckets = [];\n\t\tfor (let i = 0; i < count; i++)\n\t\t\tbuckets.push(start + i * width);\n\n\t\treturn buckets;\n\t}\n\n\t/**\n\t * Generate exponential buckets\n\t *\n\t * @static\n\t * @param {Number} start\n\t * @param {Number} factor\n\t * @param {Number} count\n\t * @returns {Array<Number>}\n\t * @memberof HistogramMetric\n\t */\n\tstatic generateExponentialBuckets(start, factor, count) {\n\t\tconst buckets = [];\n\t\tfor (let i = 0; i < count; i++)\n\t\t\tbuckets[i] = start * Math.pow(factor, i);\n\n\t\treturn buckets;\n\t}\n}\n\n/**\n * Timewindow class for quantiles.\n *\n * @class TimeWindowQuantiles\n */\nclass TimeWindowQuantiles {\n\n\t/**\n\t * Creates an instance of TimeWindowQuantiles.\n\t * @param {BaseMetric} metric\n\t * @param {Array<Number>} quantiles\n\t * @param {Number} maxAgeSeconds\n\t * @param {Number} ageBuckets\n\t * @memberof TimeWindowQuantiles\n\t */\n\tconstructor(metric, quantiles, maxAgeSeconds, ageBuckets) {\n\t\tthis.metric = metric;\n\t\tthis.quantiles = Array.from(quantiles);\n\t\tthis.maxAgeSeconds = maxAgeSeconds;\n\t\tthis.ageBuckets = ageBuckets;\n\t\tthis.ringBuckets = [];\n\t\tfor(let i = 0; i < ageBuckets; i++) {\n\t\t\tthis.ringBuckets.push(new Bucket());\n\t\t}\n\t\tthis.dirty = true;\n\n\t\tthis.currentBucket = -1;\n\t\tthis.rotate();\n\n\t\tthis.lastSnapshot = null;\n\t\tthis.setDirty();\n\t}\n\n\t/**\n\t * Set dirty flag.\n\t *\n\t * @memberof TimeWindowQuantiles\n\t */\n\tsetDirty() {\n\t\tthis.dirty = true;\n\t\tthis.metric.setDirty();\n\t}\n\n\t/**\n\t * Clear dirty flag.\n\t *\n\t * @memberof TimeWindowQuantiles\n\t */\n\tclearDirty() {\n\t\tthis.dirty = false;\n\t}\n\n\t/**\n\t * Rotate the ring buckets.\n\t *\n\t * @memberof TimeWindowQuantiles\n\t */\n\trotate() {\n\t\tthis.currentBucket = (this.currentBucket + 1) % this.ageBuckets;\n\t\tthis.ringBuckets[this.currentBucket].clear();\n\t\tthis.setDirty();\n\n\t\tsetTimeout(() => this.rotate(), (this.maxAgeSeconds / this.ageBuckets) * 1000).unref();\n\t}\n\n\t/**\n\t * Add a new value to the current bucket.\n\t *\n\t * @param {Number} value\n\t * @memberof TimeWindowQuantiles\n\t */\n\tadd(value) {\n\t\tthis.setDirty();\n\t\tthis.ringBuckets[this.currentBucket].add(value);\n\t}\n\n\t/**\n\t * Generate a snapshot from buckets and calculate min, max, mean, quantiles, variance & StdDev.\n\t *\n\t * @returns {Object}\n\t * @memberof TimeWindowQuantiles\n\t */\n\tsnapshot() {\n\t\tif (!this.dirty && this.lastSnapshot)\n\t\t\treturn this.lastSnapshot;\n\n\t\tconst samples = this.ringBuckets.reduce((a, b) => a.concat(b.samples), []);\n\t\tsamples.sort(sortAscending);\n\n\t\tconst mean = samples.length ? samples.reduce((a, b) => a + b, 0) / samples.length : null;\n\t\tconst variance = samples.length > 1 ? samples.reduce((a, b) => a + Math.pow(b - mean, 2), 0) / (samples.length - 1) : null;\n\t\tconst stdDev = variance ? Math.sqrt(variance) : null;\n\n\t\tthis.lastSnapshot = {\n\t\t\tmin: samples.length ? samples[0] : null,\n\t\t\tmean,\n\t\t\tvariance,\n\t\t\tstdDev,\n\t\t\tmax: samples.length ? samples[samples.length - 1] : null,\n\t\t\tquantiles: this.quantiles.reduce((a, q) => setProp(a, q, samples[Math.ceil(q * samples.length) - 1]), {})\n\t\t};\n\n\t\tthis.clearDirty();\n\n\t\treturn this.lastSnapshot;\n\t}\n}\n\n/**\n * Bucket class\n *\n * @class Bucket\n */\nclass Bucket {\n\t/**\n\t * Creates an instance of Bucket.\n\t * @memberof Bucket\n\t */\n\tconstructor() {\n\t\tthis.count = 0;\n\t\tthis.samples = [];\n\t}\n\n\t/**\n\t * Add value to the bucket.\n\t *\n\t * @param {Number} value\n\t * @memberof Bucket\n\t */\n\tadd(value) {\n\t\tthis.samples.push(value);\n\t\tthis.count++;\n\t}\n\n\t/**\n\t * Clear bucket.\n\t *\n\t * @memberof Bucket\n\t */\n\tclear() {\n\t\tthis.count = 0;\n\t\tthis.samples.length = 0;\n\t}\n}\n\nHistogramMetric.Bucket = Bucket;\nHistogramMetric.TimeWindowQuantiles = TimeWindowQuantiles;\n\nmodule.exports = HistogramMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { pick } = require(\"lodash\");\nconst BaseMetric = require(\"./base\");\nconst METRIC = require(\"../constants\");\n\n/**\n * Information metric.\n *\n * @class InfoMetric\n * @extends {BaseMetric}\n */\nclass InfoMetric extends BaseMetric {\n\n\t/**\n\t * Creates an instance of InfoMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof InfoMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_INFO;\n\t}\n\n\t/**\n\t * Set value.\n\t *\n\t * @param {*} value\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof InfoMetric\n\t */\n\tset(value, labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tlet item = this.values.get(hash);\n\t\tif (item) {\n\t\t\tif (value != item.value) {\n\t\t\t\titem.value = value;\n\t\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\t\t\tthis.changed(value, labels, timestamp);\n\t\t\t}\n\t\t} else {\n\t\t\titem = {\n\t\t\t\tvalue,\n\t\t\t\tlabels: pick(labels, this.labelNames),\n\t\t\t\ttimestamp: timestamp == null ? Date.now() : timestamp\n\t\t\t};\n\t\t\tthis.values.set(hash, item);\n\t\t\tthis.changed(value, labels, timestamp);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Reset item by labels.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof InfoMetric\n\t */\n\treset(labels, timestamp) {\n\t\treturn this.set(null, labels, timestamp);\n\t}\n\n\t/**\n\t * Reset all items.\n\t *\n\t * @param {Number?} timestamp\n\t * @memberof InfoMetric\n\t */\n\tresetAll(timestamp) {\n\t\tthis.values.forEach(item => {\n\t\t\titem.value = null;\n\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\t});\n\t\tthis.changed();\n\t}\n\n\t/**\n\t * Generate a snapshot.\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof InfoMetric\n\t */\n\tgenerateSnapshot() {\n\t\tconst snapshot = Array.from(this.values.keys()).map(key => {\n\t\t\tconst item = this.values.get(key);\n\t\t\treturn {\n\t\t\t\tkey,\n\t\t\t\tvalue: item.value,\n\t\t\t\tlabels: item.labels,\n\t\t\t\ttimestamp: item.timestamp\n\t\t\t};\n\t\t});\n\n\t\treturn snapshot;\n\t}\n}\n\nmodule.exports = InfoMetric;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { BrokerOptionsError } = require(\"../../errors\");\n\nconst Types = {\n\tBase: require(\"./base\"),\n\tCounter: require(\"./counter\"),\n\tGauge: require(\"./gauge\"),\n\tHistogram: require(\"./histogram\"),\n\tInfo: require(\"./info\"),\n};\n\n/**\n * Get MetricType class by name.\n *\n * @param {String} name\n * @returns\n */\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Types).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Types[n];\n}\n\n/**\n * Resolve metric type by name\n *\n * @param {string} type\n * @returns {BaseMetric}\n * @memberof ServiceBroker\n */\nfunction resolve(type) {\n\tconst TypeClass = getByName(type);\n\tif (!TypeClass)\n\t\tthrow new BrokerOptionsError(`Invalid metric type '${type}'.`, { type });\n\n\treturn TypeClass;\n}\n\nfunction register(name, value) {\n\tTypes[name] = value;\n}\n\nmodule.exports = Object.assign(Types, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { match, isString } = require(\"../../utils\");\n\n/**\n * Metric reporter base class.\n *\n * @class BaseReporter\n */\nclass BaseReporter {\n\n\t/**\n\t * Creates an instance of BaseReporter.\n\t *\n\t * @param {Object} opts\n\t * @memberof BaseReporter\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tincludes: null,\n\t\t\texcludes: null,\n\n\t\t\tmetricNamePrefix: null,\n\t\t\tmetricNameSuffix: null,\n\n\t\t\tmetricNameFormatter: null,\n\t\t\tlabelNameFormatter: null,\n\t\t});\n\n\t\tif (isString(this.opts.includes))\n\t\t\tthis.opts.includes = [this.opts.includes];\n\n\t\tif (isString(this.opts.excludes))\n\t\t\tthis.opts.excludes = [this.opts.excludes];\n\t}\n\n\t/**\n\t * Initialize reporter\n\t *\n\t * @param {MetricRegistry} registry\n\t * @memberof BaseReporter\n\t */\n\tinit(registry) {\n\t\tthis.registry = registry;\n\t\tthis.broker = this.registry.broker;\n\t\tthis.logger = this.registry.logger;\n\t}\n\n\t/**\n\t * Stop reporter\n\t *\n\t * @memberof BaseReporter\n\t */\n\tstop() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Match the metric name. Check the `includes` & `excludes` patterns.\n\t *\n\t * @param {String} name\n\t * @returns {boolean}\n\t * @memberof BaseReporter\n\t */\n\tmatchMetricName(name) {\n\t\tif (Array.isArray(this.opts.includes)) {\n\t\t\tif (!this.opts.includes.some(pattern => match(name, pattern)))\n\t\t\t\treturn false;\n\t\t}\n\n\t\tif (Array.isArray(this.opts.excludes)) {\n\t\t\tif (!this.opts.excludes.every(pattern => !match(name, pattern)))\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Format metric name. Add prefix, suffix and call custom formatter.\n\t *\n\t * @param {String} name\n\t * @returns {String}\n\t * @memberof BaseReporter\n\t */\n\tformatMetricName(name) {\n\t\tname = (this.opts.metricNamePrefix ? this.opts.metricNamePrefix : \"\") + name + (this.opts.metricNameSuffix ? this.opts.metricNameSuffix : \"\");\n\t\tif (this.opts.metricNameFormatter)\n\t\t\treturn this.opts.metricNameFormatter(name);\n\t\treturn name;\n\t}\n\n\t/**\n\t * Format label name. Call custom formatter.\n\t *\n\t * @param {String} name\n\t * @returns {String}\n\t * @memberof BaseReporter\n\t */\n\tformatLabelName(name) {\n\t\tif (this.opts.labelNameFormatter)\n\t\t\treturn this.opts.labelNameFormatter(name);\n\t\treturn name;\n\t}\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof BaseReporter\n\t */\n\tmetricChanged(/*metric, value, labels, timestamp*/) {\n\t\t// Not implemented. Abstract method\n\t}\n}\n\nmodule.exports = BaseReporter;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseReporter = require(\"./base\");\nconst _ = require(\"lodash\");\nconst kleur = require(\"kleur\");\nconst METRIC = require(\"../constants\");\nconst { isFunction } = require(\"../../utils\");\n\n/**\n * Console reporter for Moleculer Metrics\n *\n * @class ConsoleReporter\n * @extends {BaseReporter}\n */\nclass ConsoleReporter extends BaseReporter {\n\n\t/**\n\t * Creates an instance of ConsoleReporter.\n\t * @param {Object} opts\n\t * @memberof ConsoleReporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\tinterval: 5,\n\t\t\tlogger: null,\n\t\t\tcolors: true,\n\t\t\tonlyChanges: true,\n\t\t});\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\n\t\tthis.lastChanges = new Set();\n\t}\n\n\t/**\n\t * Initialize reporter\n\t * @param {MetricRegistry} registry\n\t * @memberof ConsoleReporter\n\t */\n\tinit(registry) {\n\t\tsuper.init(registry);\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.print(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Convert labels to label string\n\t *\n\t * @param {Object} labels\n\t * @returns {String}\n\t * @memberof ConsoleReporter\n\t */\n\tlabelsToStr(labels) {\n\t\tconst keys = Object.keys(labels);\n\t\tif (keys.length == 0)\n\t\t\treturn kleur.gray(\"{}\");\n\n\t\treturn kleur.gray(\"{\") + keys.map(key => `${kleur.gray(this.formatLabelName(key))}: ${kleur.magenta(\"\" + labels[key])}`).join(\", \") + kleur.gray(\"}\");\n\t}\n\n\t/**\n\t * Print metrics to the console.\n\t *\n\t * @memberof ConsoleReporter\n\t */\n\tprint() {\n\t\tlet list = this.registry.list({\n\t\t\tincludes: this.opts.includes,\n\t\t\texcludes: this.opts.excludes,\n\t\t});\n\n\t\tif (this.opts.onlyChanges)\n\t\t\tlist = list.filter(metric => this.lastChanges.has(metric.name));\n\n\t\tif (list.length == 0)\n\t\t\treturn;\n\n\t\tthis.log(kleur.gray(`------------------- [ METRICS START (${list.length}) ] -------------------`));\n\n\t\tlist.forEach(metric => {\n\t\t\tthis.log(kleur.cyan().bold(this.formatMetricName(metric.name)) + \" \" + kleur.gray(\"(\" + metric.type + \")\"));\n\t\t\tif (metric.values.size == 0) {\n\t\t\t\tthis.log(kleur.gray(\"  <no values>\"));\n\t\t\t} else {\n\t\t\t\tconst unit = metric.unit ? kleur.gray(this.registry.pluralizeUnit(metric.unit)) : \"\";\n\t\t\t\tmetric.values.forEach(item => {\n\t\t\t\t\tlet val;\n\t\t\t\t\tconst labelStr = this.labelsToStr(item.labels);\n\t\t\t\t\tswitch(metric.type) {\n\t\t\t\t\t\tcase METRIC.TYPE_COUNTER:\n\t\t\t\t\t\tcase METRIC.TYPE_GAUGE:\n\t\t\t\t\t\tcase METRIC.TYPE_INFO:\n\t\t\t\t\t\t\tval = item.value === \"\" ? kleur.grey(\"<empty string>\") : kleur.green().bold(item.value);\n\t\t\t\t\t\t\tif (item.rate != null) {\n\t\t\t\t\t\t\t\t/*const s = [];\n\t\t\t\t\t\t\t\tObject.keys(item.rates).forEach(b => {\n\t\t\t\t\t\t\t\t\ts.push(`Rate${b}: ${item.rates[b] != null ? item.rates[b].toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tval = kleur.green().bold(`Value: ${val} | ` + s.join(\" | \"));\n\t\t\t\t\t\t\t\t*/\n\n\t\t\t\t\t\t\t\tval = val + kleur.grey(\" | Rate: \") + (item.rate != null ? kleur.green().bold(item.rate.toFixed(2)) : \"-\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase METRIC.TYPE_HISTOGRAM: {\n\t\t\t\t\t\t\tconst s = [];\n\t\t\t\t\t\t\ts.push(`Count: ${item.count}`);\n\n\t\t\t\t\t\t\tif (item.buckets) {\n\t\t\t\t\t\t\t\tObject.keys(item.buckets).forEach(b => {\n\t\t\t\t\t\t\t\t\ts.push(`${b}: ${item.buckets[b] != null ? item.buckets[b] : \"-\"}`);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (item.quantiles) {\n\t\t\t\t\t\t\t\ts.push(`Min: ${item.min != null ? item.min.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`Mean: ${item.mean != null ? item.mean.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`Var: ${item.variance != null ? item.variance.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`StdDev: ${item.stdDev != null ? item.stdDev.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`Max: ${item.max != null ? item.max.toFixed(2) : \"-\"}`);\n\n\t\t\t\t\t\t\t\tObject.keys(item.quantiles).forEach(key => {\n\t\t\t\t\t\t\t\t\ts.push(`${key}: ${item.quantiles[key] != null ? item.quantiles[key].toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (item.rate != null)\n\t\t\t\t\t\t\t\ts.push(`Rate: ${item.rate != null ? item.rate.toFixed(2) : \"-\"}`);\n\n\t\t\t\t\t\t\tval = kleur.green().bold(s.join(\" | \"));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.log(`  ${labelStr}: ${val} ${unit}`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.log(\"\");\n\t\t});\n\n\t\tthis.log(kleur.gray(`-------------------- [ METRICS END (${list.length}) ] --------------------`));\n\n\t\tthis.lastChanges.clear();\n\t}\n\n\t/**\n\t * Print messages\n\t *\n\t * @param  {...any} args\n\t */\n\tlog(...args) {\n\t\tif (isFunction(this.opts.logger)) {\n\t\t\treturn this.opts.logger(...args);\n\t\t} else {\n\t\t\treturn this.logger.info(...args);\n\t\t}\n\t}\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof BaseReporter\n\t */\n\tmetricChanged(metric) {\n\t\tif (!this.matchMetricName(metric.name)) return;\n\n\t\tthis.lastChanges.add(metric.name);\n\t}\n}\n\nmodule.exports = ConsoleReporter;\n","module.exports = false\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseReporter = require(\"./base\");\nconst _ = require(\"lodash\");\n\n/**\n * Event reporter for Moleculer Metrics\n *\n * @class EventReporter\n * @extends {BaseReporter}\n */\nclass EventReporter extends BaseReporter {\n\n\t/**\n\t * Creates an instance of EventReporter.\n\t * @param {Object} opts\n\t * @memberof EventReporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\teventName: \"$metrics.snapshot\",\n\n\t\t\tbroadcast: false,\n\t\t\tgroups: null,\n\n\t\t\tonlyChanges: false,\n\n\t\t\tinterval: 5,\n\t\t});\n\n\t\tthis.lastChanges = new Set();\n\t}\n\n\t/**\n\t * Initialize reporter.\n\t *\n\t * @param {MetricRegistry} registry\n\t * @memberof EventReporter\n\t */\n\tinit(registry) {\n\t\tsuper.init(registry);\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.sendEvent(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Send metrics snapshot via event.\n\t *\n\t * @memberof EventReporter\n\t */\n\tsendEvent() {\n\t\tlet list = this.registry.list({\n\t\t\tincludes: this.opts.includes,\n\t\t\texcludes: this.opts.excludes,\n\t\t});\n\n\t\tif (this.opts.onlyChanges)\n\t\t\tlist = list.filter(metric => this.lastChanges.has(metric.name));\n\n\t\tif (list.length == 0)\n\t\t\treturn;\n\n\t\tif (this.opts.broadcast) {\n\t\t\tthis.logger.debug(`Send metrics.snapshot (${list.length} metrics) broadcast events.`);\n\t\t\tthis.broker.broadcast(this.opts.eventName, list, { groups: this.opts.groups });\n\t\t} else {\n\t\t\tthis.logger.debug(`Send metrics.snapshot (${list.length} metrics) events.`);\n\t\t\tthis.broker.emit(this.opts.eventName, list, { groups: this.opts.groups });\n\t\t}\n\n\t\tthis.lastChanges.clear();\n\t}\n\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof BaseReporter\n\t */\n\tmetricChanged(metric) {\n\t\tif (!this.matchMetricName(metric.name)) return;\n\n\t\tthis.lastChanges.add(metric.name);\n\t}\n}\n\nmodule.exports = EventReporter;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../../utils\");\nconst { BrokerOptionsError } = require(\"../../errors\");\n\nconst Reporters = {\n\tBase: require(\"./base\"),\n\tConsole: require(\"./console\"),\n\tCSV: require(\"./csv\"),\n\tEvent: require(\"./event\"),\n\tDatadog: require(\"./datadog\"),\n\tPrometheus: require(\"./prometheus\"),\n\tStatsD: require(\"./statsd\"),\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Reporters).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Reporters[n];\n}\n\n/**\n * Resolve reporter by name\n *\n * @param {object|string} opt\n * @returns {Reporter}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Reporters.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet ReporterClass = getByName(opt);\n\t\tif (ReporterClass)\n\t\t\treturn new ReporterClass();\n\n\t} else if (isObject(opt)) {\n\t\tlet ReporterClass = getByName(opt.type);\n\t\tif (ReporterClass)\n\t\t\treturn new ReporterClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid metric reporter type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\tthrow new BrokerOptionsError(`Invalid metric reporter type '${opt}'.`, { type: opt });\n}\n\nfunction register(name, value) {\n\tReporters[name] = value;\n}\n\nmodule.exports = Object.assign(Reporters, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst os = require(\"os\");\nconst METRIC = require(\"./constants\");\nconst cpuUsage = require(\"../cpu-usage\");\n\nlet v8, eventLoop;\n\n// Load `v8` module for heap metrics.\ntry {\n\tv8 = require(\"v8\");\n} catch (e) {\n\t// silent\n}\n\n/**\n * Register common OS, process & Moleculer metrics.\n */\nfunction registerCommonMetrics() {\n\tthis.logger.debug(\"Registering common metrics...\");\n\n\t// --- METRICS SELF METRICS ---\n\n\t// this.register({ name: METRIC.MOLECULER_METRICS_COMMON_COLLECT_TOTAL, type: METRIC.TYPE_COUNTER, description: \"Number of metric collections\" });\n\t// this.register({ name: METRIC.MOLECULER_METRICS_COMMON_COLLECT_TIME, type: METRIC.TYPE_GAUGE, description: \"Time of collecting metrics\", unit: METRIC.UNIT_MILLISECONDS });\n\n\t// --- PROCESS METRICS ---\n\n\tconst item = this.register({ name: METRIC.PROCESS_ARGUMENTS, type: METRIC.TYPE_INFO, labelNames: [\"index\"], description: \"Process arguments\" });\n\tprocess.argv.map((arg, index) => item.set(arg, { index }));\n\n\tthis.register({ name: METRIC.PROCESS_PID, type: METRIC.TYPE_INFO, description: \"Process PID\" }).set(process.pid);\n\tthis.register({ name: METRIC.PROCESS_PPID, type: METRIC.TYPE_INFO, description: \"Process parent PID\" }).set(process.ppid);\n\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SIZE_USED, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process used heap size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_RSS, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process RSS size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_EXTERNAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process external memory size\" });\n\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process total heap space size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_USED, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process used heap space size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process available heap space size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process physical heap space size\" });\n\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat executable size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat physical size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat available size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat used size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat size limit\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat mallocated size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Peak of process heap stat mallocated size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE, type: METRIC.TYPE_GAUGE, description: \"Process heap stat zap garbage\" });\n\n\tthis.register({ name: METRIC.PROCESS_UPTIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_SECONDS, description: \"Process uptime\" });\n\tthis.register({ name: METRIC.PROCESS_INTERNAL_ACTIVE_HANDLES, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_HANDLE, description: \"Number of active process handlers\" });\n\tthis.register({ name: METRIC.PROCESS_INTERNAL_ACTIVE_REQUESTS, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_REQUEST, description: \"Number of active process requests\" });\n\n\tthis.register({ name: METRIC.PROCESS_VERSIONS_NODE, type: METRIC.TYPE_INFO, description: \"Node version\" }).set(process.versions.node);\n\n\t// --- OS METRICS ---\n\n\tthis.register({ name: METRIC.OS_MEMORY_FREE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"OS free memory size\" });\n\tthis.register({ name: METRIC.OS_MEMORY_USED, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"OS used memory size\" });\n\tthis.register({ name: METRIC.OS_MEMORY_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"OS total memory size\" });\n\tthis.register({ name: METRIC.OS_UPTIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_SECONDS, description: \"OS uptime\" });\n\tthis.register({ name: METRIC.OS_TYPE, type: METRIC.TYPE_INFO, description: \"OS type\" }).set(os.type());\n\tthis.register({ name: METRIC.OS_RELEASE, type: METRIC.TYPE_INFO, description: \"OS release\" }).set(os.release());\n\tthis.register({ name: METRIC.OS_HOSTNAME, type: METRIC.TYPE_INFO, description: \"Hostname\" }).set(os.hostname());\n\tthis.register({ name: METRIC.OS_ARCH, type: METRIC.TYPE_INFO, description: \"OS architecture\" }).set(os.arch());\n\tthis.register({ name: METRIC.OS_PLATFORM, type: METRIC.TYPE_INFO, description: \"OS platform\" }).set(os.platform());\n\n\tconst userInfo = getUserInfo();\n\tthis.register({ name: METRIC.OS_USER_UID, type: METRIC.TYPE_INFO, description: \"UID\" }).set(userInfo.uid);\n\tthis.register({ name: METRIC.OS_USER_GID, type: METRIC.TYPE_INFO, description: \"GID\" }).set(userInfo.gid);\n\tthis.register({ name: METRIC.OS_USER_USERNAME, type: METRIC.TYPE_INFO, description: \"Username\" }).set(userInfo.username);\n\tthis.register({ name: METRIC.OS_USER_HOMEDIR, type: METRIC.TYPE_INFO, description: \"User's home directory\" }).set(userInfo.homedir);\n\n\tthis.register({ name: METRIC.OS_NETWORK_ADDRESS, type: METRIC.TYPE_INFO, labelNames: [\"interface\", \"family\"], description: \"Network address\" });\n\tthis.register({ name: METRIC.OS_NETWORK_MAC, type: METRIC.TYPE_INFO, labelNames: [\"interface\", \"family\"], description: \"MAC address\" });\n\n\tthis.register({ name: METRIC.OS_DATETIME_UNIX, type: METRIC.TYPE_GAUGE, description: \"Current datetime in Unix format\" });\n\tthis.register({ name: METRIC.OS_DATETIME_ISO, type: METRIC.TYPE_INFO, description: \"Current datetime in ISO string\" });\n\tthis.register({ name: METRIC.OS_DATETIME_UTC, type: METRIC.TYPE_INFO, description: \"Current UTC datetime\" });\n\tthis.register({ name: METRIC.OS_DATETIME_TZ_OFFSET, type: METRIC.TYPE_GAUGE, description: \"Timezone offset\" });\n\n\tthis.register({ name: METRIC.OS_CPU_LOAD_1, type: METRIC.TYPE_GAUGE, description: \"CPU load1\" });\n\tthis.register({ name: METRIC.OS_CPU_LOAD_5, type: METRIC.TYPE_GAUGE, description: \"CPU load5\" });\n\tthis.register({ name: METRIC.OS_CPU_LOAD_15, type: METRIC.TYPE_GAUGE, description: \"CPU load15\" });\n\tthis.register({ name: METRIC.OS_CPU_UTILIZATION, type: METRIC.TYPE_GAUGE, description: \"CPU utilization\" });\n\n\tthis.register({ name: METRIC.OS_CPU_USER, type: METRIC.TYPE_GAUGE, description: \"CPU user time\" });\n\tthis.register({ name: METRIC.OS_CPU_SYSTEM, type: METRIC.TYPE_GAUGE, description: \"CPU system time\" });\n\n\tthis.register({ name: METRIC.OS_CPU_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_CPU, description: \"Number of CPUs\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_MODEL, type: METRIC.TYPE_INFO, labelNames: [\"index\"], description: \"CPU model\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_SPEED, type: METRIC.TYPE_GAUGE, labelNames: [\"index\"], unit: METRIC.UNIT_GHZ, description: \"CPU speed\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_TIMES_USER, type: METRIC.TYPE_GAUGE, labelNames: [\"index\"], description: \"CPU user time\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_TIMES_SYS, type: METRIC.TYPE_GAUGE, labelNames: [\"index\"], description: \"CPU system time\" });\n\n\tstartGCWatcher.call(this);\n\tstartEventLoopStats.call(this);\n\n\tthis.logger.debug(`Registered ${this.store.size} common metrics.`);\n}\n\n/**\n * Start GC watcher listener.\n */\nfunction startGCWatcher() {\n// Load `gc-stats` module for GC metrics.\n\ttry {\n\t\tconst gc = (require(\"gc-stats\"))();\n\n\t\t/* istanbul ignore next */\n\t\tif (gc) {\n\t\t\t// --- GARBAGE COLLECTOR METRICS ---\n\n\t\t\tthis.register({ name: METRIC.PROCESS_GC_TIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_NANOSECONDS, description: \"GC time\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_GC_TOTAL_TIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Total time of GC\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_GC_EXECUTED_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"type\"], unit: null, description: \"Number of executed GC\" });\n\n\t\t\tgc.on(\"stats\", stats => {\n\t\t\t\tthis.set(METRIC.PROCESS_GC_TIME, stats.pause);\n\t\t\t\tthis.increment(METRIC.PROCESS_GC_TOTAL_TIME, null, stats.pause / 1e6);\n\t\t\t\tif (stats.gctype == 1)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"scavenge\" });\n\t\t\t\tif (stats.gctype == 2)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"marksweep\" });\n\t\t\t\tif (stats.gctype == 4)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"incremental\" });\n\t\t\t\tif (stats.gctype == 8)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"weakphantom\" });\n\t\t\t\tif (stats.gctype == 15) {\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"scavenge\" });\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"marksweep\" });\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"incremental\" });\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"weakphantom\" });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} catch (e) {\n\t\t// silent\n\t}\n}\n\nfunction startEventLoopStats() {\n\t// Load `event-loop-stats` metric for Event-loop metrics.\n\ttry {\n\t\teventLoop = require(\"event-loop-stats\");\n\t\tif (eventLoop) {\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_MIN, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Minimum of event loop lag\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_AVG, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Average of event loop lag\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_MAX, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Maximum of event loop lag\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_COUNT, type: METRIC.TYPE_GAUGE, description: \"Number of event loop lag samples.\" });\n\t\t}\n\t} catch (e) {\n\t\t// silent\n\t}\n}\n\n/**\n * Update common metric values.\n *\n * @returns {Promise}\n */\nfunction updateCommonMetrics() {\n\tthis.logger.debug(\"Update common metric values...\");\n\tconst end = this.timer();\n\n\t// --- PROCESS METRICS ---\n\n\tconst procMem = process.memoryUsage();\n\n\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SIZE_TOTAL, procMem.heapTotal);\n\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SIZE_USED, procMem.heapUsed);\n\tthis.set(METRIC.PROCESS_MEMORY_RSS, procMem.rss);\n\tthis.set(METRIC.PROCESS_MEMORY_EXTERNAL, procMem.external);\n\n\tif (v8 && v8.getHeapSpaceStatistics) {\n\t\tconst stat = v8.getHeapSpaceStatistics();\n\t\tstat.forEach(item => {\n\t\t\tconst space = item.space_name;\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL, item.space_size, { space });\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_USED, item.space_used_size, { space });\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE, item.space_available_size, { space });\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL, item.physical_space_size, { space });\n\t\t});\n\t}\n\n\tif (v8 && v8.getHeapStatistics) {\n\t\tconst stat = v8.getHeapStatistics();\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL, stat.total_heap_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL, stat.total_heap_size_executable);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL, stat.total_physical_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL, stat.total_available_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE, stat.used_heap_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT, stat.heap_size_limit);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY, stat.malloced_memory);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY, stat.peak_malloced_memory);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE, stat.does_zap_garbage);\n\t}\n\n\tthis.set(METRIC.PROCESS_UPTIME, process.uptime());\n\tthis.set(METRIC.PROCESS_INTERNAL_ACTIVE_HANDLES, process._getActiveHandles().length);\n\tthis.set(METRIC.PROCESS_INTERNAL_ACTIVE_REQUESTS, process._getActiveRequests().length);\n\n\t// --- OS METRICS ---\n\n\tconst freeMem = os.freemem();\n\tconst totalMem = os.totalmem();\n\tconst usedMem = totalMem - freeMem;\n\tthis.set(METRIC.OS_MEMORY_FREE, freeMem);\n\tthis.set(METRIC.OS_MEMORY_USED, usedMem);\n\tthis.set(METRIC.OS_MEMORY_TOTAL, totalMem);\n\tthis.set(METRIC.OS_UPTIME, os.uptime());\n\tthis.set(METRIC.OS_TYPE, os.type());\n\tthis.set(METRIC.OS_RELEASE, os.release());\n\tthis.set(METRIC.OS_HOSTNAME, os.hostname());\n\tthis.set(METRIC.OS_ARCH, os.arch());\n\tthis.set(METRIC.OS_PLATFORM, os.platform());\n\n\t// --- NETWORK INTERFACES ---\n\n\n\tconst getNetworkInterfaces = () =>{\n\t\tconst list = [];\n\t\tconst ilist = [];\n\t\tconst interfaces = os.networkInterfaces();\n\t\tfor (let iface in interfaces) {\n\t\t\tfor (let i in interfaces[iface]) {\n\t\t\t\tconst f = interfaces[iface][i];\n\t\t\t\tif (f.internal) {\n\t\t\t\t\tilist.push({ f,iface });\n\t\t\t\t} else{\n\t\t\t\t\tlist.push({ f,iface });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list.length > 0 ? list : ilist;\n\t};\n\n\tconst interfaces = getNetworkInterfaces();\n\tfor (let { f,iface } of interfaces) {\n\t\tthis.set(METRIC.OS_NETWORK_ADDRESS, f.address, { interface: iface, family: f.family });\n\t\tthis.set(METRIC.OS_NETWORK_MAC, f.mac, { interface: iface, family: f.family });\n\t}\n\n\tconst d = new Date();\n\tthis.set(METRIC.OS_DATETIME_UNIX, d.valueOf());\n\tthis.set(METRIC.OS_DATETIME_ISO, d.toISOString());\n\tthis.set(METRIC.OS_DATETIME_UTC, d.toUTCString());\n\tthis.set(METRIC.OS_DATETIME_TZ_OFFSET, d.getTimezoneOffset());\n\n\tconst load = os.loadavg();\n\tthis.set(METRIC.OS_CPU_LOAD_1, load[0]);\n\tthis.set(METRIC.OS_CPU_LOAD_5, load[1]);\n\tthis.set(METRIC.OS_CPU_LOAD_15, load[2]);\n\n\tif (eventLoop && eventLoop.sense) {\n\t\tconst stat = eventLoop.sense();\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_MIN, stat.min);\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_AVG, stat.num ? stat.sum / stat.num : 0);\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_MAX, stat.max);\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_COUNT, stat.num);\n\t}\n\n\t// this.increment(METRIC.MOLECULER_METRICS_COMMON_COLLECT_TOTAL);\n\tconst duration = end();\n\n\treturn this.broker.Promise.resolve()\n\t\t.then(() => cpuUsage().then(res => {\n\t\t\tthis.set(METRIC.OS_CPU_UTILIZATION, res.avg);\n\n\t\t\ttry {\n\t\t\t\tconst cpus = os.cpus();\n\t\t\t\tthis.set(METRIC.OS_CPU_TOTAL, cpus.length);\n\t\t\t\tthis.set(METRIC.OS_CPU_USER, cpus.reduce((a,b) => a + b.times.user, 0));\n\t\t\t\tthis.set(METRIC.OS_CPU_SYSTEM, cpus.reduce((a,b) => a + b.times.sys, 0));\n\n\t\t\t\tcpus.forEach((cpu, index) => {\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_MODEL, cpu.model, { index });\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_SPEED, cpu.speed, { index });\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_TIMES_USER, cpu.times.user, { index });\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_TIMES_SYS, cpu.times.sys, { index });\n\t\t\t\t});\n\n\t\t\t} catch(err) {\n\t\t\t\t// silent\n\t\t\t}\n\t\t}))\n\t\t.catch(() => {\n\t\t\t// silent this.logger.warn(\"Unable to collect CPU usage metrics.\", err);\n\t\t})\n\t\t.then(() => {\n\t\t\tthis.logger.debug(`Collected common metric values in ${duration.toFixed(3)} msec.`);\n\t\t});\n}\n\n/**\n * Get OS user info (safe-mode)\n *\n * @returns\n */\nfunction getUserInfo() {\n\ttry {\n\t\treturn os.userInfo();\n\t} catch (e) {\n\t\t/* istanbul ignore next */\n\t\treturn {};\n\t}\n}\n\n/**\n * Measure event loop lag.\n *\n * @returns {Promise<Number>}\n *\nfunction measureEventLoopLag() {\n\treturn new Promise(resolve => {\n\t\tconst start = process.hrtime();\n\t\tsetImmediate(() => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tresolve(delta[0] * 1e9 + delta[1]);\n\t\t});\n\t});\n}*/\n\nmodule.exports = {\n\tregisterCommonMetrics,\n\tupdateCommonMetrics\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * CPU usage measure.\n *\n * Based on: https://github.com/icebob/cpu\n */\nconst os = require(\"os\");\n\n/* istanbul ignore next */\nmodule.exports = function getCpuUsage(sampleTime = 100) {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tconst first = os.cpus().map(cpu => cpu.times);\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tconst second = os.cpus().map(cpu => cpu.times);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst third = os.cpus().map(cpu => cpu.times);\n\n\t\t\t\t\t\t\tconst usages = [];\n\t\t\t\t\t\t\tfor (let i = 0; i < first.length; i++) {\n\t\t\t\t\t\t\t\tconst first_idle = first[i].idle;\n\t\t\t\t\t\t\t\tconst first_total = first[i].idle + first[i].user + first[i].nice + first[i].sys + first[i].irq;\n\t\t\t\t\t\t\t\tconst second_idle = second[i].idle;\n\t\t\t\t\t\t\t\tconst second_total = second[i].idle + second[i].user + second[i].nice + second[i].sys + second[i].irq;\n\t\t\t\t\t\t\t\tconst third_idle = third[i].idle;\n\t\t\t\t\t\t\t\tconst third_total = third[i].idle + third[i].user + third[i].nice + third[i].sys + third[i].irq;\n\t\t\t\t\t\t\t\tconst first_usage = 1 - (second_idle - first_idle) / (second_total - first_total);\n\t\t\t\t\t\t\t\tconst second_usage = 1 - (third_idle - second_idle) / (third_total - second_total);\n\t\t\t\t\t\t\t\tconst per_usage = (first_usage + second_usage) / 2 * 100;\n\t\t\t\t\t\t\t\tusages.push(per_usage);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\tavg: usages.reduce((a, b) => a + b, 0) / usages.length,\n\t\t\t\t\t\t\t\tusages\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, sampleTime);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}, sampleTime);\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { match, isFunction, isPlainObject, isString } = require(\"../utils\");\nconst METRIC = require(\"./constants\");\nconst Types = require(\"./types\");\nconst Reporters = require(\"./reporters\");\nconst { registerCommonMetrics, updateCommonMetrics } = require(\"./commons\");\n\nconst METRIC_NAME_REGEXP \t= /^[a-zA-Z_][a-zA-Z0-9-_:.]*$/;\nconst METRIC_LABEL_REGEXP \t= /^[a-zA-Z_][a-zA-Z0-9-_.]*$/;\n\n/**\n * Metric Registry class\n */\nclass MetricRegistry {\n\n\t/**\n\t * Creates an instance of MetricRegistry.\n\t *\n\t * @param {ServiceBroker} broker\n\t * @param {Object} opts\n\t * @memberof MetricRegistry\n\t */\n\tconstructor(broker, opts) {\n\t\tthis.broker = broker;\n\t\tthis.logger = broker.getLogger(\"metrics\");\n\n\t\tthis.dirty = true;\n\n\t\tif (opts === true || opts === false)\n\t\t\topts = { enabled: opts };\n\n\t\tthis.opts = _.defaultsDeep({}, opts, {\n\t\t\tenabled: true,\n\t\t\tcollectProcessMetrics: process.env.NODE_ENV !== \"test\",\n\t\t\tcollectInterval: 5,\n\n\t\t\treporter: false,\n\n\t\t\tdefaultBuckets: [1, 5, 10, 25, 50, 100, 250, 500, 1000, 2500, 5000, 10000], // in milliseconds\n\t\t\tdefaultQuantiles: [0.5, 0.9, 0.95, 0.99, 0.999], // percentage\n\t\t\tdefaultMaxAgeSeconds: 60,\n\t\t\tdefaultAgeBuckets: 10,\n\t\t\tdefaultAggregator: \"sum\"\n\t\t});\n\n\t\tthis.store = new Map();\n\n\t\tif (this.opts.enabled)\n\t\t\tthis.logger.info(\"Metrics: Enabled\");\n\t}\n\n\t/**\n\t * Initialize Registry.\n\t */\n\tinit() {\n\t\tif (this.opts.enabled) {\n\n\t\t\t// Create Reporter instances\n\t\t\tif (this.opts.reporter) {\n\t\t\t\tconst reporters = Array.isArray(this.opts.reporter) ? this.opts.reporter : [this.opts.reporter];\n\n\t\t\t\tthis.reporter = _.compact(reporters).map(r => {\n\t\t\t\t\tconst reporter = Reporters.resolve(r);\n\t\t\t\t\treporter.init(this);\n\t\t\t\t\treturn reporter;\n\t\t\t\t});\n\n\t\t\t\tconst reporterNames = this.reporter.map(reporter => this.broker.getConstructorName(reporter));\n\t\t\t\tthis.logger.info(`Metric reporter${reporterNames.length > 1 ? \"s\" : \"\"}: ${reporterNames.join(\", \")}`);\n\t\t\t}\n\n\t\t\t// Start colllect timer\n\t\t\tif (this.opts.collectProcessMetrics) {\n\t\t\t\tthis.collectTimer = setInterval(() => {\n\t\t\t\t\tupdateCommonMetrics.call(this);\n\t\t\t\t}, this.opts.collectInterval * 1000);\n\t\t\t\tthis.collectTimer.unref();\n\n\t\t\t\tregisterCommonMetrics.call(this);\n\t\t\t\tupdateCommonMetrics.call(this);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stop Metric Registry\n\t */\n\tstop() {\n\t\tif (this.collectTimer) {\n\t\t\tclearInterval(this.collectTimer);\n\t\t}\n\n\t\tif (this.reporter) {\n\t\t\treturn this.broker.Promise.all(this.reporter.map(r => r.stop()));\n\t\t}\n\t}\n\n\t/**\n\t * Check metric is enabled?\n\t *\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tisEnabled() {\n\t\treturn this.opts.enabled;\n\t}\n\n\t/**\n\t * Register a new metric.\n\t *\n\t * @param {Object} opts\n\t * @returns {BaseMetric}\n\t * @memberof MetricRegistry\n\t */\n\tregister(opts) {\n\t\tif (!isPlainObject(opts))\n\t\t\tthrow new Error(\"Wrong argument. Must be an Object.\");\n\n\t\tif (!opts.type)\n\t\t\tthrow new Error(\"The metric 'type' property is mandatory.\");\n\n\t\tif (!opts.name)\n\t\t\tthrow new Error(\"The metric 'name' property is mandatory.\");\n\n\t\tif (!METRIC_NAME_REGEXP.test(opts.name))\n\t\t\tthrow new Error(\"The metric 'name' is not valid: \" + opts.name);\n\n\t\tif (Array.isArray(opts.labelNames)) {\n\t\t\topts.labelNames.forEach(name => {\n\t\t\t\tif (!METRIC_LABEL_REGEXP.test(name))\n\t\t\t\t\tthrow new Error(`The '${opts.name}' metric label name is not valid: ${name}`);\n\n\t\t\t});\n\t\t}\n\n\t\tconst MetricClass = Types.resolve(opts.type);\n\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = new MetricClass(opts, this);\n\t\tthis.store.set(opts.name, item);\n\t\treturn item;\n\t}\n\n\t/**\n\t * Check a metric by name.\n\t *\n\t * @param {String} name\n\t * @returns {Boolean}\n\t * @memberof MetricRegistry\n\t */\n\thasMetric(name) {\n\t\treturn this.store.has(name);\n\t}\n\n\t/**\n\t * Get metric by name\n\t *\n\t * @param {String} name\n\t * @returns {BaseMetric}\n\t * @memberof MetricRegistry\n\t */\n\tgetMetric(name) {\n\t\tconst item = this.store.get(name);\n\t\tif (!item)\n\t\t\treturn null;\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Increment a metric value.\n\t *\n\t * @param {String} name\n\t * @param {Object?} labels\n\t * @param {number} [value=1]\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tincrement(name, labels, value = 1, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\tif (!isFunction(item.increment))\n\t\t\tthrow new Error(\"Invalid metric type. Incrementing works only with counter & gauge metric types.\");\n\n\t\treturn item.increment(labels, value, timestamp);\n\t}\n\n\t/**\n\t * Decrement a metric value.\n\t *\n\t * @param {String} name\n\t * @param {Object?} labels\n\t * @param {number} [value=1]\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tdecrement(name, labels, value = 1, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\tif (!isFunction(item.decrement))\n\t\t\tthrow new Error(\"Invalid metric type. Decrementing works only with gauge metric type.\");\n\n\t\treturn item.decrement(labels, value, timestamp);\n\t}\n\n\t/**\n\t * Set a metric value.\n\t *\n\t * @param {String} name\n\t * @param {*} value\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tset(name, value, labels, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\tif (!isFunction(item.set))\n\t\t\tthrow new Error(\"Invalid metric type. Value setting works only with counter, gauge & info metric types.\");\n\n\t\treturn item.set(value, labels, timestamp);\n\t}\n\n\t/**\n\t * Observe a metric.\n\t *\n\t * @param {String} name\n\t * @param {Number} value\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tobserve(name, value, labels, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\tif (!isFunction(item.observe))\n\t\t\tthrow new Error(\"Invalid metric type. Observing works only with histogram metric type.\");\n\n\t\treturn item.observe(value, labels, timestamp);\n\t}\n\n\t/**\n\t * Reset metric values.\n\t *\n\t * @param {String} name\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\treset(name, labels, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\titem.reset(labels, timestamp);\n\t}\n\n\t/**\n\t * Reset metric all values.\n\t *\n\t * @param {String} name\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof MetricRegistry\n\t */\n\tresetAll(name, timestamp) {\n\t\tif (!this.opts.enabled)\n\t\t\treturn null;\n\n\t\tconst item = this.getMetric(name);\n\t\titem.resetAll(timestamp);\n\t}\n\n\t/**\n\t * Start a timer & observe the elapsed time.\n\t *\n\t * @param {String} name\n\t * @param {Object?} labels\n\t * @param {Number?} timestamp\n\t * @returns {Function} `end`˙function.\n\t * @memberof MetricRegistry\n\t */\n\ttimer(name, labels, timestamp) {\n\t\tlet item;\n\t\tif (name && this.opts.enabled) {\n\t\t\titem = this.getMetric(name);\n\t\t\tif (!isFunction(item.observe) && !isFunction(item.set)) {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthrow new Error(\"Invalid metric type. Timing works only with histogram or gauge metric types\");\n\t\t\t}\n\t\t}\n\n\t\tconst start = process.hrtime();\n\t\treturn () => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tconst duration = (delta[0] + delta[1] / 1e9) * 1000;\n\n\t\t\tif (item) {\n\t\t\t\tif (item.type == METRIC.TYPE_HISTOGRAM)\n\t\t\t\t\titem.observe(duration, labels, timestamp);\n\t\t\t\telse if (item.type == METRIC.TYPE_GAUGE)\n\t\t\t\t\titem.set(duration, labels, timestamp);\n\t\t\t}\n\n\t\t\treturn duration;\n\t\t};\n\t}\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof MetricRegistry\n\t */\n\tchanged(metric, value, labels, timestamp) {\n\t\tthis.dirty = true;\n\t\tif (Array.isArray(this.reporter))\n\t\t\tthis.reporter.forEach(reporter => reporter.metricChanged(metric, value, labels, timestamp));\n\t}\n\n\t/**\n\t * List all registered metrics with labels & values.\n\t *\n\t * @param {Object?} opts\n\t * @param {String|Array<String>|null} opts.types\n\t * @param {String|Array<String>|null} opts.includes\n\t * @param {String|Array<String>|null} opts.excludes\n\t */\n\tlist(opts) {\n\t\tconst res = [];\n\t\topts = opts || {};\n\n\t\tconst types = opts.types != null ? (isString(opts.types) ? [opts.types] : opts.types) : null;\n\t\tconst includes = opts.includes != null ? (isString(opts.includes) ? [opts.includes] : opts.includes) : null;\n\t\tconst excludes = opts.excludes != null ? (isString(opts.excludes) ? [opts.excludes] : opts.excludes) : null;\n\n\t\tthis.store.forEach(metric => {\n\t\t\tif (types && !types.some(type => metric.type == type))\n\t\t\t\treturn;\n\n\t\t\tif (includes && !includes.some(pattern => match(metric.name, pattern)))\n\t\t\t\treturn;\n\n\t\t\tif (excludes && !excludes.every(pattern => !match(metric.name, pattern)))\n\t\t\t\treturn;\n\n\t\t\tres.push(metric.toObject());\n\t\t});\n\n\t\treturn res;\n\t}\n\n\n\t/**\n\t * Pluralize metric units.\n\t *\n\t * @param {String} unit\n\t * @returns {String}\n\t */\n\tpluralizeUnit(unit) {\n\t\tswitch(unit) {\n\t\t\tcase METRIC.UNIT_GHZ:\n\t\t\t\treturn unit;\n\t\t}\n\t\treturn unit + \"s\";\n\t}\n}\n\nmodule.exports = MetricRegistry;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst METRIC = require(\"./constants\");\n\nconst MetricRegistry = require(\"./registry\");\nconst BaseMetric = require(\"./types/base\");\nconst CounterMetric = require(\"./types/counter\");\nconst GaugeMetric = require(\"./types/gauge\");\nconst HistrogramMetric = require(\"./types/histogram\");\nconst InfoMetric = require(\"./types/info\");\n\nconst Reporters = require(\"./reporters\");\n\nmodule.exports = {\n\tMETRIC: METRIC,\n\n\tMetricRegistry,\n\n\tBaseMetric,\n\tCounterMetric,\n\tGaugeMetric,\n\tHistrogramMetric,\n\tInfoMetric,\n\n\tReporters\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst P \t\t\t\t= require(\"./packets\");\nconst { Packet } \t\t= require(\"./packets\");\nconst E \t\t\t\t= require(\"./errors\");\n\nconst { Transform } \t= require(\"stream\");\nconst { METRIC }\t\t= require(\"./metrics\");\n\n/**\n * Transit class\n *\n * @class Transit\n */\nclass Transit {\n\n\t/**\n\t * Create an instance of Transit.\n\t *\n\t * @param {ServiceBroker} Broker instance\n\t * @param {Transporter} Transporter instance\n\t * @param {Object?} opts\n\t *\n\t * @memberof Transit\n\t */\n\tconstructor(broker, transporter, opts) {\n\t\tthis.broker = broker;\n\t\tthis.Promise = broker.Promise;\n\t\tthis.logger = broker.getLogger(\"transit\");\n\t\tthis.nodeID = broker.nodeID;\n\t\tthis.metrics = broker.metrics;\n\t\tthis.instanceID = broker.instanceID;\n\t\tthis.tx = transporter;\n\t\tthis.opts = opts;\n\t\tthis.discoverer = broker.registry.discoverer;\n\n\t\tthis.pendingRequests = new Map();\n\t\tthis.pendingReqStreams = new Map();\n\t\tthis.pendingResStreams = new Map();\n\n\t\t/* deprecated */\n\t\tthis.stat = {\n\t\t\tpackets: {\n\t\t\t\tsent: {\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tbytes: 0\n\t\t\t\t},\n\t\t\t\treceived: {\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tbytes: 0\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.connected = false;\n\t\tthis.disconnecting = false;\n\t\tthis.isReady = false;\n\n\t\tconst wrappedMessageHandler = (cmd, packet) => this.messageHandler(cmd, packet);\n\n\t\tthis.publish = this.broker.wrapMethod(\"transitPublish\", this.publish, this);\n\t\tthis.messageHandler = this.broker.wrapMethod(\"transitMessageHandler\", this.messageHandler, this);\n\n\n\t\tif (this.tx) {\n\t\t\tthis.tx.init(this, wrappedMessageHandler, this.afterConnect.bind(this));\n\n\t\t\tthis.tx.send = this.broker.wrapMethod(\"transporterSend\", this.tx.send, this.tx);\n\t\t\tthis.tx.receive = this.broker.wrapMethod(\"transporterReceive\", this.tx.receive, this.tx, { reverse: true });\n\t\t}\n\n\t\tthis.__connectResolve = null;\n\n\t\tthis.registerMoleculerMetrics();\n\t}\n\n\t/**\n\t * Register Moleculer Transit Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tif (!this.broker.isMetricsEnabled()) return;\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_READY, type: METRIC.TYPE_GAUGE, description: \"Transit is ready\" }).set(0);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_CONNECTED, type: METRIC.TYPE_GAUGE, description: \"Transit is connected\" }).set(0);\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_PONG_TIME, type: METRIC.TYPE_GAUGE, labelNames: [\"targetNodeID\"], description: \"Ping time\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_PONG_SYSTIME_DIFF, type: METRIC.TYPE_GAUGE, labelNames: [\"targetNodeID\"], description: \"System time difference between nodes\" });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL, type: METRIC.TYPE_COUNTER, description: \"Number of orphan responses\" });\n\t}\n\n\t/**\n\t * It will be called after transporter connected or reconnected.\n\t *\n\t * @param {any} wasReconnect\n\t * @returns {Promise}\n\t *\n\t * @memberof Transit\n\t */\n\tafterConnect(wasReconnect) {\n\t\treturn this.Promise.resolve()\n\n\t\t\t.then(() => {\n\t\t\t\tif (wasReconnect) {\n\t\t\t\t\t// After reconnecting, we should send a broadcast INFO packet because there may new nodes.\n\t\t\t\t\t// In case of disabled balancer, it triggers the `makeBalancedSubscriptions` method.\n\t\t\t\t\treturn this.discoverer.sendLocalNodeInfo();\n\t\t\t\t} else {\n\t\t\t\t\t// After connecting we should subscribe to topics\n\t\t\t\t\treturn this.makeSubscriptions();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t.then(() => this.discoverer.discoverAllNodes())\n\t\t\t.delay(500) // Waiting for incoming INFO packets\n\n\t\t\t.then(() => {\n\t\t\t\tthis.connected = true;\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_CONNECTED, 1);\n\n\t\t\t\tthis.broker.broadcastLocal(\"$transporter.connected\", { wasReconnect: !!wasReconnect });\n\n\t\t\t\tif (this.__connectResolve) {\n\t\t\t\t\tthis.__connectResolve();\n\t\t\t\t\tthis.__connectResolve = null;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\t/**\n\t * Connect with transporter. If failed, try again after 5 sec.\n\t *\n\t * @memberof Transit\n\t */\n\tconnect() {\n\t\tthis.logger.info(\"Connecting to the transporter...\");\n\t\treturn new this.Promise(resolve => {\n\t\t\tthis.__connectResolve = resolve;\n\n\t\t\tconst doConnect = () => {\n\t\t\t\tlet reconnectStarted = false;\n\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tconst errorHandler = (err) => {\n\t\t\t\t\tif (this.disconnecting) return;\n\t\t\t\t\tif (reconnectStarted) return;\n\n\t\t\t\t\tthis.logger.warn(\"Connection is failed.\", err && err.message || \"Unknown error\");\n\t\t\t\t\tthis.logger.debug(err);\n\n\t\t\t\t\tif (this.opts.disableReconnect) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treconnectStarted = true;\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.logger.info(\"Reconnecting...\");\n\t\t\t\t\t\tdoConnect();\n\t\t\t\t\t}, 5 * 1000);\n\t\t\t\t};\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.tx.connect(errorHandler).catch(errorHandler);\n\t\t\t};\n\n\t\t\tdoConnect();\n\n\t\t});\n\t}\n\n\t/**\n\t * Disconnect with transporter\n\t *\n\t * @memberof Transit\n\t */\n\tdisconnect() {\n\t\tthis.connected = false;\n\t\tthis.isReady = false;\n\t\tthis.disconnecting = true;\n\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_CONNECTED, 0);\n\n\t\tthis.broker.broadcastLocal(\"$transporter.disconnected\", { graceFul: true });\n\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\tif (this.tx.connected) {\n\t\t\t\t\treturn this.discoverer.localNodeDisconnected()\n\t\t\t\t\t\t.then(() => this.tx.disconnect());\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => this.disconnecting = false);\n\t}\n\n\t/**\n\t * Local broker is ready (all services loaded).\n\t * Send INFO packet to all other nodes\n\t */\n\tready() {\n\t\tif (this.connected) {\n\t\t\tthis.isReady = true;\n\t\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_READY, 1);\n\t\t\treturn this.discoverer.localNodeReady();\n\t\t}\n\t}\n\n\t/**\n\t * Send DISCONNECT to remote nodes\n\t *\n\t * @returns {Promise}\n\t *\n\t * @memberof Transit\n\t */\n\tsendDisconnectPacket() {\n\t\treturn this.publish(new Packet(P.PACKET_DISCONNECT)).catch(/* istanbul ignore next */ err => this.logger.debug(\"Unable to send DISCONNECT packet.\", err));\n\t}\n\n\t/**\n\t * Subscribe to topics for transportation\n\t *\n\t * @memberof Transit\n\t */\n\tmakeSubscriptions() {\n\t\tthis.subscribing = this.tx.makeSubscriptions([\n\n\t\t\t// Subscribe to broadcast events\n\t\t\t{ cmd: P.PACKET_EVENT, nodeID: this.nodeID },\n\n\t\t\t// Subscribe to requests\n\t\t\t{ cmd: P.PACKET_REQUEST, nodeID: this.nodeID },\n\n\t\t\t// Subscribe to node responses of requests\n\t\t\t{ cmd: P.PACKET_RESPONSE, nodeID: this.nodeID },\n\n\t\t\t// Discover handler\n\t\t\t{ cmd: P.PACKET_DISCOVER },\n\t\t\t{ cmd: P.PACKET_DISCOVER, nodeID: this.nodeID },\n\n\t\t\t// NodeInfo handler\n\t\t\t{ cmd: P.PACKET_INFO }, // Broadcasted INFO. If a new node connected\n\t\t\t{ cmd: P.PACKET_INFO, nodeID: this.nodeID }, // Response INFO to DISCOVER packet\n\n\t\t\t// Disconnect handler\n\t\t\t{ cmd: P.PACKET_DISCONNECT },\n\n\t\t\t// Heartbeat handler\n\t\t\t{ cmd: P.PACKET_HEARTBEAT },\n\n\t\t\t// Ping handler\n\t\t\t{ cmd: P.PACKET_PING }, // Broadcasted\n\t\t\t{ cmd: P.PACKET_PING, nodeID: this.nodeID }, // Targeted\n\n\t\t\t// Pong handler\n\t\t\t{ cmd: P.PACKET_PONG, nodeID: this.nodeID }\n\n\t\t]).then(() => {\n\t\t\tthis.subscribing = null;\n\t\t});\n\n\t\treturn this.subscribing;\n\t}\n\n\t/**\n\t * Message handler for incoming packets\n\t *\n\t * @param {Array} topic\n\t * @param {String} msg\n\t * @returns {Boolean} If packet is processed return with `true`\n\t *\n\t * @memberof Transit\n\t */\n\tmessageHandler(cmd, packet) {\n\t\ttry {\n\t\t\tconst payload = packet.payload;\n\n\t\t\t// Check payload\n\t\t\tif (!payload) {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthrow new E.MoleculerServerError(\"Missing response payload.\", 500, \"MISSING_PAYLOAD\");\n\t\t\t}\n\n\t\t\t// Check protocol version\n\t\t\tif (payload.ver !== this.broker.PROTOCOL_VERSION && !this.opts.disableVersionCheck) {\n\t\t\t\tthrow new E.ProtocolVersionMismatchError({\n\t\t\t\t\tnodeID: payload.sender,\n\t\t\t\t\tactual: this.broker.PROTOCOL_VERSION,\n\t\t\t\t\treceived: payload.ver\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (payload.sender === this.nodeID) {\n\n\t\t\t\t// Detect nodeID conflict\n\t\t\t\tif (cmd === P.PACKET_INFO && payload.instanceID !== this.instanceID) {\n\t\t\t\t\treturn this.broker.fatal(\"ServiceBroker has detected a nodeID conflict, use unique nodeIDs. ServiceBroker stopped.\");\n\t\t\t\t}\n\n\t\t\t\t// Skip own packets (if only built-in balancer disabled)\n\t\t\t\tif (cmd !== P.PACKET_EVENT && cmd !== P.PACKET_REQUEST && cmd !== P.PACKET_RESPONSE)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Request\n\t\t\tif (cmd === P.PACKET_REQUEST) {\n\t\t\t\treturn this.requestHandler(payload);\n\t\t\t}\n\n\t\t\t// Response\n\t\t\telse if (cmd === P.PACKET_RESPONSE) {\n\t\t\t\tthis.responseHandler(payload);\n\t\t\t}\n\n\t\t\t// Event\n\t\t\telse if (cmd === P.PACKET_EVENT) {\n\t\t\t\tthis.eventHandler(payload);\n\t\t\t}\n\n\t\t\t// Discover\n\t\t\telse if (cmd === P.PACKET_DISCOVER) {\n\t\t\t\tthis.discoverer.sendLocalNodeInfo(payload.sender);\n\t\t\t}\n\n\t\t\t// Node info\n\t\t\telse if (cmd === P.PACKET_INFO) {\n\t\t\t\tthis.discoverer.processRemoteNodeInfo(payload.sender, payload);\n\t\t\t}\n\n\t\t\t// Disconnect\n\t\t\telse if (cmd === P.PACKET_DISCONNECT) {\n\t\t\t\tthis.discoverer.remoteNodeDisconnected(payload.sender, false);\n\t\t\t}\n\n\t\t\t// Heartbeat\n\t\t\telse if (cmd === P.PACKET_HEARTBEAT) {\n\t\t\t\tthis.discoverer.heartbeatReceived(payload.sender, payload);\n\t\t\t}\n\n\t\t\t// Ping\n\t\t\telse if (cmd === P.PACKET_PING) {\n\t\t\t\tthis.sendPong(payload);\n\t\t\t}\n\n\t\t\t// Pong\n\t\t\telse if (cmd === P.PACKET_PONG) {\n\t\t\t\tthis.processPong(payload);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\tthis.logger.error(err, cmd, packet);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Handle incoming event\n\t *\n\t * @param {any} payload\n\t * @memberof Transit\n\t */\n\teventHandler(payload) {\n\t\tthis.logger.debug(`Event '${payload.event}' received from '${payload.sender}' node` + (payload.groups ? ` in '${payload.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\tif (!this.broker.started) {\n\t\t\tthis.logger.warn(`Incoming '${payload.event}' event from '${payload.sender}' node is dropped, because broker is stopped.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Create caller context\n\t\tconst ctx = new this.broker.ContextFactory(this.broker);\n\t\tctx.id = payload.id;\n\t\tctx.eventName = payload.event;\n\t\tctx.setParams(payload.data, this.broker.options.contextParamsCloning);\n\t\tctx.eventGroups = payload.groups;\n\t\tctx.eventType = payload.broadcast ? \"broadcast\" : \"emit\";\n\t\tctx.meta = payload.meta || {};\n\t\tctx.level = payload.level;\n\t\tctx.tracing = !!payload.tracing;\n\t\tctx.parentID = payload.parentID;\n\t\tctx.requestID = payload.requestID;\n\t\tctx.caller = payload.caller;\n\t\tctx.nodeID = payload.sender;\n\n\t\tthis.broker.emitLocalServices(ctx);\n\t}\n\n\t/**\n\t * Handle incoming request\n\t *\n\t * @param {Object} payload\n\t *\n\t * @memberof Transit\n\t */\n\trequestHandler(payload) {\n\t\tthis.logger.debug(`<= Request '${payload.action}' received from '${payload.sender}' node.`);\n\n\t\ttry {\n\t\t\tif (!this.broker.started) {\n\t\t\t\tthis.logger.warn(`Incoming '${payload.action}' request from '${payload.sender}' node is dropped because broker is stopped.`);\n\t\t\t\tthrow new E.ServiceNotAvailableError({ action: payload.action, nodeID: this.nodeID });\n\t\t\t}\n\n\t\t\tlet pass;\n\t\t\tif (payload.stream !== undefined) {\n\t\t\t\tpass = this._handleIncomingRequestStream(payload);\n\t\t\t\tif (pass === null) // eslint-disable-line security/detect-possible-timing-attacks\n\t\t\t\t\treturn this.Promise.resolve();\n\t\t\t}\n\n\t\t\tconst endpoint = this.broker._getLocalActionEndpoint(payload.action);\n\n\t\t\t// Recreate caller context\n\t\t\tconst ctx = new this.broker.ContextFactory(this.broker);\n\t\t\tctx.setEndpoint(endpoint);\n\t\t\tctx.id = payload.id;\n\t\t\tctx.setParams(pass ? pass : payload.params, this.broker.options.contextParamsCloning);\n\t\t\tctx.parentID = payload.parentID;\n\t\t\tctx.requestID = payload.requestID;\n\t\t\tctx.caller = payload.caller;\n\t\t\tctx.meta = payload.meta || {};\n\t\t\tctx.level = payload.level;\n\t\t\tctx.tracing = payload.tracing;\n\t\t\tctx.nodeID = payload.sender;\n\n\t\t\tif (payload.timeout != null)\n\t\t\t\tctx.options.timeout = payload.timeout;\n\n\t\t\tconst p = endpoint.action.handler(ctx);\n\t\t\t// Pointer to Context\n\t\t\tp.ctx = ctx;\n\n\t\t\treturn p\n\t\t\t\t.then(res => this.sendResponse(payload.sender, payload.id, ctx.meta, res, null))\n\t\t\t\t.catch(err => this.sendResponse(payload.sender, payload.id, ctx.meta, null, err));\n\n\t\t} catch (err) {\n\t\t\treturn this.sendResponse(payload.sender, payload.id, payload.meta, null, err);\n\t\t}\n\t}\n\n\t/**\n\t * Handle incoming request stream.\n\t *\n\t * @param {Object} payload\n\t * @returns {Stream}\n\t */\n\t_handleIncomingRequestStream(payload) {\n\t\tlet pass = this.pendingReqStreams.get(payload.id);\n\t\tlet isNew = false;\n\n\t\tif (!payload.stream && !pass) {\n\t\t\t// It is not a stream data\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!pass) {\n\t\t\tisNew = true;\n\t\t\tthis.logger.debug(`<= New stream is received from '${payload.sender}'. Seq: ${payload.seq}`);\n\n\t\t\t// Create a new pass stream\n\t\t\tpass = new Transform({\n\t\t\t\tobjectMode: payload.meta && payload.meta[\"$streamObjectMode\"],\n\t\t\t\ttransform: function(chunk, encoding, done) {\n\t\t\t\t\tthis.push(chunk);\n\t\t\t\t\treturn done();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpass.$prevSeq = -1;\n\t\t\tpass.$pool = new Map();\n\n\t\t\tthis.pendingReqStreams.set(payload.id, pass);\n\t\t}\n\n\t\tif (payload.seq > pass.$prevSeq + 1) {\n\t\t\t// Some chunks are late. Store these chunks.\n\t\t\tthis.logger.info(`Put the chunk into pool (size: ${pass.$pool.size}). Seq: ${payload.seq}`);\n\n\t\t\tpass.$pool.set(payload.seq, payload);\n\n\t\t\t// TODO: start timer.\n\t\t\t// TODO: check length of pool.\n\t\t\t// TODO: reset seq\n\n\t\t\treturn isNew ? pass : null;\n\t\t}\n\n\t\t// the next stream chunk received\n\t\tpass.$prevSeq = payload.seq;\n\n\t\tif (pass.$prevSeq > 0) {\n\t\t\tif (!payload.stream) {\n\n\t\t\t\t// Check stream error\n\t\t\t\tif (payload.meta && payload.meta[\"$streamError\"]) {\n\t\t\t\t\tpass.emit(\"error\", this._createErrFromPayload(payload.meta[\"$streamError\"], payload.sender));\n\t\t\t\t}\n\n\t\t\t\tthis.logger.debug(`<= Stream closing is received from '${payload.sender}'. Seq: ${payload.seq}`);\n\n\t\t\t\t// End of stream\n\t\t\t\tpass.end();\n\n\t\t\t\t// Remove pending request stream\n\t\t\t\tthis.pendingReqStreams.delete(payload.id);\n\n\t\t\t\treturn null;\n\n\t\t\t} else {\n\t\t\t\tthis.logger.debug(`<= Stream chunk is received from '${payload.sender}'. Seq: ${payload.seq}`);\n\t\t\t\tpass.write(payload.params.type === \"Buffer\" ? Buffer.from(payload.params.data) : payload.params);\n\t\t\t}\n\t\t}\n\n\t\t// Check newer chunks in the pool\n\t\tif (pass.$pool.size > 0) {\n\t\t\tthis.logger.warn(`Has stored packets. Size: ${pass.$pool.size}`);\n\t\t\tconst nextSeq = pass.$prevSeq + 1;\n\t\t\tconst nextPacket = pass.$pool.get(nextSeq);\n\t\t\tif (nextPacket) {\n\t\t\t\tpass.$pool.delete(nextSeq);\n\t\t\t\tsetImmediate(() => this.requestHandler(nextPacket));\n\t\t\t}\n\t\t}\n\n\t\treturn isNew ? pass : null;\n\t}\n\n\t/**\n\t * Create an Error instance from payload ata\n\t * @param {Object} error\n\t * @param {String} sender\n\t */\n\t_createErrFromPayload(error, sender) {\n\t\tlet err = E.recreateError(error);\n\t\tif (!err) {\n\t\t\terr = new Error(error.message);\n\t\t\terr.name = error.name;\n\t\t\terr.code = error.code;\n\t\t\terr.type = error.type;\n\t\t\terr.data = error.data;\n\t\t}\n\t\terr.retryable = error.retryable;\n\t\terr.nodeID = error.nodeID || sender;\n\n\t\tif (error.stack)\n\t\t\terr.stack = error.stack;\n\n\t\treturn err;\n\t}\n\n\t/**\n\t * Process incoming response of request\n\t *\n\t * @param {Object} packet\n\t *\n\t * @memberof Transit\n\t */\n\tresponseHandler(packet) {\n\t\tconst id = packet.id;\n\t\tconst req = this.pendingRequests.get(id);\n\n\t\t// If not exists (timed out), we skip response processing\n\t\tif (req == null) {\n\t\t\tthis.logger.debug(\"Orphan response is received. Maybe the request is timed out earlier. ID:\", packet.id, \", Sender:\", packet.sender);\n\t\t\tthis.metrics.increment(METRIC.MOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logger.debug(`<= Response '${req.action.name}' is received from '${packet.sender}'.`);\n\n\t\t// Update nodeID in context (if it uses external balancer)\n\t\treq.ctx.nodeID = packet.sender;\n\n\t\t// Merge response meta with original meta\n\t\tObject.assign(req.ctx.meta || {}, packet.meta || {});\n\n\t\t// Handle stream response\n\t\tif (packet.stream != null) {\n\t\t\tif (this._handleIncomingResponseStream(packet, req))\n\t\t\t\treturn;\n\t\t}\n\n\t\t// Remove pending request\n\t\tthis.removePendingRequest(id);\n\n\t\tif (!packet.success) {\n\t\t\treq.reject(this._createErrFromPayload(packet.error, packet.sender));\n\t\t} else {\n\t\t\treq.resolve(packet.data);\n\t\t}\n\t}\n\n\t/**\n\t * Handle incoming response stream.\n\t *\n\t * @param {Object} packet\n\t * @param {Object} req\n\t */\n\t_handleIncomingResponseStream(packet, req) {\n\t\tlet pass = this.pendingResStreams.get(packet.id);\n\t\tif (!pass && !packet.stream)\n\t\t\treturn false;\n\n\t\tif (!pass) {\n\t\t\tthis.logger.debug(`<= New stream is received from '${packet.sender}'. Seq: ${packet.seq}`);\n\n\t\t\tpass = new Transform({\n\t\t\t\tobjectMode: packet.meta && packet.meta[\"$streamObjectMode\"],\n\t\t\t\ttransform: function(chunk, encoding, done) {\n\t\t\t\t\tthis.push(chunk);\n\t\t\t\t\treturn done();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpass.$prevSeq = -1;\n\t\t\tpass.$pool = new Map();\n\n\t\t\tthis.pendingResStreams.set(packet.id, pass);\n\n\t\t\treq.resolve(pass);\n\t\t}\n\n\t\tif (packet.seq > pass.$prevSeq + 1) {\n\t\t\t// Some chunks are late. Store these chunks.\n\t\t\tthis.logger.info(`Put the chunk into pool (size: ${pass.$pool.size}). Seq: ${packet.seq}`);\n\n\t\t\tpass.$pool.set(packet.seq, packet);\n\n\t\t\t// TODO: start timer.\n\t\t\t// TODO: check length of pool.\n\t\t\t// TODO: resetting seq.\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// the next stream chunk received\n\t\tpass.$prevSeq = packet.seq;\n\n\t\tif (pass.$prevSeq > 0) {\n\n\t\t\tif (!packet.stream) {\n\t\t\t\t// Received error?\n\t\t\t\tif (!packet.success)\n\t\t\t\t\tpass.emit(\"error\", this._createErrFromPayload(packet.error, packet.sender));\n\n\t\t\t\tthis.logger.debug(`<= Stream closing is received from '${packet.sender}'. Seq: ${packet.seq}`);\n\n\t\t\t\t// End of stream\n\t\t\t\tpass.end();\n\n\t\t\t\t// Remove pending request\n\t\t\t\tthis.removePendingRequest(packet.id);\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\t\t\t\t// stream chunk\n\t\t\t\tthis.logger.debug(`<= Stream chunk is received from '${packet.sender}'. Seq: ${packet.seq}`);\n\t\t\t\tpass.write(packet.data.type === \"Buffer\" ? Buffer.from(packet.data.data):packet.data);\n\t\t\t}\n\t\t}\n\n\t\t// Check newer chunks in the pool\n\t\tif (pass.$pool.size > 0) {\n\t\t\tthis.logger.warn(`Has stored packets. Size: ${pass.$pool.size}`);\n\t\t\tconst nextSeq = pass.$prevSeq + 1;\n\t\t\tconst nextPacket = pass.$pool.get(nextSeq);\n\t\t\tif (nextPacket) {\n\t\t\t\tpass.$pool.delete(nextSeq);\n\t\t\t\tsetImmediate(() => this.responseHandler(nextPacket));\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Send a request to a remote service. It returns a Promise\n\t * what will be resolved when the response received.\n\t *\n\t * @param {<Context>} ctx Context of request\n\t * @returns {Promise}\n\t *\n\t * @memberof Transit\n\t */\n\trequest(ctx) {\n\t\tif (this.opts.maxQueueSize && this.pendingRequests.size >= this.opts.maxQueueSize)\n\t\t\t/* istanbul ignore next */\n\t\t\treturn this.Promise.reject(new E.QueueIsFullError({\n\t\t\t\taction: ctx.action.name,\n\t\t\t\tnodeID: this.nodeID,\n\t\t\t\tsize: this.pendingRequests.size,\n\t\t\t\tlimit: this.opts.maxQueueSize\n\t\t\t}));\n\n\t\t// Expanded the code that v8 can optimize it.  (TryCatchStatement disable optimizing)\n\t\treturn new this.Promise((resolve, reject) => this._sendRequest(ctx, resolve, reject));\n\t}\n\n\t/**\n\t * Send a remote request\n\t *\n\t * @param {<Context>} ctx      Context of request\n\t * @param {Function} resolve   Resolve of Promise\n\t * @param {Function} reject    Reject of Promise\n\t *\n\t * @memberof Transit\n\t */\n\t_sendRequest(ctx, resolve, reject) {\n\t\tconst isStream = ctx.params && ctx.params.readable === true && typeof ctx.params.on === \"function\" && typeof ctx.params.pipe === \"function\";\n\n\t\tconst request = {\n\t\t\taction: ctx.action,\n\t\t\tnodeID: ctx.nodeID,\n\t\t\tctx,\n\t\t\tresolve,\n\t\t\treject,\n\t\t\tstream: isStream // ???\n\t\t};\n\n\t\tconst payload = {\n\t\t\tid: ctx.id,\n\t\t\taction: ctx.action.name,\n\t\t\tparams: isStream ? null : ctx.params,\n\t\t\tmeta: ctx.meta,\n\t\t\ttimeout: ctx.options.timeout,\n\t\t\tlevel: ctx.level,\n\t\t\ttracing: ctx.tracing,\n\t\t\tparentID: ctx.parentID,\n\t\t\trequestID: ctx.requestID,\n\t\t\tcaller: ctx.caller,\n\t\t\tstream: isStream,\n\t\t};\n\n\t\tif (payload.stream) {\n\t\t\tif (ctx.params.readableObjectMode === true || (ctx.params._readableState && ctx.params._readableState.objectMode === true)) {\n\t\t\t\tpayload.meta = payload.meta || {};\n\t\t\t\tpayload.meta[\"$streamObjectMode\"] = true;\n\t\t\t}\n\t\t\tpayload.seq = 0;\n\t\t}\n\n\t\tconst packet = new Packet(P.PACKET_REQUEST, ctx.nodeID, payload);\n\n\t\tconst nodeName = ctx.nodeID ? `'${ctx.nodeID}'` : \"someone\";\n\t\tthis.logger.debug(`=> Send '${ctx.action.name}' request to ${nodeName} node.`);\n\n\t\tconst publishCatch = /* istanbul ignore next */ err => this.logger.error(`Unable to send '${ctx.action.name}' request to ${nodeName} node.`, err);\n\n\t\t// Add to pendings\n\t\tthis.pendingRequests.set(ctx.id, request);\n\n\t\t// Publish request\n\t\treturn this.publish(packet)\n\t\t\t.then(() => {\n\t\t\t\tif (isStream) {\n\t\t\t\t\t// Skip to send ctx.meta with chunks because it doesn't appear on the remote side.\n\t\t\t\t\tpayload.meta = {};\n\t\t\t\t\t// Still send information about objectMode in case of packets are received in wrong order\n\t\t\t\t\tif (ctx.params.readableObjectMode === true || (ctx.params._readableState && ctx.params._readableState.objectMode === true)) {\n\t\t\t\t\t\tpayload.meta[\"$streamObjectMode\"] = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst stream = ctx.params;\n\t\t\t\t\tstream.on(\"data\", (chunk) => {\n\t\t\t\t\t\tstream.pause();\n\t\t\t\t\t\tconst chunks = [];\n\t\t\t\t\t\tif (chunk instanceof Buffer && this.opts.maxChunkSize > 0 && chunk.length > this.opts.maxChunkSize) {\n\t\t\t\t\t\t\tlet len = chunk.length;\n\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\twhile (i < len) {\n\t\t\t\t\t\t\t\tchunks.push(chunk.slice(i, i += this.opts.maxChunkSize));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const ch of chunks) {\n\t\t\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\t\t\tcopy.stream = true;\n\t\t\t\t\t\t\tcopy.params = ch;\n\n\t\t\t\t\t\t\tthis.logger.debug(`=> Send stream chunk to ${nodeName} node. Seq: ${copy.seq}`);\n\n\t\t\t\t\t\t\tthis.publish(new Packet(P.PACKET_REQUEST, ctx.nodeID, copy))\n\t\t\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstream.resume();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.on(\"end\", () => {\n\t\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\t\tcopy.params = null;\n\t\t\t\t\t\tcopy.stream = false;\n\n\t\t\t\t\t\tthis.logger.debug(`=> Send stream closing to ${nodeName} node. Seq: ${copy.seq}`);\n\n\t\t\t\t\t\treturn this.publish(new Packet(P.PACKET_REQUEST, ctx.nodeID, copy))\n\t\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.on(\"error\", err => {\n\t\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\t\tcopy.stream = false;\n\t\t\t\t\t\tcopy.meta[\"$streamError\"] = this._createPayloadErrorField(err);\n\t\t\t\t\t\tcopy.params = null;\n\n\t\t\t\t\t\tthis.logger.debug(`=> Send stream error to ${nodeName} node.`, copy.meta[\"$streamError\"]);\n\n\t\t\t\t\t\treturn this.publish(new Packet(P.PACKET_REQUEST, ctx.nodeID, copy))\n\t\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tpublishCatch(err);\n\t\t\t\treject(err);\n\t\t\t});\n\t}\n\n\t/**\n\t * Send an event to a remote node.\n\t * The event is balanced by transporter\n\t *\n\t * @param {Context} ctx\n\t *\n\t * @memberof Transit\n\t */\n\tsendEvent(ctx) {\n\t\tconst groups = ctx.eventGroups;\n\t\tif (ctx.endpoint)\n\t\t\tthis.logger.debug(`=> Send '${ctx.eventName}' event to '${ctx.nodeID}' node` + (groups ? ` in '${groups.join(\", \")}' group(s)` : \"\") + \".\");\n\t\telse\n\t\t\tthis.logger.debug(`=> Send '${ctx.eventName}' event to '${groups.join(\", \")}' group(s).`);\n\n\t\treturn this.publish(new Packet(P.PACKET_EVENT, ctx.endpoint ? ctx.nodeID : null, {\n\t\t\tid: ctx.id,\n\t\t\tevent: ctx.eventName,\n\t\t\tdata: ctx.params,\n\t\t\tgroups,\n\t\t\tbroadcast: ctx.eventType == \"broadcast\",\n\t\t\tmeta: ctx.meta,\n\t\t\tlevel: ctx.level,\n\t\t\ttracing: ctx.tracing,\n\t\t\tparentID: ctx.parentID,\n\t\t\trequestID: ctx.requestID,\n\t\t\tcaller: ctx.caller,\n\t\t\tneedAck: ctx.needAck\n\t\t})).catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send '${ctx.eventName}' event to groups.`, err));\n\t}\n\n\t/**\n\t * Remove a pending request\n\t *\n\t * @param {any} id\n\t *\n\t * @memberof Transit\n\t */\n\tremovePendingRequest(id) {\n\t\tthis.pendingRequests.delete(id);\n\n\t\tthis.pendingReqStreams.delete(id);\n\t\tthis.pendingResStreams.delete(id);\n\t}\n\n\t/**\n\t * Remove a pending request & streams\n\t *\n\t * @param {String} nodeID\n\t *\n\t * @memberof Transit\n\t */\n\tremovePendingRequestByNodeID(nodeID) {\n\t\tthis.logger.debug(`Remove pending requests of '${nodeID}' node.`);\n\t\tthis.pendingRequests.forEach((req, id) => {\n\t\t\tif (req.nodeID === nodeID) {\n\t\t\t\tthis.pendingRequests.delete(id);\n\n\t\t\t\t// Reject the request\n\t\t\t\treq.reject(new E.RequestRejectedError({\n\t\t\t\t\taction: req.action.name,\n\t\t\t\t\tnodeID: req.nodeID\n\t\t\t\t}));\n\n\t\t\t\tthis.pendingReqStreams.delete(id);\n\t\t\t\tthis.pendingResStreams.delete(id);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Create error field in outgoing payload\n\t *\n\t * @param {Error} err\n\t * @returns {Object}\n\t * @memberof Transit\n\t */\n\t_createPayloadErrorField(err) {\n\t\treturn {\n\t\t\tname: err.name,\n\t\t\tmessage: err.message,\n\t\t\tnodeID: err.nodeID || this.nodeID,\n\t\t\tcode: err.code,\n\t\t\ttype: err.type,\n\t\t\tretryable: err.retryable,\n\t\t\tstack: err.stack,\n\t\t\tdata: err.data\n\t\t};\n\t}\n\n\t/**\n\t * Send back the response of request\n\t *\n\t * @param {String} nodeID\n\t * @param {String} id\n\t * @param {any} meta\n\t * @param {any} data\n\t * @param {Error} err\n\t *\n\t * @memberof Transit\n\t */\n\tsendResponse(nodeID, id, meta, data, err) {\n\t\t// Publish the response\n\t\tconst payload = {\n\t\t\tid: id,\n\t\t\tmeta: meta,\n\t\t\tsuccess: err == null,\n\t\t\tdata: data\n\t\t};\n\n\t\tif (err)\n\t\t\tpayload.error = this._createPayloadErrorField(err);\n\n\t\tconst publishCatch = /* istanbul ignore next */ err => this.logger.error(`Unable to send '${id}' response to '${nodeID}' node.`, err);\n\n\t\tif (data && data.readable === true && typeof data.on === \"function\" && typeof data.pipe === \"function\") {\n\t\t\t// Streaming response\n\t\t\tpayload.stream = true;\n\t\t\tif (data.readableObjectMode === true || (data._readableState && data._readableState.objectMode === true)) {\n\t\t\t\tpayload.meta = payload.meta || {};\n\t\t\t\tpayload.meta[\"$streamObjectMode\"] = true;\n\t\t\t}\n\t\t\tpayload.seq = 0;\n\n\t\t\tconst stream = data;\n\t\t\tstream.pause();\n\n\t\t\tstream.on(\"data\", (chunk) => {\n\t\t\t\tstream.pause();\n\t\t\t\tconst chunks = [];\n\t\t\t\tif (chunk instanceof Buffer && this.opts.maxChunkSize > 0 && chunk.length > this.opts.maxChunkSize) {\n\t\t\t\t\tlet len = chunk.length;\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\twhile (i < len) {\n\t\t\t\t\t\tchunks.push(chunk.slice(i, i += this.opts.maxChunkSize));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t\tfor (const ch of chunks) {\n\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\tcopy.stream = true;\n\t\t\t\t\tcopy.data = ch;\n\n\t\t\t\t\tthis.logger.debug(`=> Send stream chunk to ${nodeID} node. Seq: ${copy.seq}`);\n\n\t\t\t\t\tthis.publish(new Packet(P.PACKET_RESPONSE, nodeID, copy))\n\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t}\n\t\t\t\tstream.resume();\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tstream.on(\"end\", () => {\n\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\tcopy.stream = false;\n\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\tcopy.data = null;\n\n\t\t\t\tthis.logger.debug(`=> Send stream closing to ${nodeID} node. Seq: ${copy.seq}`);\n\n\t\t\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, copy))\n\t\t\t\t\t.catch(publishCatch);\n\t\t\t});\n\n\t\t\tstream.on(\"error\", err => {\n\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\tcopy.stream = false;\n\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\tif (err) {\n\t\t\t\t\tcopy.success = false;\n\t\t\t\t\tcopy.error = this._createPayloadErrorField(err);\n\t\t\t\t}\n\n\t\t\t\tthis.logger.debug(`=> Send stream error to ${nodeID} node.`, copy.error);\n\n\t\t\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, copy))\n\t\t\t\t\t.catch(publishCatch);\n\t\t\t});\n\n\t\t\tpayload.data = null;\n\t\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, payload))\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (payload.stream)\n\t\t\t\t\t\tstream.resume();\n\t\t\t\t})\n\t\t\t\t.catch(publishCatch);\n\n\t\t}\n\n\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, payload))\n\t\t\t.catch(publishCatch);\n\t}\n\n\t/**\n\t * Discover other nodes. It will be called after success connect.\n\t *\n\t * @memberof Transit\n\t */\n\tdiscoverNodes() {\n\t\treturn this.publish(new Packet(P.PACKET_DISCOVER))\n\t\t\t.catch(/* istanbul ignore next */ err => this.logger.error(\"Unable to send DISCOVER packet.\", err));\n\t}\n\n\t/**\n\t * Discover a node. It will be called if we got message from an unknown node.\n\t *\n\t * @memberof Transit\n\t */\n\tdiscoverNode(nodeID) {\n\t\treturn this.publish(new Packet(P.PACKET_DISCOVER, nodeID))\n\t\t\t.catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send DISCOVER packet to '${nodeID}' node.`, err));\n\t}\n\n\t/**\n\t * Send node info package to other nodes.\n\t *\n\t * @memberof Transit\n\t */\n\tsendNodeInfo(info, nodeID) {\n\t\tif (!this.connected || !this.isReady) return this.Promise.resolve();\n\n\t\tconst p = !nodeID && this.broker.options.disableBalancer ? this.tx.makeBalancedSubscriptions() : this.Promise.resolve();\n\t\treturn p.then(() => this.publish(new Packet(P.PACKET_INFO, nodeID, {\n\t\t\tservices: info.services,\n\t\t\tipList: info.ipList,\n\t\t\thostname: info.hostname,\n\t\t\tclient: info.client,\n\t\t\tconfig: info.config,\n\t\t\tinstanceID: this.broker.instanceID,\n\t\t\tmetadata: info.metadata,\n\t\t\tseq: info.seq\n\t\t}))).catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send INFO packet to '${nodeID}' node.`, err));\n\n\t}\n\n\t/**\n\t * Send ping to a node (or all nodes if nodeID is null)\n\t *\n\t * @param {String} nodeID\n\t * @param {String} id\n\t * @returns\n\t * @memberof Transit\n\t */\n\tsendPing(nodeID, id) {\n\t\treturn this.publish(new Packet(P.PACKET_PING, nodeID, { time: Date.now(), id: id || this.broker.generateUid() }))\n\t\t\t.catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send PING packet to '${nodeID}' node.`, err));\n\t}\n\n\t/**\n\t * Send back pong response\n\t *\n\t * @param {Object} payload\n\t * @returns\n\t * @memberof Transit\n\t */\n\tsendPong(payload) {\n\t\treturn this.publish(new Packet(P.PACKET_PONG, payload.sender, {\n\t\t\ttime: payload.time,\n\t\t\tid: payload.id,\n\t\t\tarrived: Date.now()\n\t\t})).catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send PONG packet to '${payload.sender}' node.`, err));\n\t}\n\n\t/**\n\t * Process incoming PONG packet.\n\t * Measure ping time & current time difference.\n\t *\n\t * @param {Object} payload\n\t * @memberof Transit\n\t */\n\tprocessPong(payload) {\n\t\tconst now = Date.now();\n\t\tconst elapsedTime = now - payload.time;\n\t\tconst timeDiff = Math.round(now - payload.arrived - elapsedTime / 2);\n\n\t\t// this.logger.debug(`PING-PONG from '${payload.sender}' - Time: ${elapsedTime}ms, Time difference: ${timeDiff}ms`);\n\n\t\tthis.broker.broadcastLocal(\"$node.pong\", { nodeID: payload.sender, elapsedTime, timeDiff, id: payload.id });\n\n\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_PONG_TIME, elapsedTime, { targetNodeID: payload.sender });\n\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_PONG_SYSTIME_DIFF, timeDiff, { targetNodeID: payload.sender });\n\t}\n\n\t/**\n\t * Send a node heartbeat. It will be called with timer from local Discoverer.\n\t *\n\t * @params {Node} localNode\n\t * @memberof Transit\n\t */\n\tsendHeartbeat(localNode) {\n\t\treturn this.publish(new Packet(P.PACKET_HEARTBEAT, null, {\n\t\t\tcpu: localNode.cpu\n\t\t})).catch(/* istanbul ignore next */ err => this.logger.error(\"Unable to send HEARTBEAT packet.\", err));\n\n\t}\n\n\t/**\n\t * Subscribe via transporter\n\t *\n\t * @param {String} topic\n\t * @param {String=} nodeID\n\t *\n\t * @deprecated\n\t * @memberof Transit\n\t */\n\tsubscribe(topic, nodeID) {\n\t\treturn this.tx.subscribe(topic, nodeID);\n\t}\n\n\t/**\n\t * Publish via transporter\n\t *\n\t * @param {Packet} Packet\n\t *\n\t * @memberof Transit\n\t */\n\tpublish(packet) {\n\t\tif (this.subscribing) {\n\t\t\treturn this.subscribing\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn this.tx.prepublish(packet);\n\t\t\t\t});\n\t\t}\n\t\treturn this.tx.prepublish(packet);\n\t}\n\n}\n\nmodule.exports = Transit;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Base strategy class\n *\n * @class BaseStrategy\n */\nclass BaseStrategy {\n\n\t/**\n\t * Constructor\n\t *\n\t * @param {ServiceRegistry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Object?} opts\n\t */\n\tconstructor(registry, broker, opts) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.opts = opts || {};\n\t}\n\n\t/**\n\t * Select an endpoint.\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @param {Context?} ctx\n\t *\n\t * @memberof BaseStrategy\n\t */\n\tselect(/*list, ctx*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n}\n\nmodule.exports = BaseStrategy;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseStrategy = require(\"./base\");\n\n/**\n * Round-robin strategy class\n *\n * @class RoundRobinStrategy\n */\nclass RoundRobinStrategy extends BaseStrategy {\n\n\tconstructor(registry, broker, opts) {\n\t\tsuper(registry, broker, opts);\n\n\t\tthis.counter = 0;\n\t}\n\n\tselect(list) {\n\t\t// Reset counter\n\t\tif (this.counter >= list.length) {\n\t\t\tthis.counter = 0;\n\t\t}\n\t\treturn list[this.counter++];\n\t}\n\n}\n\nmodule.exports = RoundRobinStrategy;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { random } = require(\"lodash\");\nconst BaseStrategy = require(\"./base\");\n\n/**\n * Random strategy class\n *\n * @class RandomStrategy\n */\nclass RandomStrategy extends BaseStrategy {\n\tselect(list) {\n\t\treturn list[random(0, list.length - 1)];\n\t}\n}\n\nmodule.exports = RandomStrategy;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst { random } = require(\"lodash\");\nconst BaseStrategy = require(\"./base\");\n\n/**\n * Lowest latency invocation strategy\n *\n * Since Strategy can be instantiated multiple times, therefore,\n * we need to have a \"master\" instance to send ping, and each\n * individual \"slave\" instance will update their list dynamically\n *\n * These options can be configured in broker registry options:\n *\n * const broker = new ServiceBroker({\n * \tlogger: true,\n * \tregistry: {\n * \t\tstrategy: \"LatencyStrategy\",\n * \t\tstrategyOptions: {\n * \t\t\tsampleCount: 5,\n * \t\t\tlowLatency: 10,\n * \t\t\tcollectCount: 5,\n * \t\t\tpingInterval: 10\n * \t\t}\n * \t}\n * });\n *\n * @class LatencyStrategy\n */\nclass LatencyStrategy extends BaseStrategy {\n\n\tconstructor(registry, broker, opts) {\n\t\tsuper(registry, broker, opts);\n\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tsampleCount: 5,\n\t\t\tlowLatency: 10,\n\t\t\tcollectCount: 5,\n\t\t\tpingInterval: 10\n\t\t});\n\n\t\tthis.brokerStopped = false;\n\n\t\tthis.hostAvgLatency = new Map();\n\n\t\t/* hostMap contains:\n\t\t\thostname => {\n\t\t\t\thistoricLatency: [],\n\t\t\t\tnodeList: []\n\t\t\t}\n\t\t*/\n\t\tthis.hostMap = new Map();\n\n\t\t// short circuit\n\t\tif (!this.broker.transit) return;\n\n\t\tif (this.broker.localBus.listenerCount(\"$node.latencyMaster\") === 0) {\n\t\t\t// claim as master\n\t\t\tthis.broker.localBus.on(\"$node.latencyMaster\", function() {});\n\t\t\t// respond to PONG\n\t\t\tthis.broker.localBus.on(\"$node.pong\", this.processPong.bind(this));\n\t\t\t// dynamically add new node\n\t\t\tthis.broker.localBus.on(\"$node.connected\", this.addNode.bind(this));\n\t\t\t// dynamically remove node\n\t\t\tthis.broker.localBus.on(\"$node.disconnected\", this.removeHostMap.bind(this));\n\t\t\t// try to discovery all nodes on start up\n\t\t\tthis.broker.localBus.on(\"$broker.started\", this.discovery.bind(this));\n\t\t\t// clean up ourselves\n\t\t\tthis.broker.localBus.on(\"$broker.stopped\", () => this.brokerStopped = true);\n\t\t} else {\n\t\t\t// remove node if we are told by master\n\t\t\tthis.broker.localBus.on(\"$node.latencySlave.removeHost\", this.removeHostLatency.bind(this));\n\t\t}\n\n\t\tthis.broker.localBus.on(\"$node.latencySlave\", this.updateLatency.bind(this));\n\t}\n\n\t// Master\n\tdiscovery() {\n\t\treturn this.broker.transit.sendPing().then(() => {\n\t\t\tconst timer = setTimeout(() => this.pingHosts(), 1000 * this.opts.pingInterval);\n\t\t\ttimer.unref();\n\t\t});\n\t}\n\n\t// Master\n\tpingHosts() {\n\n\t\t/* istanbul ignore next */\n\t\tif (this.brokerStopped) return;\n\t\t/*\n\t\t\tSmart Ping: only ping the host, not the nodes (which may be many)\n\n\t\t\tAlthough, if that particular node on the host is overloaded,\n\t\t\tthe measurement may be skewed.\n\t\t*/\n\t\tconst hosts = Array.from(this.hostMap.values());\n\n\t\treturn this.broker.Promise.all(hosts.map(host => { // TODO: missing concurency: 5, here was bluebird Promise.map\n\t\t\t// Select a nodeID randomly\n\t\t\tconst nodeID = host.nodeList[random(0, host.nodeList.length - 1)];\n\t\t\treturn this.broker.transit.sendPing(nodeID);\n\t\t})).then(() => {\n\t\t\tconst timer = setTimeout(() => this.pingHosts(), 1000 * this.opts.pingInterval);\n\t\t\ttimer.unref();\n\t\t});\n\t}\n\n\t// Master\n\tprocessPong(payload) {\n\t\tlet node = this.registry.nodes.get(payload.nodeID);\n\n\t\t/* istanbul ignore next */\n\t\tif (!node) return;\n\n\t\tlet info = this.getHostLatency(node);\n\n\t\tif (info.historicLatency.length > (this.opts.collectCount - 1))\n\t\t\tinfo.historicLatency.shift();\n\n\t\tinfo.historicLatency.push(payload.elapsedTime);\n\n\t\tconst avgLatency = info.historicLatency.reduce((sum, latency) => sum + latency, 0) / info.historicLatency.length;\n\n\t\tthis.broker.localBus.emit(\"$node.latencySlave\", {\n\t\t\thostname: node.hostname,\n\t\t\tavgLatency: avgLatency\n\t\t});\n\t}\n\n\t// Master\n\tgetHostLatency(node) {\n\t\tlet info = this.hostMap.get(node.hostname);\n\t\tif (typeof info === \"undefined\") {\n\t\t\tinfo = {\n\t\t\t\thistoricLatency: [],\n\t\t\t\tnodeList: [ node.id ]\n\t\t\t};\n\t\t\tthis.hostMap.set(node.hostname, info);\n\t\t}\n\t\treturn info;\n\t}\n\n\t// Master\n\taddNode(payload) {\n\t\tlet node = payload.node;\n\n\t\t// each host may have multiple nodes\n\t\tlet info = this.getHostLatency(node);\n\t\tif (info.nodeList.indexOf(node.id) === -1) {\n\t\t\tinfo.nodeList.push(node.id);\n\t\t}\n\t}\n\n\t// Master\n\tremoveHostMap(payload) {\n\t\tlet node = payload.node;\n\n\t\tlet info = this.hostMap.get(node.hostname);\n\t\t// This exists to make sure that we don't get an \"undefined\",\n\t\t// \ttherefore the test coverage here is unnecessary.\n\t\t/* istanbul ignore next */\n\t\tif (typeof info === \"undefined\") return;\n\n\t\tinfo.nodeList = info.nodeList.filter(id => id !== node.id);\n\n\t\tif (info.nodeList.length == 0) {\n\t\t\t// only remove the host if the last node disconnected\n\t\t\tthis.broker.localBus.emit(\"$node.latencySlave.removeHost\", node.hostname);\n\t\t\tthis.hostMap.delete(node.hostname);\n\t\t}\n\t}\n\n\t// Master + Slave\n\tupdateLatency(payload) {\n\t\tthis.hostAvgLatency.set(payload.hostname, payload.avgLatency);\n\t}\n\n\t// Slave\n\tremoveHostLatency(hostname) {\n\t\tthis.hostAvgLatency.delete(hostname);\n\t}\n\n\t/**\n\t * Select an endpoint by network latency\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @returns {Endpoint}\n\t * @memberof LatencyStrategy\n\t */\n\tselect(list) {\n\t\tlet minEp = null;\n\t\tlet minLatency = null;\n\n\t\tconst sampleCount = this.opts.sampleCount;\n\t\tconst count = sampleCount <= 0 || sampleCount > list.length ? list.length : sampleCount;\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tlet ep;\n\t\t\t// Get random endpoint\n\t\t\tif (count == list.length) {\n\t\t\t\tep = list[i];\n\t\t\t} else {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tep = list[random(0, list.length - 1)];\n\t\t\t}\n\t\t\tconst epLatency = this.hostAvgLatency.get(ep.node.hostname);\n\n\t\t\t// Check latency of endpoint\n\t\t\tif (typeof epLatency !== \"undefined\") {\n\n\t\t\t\tif (epLatency < this.opts.lowLatency)\n\t\t\t\t\treturn ep;\n\n\t\t\t\tif (!minEp || !minLatency || epLatency < minLatency) {\n\t\t\t\t\tminLatency = epLatency;\n\t\t\t\t\tminEp = ep;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Return the lowest latency\n\t\tif (minEp) {\n\t\t\treturn minEp;\n\t\t}\n\n\t\t// Return a random item (no latency data)\n\t\treturn list[random(0, list.length - 1)];\n\t}\n}\n\nmodule.exports = LatencyStrategy;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst BaseStrategy = require(\"./base\");\nconst crypto = require(\"crypto\");\nconst LRU = require(\"lru-cache\");\nconst { isFunction } = require(\"../utils\");\n\n/**\n * Sharding invocation strategy\n *\n * Using consistent-hashing. More info: https://www.toptal.com/big-data/consistent-hashing\n *\n * @class ShardStrategy\n */\nclass ShardStrategy extends BaseStrategy {\n\n\tconstructor(registry, broker, opts) {\n\t\tsuper(registry, broker, opts);\n\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tshardKey: null,\n\t\t\tvnodes: 10,\n\t\t\tringSize: null,\n\t\t\tcacheSize: 1000\n\t\t});\n\n\t\tthis.cache = new LRU({\n\t\t\tmax: this.opts.cacheSize,\n\t\t\tmaxAge: null\n\t\t});\n\n\t\tthis.needRebuild = true;\n\t\tthis.ring = [];\n\n\t\tbroker.localBus.on(\"$node.**\", () => this.needRebuild = true);\n\t}\n\n\t/**\n\t * Get key field value from Context.\n\t *\n\t * @param {Context} ctx\n\t * @returns {any}\n\t * @memberof ShardStrategy\n\t */\n\tgetKeyFromContext(ctx) {\n\t\tif (!this.opts.shardKey)  return null;\n\n\t\tif (isFunction(this.opts.shardKey))\n\t\t\treturn this.opts.shardKey.call(this, ctx);\n\n\t\tif (this.opts.shardKey.startsWith(\"#\"))\n\t\t\treturn _.get(ctx.meta, this.opts.shardKey.slice(1));\n\n\t\treturn _.get(ctx.params, this.opts.shardKey);\n\t}\n\n\t/**\n\t * Select an endpoint by sharding.\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @param {Context} ctx\n\t * @returns {Endpoint}\n\t * @memberof ShardStrategy\n\t */\n\tselect(list, ctx) {\n\t\tlet key = this.getKeyFromContext(ctx);\n\t\tif (key != null) {\n\t\t\tif (this.needRebuild)\n\t\t\t\tthis.rebuild(list);\n\n\t\t\tconst nodeID = this.getNodeIDByKey(key);\n\t\t\tif (nodeID)\n\t\t\t\treturn list.find(ep => ep.id == nodeID);\n\t\t}\n\n\t\t// Return a random item (no key)\n\t\treturn list[_.random(0, list.length - 1)];\n\t}\n\n\t/**\n\t * Get nodeID by a hashed numeric key.\n\t *\n\t * @param {Number} key\n\t * @returns {String}\n\t * @memberof ShardStrategy\n\t */\n\tgetNodeIDByKey(key) {\n\t\tif (this.cache) {\n\t\t\tconst cached = this.cache.get(key);\n\t\t\tif (cached) return cached;\n\t\t}\n\n\t\tconst hashNum = this.getHash(key.toString());\n\n\t\tlet found;\n\t\tconst ringLen = this.ring.length;\n\t\tfor(let i = 0; i < ringLen; i++) {\n\t\t\tif (hashNum <= this.ring[i].key) {\n\t\t\t\tfound = this.ring[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (found) {\n\t\t\tif (this.cache)\n\t\t\t\tthis.cache.set(key, found.nodeID);\n\t\t\treturn found.nodeID;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Calculate 8 bit integer hash from string key based on MD5 hash.\n\t *\n\t * @param {String} key\n\t * @returns {Number}\n\t * @memberof ShardStrategy\n\t */\n\tgetHash(key) {\n\t\tconst hash = crypto.createHash(\"md5\").update(key).digest(\"hex\");\n\t\tconst hashNum = parseInt(hash.substring(0,8), 16);\n\t\treturn this.opts.ringSize ? hashNum % this.opts.ringSize : hashNum;\n\t}\n\n\t/**\n\t * Rebuild the node hashring.\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @memberof ShardStrategy\n\t */\n\trebuild(list) {\n\t\tthis.cache.reset();\n\t\tthis.ring = [];\n\n\t\tconst arr = list\n\t\t\t.map(ep => ep.id)\n\t\t\t.sort();\n\n\t\tconst total = arr.length * this.opts.vnodes;\n\t\tconst ringSize = this.opts.ringSize ? this.opts.ringSize : Math.pow(2, 32);\n\t\tconst slice = ringSize / total;\n\n\t\tfor (let j = 0; j < this.opts.vnodes; j++) {\n\t\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\t\tconst nodeID = arr[i];\n\t\t\t\tthis.ring.push({\n\t\t\t\t\tkey: Math.floor(slice * (this.ring.length + 1)),\n\t\t\t\t\tnodeID: nodeID\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Set the latest value to the last slice.\n\t\tthis.ring[this.ring.length - 1].key = ringSize;\n\n\t\tthis.needRebuild = false;\n\t}\n\n}\n\nmodule.exports = ShardStrategy;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Strategies = {\n\tBase: require(\"./base\"),\n\tRoundRobin: require(\"./round-robin\"),\n\tRandom: require(\"./random\"),\n\tCpuUsage: require(\"./cpu-usage\"),\n\tLatency: require(\"./latency\"),\n\tShard: require(\"./shard\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Strategies).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Strategies[n];\n}\n\n/**\n * Resolve strategy by name\n *\n * @param {object|string} opt\n * @returns {Strategy}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (Object.prototype.isPrototypeOf.call(Strategies.Base, opt)) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet StrategyClass = getByName(opt);\n\t\tif (StrategyClass)\n\t\t\treturn StrategyClass;\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid strategy type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet StrategyClass = getByName(opt.type || \"RoundRobin\");\n\t\tif (StrategyClass)\n\t\t\treturn StrategyClass;\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid strategy type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn Strategies.RoundRobin;\n}\n\n\nfunction register(name, value) {\n\tStrategies[name] = value;\n}\n\nmodule.exports = Object.assign(Strategies, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\n/**\n * Abstract Discoverer class\n *\n * @class BaseDiscoverer\n */\nclass BaseDiscoverer {\n\n\t/**\n\t * Creates an instance of Discoverer.\n\t *\n\t * @memberof BaseDiscoverer\n\t */\n\tconstructor(opts) {\n\t\tthis.Promise = Promise; // while `init` is not called\n\n\t\tthis.opts = _.defaultsDeep({}, opts, {\n\t\t\theartbeatInterval: null,\n\t\t\theartbeatTimeout: null,\n\n\t\t\tdisableHeartbeatChecks: false,\n\t\t\tdisableOfflineNodeRemoving: false,\n\t\t\tcleanOfflineNodesTimeout: 10 * 60, // 10 minutes\n\t\t});\n\n\t\t// Timer variables\n\t\tthis.heartbeatTimer = null;\n\t\tthis.checkNodesTimer = null;\n\t\tthis.offlineTimer = null;\n\n\t\t// Pointer for the local `Node` instance\n\t\tthis.localNode = null;\n\t}\n\n\t/**\n\t * Initialize Discoverer\n\t *\n\t * @param {ServiceRegistry} registry\n\t */\n\tinit(registry) {\n\t\tthis.registry = registry;\n\t\tthis.broker = registry.broker;\n\t\tthis.Promise = this.broker.Promise;\n\n\t\tif (this.broker) {\n\t\t\tthis.logger = this.broker.getLogger(\"Discovery\");\n\t\t\tthis.transit = this.broker.transit;\n\n\t\t\t// Get HB time settings from broker options. Backward compatibility\n\t\t\tif (this.opts.heartbeatInterval == null)\n\t\t\t\tthis.opts.heartbeatInterval = this.broker.options.heartbeatInterval;\n\t\t\tif (this.opts.heartbeatTimeout == null)\n\t\t\t\tthis.opts.heartbeatTimeout = this.broker.options.heartbeatTimeout;\n\t\t}\n\n\t\tif (this.transit) {\n\t\t\tthis.broker.localBus.on(\"$transporter.connected\", () => this.startHeartbeatTimers());\n\t\t\tthis.broker.localBus.on(\"$transporter.disconnected\", () => this.stopHeartbeatTimers());\n\t\t}\n\n\t\tthis.localNode = this.registry.nodes.localNode;\n\n\t\tthis.registerMoleculerMetrics();\n\t}\n\n\t/**\n\t * Stop discoverer clients.\n\t */\n\tstop() {\n\t\tthis.stopHeartbeatTimers();\n\t\treturn this.Promise.resolve();\n\t}\n\n\t/**\n\t * Register Moleculer Transit Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Start heartbeat timers\n\t */\n\tstartHeartbeatTimers() {\n\t\tthis.stopHeartbeatTimers();\n\n\t\tif (this.opts.heartbeatInterval > 0) {\n\t\t\t// HB timer\n\t\t\tconst time = this.opts.heartbeatInterval * 1000 + (Math.round(Math.random() * 1000) - 500); // random +/- 500ms\n\t\t\tthis.heartbeatTimer = setInterval(() => this.beat(), time);\n\t\t\tthis.heartbeatTimer.unref();\n\n\t\t\t// Check expired heartbeats of remote nodes timer\n\t\t\tthis.checkNodesTimer = setInterval(() => this.checkRemoteNodes(), this.opts.heartbeatTimeout * 1000);\n\t\t\tthis.checkNodesTimer.unref();\n\n\t\t\t// Clean offline nodes timer\n\t\t\tthis.offlineTimer = setInterval(() => this.checkOfflineNodes(), 60 * 1000); // 1 min\n\t\t\tthis.offlineTimer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Stop heartbeat timers\n\t */\n\tstopHeartbeatTimers() {\n\t\tif (this.heartbeatTimer) {\n\t\t\tclearInterval(this.heartbeatTimer);\n\t\t\tthis.heartbeatTimer = null;\n\t\t}\n\n\t\tif (this.checkNodesTimer) {\n\t\t\tclearInterval(this.checkNodesTimer);\n\t\t\tthis.checkNodesTimer = null;\n\t\t}\n\n\t\tif (this.offlineTimer) {\n\t\t\tclearInterval(this.offlineTimer);\n\t\t\tthis.offlineTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Disable built-in Heartbeat logic. Used by TCP transporter\n\t */\n\tdisableHeartbeat() {\n\t\tthis.opts.heartbeatInterval = 0;\n\t\tthis.stopHeartbeatTimers();\n\t}\n\n\t/**\n\t * Heartbeat method.\n\t */\n\tbeat() {\n\t\t// Update the local CPU usage before sending heartbeat.\n\t\treturn this.localNode.updateLocalInfo(this.broker.getCpuUsage)\n\t\t\t.then(() => this.sendHeartbeat());\n\t}\n\n\t/**\n\t * Check all registered remote nodes are available.\n\t */\n\tcheckRemoteNodes() {\n\t\tif (this.disableHeartbeatChecks) return;\n\n\t\tconst now = Math.round(process.uptime());\n\t\tthis.registry.nodes.toArray().forEach(node => {\n\t\t\tif (node.local || !node.available) return;\n\t\t\tif (!node.lastHeartbeatTime) {\n\t\t\t\t// Még nem jött be az első heartbeat.\n\t\t\t\tnode.lastHeartbeatTime = now;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (now - node.lastHeartbeatTime > this.broker.options.heartbeatTimeout) {\n\t\t\t\tthis.logger.warn(`Heartbeat is not received from '${node.id}' node.`);\n\t\t\t\tthis.registry.nodes.disconnected(node.id, true);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Check offline nodes. Remove which is older than 10 minutes.\n\t */\n\tcheckOfflineNodes() {\n\t\tif (this.disableOfflineNodeRemoving || !this.opts.cleanOfflineNodesTimeout) return;\n\n\t\tconst now = Math.round(process.uptime());\n\t\tthis.registry.nodes.toArray().forEach(node => {\n\t\t\tif (node.local || node.available) return;\n\t\t\tif (!node.lastHeartbeatTime) {\n\t\t\t\t// Még nem jött be az első heartbeat.\n\t\t\t\tnode.lastHeartbeatTime = now;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (now - node.lastHeartbeatTime > this.opts.cleanOfflineNodesTimeout) {\n\t\t\t\tthis.logger.warn(`Removing offline '${node.id}' node from registry because it hasn't submitted heartbeat signal for 10 minutes.`);\n\t\t\t\tthis.registry.nodes.delete(node.id);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Heartbeat received from a remote node.\n\t *\n\t * @param {String} nodeID\n\t * @param {Object} payload\n\t */\n\theartbeatReceived(nodeID, payload) {\n\t\tconst node = this.registry.nodes.get(nodeID);\n\t\tif (node) {\n\t\t\tif (!node.available) {\n\t\t\t\t// Reconnected node. Request a fresh INFO\n\t\t\t\tthis.discoverNode(nodeID);\n\t\t\t} else {\n\t\t\t\tif (payload.seq != null && node.seq !== payload.seq) {\n\t\t\t\t\t// Some services changed on the remote node. Request a new INFO\n\t\t\t\t\tthis.discoverNode(nodeID);\n\t\t\t\t} else if (payload.instanceID != null && !node.instanceID.startsWith(payload.instanceID)) {\n\t\t\t\t\t// The node has been restarted. Request a new INFO\n\t\t\t\t\tthis.discoverNode(nodeID);\n\t\t\t\t} else {\n\t\t\t\t\tnode.heartbeat(payload);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Unknow node. Request an INFO\n\t\t\tthis.discoverNode(nodeID);\n\t\t}\n\t}\n\n\t/**\n\t * Received an INFO from a remote node.\n\t *\n\t * @param {String} nodeID\n\t * @param {Object} payload\n\t */\n\tprocessRemoteNodeInfo(nodeID, payload) {\n\t\treturn this.broker.registry.processNodeInfo(payload);\n\t}\n\n\t/**\n\t * Sending a local heartbeat to remote nodes.\n\t */\n\tsendHeartbeat() {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.sendHeartbeat(this.localNode);\n\t}\n\n\t/**\n\t * Discover a new or old node by nodeID\n\t *\n\t * @param {String} nodeID\n\t */\n\tdiscoverNode() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Discover all nodes (after connected)\n\t */\n\tdiscoverAllNodes() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Called when the local node is ready (transporter connected)\n\t */\n\tlocalNodeReady() {\n\t\t// Local node has started all local services. We send a new INFO packet\n\t\t// which contains the local services because we are ready to accept incoming requests.\n\t\treturn this.sendLocalNodeInfo();\n\t}\n\n\t/**\n\t * Local service registry has been changed. We should notify remote nodes.\n\t *\n\t * @param {String} nodeID\n\t */\n\tsendLocalNodeInfo() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Called when the local node disconnected.\n\t * You can clean it from the remote registry.\n\t */\n\tlocalNodeDisconnected() {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.sendDisconnectPacket();\n\t}\n\n\t/**\n\t * Called when a remote node disconnected (received DISCONNECT packet)\n\t * You can clean it from local registry.\n\t *\n\t * @param {String} nodeID\n\t * @param {Boolean} isUnexpected\n\t */\n\tremoteNodeDisconnected(nodeID, isUnexpected) {\n\t\treturn this.registry.nodes.disconnected(nodeID, isUnexpected);\n\t}\n\n}\n\nmodule.exports = BaseDiscoverer;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseDiscoverer = require(\"./base\");\n\n/**\n * Local (built-in) Discoverer class\n *\n * @class Discoverer\n */\nclass LocalDiscoverer extends BaseDiscoverer {\n\n\t/**\n\t * Creates an instance of Discoverer.\n\t *\n\t * @memberof LocalDiscoverer\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t}\n\n\t/**\n\t * Initialize Discoverer\n\t *\n\t * @param {any} registry\n\t *\n\t * @memberof LocalDiscoverer\n\t */\n\tinit(registry) {\n\t\tsuper.init(registry);\n\t}\n\n\t/**\n\t * Discover a new or old node.\n\t *\n\t * @param {String} nodeID\n\t */\n\tdiscoverNode(nodeID) {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.discoverNode(nodeID);\n\t}\n\n\t/**\n\t * Discover all nodes (after connected)\n\t */\n\tdiscoverAllNodes() {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.discoverNodes();\n\t}\n\n\t/**\n\t * Local service registry has been changed. We should notify remote nodes.\n\t *\n\t * @param {String} nodeID\n\t */\n\tsendLocalNodeInfo(nodeID) {\n\t\tif (!this.transit) return this.Promise.resolve();\n\n\t\tconst info = this.broker.getLocalNodeInfo();\n\t\treturn this.transit.sendNodeInfo(info, nodeID);\n\t}\n\n}\n\nmodule.exports = LocalDiscoverer;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { BrokerOptionsError } = require(\"../../errors\");\nconst { isObject, isString } = require(\"../../utils\");\n\nconst Discoverers = {\n\tBase: require(\"./base\"),\n\tLocal: require(\"./local\"),\n\tEtcd3: require(\"./etcd3\"),\n\tRedis: require(\"./redis\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Discoverers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Discoverers[n];\n}\n\n/**\n * Resolve discoverer by name\n *\n * @param {object|string} opt\n * @returns {Discoverer}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Discoverers.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet DiscovererClass = getByName(opt);\n\t\tif (DiscovererClass)\n\t\t\treturn new DiscovererClass();\n\n\t\tif (opt.startsWith(\"redis://\"))\n\t\t\treturn new Discoverers.Redis(opt);\n\n\t\tif (opt.startsWith(\"etcd3://\"))\n\t\t\treturn new Discoverers.Etcd3(opt);\n\n\t\tthrow new BrokerOptionsError(`Invalid Discoverer type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet DiscovererClass = getByName(opt.type || \"Local\");\n\t\tif (DiscovererClass)\n\t\t\treturn new DiscovererClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid Discoverer type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn new Discoverers.Local();\n}\n\nfunction register(name, value) {\n\tDiscoverers[name] = value;\n}\n\nmodule.exports = Object.assign(Discoverers, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Node class\n *\n * @class Node\n */\nclass Node {\n\t/**\n\t * Creates an instance of Node.\n\t *\n\t * @param {String} id\n\t *\n\t * @memberof Node\n\t */\n\tconstructor(id) {\n\t\tthis.id = id;\n\t\tthis.instanceID = null;\n\t\tthis.available = true;\n\t\tthis.local = false;\n\t\tthis.lastHeartbeatTime = Math.round(process.uptime());\n\t\tthis.config = {};\n\t\tthis.client = {};\n\t\tthis.metadata = null;\n\n\t\tthis.ipList = null;\n\t\tthis.port = null;\n\t\tthis.hostname = null;\n\t\tthis.udpAddress = null;\n\n\t\tthis.rawInfo = null;\n\t\tthis.services = [];\n\n\t\tthis.cpu = null;\n\t\tthis.cpuSeq = null;\n\n\t\tthis.seq = 0;\n\t\tthis.offlineSince = null;\n\t}\n\n\t/**\n\t * Update properties\n\t *\n\t * @param {object} payload\n\t * @param {boolean} isReconnected\n\t * @memberof Node\n\t */\n\tupdate(payload, isReconnected) {\n\t\t// Update properties\n\t\tthis.metadata = payload.metadata;\n\t\tthis.ipList = payload.ipList;\n\t\tthis.hostname = payload.hostname;\n\t\tthis.port = payload.port;\n\t\tthis.client = payload.client || {};\n\t\tthis.config = payload.config || {};\n\t\tthis.instanceID = payload.instanceID;\n\n\t\t// Process services & events\n\t\tthis.services = payload.services;\n\t\tthis.rawInfo = payload;\n\n\t\tconst newSeq = payload.seq || 1;\n\t\tif (newSeq > this.seq || isReconnected) {\n\t\t\tthis.seq = newSeq;\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Update local properties.\n\t *\n\t * @memberof Node\n\t * @param {Function} cpuUsage\n\t */\n\tupdateLocalInfo(cpuUsage) {\n\t\treturn cpuUsage().then(res => {\n\t\t\tconst newVal = Math.round(res.avg);\n\t\t\tif (this.cpu != newVal) {\n\t\t\t\tthis.cpu = newVal;\n\t\t\t\tthis.cpuSeq++;\n\t\t\t}\n\t\t}).catch(() => { /* silent */ });\n\t}\n\n\t/**\n\t * Update heartbeat properties\n\t *\n\t * @param {any} payload\n\t * @memberof Node\n\t */\n\theartbeat(payload) {\n\t\tif (!this.available) {\n\t\t\tthis.available = true;\n\t\t\tthis.offlineSince = null;\n\t\t}\n\n\t\tif (payload.cpu != null) {\n\t\t\tthis.cpu = payload.cpu;\n\t\t\tthis.cpuSeq = payload.cpuSeq || 1;\n\t\t}\n\n\t\tthis.lastHeartbeatTime = Math.round(process.uptime());\n\t}\n\n\t/**\n\t * Node disconnected\n\t *\n\t * @memberof Node\n\t */\n\tdisconnected() {\n\t\tif (this.available) {\n\t\t\tthis.offlineSince = Math.round(process.uptime());\n\t\t\tthis.seq++;\n\t\t}\n\n\t\tthis.available = false;\n\t}\n}\n\nmodule.exports = Node;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst os \t\t\t= require(\"os\");\nconst Node \t\t\t= require(\"./node\");\nconst { getIpList } = require(\"../utils\");\n\n/**\n * Catalog for nodes\n *\n * @class NodeCatalog\n */\nclass NodeCatalog {\n\n\t/**\n\t * Creates an instance of NodeCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t *\n\t * @memberof NodeCatalog\n\t */\n\tconstructor(registry, broker) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\n\t\tthis.nodes = new Map();\n\n\t\tthis.createLocalNode();\n\t}\n\n\t/**\n\t * Create local node with local information\n\t *\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\tcreateLocalNode() {\n\t\tconst node = new Node(this.broker.nodeID);\n\t\tnode.local = true;\n\t\tnode.ipList = getIpList();\n\t\tnode.instanceID = this.broker.instanceID;\n\t\tnode.hostname = os.hostname();\n\t\tnode.client = {\n\t\t\ttype: \"nodejs\",\n\t\t\tversion: this.broker.MOLECULER_VERSION,\n\t\t\tlangVersion: process.version\n\t\t};\n\t\tnode.metadata = this.broker.metadata;\n\t\tnode.seq = 1;\n\n\t\tthis.add(node.id, node);\n\n\t\tthis.localNode = node;\n\t\treturn node;\n\t}\n\n\t/**\n\t * Add a new node\n\t *\n\t * @param {String} id\n\t * @param {any} node\n\t * @memberof NodeCatalog\n\t */\n\tadd(id, node) {\n\t\tthis.nodes.set(id, node);\n\t}\n\n\t/**\n\t * Check a node exist by nodeID\n\t *\n\t * @param {String} id\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\thas(id) {\n\t\treturn this.nodes.has(id);\n\t}\n\n\t/**\n\t * Get a node by nodeID\n\t *\n\t * @param {String} id\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\tget(id) {\n\t\treturn this.nodes.get(id);\n\t}\n\n\t/**\n\t * Delete a node by nodeID\n\t *\n\t * @param {String} id\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\tdelete(id) {\n\t\treturn this.nodes.delete(id);\n\t}\n\n\t/**\n\t * Get count of all registered nodes\n\t */\n\tcount() {\n\t\treturn this.nodes.size;\n\t}\n\n\t/**\n\t * Get count of online nodes\n\t */\n\tonlineCount() {\n\t\tlet count = 0;\n\t\tthis.nodes.forEach(node => {\n\t\t\tif (node.available)\n\t\t\t\tcount++;\n\t\t});\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Process incoming INFO packet payload\n\t *\n\t * @param {any} payload\n\t * @memberof NodeCatalog\n\t */\n\tprocessNodeInfo(payload) {\n\t\tconst nodeID = payload.sender;\n\t\t//let oldNode;\n\t\tlet node = this.get(nodeID);\n\t\tlet isNew = false;\n\t\tlet isReconnected = false;\n\n\t\tif (!node) {\n\t\t\tisNew = true;\n\t\t\tnode = new Node(nodeID);\n\n\t\t\tthis.add(nodeID, node);\n\t\t} else if (!node.available) {\n\t\t\tisReconnected = true;\n\t\t\tnode.lastHeartbeatTime = Math.round(process.uptime());\n\t\t\tnode.available = true;\n\t\t\tnode.offlineSince = null;\n\t\t}\n\n\t\t// Update instance\n\t\tconst needRegister = node.update(payload, isReconnected);\n\n\t\t// Refresh services if 'seq' is greater or it is a reconnected node\n\t\tif (needRegister && node.services) {\n\t\t\tthis.registry.registerServices(node, node.services);\n\t\t}\n\n\t\t// Local notifications\n\t\tif (isNew) {\n\t\t\tthis.broker.broadcastLocal(\"$node.connected\", { node, reconnected: false });\n\t\t\tthis.logger.info(`Node '${nodeID}' connected.`);\n\t\t\tthis.registry.updateMetrics();\n\t\t} else if (isReconnected) {\n\t\t\tthis.broker.broadcastLocal(\"$node.connected\", { node, reconnected: true });\n\t\t\tthis.logger.info(`Node '${nodeID}' reconnected.`);\n\t\t\tthis.registry.updateMetrics();\n\t\t} else {\n\t\t\tthis.broker.broadcastLocal(\"$node.updated\", { node });\n\t\t\tthis.logger.debug(`Node '${nodeID}' updated.`);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Disconnected a node\n\t *\n\t * @param {String} nodeID\n\t * @param {Boolean} isUnexpected\n\t * @memberof NodeCatalog\n\t */\n\tdisconnected(nodeID, isUnexpected) {\n\t\tlet node = this.get(nodeID);\n\t\tif (node && node.available) {\n\t\t\tnode.disconnected(isUnexpected);\n\n\t\t\tthis.registry.unregisterServicesByNode(node.id);\n\n\t\t\tthis.broker.broadcastLocal(\"$node.disconnected\", { node, unexpected: !!isUnexpected });\n\n\t\t\tthis.registry.updateMetrics();\n\n\t\t\tthis.logger.warn(`Node '${node.id}' disconnected${isUnexpected ? \" unexpectedly\" : \"\"}.`);\n\n\t\t\tif (this.broker.transit)\n\t\t\t\tthis.broker.transit.removePendingRequestByNodeID(nodeID);\n\t\t}\n\t}\n\n\n\t/**\n\t * Get a node list\n\t *\n\t * @param {Object} {onlyAvailable = false, withServices = false}\n\t * @returns\n\t * @memberof NodeCatalog\n\t */\n\tlist({ onlyAvailable = false, withServices = false }) {\n\t\tlet res = [];\n\t\tthis.nodes.forEach(node => {\n\t\t\tif (onlyAvailable && !node.available)\n\t\t\t\treturn;\n\n\t\t\tif (withServices)\n\t\t\t\tres.push(_.omit(node, [\"rawInfo\"]));\n\t\t\telse\n\t\t\t\tres.push(_.omit(node, [\"services\", \"rawInfo\"]));\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Get a copy from node list.\n\t */\n\ttoArray() {\n\t\treturn Array.from(this.nodes.values());\n\t}\n}\n\nmodule.exports = NodeCatalog;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Service class\n *\n * @class ServiceItem\n */\nclass ServiceItem {\n\n\t/**\n\t * Creates an instance of ServiceItem.\n\t *\n\t * @param {Node} node\n\t * @param {Object} service\n\t * @param {Boolean} local\n\t * @memberof ServiceItem\n\t */\n\tconstructor(node, service, local) {\n\t\tthis.node = node;\n\t\tthis.name = service.name;\n\t\tthis.fullName = service.fullName;\n\t\tthis.version = service.version;\n\t\tthis.settings = service.settings;\n\t\tthis.metadata = service.metadata || {};\n\n\t\tthis.local = !!local;\n\n\t\tthis.actions = {};\n\t\tthis.events = {};\n\t}\n\n\t/**\n\t * Check the service equals params\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof ServiceItem\n\t */\n\tequals(fullName, nodeID) {\n\t\treturn this.fullName == fullName && (nodeID == null || this.node.id == nodeID);\n\t}\n\n\t/**\n\t * Update service properties\n\t *\n\t * @param {any} svc\n\t * @memberof ServiceItem\n\t */\n\tupdate(svc) {\n\t\tthis.fullName = svc.fullName;\n\t\tthis.version = svc.version;\n\t\tthis.settings = svc.settings;\n\t\tthis.metadata = svc.metadata || {};\n\t}\n\n\t/**\n\t * Add action to service\n\t *\n\t * @param {any} action\n\t * @memberof ServiceItem\n\t */\n\taddAction(action) {\n\t\tthis.actions[action.name] = action;\n\t}\n\n\t/**\n\t * Add event to service\n\t *\n\t * @param {any} event\n\t * @memberof ServiceItem\n\t */\n\taddEvent(event) {\n\t\tthis.events[event.name] = event;\n\t}\n}\n\nmodule.exports = ServiceItem;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst ServiceItem = require(\"./service-item\");\nconst { removeFromArray } = require(\"../utils\");\n\n/**\n * Catalog for services\n *\n * @class ServiceCatalog\n */\nclass ServiceCatalog {\n\n\t/**\n\t * Creates an instance of ServiceCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @memberof ServiceCatalog\n\t */\n\tconstructor(registry, broker) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\n\t\tthis.services = [];\n\t}\n\n\t/**\n\t * Add a new service\n\t *\n\t * @param {Node} node\n\t * @param {Object} service\n\t * @param {Boolean} local\n\t *\n\t * @returns {ServiceItem}\n\t *\n\t * @memberof ServiceCatalog\n\t */\n\tadd(node, service, local) {\n\t\tconst item = new ServiceItem(node, service, local);\n\t\tthis.services.push(item);\n\t\treturn item;\n\t}\n\n\t/**\n\t * Check the service is exist\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof ServiceCatalog\n\t */\n\thas(fullName, nodeID) {\n\t\treturn this.services.find(svc => svc.equals(fullName, nodeID)) != null;\n\t}\n\n\t/**\n\t * Get a service by fullName & nodeID\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof ServiceCatalog\n\t */\n\tget(fullName, nodeID) {\n\t\treturn this.services.find(svc => svc.equals(fullName, nodeID));\n\t}\n\n\t/**\n\t * Get a filtered list of services with actions\n\t *\n\t * @param {Object} {onlyLocal = false,  onlyAvailable = false, skipInternal = false, withActions = false, withEvents = false, grouping = false}\n\t * @returns {Array}\n\t *\n\t * @memberof Registry\n\t */\n\tlist({ onlyLocal = false, onlyAvailable = false, skipInternal = false, withActions = false, withEvents = false, grouping = false }) {\n\t\tlet res = [];\n\t\tthis.services.forEach(service => {\n\t\t\tif (skipInternal && /^\\$/.test(service.name))\n\t\t\t\treturn;\n\n\t\t\tif (onlyLocal && !service.local)\n\t\t\t\treturn;\n\n\t\t\tif (onlyAvailable && !service.node.available)\n\t\t\t\treturn;\n\n\t\t\tlet item;\n\t\t\tif (grouping)\n\t\t\t\titem = res.find(svc => svc.fullName == service.fullName);\n\n\t\t\tif (!item) {\n\t\t\t\tlet item = {\n\t\t\t\t\tname: service.name,\n\t\t\t\t\tversion: service.version,\n\t\t\t\t\tfullName: service.fullName,\n\t\t\t\t\tsettings: service.settings,\n\t\t\t\t\tmetadata: service.metadata,\n\n\t\t\t\t\tlocal: service.local,\n\t\t\t\t\tavailable: service.node.available,\n\t\t\t\t};\n\n\t\t\t\tif (grouping)\n\t\t\t\t\titem.nodes = [service.node.id];\n\t\t\t\telse\n\t\t\t\t\titem.nodeID = service.node.id;\n\n\t\t\t\tif (withActions) {\n\t\t\t\t\titem.actions = {};\n\n\t\t\t\t\t_.forIn(service.actions, action => {\n\t\t\t\t\t\tif (action.protected) return;\n\n\t\t\t\t\t\titem.actions[action.name] = _.omit(action, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (withEvents) {\n\t\t\t\t\titem.events = {};\n\n\t\t\t\t\t_.forIn(service.events, event => {\n\t\t\t\t\t\t// Skip internal event handlers\n\t\t\t\t\t\tif (/^\\$/.test(event.name)) return;\n\n\t\t\t\t\t\titem.events[event.name] = _.omit(event, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tres.push(item);\n\n\t\t\t} else {\n\t\t\t\tif (item.nodes.indexOf(service.node.id) === -1)\n\t\t\t\t\titem.nodes.push(service.node.id);\n\t\t\t}\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Get local service list for INFO packet\n\t *\n\t * @returns {Object}\n\t * @memberof ServiceCatalog\n\t */\n\tgetLocalNodeServices() {\n\t\tlet res = [];\n\t\tthis.services.forEach(service => {\n\t\t\tif (!service.local)\n\t\t\t\treturn;\n\n\t\t\tlet item = {\n\t\t\t\tname: service.name,\n\t\t\t\tversion: service.version,\n\t\t\t\tfullName: service.fullName,\n\t\t\t\tsettings: service.settings,\n\t\t\t\tmetadata: service.metadata,\n\t\t\t\tdependencies: service.dependencies\n\t\t\t};\n\n\t\t\titem.actions = {};\n\n\t\t\t_.forIn(service.actions, action => {\n\t\t\t\tif (action.protected) return;\n\n\t\t\t\titem.actions[action.name] = _.omit(action, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t});\n\n\t\t\titem.events = {};\n\n\t\t\t_.forIn(service.events, event => {\n\t\t\t\t// Leave internal event handlers, because it can be used for internal events.\n\t\t\t\t//if (/^\\$/.test(event.name)) return;\n\n\t\t\t\titem.events[event.name] = _.omit(event, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t});\n\n\t\t\tres.push(item);\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Remove all endpoints by nodeID\n\t *\n\t * @param {String} nodeID\n\t * @memberof ServiceCatalog\n\t */\n\tremoveAllByNodeID(nodeID) {\n\t\t_.remove(this.services, service => {\n\t\t\tif (service.node.id == nodeID) {\n\t\t\t\tthis.registry.actions.removeByService(service);\n\t\t\t\tthis.registry.events.removeByService(service);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Remove endpoint by fullName & nodeID\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @memberof ServiceCatalog\n\t */\n\tremove(fullName, nodeID) {\n\t\tlet service = this.get(fullName, nodeID);\n\t\tif (service) {\n\t\t\tthis.registry.actions.removeByService(service);\n\t\t\tthis.registry.events.removeByService(service);\n\n\t\t\tremoveFromArray(this.services, service);\n\t\t}\n\t}\n}\n\nmodule.exports = ServiceCatalog;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { MoleculerServerError } = require(\"../errors\");\n\n/**\n * Endpoint list class\n *\n * @class EndpointList\n */\nclass EndpointList {\n\n\t/**\n\t * Creates an instance of EndpointList.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {String} name\n\t * @param {String} group\n\t * @param {EndPointClass} EndPointFactory\n\t * @param {StrategyClass} StrategyFactory\n\t * @param {Object?} strategyOptions\n\t * @memberof EndpointList\n\t */\n\tconstructor(registry, broker, name, group, EndPointFactory, StrategyFactory, strategyOptions) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\t\tthis.strategy = new StrategyFactory(registry, broker, strategyOptions);\n\t\tthis.name = name;\n\t\tthis.group = group;\n\t\tthis.internal = name.startsWith(\"$\");\n\n\t\tthis.EndPointFactory = EndPointFactory;\n\n\t\tthis.endpoints = [];\n\n\t\tthis.localEndpoints = [];\n\t}\n\n\t/**\n\t * Add a new endpoint\n\t *\n\t * @param {Node} node\n\t * @param {Service} service\n\t * @param {any} data\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tadd(node, service, data) {\n\t\tconst found = this.endpoints.find(ep => ep.node == node && ep.service.name == service.name);\n\t\tif (found) {\n\t\t\tfound.update(data);\n\t\t\treturn found;\n\t\t}\n\n\t\tconst ep = new this.EndPointFactory(this.registry, this.broker, node, service, data);\n\t\tthis.endpoints.push(ep);\n\n\t\tthis.setLocalEndpoints();\n\n\t\treturn ep;\n\t}\n\n\t/**\n\t * Get first endpoint\n\t *\n\t * @returns {Endpoint}\n\t * @memberof EndpointList\n\t */\n\tgetFirst() {\n\t\tif (this.endpoints.length > 0)\n\t\t\treturn this.endpoints[0];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Select next endpoint with balancer strategy\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @param {Context} ctx\n\t * @returns {Endpoint}\n\t * @memberof EndpointList\n\t */\n\tselect(list, ctx) {\n\t\tconst ret = this.strategy.select(list, ctx);\n\t\tif (!ret) {\n\t\t\t/* istanbul ignore next */\n\t\t\tthrow new MoleculerServerError(\"Strategy returned an invalid endpoint.\", 500, \"INVALID_ENDPOINT\", { strategy: typeof(this.strategy) });\n\t\t}\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Get next endpoint\n\t *\n\t * @param {Context} ctx\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tnext(ctx) {\n\t\t// No items\n\t\tif (this.endpoints.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// If internal (service), return the local always\n\t\tif (this.internal && this.hasLocal()) {\n\t\t\treturn this.nextLocal();\n\t\t}\n\n\t\t// Only 1 item\n\t\tif (this.endpoints.length === 1) {\n\t\t\t// No need to select a node, return the only one\n\t\t\tconst item = this.endpoints[0];\n\t\t\tif (item.isAvailable)\n\t\t\t\treturn item;\n\n\t\t\treturn null;\n\t\t}\n\n\t\t// Search local item\n\t\tif (this.registry.opts.preferLocal === true && this.hasLocal()) {\n\t\t\tconst ep = this.nextLocal(ctx);\n\t\t\tif (ep && ep.isAvailable)\n\t\t\t\treturn ep;\n\t\t}\n\n\t\tconst epList = this.endpoints.filter(ep => ep.isAvailable);\n\t\tif (epList.length == 0)\n\t\t\treturn null;\n\n\t\treturn this.select(epList, ctx);\n\t}\n\n\t/**\n\t * Get next local endpoint\n\t *\n\t * @param {Context} ctx\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tnextLocal(ctx) {\n\t\t// No items\n\t\tif (this.localEndpoints.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Only 1 item\n\t\tif (this.localEndpoints.length === 1) {\n\t\t\t// No need to select a node, return the only one\n\t\t\tconst item = this.localEndpoints[0];\n\t\t\tif (item.isAvailable)\n\t\t\t\treturn item;\n\n\t\t\treturn null;\n\t\t}\n\n\t\tconst epList = this.localEndpoints.filter(ep => ep.isAvailable);\n\t\tif (epList.length == 0)\n\t\t\treturn null;\n\n\t\treturn this.select(epList, ctx);\n\t}\n\n\t/**\n\t * Check there is available endpoint\n\t *\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\thasAvailable() {\n\t\treturn this.endpoints.find(ep => ep.isAvailable) != null;\n\t}\n\n\t/**\n\t * Check there is local endpoint\n\t *\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\thasLocal() {\n\t\treturn this.localEndpoints.length > 0;\n\t}\n\n\t/**\n\t * Set local endpoint\n\t *\n\t * @memberof EndpointList\n\t */\n\tsetLocalEndpoints() {\n\t\tthis.localEndpoints = this.endpoints.filter(ep => ep.local);\n\t}\n\n\t/**\n\t * Get count of endpoints\n\t *\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tcount() {\n\t\treturn this.endpoints.length;\n\t}\n\n\t/**\n\t * Get endpoint on a specified node\n\t *\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tgetEndpointByNodeID(nodeID) {\n\t\tconst ep = this.endpoints.find(ep => ep.id == nodeID);\n\t\tif (ep && ep.isAvailable)\n\t\t\treturn ep;\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Check nodeID in the endpoint list\n\t *\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\thasNodeID(nodeID) {\n\t\treturn this.endpoints.find(ep => ep.id == nodeID) != null;\n\t}\n\n\t/**\n\t * Remove all endpoints by service\n\t *\n\t * @param {ServiceItem} service\n\t * @memberof EndpointList\n\t */\n\tremoveByService(service) {\n\t\t_.remove(this.endpoints, ep => {\n\t\t\tif (ep.service == service) {\n\t\t\t\tep.destroy();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tthis.setLocalEndpoints();\n\t}\n\n\t/**\n\t * Remove endpoints by node ID\n\t *\n\t * @param {String} nodeID\n\t * @memberof EndpointList\n\t */\n\tremoveByNodeID(nodeID) {\n\t\t_.remove(this.endpoints, ep => {\n\t\t\tif (ep.id == nodeID) {\n\t\t\t\tep.destroy();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tthis.setLocalEndpoints();\n\t}\n}\n\nmodule.exports = EndpointList;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Endpoint class\n *\n * @class Endpoint\n */\nclass Endpoint {\n\t/**\n\t * Creates an instance of Endpoint.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Node} node\n\t * @memberof Endpoint\n\t */\n\tconstructor(registry, broker, node) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\n\t\tthis.id = node.id;\n\t\tthis.node = node;\n\n\t\tthis.local = node.id === broker.nodeID;\n\t\tthis.state = true;\n\t}\n\n\tdestroy() {\n\n\t}\n\n\t/**\n\t * Get availability\n\t *\n\t * @readonly\n\t * @memberof Endpoint\n\t */\n\tget isAvailable() {\n\t\treturn this.state;\n\t}\n\n\tupdate() {\n\n\t}\n}\n\nmodule.exports = Endpoint;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Endpoint = require(\"./endpoint\");\n\n/**\n * Endpoint class for events\n *\n * @class EventEndpoint\n * @extends {Endpoint}\n */\nclass EventEndpoint extends Endpoint {\n\n\t/**\n\t * Creates an instance of EventEndpoint.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Node} node\n\t * @param {Service} service\n\t * @param {any} event\n\t * @memberof EventEndpoint\n\t */\n\tconstructor(registry, broker, node, service, event) {\n\t\tsuper(registry, broker, node);\n\n\t\tthis.service = service;\n\t\tthis.event = event;\n\t}\n\n\t/**\n\t * Update properties\n\t *\n\t * @param {any} event\n\t * @memberof EventEndpoint\n\t */\n\tupdate(event) {\n\t\tthis.event = event;\n\t}\n}\n\nmodule.exports = EventEndpoint;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst utils\t\t\t= require(\"../utils\");\nconst Strategies \t= require(\"../strategies\");\nconst EndpointList \t= require(\"./endpoint-list\");\nconst EventEndpoint = require(\"./endpoint-event\");\n\n/**\n * Catalog for events\n *\n * @class EventCatalog\n */\nclass EventCatalog {\n\n\t/**\n\t * Creates an instance of EventCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {any} StrategyFactory\n\t * @memberof EventCatalog\n\t */\n\tconstructor(registry, broker, StrategyFactory) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\t\tthis.StrategyFactory = StrategyFactory;\n\n\t\tthis.events = [];\n\n\t\tthis.EndpointFactory = EventEndpoint;\n\t}\n\n\t/**\n\t * Add a new event\n\t *\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {any} event\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tadd(node, service, event) {\n\t\tconst eventName = event.name;\n\t\tconst groupName = event.group || service.name;\n\t\tlet list = this.get(eventName, groupName);\n\t\tif (!list) {\n\t\t\tconst strategyFactory = event.strategy ? (Strategies.resolve(event.strategy) || this.StrategyFactory) : this.StrategyFactory;\n\t\t\tconst strategyOptions = event.strategyOptions ? event.strategyOptions : this.registry.opts.strategyOptions;\n\t\t\t// Create a new EndpointList\n\t\t\tlist = new EndpointList(this.registry, this.broker, eventName, groupName, this.EndpointFactory, strategyFactory, strategyOptions);\n\t\t\tthis.events.push(list);\n\t\t}\n\n\t\tlist.add(node, service, event);\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * Get an event by name (and group name)\n\t *\n\t * @param {String} eventName\n\t * @param {String} groupName\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tget(eventName, groupName) {\n\t\treturn this.events.find(list => list.name == eventName && list.group == groupName);\n\t}\n\n\t/**\n\t * Get balanced endpoint for event\n\t *\n\t * @param {String} eventName\n\t * @param {String|Array?} groups\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tgetBalancedEndpoints(eventName, groups) {\n\t\tconst res = [];\n\n\t\tthis.events.forEach(list => {\n\t\t\tif (!utils.match(eventName, list.name)) return;\n\t\t\tif (groups == null || groups.length == 0 || groups.indexOf(list.group) != -1) {\n\t\t\t\t// Use built-in balancer, get the next endpoint\n\t\t\t\tconst ep = list.next();\n\t\t\t\tif (ep && ep.isAvailable)\n\t\t\t\t\tres.push([ep, list.group]);\n\t\t\t}\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Get all groups for event\n\t *\n\t * @param {String} eventName\n\t * @returns Array<String>\n\t * @memberof EventCatalog\n\t */\n\tgetGroups(eventName) {\n\t\treturn _.uniq(this.events.filter(list => utils.match(eventName, list.name)).map(item => item.group));\n\t}\n\n\t/**\n\t * Get all endpoints for event\n\t *\n\t * @param {String} eventName\n\t * @param {Array<String>?} groupNames\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tgetAllEndpoints(eventName, groupNames) {\n\t\tconst res = [];\n\t\tthis.events.forEach(list => {\n\t\t\tif (!utils.match(eventName, list.name)) return;\n\t\t\tif (groupNames == null || groupNames.length == 0 || groupNames.indexOf(list.group) !== -1) {\n\t\t\t\tlist.endpoints.forEach(ep => {\n\t\t\t\t\tif (ep.isAvailable)\n\t\t\t\t\t\tres.push(ep);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn _.uniqBy(res, \"id\");\n\t}\n\n\t/**\n\t * Call local service handlers\n\t *\n\t * @param {String} eventName\n\t * @param {any} payload\n\t * @param {Array<String>?} groupNames\n\t * @param {String} nodeID\n\t * @param {boolean} broadcast\n\t * @returns {Promise<any>}\n\t *\n\t * @memberof EventCatalog\n\t */\n\temitLocalServices(ctx) {\n\t\tconst isBroadcast = [\"broadcast\", \"broadcastLocal\"].indexOf(ctx.eventType) !== -1;\n\t\tconst sender = ctx.nodeID;\n\n\t\tconst promises = [];\n\n\t\tthis.events.forEach(list => {\n\t\t\tif (!utils.match(ctx.eventName, list.name)) return;\n\t\t\tif (ctx.eventGroups == null || ctx.eventGroups.length == 0 || ctx.eventGroups.indexOf(list.group) !== -1) {\n\t\t\t\tif (isBroadcast) {\n\t\t\t\t\tlist.endpoints.forEach(ep => {\n\t\t\t\t\t\tif (ep.local && ep.event.handler) {\n\t\t\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\t\t\tnewCtx.nodeID = sender;\n\t\t\t\t\t\t\tpromises.push(this.callEventHandler(newCtx));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst ep = list.nextLocal();\n\t\t\t\t\tif (ep && ep.event.handler) {\n\t\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\t\tnewCtx.nodeID = sender;\n\t\t\t\t\t\tpromises.push(this.callEventHandler(newCtx));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this.broker.Promise.all(promises);\n\t}\n\n\t/**\n\t * Call local event handler and handles unhandled promise rejections.\n\t *\n\t * @param {Context} ctx\n\t *\n\t * @memberof EventCatalog\n\t */\n\tcallEventHandler(ctx) {\n\t\treturn ctx.endpoint.event.handler(ctx);\n\t}\n\n\t/**\n\t * Remove endpoints by service\n\t *\n\t * @param {ServiceItem} service\n\t * @memberof EventCatalog\n\t */\n\tremoveByService(service) {\n\t\tthis.events.forEach(list => {\n\t\t\tlist.removeByService(service);\n\t\t});\n\t}\n\n\t/**\n\t * Remove endpoint by name & nodeId\n\t *\n\t * @param {String} eventName\n\t * @param {String} nodeID\n\t * @memberof EventCatalog\n\t */\n\tremove(eventName, nodeID) {\n\t\tthis.events.forEach(list => {\n\t\t\tif (list.name == eventName)\n\t\t\t\tlist.removeByNodeID(nodeID);\n\t\t});\n\t}\n\n\t/**\n\t * Get a filtered list of events\n\t *\n\t * @param {Object} {onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false}\n\t * @returns {Array}\n\t *\n\t * @memberof EventCatalog\n\t */\n\tlist({ onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false }) {\n\t\tlet res = [];\n\n\t\tthis.events.forEach(list => {\n\t\t\t/* istanbul ignore next */\n\t\t\tif (skipInternal && /^\\$/.test(list.name))\n\t\t\t\treturn;\n\n\t\t\tif (onlyLocal && !list.hasLocal())\n\t\t\t\treturn;\n\n\t\t\tif (onlyAvailable && !list.hasAvailable())\n\t\t\t\treturn;\n\n\t\t\tlet item = {\n\t\t\t\tname: list.name,\n\t\t\t\tgroup: list.group,\n\t\t\t\tcount: list.count(),\n\t\t\t\t//service: list.service,\n\t\t\t\thasLocal: list.hasLocal(),\n\t\t\t\tavailable: list.hasAvailable()\n\t\t\t};\n\n\t\t\tif (item.count > 0) {\n\t\t\t\tconst ep = list.endpoints[0];\n\t\t\t\tif (ep)\n\t\t\t\t\titem.event = _.omit(ep.event, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t}\n\n\t\t\tif (withEndpoints) {\n\t\t\t\tif (item.count > 0) {\n\t\t\t\t\titem.endpoints = list.endpoints.map(ep => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnodeID: ep.node.id,\n\t\t\t\t\t\t\tstate: ep.state,\n\t\t\t\t\t\t\tavailable: ep.node.available,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tres.push(item);\n\t\t});\n\n\t\treturn res;\n\t}\n}\n\nmodule.exports = EventCatalog;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Endpoint = require(\"./endpoint\");\n\n/**\n * Endpoint class for actions\n *\n * @class ActionEndpoint\n * @extends {Endpoint}\n */\nclass ActionEndpoint extends Endpoint {\n\n\t/**\n\t * Creates an instance of ActionEndpoint.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {any} action\n\t * @memberof ActionEndpoint\n\t */\n\tconstructor(registry, broker, node, service, action) {\n\t\tsuper(registry, broker, node);\n\n\t\tthis.service = service;\n\t\tthis.action = action;\n\n\t\tthis.name = `${this.id}:${this.action.name}`;\n\t}\n\n\t/**\n\t * Update properties\n\t *\n\t * @param {any} action\n\t * @memberof ActionEndpoint\n\t */\n\tupdate(action) {\n\t\tthis.action = action;\n\t}\n}\n\nmodule.exports = ActionEndpoint;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst Strategies = require(\"../strategies\");\nconst EndpointList = require(\"./endpoint-list\");\nconst ActionEndpoint = require(\"./endpoint-action\");\n\n/**\n * Catalog class to store service actions\n *\n * @class ActionCatalog\n */\nclass ActionCatalog {\n\n\t/**\n\t * Creates an instance of ActionCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Strategy} StrategyFactory\n\t * @memberof ActionCatalog\n\t */\n\tconstructor(registry, broker, StrategyFactory) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\t\tthis.StrategyFactory = StrategyFactory;\n\n\t\tthis.actions = new Map();\n\n\t\tthis.EndpointFactory = ActionEndpoint;\n\t}\n\n\t/**\n\t * Add an action\n\t *\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {Action} action\n\t * @memberof ActionCatalog\n\t */\n\tadd(node, service, action) {\n\t\tlet list = this.actions.get(action.name);\n\t\tif (!list) {\n\t\t\tconst strategyFactory = action.strategy ? (Strategies.resolve(action.strategy) || this.StrategyFactory) : this.StrategyFactory;\n\t\t\tconst strategyOptions = action.strategyOptions ? action.strategyOptions : this.registry.opts.strategyOptions;\n\t\t\t// Create a new EndpointList\n\t\t\tlist = new EndpointList(this.registry, this.broker, action.name, null, this.EndpointFactory, strategyFactory, strategyOptions);\n\t\t\tthis.actions.set(action.name, list);\n\t\t}\n\n\t\tlist.add(node, service, action);\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * Get action by name\n\t *\n\t * @param {String} actionName\n\t * @returns\n\t * @memberof ActionCatalog\n\t */\n\tget(actionName) {\n\t\treturn this.actions.get(actionName);\n\t}\n\n\t/**\n\t * Check the action is available (there is live endpoint)\n\t *\n\t * @param {String} actionName\n\t * @returns {Boolean}\n\t * @memberof ActionCatalog\n\t */\n\tisAvailable(actionName) {\n\t\tconst list = this.actions.get(actionName);\n\t\tif (list)\n\t\t\treturn list.hasAvailable();\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Remove all actions by service\n\t *\n\t * @param {ServiceItem} service\n\t * @memberof ActionCatalog\n\t */\n\tremoveByService(service) {\n\t\tthis.actions.forEach(list => {\n\t\t\tlist.removeByService(service);\n\t\t});\n\t}\n\n\t/**\n\t * Remove action by name & nodeID\n\t *\n\t * @param {String} actionName\n\t * @param {String} nodeID\n\t * @memberof ActionCatalog\n\t */\n\tremove(actionName, nodeID) {\n\t\tconst list = this.actions.get(actionName);\n\t\tif (list)\n\t\t\tlist.removeByNodeID(nodeID);\n\t}\n\n\t/**\n\t * Get a filtered list of actions\n\t *\n\t * @param {Object} {onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false}\n\t * @returns {Array}\n\t *\n\t * @memberof ActionCatalog\n\t */\n\tlist({ onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false }) {\n\t\tlet res = [];\n\n\t\tthis.actions.forEach((list, key) => {\n\t\t\tif (skipInternal && /^\\$/.test(key))\n\t\t\t\treturn;\n\n\t\t\tif (onlyLocal && !list.hasLocal())\n\t\t\t\treturn;\n\n\t\t\tif (onlyAvailable && !list.hasAvailable())\n\t\t\t\treturn;\n\n\t\t\tlet item = {\n\t\t\t\tname: key,\n\t\t\t\tcount: list.count(),\n\t\t\t\thasLocal: list.hasLocal(),\n\t\t\t\tavailable: list.hasAvailable()\n\t\t\t};\n\n\t\t\tif (item.count > 0) {\n\t\t\t\tconst ep = list.endpoints[0];\n\t\t\t\tif (ep)\n\t\t\t\t\titem.action = _.omit(ep.action, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t}\n\t\t\tif (item.action && item.action.protected === true) return;\n\n\t\t\tif (withEndpoints) {\n\t\t\t\tif (item.count > 0) {\n\t\t\t\t\titem.endpoints = list.endpoints.map(ep => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnodeID: ep.node.id,\n\t\t\t\t\t\t\tstate: ep.state,\n\t\t\t\t\t\t\tavailable: ep.node.available,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tres.push(item);\n\t\t});\n\n\t\treturn res;\n\t}\n}\n\nmodule.exports = ActionCatalog;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst utils = require(\"../utils\");\nconst Strategies = require(\"../strategies\");\nconst Discoverers = require(\"./discoverers\");\nconst NodeCatalog = require(\"./node-catalog\");\nconst ServiceCatalog = require(\"./service-catalog\");\nconst EventCatalog = require(\"./event-catalog\");\nconst ActionCatalog = require(\"./action-catalog\");\nconst ActionEndpoint = require(\"./endpoint-action\");\nconst { METRIC }\t\t= require(\"../metrics\");\n\n/**\n * Service Registry\n *\n * @class Registry\n */\nclass Registry {\n\n\t/**\n\t * Creates an instance of Registry.\n\t *\n\t * @param {any} broker\n\t * @memberof Registry\n\t */\n\tconstructor(broker) {\n\t\tthis.broker = broker;\n\t\tthis.metrics = broker.metrics;\n\t\tthis.logger = broker.getLogger(\"registry\");\n\n\t\tthis.opts = Object.assign({}, broker.options.registry);\n\n\t\tthis.StrategyFactory = Strategies.resolve(this.opts.strategy);\n\t\tthis.logger.info(`Strategy: ${this.StrategyFactory.name}`);\n\n\t\tthis.discoverer = Discoverers.resolve(this.opts.discoverer);\n\t\tthis.logger.info(`Discoverer: ${this.broker.getConstructorName(this.discoverer)}`);\n\n\t\tthis.nodes = new NodeCatalog(this, broker);\n\t\tthis.services = new ServiceCatalog(this, broker);\n\t\tthis.actions = new ActionCatalog(this, broker, this.StrategyFactory);\n\t\tthis.events = new EventCatalog(this, broker, this.StrategyFactory);\n\n\t\tthis.registerMoleculerMetrics();\n\t\tthis.updateMetrics();\n\t}\n\n\tinit(broker) {\n\t\tthis.discoverer.init(this);\n\t}\n\n\tstop() {\n\t\treturn this.discoverer.stop();\n\t}\n\n\t/**\n\t * Register Moleculer Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tif (!this.broker.isMetricsEnabled()) return;\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_NODES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered nodes\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_NODES_ONLINE_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of online nodes\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_SERVICES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered services\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"service\"], description: \"Number of service endpoints\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_ACTIONS_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered actions\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"action\"], description: \"Number of action endpoints\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_EVENTS_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered events\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"event\"], description: \"Number of event endpoints\" });\n\t}\n\n\t/**\n\t * Update metrics.\n\t */\n\tupdateMetrics() {\n\t\tif (!this.broker.isMetricsEnabled()) return;\n\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_NODES_TOTAL, this.nodes.count());\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_NODES_ONLINE_TOTAL, this.nodes.onlineCount());\n\n\t\tconst services = this.services.list({ grouping: true, onlyLocal: false, onlyAvailable: false, skipInternal: false, withActions: false, withEvents: false });\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_SERVICES_TOTAL, services.length);\n\t\tservices.forEach(svc => this.metrics.set(METRIC.MOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL, svc.nodes ? svc.nodes.length : 0, { service: svc.fullName }));\n\n\t\tconst actions = this.actions.list({ withEndpoints: true });\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_ACTIONS_TOTAL, actions.length);\n\t\tactions.forEach(item => this.metrics.set(METRIC.MOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL, item.endpoints ? item.endpoints.length : 0, { action: item.name }));\n\n\t\tconst events = this.events.list({ withEndpoints: true });\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_EVENTS_TOTAL, events.length);\n\t\tevents.forEach(item => this.metrics.set(METRIC.MOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL, item.endpoints ? item.endpoints.length : 0, { event: item.name }));\n\t}\n\n\t/**\n\t * Register local service\n\t *\n\t * @param {Service} svc\n\t * @memberof Registry\n\t */\n\tregisterLocalService(svc) {\n\t\tif (!this.services.has(svc.fullName, this.broker.nodeID)) {\n\t\t\tconst service = this.services.add(this.nodes.localNode, svc, true);\n\n\t\t\tif (svc.actions)\n\t\t\t\tthis.registerActions(this.nodes.localNode, service, svc.actions);\n\n\t\t\tif (svc.events)\n\t\t\t\tthis.registerEvents(this.nodes.localNode, service, svc.events);\n\n\t\t\tthis.nodes.localNode.services.push(service);\n\n\t\t\tthis.regenerateLocalRawInfo(this.broker.started);\n\n\t\t\tthis.logger.info(`'${svc.name}' service is registered.`);\n\n\t\t\tthis.broker.servicesChanged(true);\n\t\t\tthis.updateMetrics();\n\t\t}\n\t}\n\n\t/**\n\t * Register remote services\n\t *\n\t * @param {Nodeany} node\n\t * @param {Array} serviceList\n\t * @memberof Registry\n\t */\n\tregisterServices(node, serviceList) {\n\t\tserviceList.forEach(svc => {\n\t\t\tif (!svc.fullName)\n\t\t\t\tsvc.fullName = this.broker.ServiceFactory.getVersionedFullName(svc.name, svc.version);\n\n\t\t\tlet prevActions, prevEvents;\n\t\t\tlet service = this.services.get(svc.fullName, node.id);\n\t\t\tif (!service) {\n\t\t\t\tservice = this.services.add(node, svc, false);\n\t\t\t} else {\n\t\t\t\tprevActions = Object.assign({}, service.actions);\n\t\t\t\tprevEvents = Object.assign({}, service.events);\n\t\t\t\tservice.update(svc);\n\t\t\t}\n\n\t\t\t//Register actions\n\t\t\tif (svc.actions) {\n\t\t\t\tthis.registerActions(node, service, svc.actions);\n\t\t\t}\n\n\t\t\t// remove old actions which is not exist\n\t\t\tif (prevActions) {\n\t\t\t\t_.forIn(prevActions, (action, name) => {\n\t\t\t\t\tif (!svc.actions || !svc.actions[name]) {\n\t\t\t\t\t\tthis.unregisterAction(node, name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Register events\n\t\t\tif (svc.events) {\n\t\t\t\tthis.registerEvents(node, service, svc.events);\n\t\t\t}\n\n\t\t\t// remove old events which is not exist\n\t\t\tif (prevEvents) {\n\t\t\t\t_.forIn(prevEvents, (event, name) => {\n\t\t\t\t\tif (!svc.events || !svc.events[name]) {\n\t\t\t\t\t\tthis.unregisterEvent(node, name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// remove old services which is not exist in new serviceList\n\t\t// Please note! At first, copy the array because you can't remove items inside forEach\n\t\tconst prevServices = Array.from(this.services.services);\n\t\tprevServices.forEach(service => {\n\t\t\tif (service.node != node) return;\n\n\t\t\tlet exist = false;\n\t\t\tserviceList.forEach(svc => {\n\t\t\t\tif (service.equals(svc.fullName))\n\t\t\t\t\texist = true;\n\t\t\t});\n\n\t\t\t// This service is removed on remote node!\n\t\t\tif (!exist) {\n\t\t\t\tthis.unregisterService(service.fullName, node.id);\n\t\t\t}\n\t\t});\n\n\t\tthis.broker.servicesChanged(false);\n\t\tthis.updateMetrics();\n\t}\n\n\t/**\n\t * Check the action visiblity.\n\t *\n\t * \tAvailable values:\n\t * \t\t- \"published\" or `null`: public action and can be published via API Gateway\n\t * \t\t- \"public\": public action, can be called remotely but not published via API GW\n\t * \t\t- \"protected\": can be called from local services\n\t * \t\t- \"private\": can be called from internally via `this.actions.xy()` inside Service\n\t *\n\t * @param {*} action\n\t * @param {*} node\n\t * @returns\n\t * @memberof Registry\n\t */\n\tcheckActionVisibility(action, node) {\n\t\tif (action.visibility == null || action.visibility == \"published\" || action.visibility == \"public\")\n\t\t\treturn true;\n\n\t\tif (action.visibility == \"protected\" && node.local)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Register service actions\n\t *\n\t * @param {Node} node\n\t * @param {Service} service\n\t * @param {Object} actions\n\t * @memberof Registry\n\t */\n\tregisterActions(node, service, actions) {\n\t\t_.forIn(actions, action => {\n\n\t\t\tif (!this.checkActionVisibility(action, node))\n\t\t\t\treturn;\n\n\t\t\tif (node.local) {\n\t\t\t\taction.handler = this.broker.middlewares.wrapHandler(\"localAction\", action.handler, action);\n\t\t\t} else if (this.broker.transit) {\n\t\t\t\taction.handler = this.broker.middlewares.wrapHandler(\"remoteAction\", this.broker.transit.request.bind(this.broker.transit), { ...action, service });\n\t\t\t}\n\t\t\tif (this.broker.options.disableBalancer && this.broker.transit)\n\t\t\t\taction.remoteHandler = this.broker.middlewares.wrapHandler(\"remoteAction\", this.broker.transit.request.bind(this.broker.transit), { ...action, service });\n\n\t\t\tthis.actions.add(node, service, action);\n\t\t\tservice.addAction(action);\n\t\t});\n\t}\n\n\t/**\n\t * Create a local Endpoint for private actions\n\t *\n\t * @param {Action} action\n\t * @returns {ActionEndpoint}\n\t * @memberof Registry\n\t */\n\tcreatePrivateActionEndpoint(action) {\n\t\treturn new ActionEndpoint(this, this.broker, this.nodes.localNode, action.service, action);\n\t}\n\n\t/**\n\t * Check the service is exist\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns {Boolean}\n\t * @memberof Registry\n\t */\n\thasService(fullName, nodeID) {\n\t\treturn this.services.has(fullName, nodeID);\n\t}\n\n\t/**\n\t * Get endpoint list of action by name\n\t *\n\t * @param {String} actionName\n\t * @returns {EndpointList}\n\t * @memberof Registry\n\t */\n\tgetActionEndpoints(actionName) {\n\t\treturn this.actions.get(actionName);\n\t}\n\n\t/**\n\t * Get an endpoint of action on a specified node\n\t *\n\t * @param {String} actionName\n\t * @param {String} nodeID\n\t * @returns {Endpoint}\n\t * @memberof Registry\n\t */\n\tgetActionEndpointByNodeId(actionName, nodeID) {\n\t\tconst list = this.actions.get(actionName);\n\t\tif (list)\n\t\t\treturn list.getEndpointByNodeID(nodeID);\n\t}\n\n\t/**\n\t * Unregister service\n\t *\n\t * @param {String} fullName\n\t * @param {String?} nodeID\n\t * @memberof Registry\n\t */\n\tunregisterService(fullName, nodeID) {\n\t\tthis.services.remove(fullName, nodeID || this.broker.nodeID);\n\n\t\tif (!nodeID || nodeID == this.broker.nodeID) {\n\t\t\tthis.regenerateLocalRawInfo(true);\n\t\t}\n\t}\n\n\t/**\n\t * Unregister all services by nodeID\n\t *\n\t * @param {String} nodeID\n\t * @memberof Registry\n\t */\n\tunregisterServicesByNode(nodeID) {\n\t\tthis.services.removeAllByNodeID(nodeID);\n\t}\n\n\t/**\n\t * Unregister an action by node & name\n\t *\n\t * @param {Node} node\n\t * @param {String} actionName\n\t * @memberof Registry\n\t */\n\tunregisterAction(node, actionName) {\n\t\tthis.actions.remove(actionName, node.id);\n\t}\n\n\t/**\n\t * Register service events\n\t *\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {Object} events\n\t * @memberof Registry\n\t */\n\tregisterEvents(node, service, events) {\n\t\t_.forIn(events, event => {\n\n\t\t\tif (node.local)\n\t\t\t\tevent.handler = this.broker.middlewares.wrapHandler(\"localEvent\", event.handler, event);\n\n\t\t\tthis.events.add(node, service, event);\n\t\t\tservice.addEvent(event);\n\t\t});\n\t}\n\n\t/**\n\t * Unregister event by name & node\n\t *\n\t * @param {Node} node\n\t * @param {String} eventName\n\t * @memberof Registry\n\t */\n\tunregisterEvent(node, eventName) {\n\t\tthis.events.remove(eventName, node.id);\n\t}\n\n\t/**\n\t * Generate local raw info for INFO packet\n\t *\n\t * @memberof Registry\n\t */\n\tregenerateLocalRawInfo(incSeq) {\n\t\tlet node = this.nodes.localNode;\n\t\tif (incSeq)\n\t\t\tnode.seq++;\n\n\t\tconst rawInfo = _.pick(node, [\"ipList\", \"hostname\", \"instanceID\", \"client\", \"config\", \"port\", \"seq\", \"metadata\"]);\n\t\tif (this.broker.started)\n\t\t\trawInfo.services = this.services.getLocalNodeServices();\n\t\telse\n\t\t\trawInfo.services = [];\n\n\t\t// Make to be safety\n\t\tnode.rawInfo = utils.safetyObject(rawInfo, this.broker.options);\n\n\t\treturn node.rawInfo;\n\t}\n\n\t/**\n\t * Generate local node info for INFO packets\n\t *\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetLocalNodeInfo(force) {\n\t\tif (force || !this.nodes.localNode.rawInfo)\n\t\t\treturn this.regenerateLocalRawInfo();\n\n\t\treturn this.nodes.localNode.rawInfo;\n\t}\n\n\t/**\n\t * Generate node info for INFO packets\n\t *\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetNodeInfo(nodeID) {\n\t\tconst node = this.nodes.get(nodeID);\n\t\tif (!node)\n\t\t\treturn null;\n\n\t\tif (node.local)\n\t\t\treturn this.getLocalNodeInfo();\n\n\t\treturn node.rawInfo;\n\t}\n\n\t/**\n\t * Process an incoming node INFO packet\n\t *\n\t * @param {any} payload\n\t * @returns\n\t * @memberof Registry\n\t */\n\tprocessNodeInfo(payload) {\n\t\treturn this.nodes.processNodeInfo(payload);\n\t}\n\n\t/**\n\t * Get list of registered nodes\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetNodeList(opts) {\n\t\treturn this.nodes.list(opts);\n\t}\n\n\t/**\n\t * Get list of registered services\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetServiceList(opts) {\n\t\treturn this.services.list(opts);\n\t}\n\n\t/**\n\t * Get list of registered actions\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetActionList(opts) {\n\t\treturn this.actions.list(opts);\n\t}\n\n\t/**\n\t * Get list of registered events\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetEventList(opts) {\n\t\treturn this.events.list(opts);\n\t}\n\n\t/**\n\t * Get a raw info list from nodes\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof Registry\n\t */\n\tgetNodeRawList() {\n\t\treturn this.nodes.toArray().map(node => node.rawInfo);\n\t}\n}\n\nmodule.exports = Registry;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Registry = require(\"./registry\");\n\nmodule.exports = Registry;\n\nmodule.exports.Endpoint = require(\"./endpoint\");\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { match, isObject, isString }\t= require(\"../utils\");\n\nconst LEVELS = [\"fatal\", \"error\", \"warn\", \"info\", \"debug\", \"trace\"];\n\n/**\n * Logger base class.\n *\n * @class BaseLogger\n */\nclass BaseLogger {\n\n\t/**\n\t * Creates an instance of BaseLogger.\n\t *\n\t * @param {Object} opts\n\t * @memberof BaseLogger\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tlevel: \"info\",\n\t\t\tcreateLogger: null\n\t\t});\n\t\tthis.Promise = Promise; // default promise before logger is initialized\n\t}\n\n\t/**\n\t * Initialize logger.\n\t *\n\t * @param {LoggerFactory} loggerFactory\n\t */\n\tinit(loggerFactory)  {\n\t\tthis.loggerFactory = loggerFactory;\n\t\tthis.broker = this.loggerFactory.broker;\n\t\tthis.Promise = this.broker.Promise;\n\t}\n\n\t/**\n\t * Stopping logger\n\t */\n\tstop() {\n\t\treturn this.Promise.resolve();\n\t}\n\n\tgetLogLevel(mod) {\n\t\tmod = mod ? mod.toUpperCase() : \"\";\n\n\t\tconst level = this.opts.level;\n\t\tif (isString(level))\n\t\t\treturn level;\n\n\t\tif (isObject(level)) {\n\t\t\tif (level[mod])\n\t\t\t\treturn level[mod];\n\n\t\t\t// Find with matching\n\t\t\tconst key = Object.keys(level).find(m => match(mod, m) && m !== \"**\");\n\t\t\tif (key)\n\t\t\t\treturn level[key];\n\t\t\telse if (level[\"**\"]) {\n\t\t\t\treturn level[\"**\"];\n\t\t\t}\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\treturn null;\n\t}\n\n\tgetLogHandler(/*bindings*/) {\n\t\treturn null;\n\t}\n}\n\nBaseLogger.LEVELS = LEVELS;\n\nmodule.exports = BaseLogger;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n/* eslint-disable no-console */\n\n\"use strict\";\n\nconst BaseLogger \t= require(\"./base\");\nconst _ \t\t\t= require(\"lodash\");\nconst kleur \t\t= require(\"kleur\");\nconst util \t\t\t= require(\"util\");\nconst { isObject, isFunction }\t= require(\"../utils\");\n\n\nfunction getColor(type) {\n\tswitch(type) {\n\t\tcase \"fatal\": return kleur.red().inverse;\n\t\tcase \"error\": return kleur.red;\n\t\tcase \"warn\": return kleur.yellow;\n\t\tcase \"debug\": return kleur.magenta;\n\t\tcase \"trace\": return kleur.gray;\n\t\tdefault: return kleur.green;\n\t}\n}\n\n/**\n * Formatted abstract logger for Moleculer\n *\n * @class FormattedLogger\n * @extends {BaseLogger}\n */\nclass FormattedLogger extends BaseLogger {\n\n\t/**\n\t * Creates an instance of FormattedLogger.\n\t * @param {Object} opts\n\t * @memberof FormattedLogger\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\tcolors: true,\n\t\t\tmoduleColors: false,\n\t\t\tformatter: \"full\",\n\t\t\tobjectPrinter: null,\n\t\t\tautoPadding: false\n\t\t});\n\n\t\tthis.maxPrefixLength = 0;\n\t}\n\n\tinit(loggerFactory) {\n\t\tsuper.init(loggerFactory);\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\n\t\tthis.objectPrinter = this.opts.objectPrinter ? this.opts.objectPrinter : o => util.inspect(o, { showHidden: false, depth: 2, colors: kleur.enabled, breakLength: Number.POSITIVE_INFINITY });\n\n\t\t// Generate colorful log level names\n\t\tthis.levelColorStr = BaseLogger.LEVELS.reduce((a, level) => {\n\t\t\ta[level] = getColor(level)(_.padEnd(level.toUpperCase(), 5));\n\t\t\treturn a;\n\t\t}, {});\n\n\t\tif (this.opts.colors && this.opts.moduleColors === true) {\n\t\t\tthis.opts.moduleColors = [\n\t\t\t\t\"yellow\", \"bold.yellow\",\n\t\t\t\t\"cyan\", \"bold.cyan\",\n\t\t\t\t\"green\", \"bold.green\",\n\t\t\t\t\"magenta\", \"bold.magenta\",\n\t\t\t\t\"blue\", \"bold.blue\",\n\t\t\t\t/*\"red\",*/\n\t\t\t\t/*\"grey\",*/\n\t\t\t\t/*\"white,\"*/\n\t\t\t];\n\t\t}\n\t}\n\n\t/**\n\t * Get a color for the module name.\n\t */\n\tgetNextColor(mod) {\n\t\tif (this.opts.colors && Array.isArray(this.opts.moduleColors)) {\n\t\t\t// Credits: \"visionmedia/debug\" https://github.com/visionmedia/debug/blob/master/src/common.js#L45\n\t\t\tlet hash = 0;\n\n\t\t\tfor (let i = 0; i < mod.length; i++) {\n\t\t\t\thash = ((hash << 5) - hash) + mod.charCodeAt(i);\n\t\t\t\thash |= 0; // Convert to 32bit integer\n\t\t\t}\n\n\t\t\treturn this.opts.moduleColors[Math.abs(hash) % this.opts.moduleColors.length];\n\t\t}\n\n\t\treturn \"grey\";\n\t}\n\n\tpadLeft(len) {\n\t\tif (this.opts.autoPadding)\n\t\t\treturn \" \".repeat(this.maxPrefixLength - len);\n\n\t\treturn \"\";\n\t}\n\n\t/**\n\t *\n\t * @param {object} bindings\n\t */\n\tgetFormatter(bindings) {\n\t\tconst formatter = this.opts.formatter;\n\n\t\tconst mod = (bindings && bindings.mod) ? bindings.mod.toUpperCase() : \"\";\n\t\tconst c = this.getNextColor(mod);\n\t\tconst modColorName = c.split(\".\").reduce((a,b) => a[b] || a()[b], kleur)(mod);\n\t\tconst moduleColorName = bindings ? kleur.grey(bindings.nodeID + \"/\") + modColorName : \"\";\n\n\t\tconst printArgs = args => {\n\t\t\treturn args.map(p => {\n\t\t\t\tif (isObject(p) || Array.isArray(p))\n\t\t\t\t\treturn this.objectPrinter(p);\n\t\t\t\treturn p;\n\t\t\t});\n\t\t};\n\n\t\tif (isFunction(formatter)) {\n\t\t\treturn (type, args) => formatter.call(this, type, args, bindings, { printArgs });\n\n\t\t} else if (formatter == \"json\") {\n\t\t\t// {\"ts\":1581243299731,\"level\":\"info\",\"msg\":\"Moleculer v0.14.0-rc2 is starting...\",\"nodeID\":\"console\",\"ns\":\"\",\"mod\":\"broker\"}\n\t\t\tkleur.enabled = false;\n\t\t\treturn (type, args) => [JSON.stringify({ ts: Date.now(), level: type, msg: printArgs(args).join(\" \"), ...bindings })];\n\t\t} else if (formatter == \"jsonext\") {\n\t\t\t// {\"time\":\"2020-02-09T10:44:35.285Z\",\"level\":\"info\",\"message\":\"Moleculer v0.14.0-rc2 is starting...\",\"nodeID\":\"console\",\"ns\":\"\",\"mod\":\"broker\"}\n\t\t\tkleur.enabled = false;\n\t\t\treturn (type, args) => {\n\t\t\t\tconst res = {\n\t\t\t\t\ttime: new Date().toISOString(),\n\t\t\t\t\tlevel: type,\n\t\t\t\t\tmessage: \"\",\n\t\t\t\t\t...bindings\n\t\t\t\t};\n\t\t\t\tif (args.length > 0) {\n\t\t\t\t\tif (typeof(args[0]) == \"object\"/* && !(args[0] instanceof Error)*/) {\n\t\t\t\t\t\tObject.assign(res, args[0]);\n\t\t\t\t\t\tres.message = printArgs(args.slice(1)).join(\" \");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres.message = printArgs(args).join(\" \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [JSON.stringify(res)];\n\t\t\t};\n\t\t} else if (formatter == \"simple\") {\n\t\t\t// INFO  - Moleculer v0.14.0-beta3 is starting...\n\t\t\treturn (type, args) => [this.levelColorStr[type], \"-\", ...printArgs(args)];\n\t\t} else if (formatter == \"short\") {\n\t\t\t// [08:42:12.973Z] INFO  BROKER: Moleculer v0.14.0-beta3 is starting...\n\t\t\tconst prefixLen = 23 + bindings.mod.length;\n\t\t\tthis.maxPrefixLength = Math.max(prefixLen, this.maxPrefixLength);\n\t\t\treturn (type, args) => [kleur.grey(`[${new Date().toISOString().substr(11)}]`), this.levelColorStr[type], modColorName + this.padLeft(prefixLen) + kleur.grey(\":\"), ...printArgs(args)];\n\t\t} else if (formatter == \"full\") {\n\t\t\t// [2019-08-31T08:40:53.481Z] INFO  bobcsi-pc-7100/BROKER: Moleculer v0.14.0-beta3 is starting...\n\t\t\tconst prefixLen = 35 + bindings.nodeID.length + bindings.mod.length;\n\t\t\tthis.maxPrefixLength = Math.max(prefixLen, this.maxPrefixLength);\n\t\t\treturn (type, args) => [kleur.grey(`[${new Date().toISOString()}]`), this.levelColorStr[type], moduleColorName + this.padLeft(prefixLen) + kleur.grey(\":\"), ...printArgs(args)];\n\t\t} else {\n\t\t\t// [{timestamp}] {level} {nodeID}/{mod}: {msg}\n\n\t\t\treturn (type, args) => {\n\t\t\t\tconst timestamp = new Date().toISOString();\n\t\t\t\treturn [this.render(formatter, {\n\t\t\t\t\ttimestamp: kleur.grey(timestamp),\n\t\t\t\t\ttime: kleur.grey(timestamp.substr(11)),\n\n\t\t\t\t\tlevel: this.levelColorStr[type],\n\t\t\t\t\tnodeID: kleur.grey(bindings.nodeID),\n\t\t\t\t\tmod: modColorName,\n\t\t\t\t\tmsg: printArgs(args).join(\" \")\n\t\t\t\t})];\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Interpolate a text.\n\t *\n\t * @param {Strimg} str\n\t * @param {Object} obj\n\t * @returns {String}\n\t */\n\trender(str, obj) {\n\t\treturn str.replace(/\\{\\s?(\\w+)\\s?\\}/g, (match, v) => obj[v] || \"\");\n\t}\n\n}\n\nmodule.exports = FormattedLogger;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n/* eslint-disable no-console */\n\n\"use strict\";\n\nconst FormattedLogger \t= require(\"./formatted\");\nconst kleur \t\t\t= require(\"kleur\");\n\n/**\n * Console logger for Moleculer\n *\n * @class ConsoleLogger\n * @extends {FormattedLogger}\n */\nclass ConsoleLogger extends FormattedLogger {\n\n\t/**\n\t * Creates an instance of ConsoleLogger.\n\t * @param {Object} opts\n\t * @memberof ConsoleLogger\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.maxPrefixLength = 0;\n\t}\n\n\tinit(loggerFactory) {\n\t\tsuper.init(loggerFactory);\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\t}\n\n\t/**\n\t *\n\t * @param {object} bindings\n\t */\n\tgetLogHandler(bindings) {\n\t\tconst level = bindings ? this.getLogLevel(bindings.mod) : null;\n\t\tif (!level)\n\t\t\treturn null;\n\n\t\tconst levelIdx = FormattedLogger.LEVELS.indexOf(level);\n\t\tconst formatter = this.getFormatter(bindings);\n\n\t\treturn (type, args) => {\n\t\t\tconst typeIdx = FormattedLogger.LEVELS.indexOf(type);\n\t\t\tif (typeIdx > levelIdx) return;\n\n\t\t\tconst pargs = formatter(type, args);\n\t\t\tswitch(type) {\n\t\t\t\tcase \"fatal\":\n\t\t\t\tcase \"error\": return console.error(...pargs);\n\t\t\t\tcase \"warn\": return console.warn(...pargs);\n\t\t\t\tdefault: return console.log(...pargs);\n\t\t\t}\n\t\t};\n\t}\n\n}\n\nmodule.exports = ConsoleLogger;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\nconst Base = require(\"./base\");\n\nconst Loggers = {\n\tBase,\n\tFormatted: require(\"./formatted\"),\n\n\tBunyan: require(\"./bunyan\"),\n\tConsole: require(\"./console\"),\n\tDatadog: require(\"./datadog\"),\n\tDebug: require(\"./debug\"),\n\tFile: require(\"./file\"),\n\tLog4js: require(\"./log4js\"),\n\tPino: require(\"./pino\"),\n\tWinston: require(\"./winston\"),\n\n\tLEVELS: Base.LEVELS\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Loggers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Loggers[n];\n}\n\n/**\n * Resolve reporter by name\n *\n * @param {object|string} opt\n * @returns {Reporter}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Loggers.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet LoggerClass = getByName(opt);\n\t\tif (LoggerClass)\n\t\t\treturn new LoggerClass();\n\n\t} else if (isObject(opt)) {\n\t\tlet LoggerClass = getByName(opt.type);\n\t\tif (LoggerClass)\n\t\t\treturn new LoggerClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid logger configuration. Type: '${opt.type}'`, { type: opt.type });\n\t}\n\n\tthrow new BrokerOptionsError(`Invalid logger configuration: '${opt}'`, { type: opt });\n}\n\nfunction register(name, value) {\n\tLoggers[name] = value;\n}\n\nmodule.exports = Object.assign(Loggers, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isPlainObject, isString } = require(\"./utils\");\nconst Loggers = require(\"./loggers\");\n\nconst noop = () => {};\nconst cwd = process.cwd();\n\n/**\n * Log factory class.\n *\n * @class LoggerFactory\n */\nclass LoggerFactory {\n\n\t/**\n\t * Constructor of LoggerFactory\n\t */\n\tconstructor(broker) {\n\t\tthis.broker = broker;\n\t\tthis.appenders = [];\n\t\tthis.cache = new Map();\n\t}\n\n\t/**\n\t * Initialize module.\n\t */\n\tinit(opts) {\n\t\tthis.opts = opts;\n\n\t\tconst globalLogLevel = this.broker.options.logLevel || \"info\";\n\n\t\tif (opts === false || opts == null) {\n\t\t\t// No logger\n\t\t\tthis.appenders = [];\n\n\t\t} else if (opts === true || opts === console) {\n\t\t\t// Default console logger\n\t\t\tthis.appenders = [Loggers.resolve({\n\t\t\t\ttype: \"Console\",\n\t\t\t\toptions: {\n\t\t\t\t\tlevel: globalLogLevel\n\t\t\t\t}\n\t\t\t})];\n\n\t\t} else {\n\t\t\tif (!Array.isArray(opts)) {\n\t\t\t\topts = [opts];\n\t\t\t}\n\n\t\t\tthis.appenders = _.compact(opts).map(o => {\n\t\t\t\t// Built-in shorthand\n\t\t\t\tif (isString(o))\n\t\t\t\t\treturn Loggers.resolve({ type: o, options: { level: globalLogLevel } });\n\n\t\t\t\t// Build-in with options\n\t\t\t\tif (isPlainObject(o))\n\t\t\t\t\treturn Loggers.resolve(_.defaultsDeep({}, o, { options: { level: globalLogLevel } }));\n\n\t\t\t\t// Custom logger instance\n\t\t\t\treturn Loggers.resolve(o);\n\t\t\t});\n\t\t}\n\n\t\t// Initialize appenders\n\t\tthis.appenders.forEach(app => app.init(this));\n\t}\n\n\t/**\n\t * Stopping all appenders\n\t */\n\tstop() {\n\t\treturn this.broker.Promise.all(this.appenders.map(appender => appender.stop()));\n\t}\n\n\t/**\n\t * Get caller information from error stack trace.\n\t */\n\tgetCallerFromStack() {\n\t\tconst _prepareStackTrace = Error.prepareStackTrace;\n\t\tError.prepareStackTrace = (_, stack) => stack;\n\t\tconst stack = new Error().stack;\n\t\tError.prepareStackTrace = _prepareStackTrace;\n\n\t\tif (stack.length > 2) {\n\t\t\tconst site = stack[2];\n\t\t\treturn {\n\t\t\t\tfilename: site.getFileName().substring(cwd.length + 1),\n\t\t\t\tlineNumber: site.getLineNumber(),\n\t\t\t\tcolumnNumber: site.getColumnNumber(),\n\t\t\t\tmethodName: site.getMethodName(),\n\t\t\t\tfunctionName: site.getFunctionName(),\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Get a logger for a module (service, transporter, cacher, context...etc)\n\t *\n\t * @param {Object} bindings\n\t * @returns {ModuleLogger}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tgetLogger(bindings) {\n\t\tlet logger = this.cache.get(this.getBindingsKey(bindings));\n\t\tif (logger) return logger;\n\n\t\tlogger = {};\n\t\tconst broker = this.broker;\n\t\tconst appenders = this.appenders;\n\n\t\tconst logHandlers = _.compact(appenders.map(app => app.getLogHandler(bindings)));\n\n\t\tLoggers.LEVELS.forEach((type) => {\n\t\t\tif (logHandlers.length == 0)\n\t\t\t\treturn logger[type] = noop;\n\n\t\t\tlogger[type] = function(...args) {\n\t\t\t\tif (broker.middlewares && broker.middlewares.registeredHooks.newLogEntry)\n\t\t\t\t\tbroker.middlewares.callSyncHandlers(\"newLogEntry\", [type, args, bindings], {});\n\n\t\t\t\tif (logHandlers.length == 0) return;\n\n\t\t\t\tfor(let i = 0; i < logHandlers.length; i++)\n\t\t\t\t\tlogHandlers[i](type, args);\n\t\t\t};\n\t\t});\n\n\t\t/*logger.log = function(type, ...args) {\n\t\t\tif (broker.middlewares)\n\t\t\t\tbroker.middlewares.callSyncHandlers(\"newLogEntry\", [type, args, bindings], {});\n\n\t\t\tif (logHandlers.length == 0) return;\n\n\t\t\tlogHandlers.forEach(fn => fn(type, args));\n\t\t};*/\n\n\t\tlogger.appenders = appenders;\n\n\n\t\tthis.cache.set(this.getBindingsKey(bindings), logger);\n\n\t\treturn logger;\n\t}\n\n\t/**\n\t * Create a key from bindings for logger caching.\n\t *\n\t * @param {object} bindings\n\t * @returns {String}\n\t */\n\tgetBindingsKey(bindings) {\n\t\tif (!bindings) return \"\";\n\n\t\treturn [\"nodeID\", \"ns\", \"mod\"]\n\t\t\t.map(key => bindings[key])\n\t\t\t.join(\"|\");\n\t}\n\n}\n\nmodule.exports = LoggerFactory;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { ValidationError } = require(\"../errors\");\nconst _ = require(\"lodash\");\n\nclass BaseValidator {\n\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tparamName: \"params\"\n\t\t});\n\t}\n\n\tinit(broker) {\n\t\tthis.broker = broker;\n\t}\n\n\t/**\n\t * Compile a validation schema to a checker function.\n\t * @param {any} schema\n\t * @returns {Function}\n\t */\n\tcompile(/*schema*/) {\n\t\tthrow new Error(\"Abstract method\");\n\t}\n\n\t/**\n\t * Validate params againt the schema\n\t * @param {any} params\n\t * @param {any} schema\n\t * @returns {boolean}\n\t */\n\tvalidate(/*params, schema*/) {\n\t\tthrow new Error(\"Abstract method\");\n\t}\n\n\t/**\n\t * Convert the specific validation schema to\n\t * the Moleculer (fastest-validator) validation schema format.\n\t *\n\t * @param {any} schema\n\t * @returns {Object}\n\t */\n\tconvertSchemaToMoleculer(/*schema*/) {\n\t\tthrow new Error(\"Abstract method\");\n\t}\n\n\t/**\n\t * Register validator as a middleware\n\t *\n\t * @memberof BaseValidator\n\t */\n\tmiddleware(broker) {\n\t\tconst self = this;\n\t\tconst paramName = this.opts.paramName;\n\n\t\treturn {\n\t\t\tname: \"Validator\",\n\t\t\tlocalAction: function validatorMiddleware(handler, action) {\n\t\t\t\t// Wrap a param validator\n\t\t\t\tif (action[paramName] && typeof action[paramName] === \"object\") {\n\t\t\t\t\tconst check = self.compile(action[paramName]);\n\t\t\t\t\treturn function validateContextParams(ctx) {\n\t\t\t\t\t\tlet res = check(ctx.params != null ? ctx.params : {});\n\t\t\t\t\t\tif (res === true)\n\t\t\t\t\t\t\treturn handler(ctx);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = res.map(data => Object.assign(data, { nodeID: ctx.nodeID, action: ctx.action.name }));\n\t\t\t\t\t\t\treturn broker.Promise.reject(new ValidationError(\"Parameters validation error!\", null, res));\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn handler;\n\t\t\t},\n\n\t\t\tlocalEvent: function validatorMiddleware(handler, event) {\n\t\t\t\t// Wrap a param validator\n\t\t\t\tif (event[paramName] && typeof event[paramName] === \"object\") {\n\t\t\t\t\tconst check = self.compile(event[paramName]);\n\t\t\t\t\treturn function validateContextParams(ctx) {\n\t\t\t\t\t\tlet res = check(ctx.params != null ? ctx.params : {});\n\t\t\t\t\t\tif (res === true)\n\t\t\t\t\t\t\treturn handler(ctx);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = res.map(data => Object.assign(data, { nodeID: ctx.nodeID, event: ctx.event.name }));\n\t\t\t\t\t\t\treturn broker.Promise.reject(new ValidationError(\"Parameters validation error!\", null, res));\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn handler;\n\t\t\t}\n\t\t};\n\t}\n}\n\n\nmodule.exports = BaseValidator;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Validator = require(\"fastest-validator\");\nconst { ValidationError } = require(\"../errors\");\nconst BaseValidator = require(\"./base\");\n\nclass FastestValidator  extends BaseValidator{\n\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t\tthis.validator = new Validator(this.opts);\n\t}\n\n\t/**\n\t * Compile a validation schema to a checker function.\n\t * @param {any} schema\n\t * @returns {Function}\n\t */\n\tcompile(schema) {\n\t\treturn this.validator.compile(schema);\n\t}\n\n\t/**\n\t * Validate params againt the schema\n\t * @param {any} params\n\t * @param {any} schema\n\t * @returns {boolean}\n\t */\n\tvalidate(params, schema) {\n\t\tconst res = this.validator.validate(params, schema);\n\t\tif (res !== true)\n\t\t\tthrow new ValidationError(\"Parameters validation error!\", null, res);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Convert the specific validation schema to\n\t * the Moleculer (fastest-validator) validation schema format.\n\t *\n\t * @param {any} schema\n\t * @returns {Object}\n\t */\n\tconvertSchemaToMoleculer(schema) {\n\t\treturn schema;\n\t}\n}\n\nmodule.exports = FastestValidator;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { BrokerOptionsError } = require(\"../errors\");\nconst { isObject, isString } = require(\"../utils\");\n\nconst Validators = {\n\tBase: require(\"./base\"),\n\tFastest: require(\"./fastest\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Validators).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Validators[n];\n}\n\n/**\n * Resolve validator by name\n *\n * @param {object|string} opt\n * @returns {Validator}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Validators.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet ValidatorClass = getByName(opt);\n\t\tif (ValidatorClass)\n\t\t\treturn new ValidatorClass();\n\n\t\tthrow new BrokerOptionsError(`Invalid Validator type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet ValidatorClass = getByName(opt.type || \"Fastest\");\n\t\tif (ValidatorClass)\n\t\t\treturn new ValidatorClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid Validator type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn new Validators.Fastest();\n}\n\nfunction register(name, value) {\n\tValidators[name] = value;\n}\n\nmodule.exports = Object.assign(Validators, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst crypto\t\t= require(\"crypto\");\nconst { METRIC }\t= require(\"../metrics\");\nconst { isObject, isFunction }\t= require(\"../utils\");\n\n/**\n * Abstract cacher class\n *\n * @class Cacher\n */\nclass Cacher {\n\n\t/**\n\t * Creates an instance of Cacher.\n\t *\n\t * @param {object} opts\n\t *\n\t * @memberof Cacher\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tttl: null,\n\t\t\tkeygen: null,\n\t\t\tmaxParamsLength: null\n\t\t});\n\t}\n\n\t/**\n\t * Initialize cacher\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof Cacher\n\t */\n\tinit(broker) {\n\t\tthis.broker = broker;\n\t\tthis.metrics = broker.metrics;\n\n\t\tif (this.broker) {\n\t\t\tthis.logger = broker.getLogger(\"cacher\");\n\n\t\t\tif (this.opts.prefix) {\n\t\t\t\tthis.prefix = this.opts.prefix + \"-\";\n\t\t\t} else {\n\t\t\t\tthis.prefix = \"MOL-\";\n\t\t\t\tif (this.broker.namespace)\n\t\t\t\t\tthis.prefix += this.broker.namespace + \"-\";\n\t\t\t}\n\n\t\t\tthis.registerMoleculerMetrics();\n\t\t}\n\t}\n\n\t/**\n\t * Register Moleculer Transit Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_GET_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_GET_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_FOUND_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_SET_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_SET_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_DEL_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_DEL_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_CLEAN_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_CLEAN_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_EXPIRED_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t}\n\n\t/**\n\t * Close cacher\n\t *\n\t * @memberof Cacher\n\t */\n\tclose() {\n\t\t/* istanbul ignore next */\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Get a cached content by key\n\t *\n\t * @param {any} key\n\t *\n\t * @memberof Cacher\n\t */\n\tget(/*key*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Get a cached content and ttl by key\n\t *\n\t * @param {any} key\n\t *\n\t * @memberof Cacher\n\t */\n\tgetWithTTL(/*key*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Set a content by key to cache\n\t *\n\t * @param {any} key\n\t * @param {any} data\n\t * @param {Number?} ttl\n\t *\n\t * @memberof Cacher\n\t */\n\tset(/*key, data, ttl*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Delete a content by key from cache\n\t *\n\t * @param {string|Array<string>} key\n\t *\n\t * @memberof Cacher\n\t */\n\tdel(/*key*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\n\t/**\n\t * Clean cache. Remove every key by match\n\t * @param {string|Array<string>} match string. Default is \"**\"\n\t * @returns {Promise}\n\t *\n\t * @memberof Cacher\n\t */\n\tclean(/*match = \"**\"*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Get a value from params or meta by `key`.\n\t * If the key starts with `#` it reads from `meta`, otherwise from `params`.\n\t *\n\t * @param {String} key\n\t * @param {Object} params\n\t * @param {Object} meta\n\t * @returns {any}\n\t * @memberof Cacher\n\t */\n\tgetParamMetaValue(key, params, meta) {\n\t\tif (key.startsWith(\"#\") && meta != null)\n\t\t\treturn _.get(meta, key.slice(1));\n\t\telse if (params != null)\n\t\t\treturn _.get(params, key);\n\t}\n\n\t/**\n\t * Default cache key generator\n\t *\n\t * @param {String} actionName\n\t * @param {Object|null} params\n\t * @param {Object} meta\n\t * @param {Array|null} keys\n\t * @returns {String}\n\t * @memberof Cacher\n\t */\n\tdefaultKeygen(actionName, params, meta, keys) {\n\t\tif (params || meta) {\n\t\t\tconst keyPrefix = actionName + \":\";\n\t\t\tif (keys) {\n\t\t\t\tif (keys.length == 1) {\n\t\t\t\t\t// Fast solution for ['id'] key\n\t\t\t\t\tconst val = this.getParamMetaValue(keys[0], params, meta);\n\t\t\t\t\treturn keyPrefix + this._hashedKey(isObject(val) ? this._hashedKey(this._generateKeyFromObject(val)) : val);\n\t\t\t\t}\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\treturn keyPrefix + this._hashedKey(keys.reduce((a, key, i) => {\n\t\t\t\t\t\tconst val = this.getParamMetaValue(key, params, meta);\n\t\t\t\t\t\treturn a + (i ? \"|\" : \"\") + (isObject(val) || Array.isArray(val) ? this._hashedKey(this._generateKeyFromObject(val)) : val);\n\t\t\t\t\t}, \"\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn keyPrefix + this._hashedKey(this._generateKeyFromObject(params));\n\t\t\t}\n\t\t}\n\t\treturn actionName;\n\t}\n\n\t_hashedKey(key) {\n\t\tconst maxParamsLength = this.opts.maxParamsLength;\n\t\tif (!maxParamsLength || maxParamsLength < 44 || key.length <= maxParamsLength)\n\t\t\treturn key;\n\n\t\tconst prefixLength = maxParamsLength - 44;\n\n\t\tconst base64Hash = crypto.createHash(\"sha256\").update(key).digest(\"base64\");\n\t\tif (prefixLength < 1)\n\t\t\treturn base64Hash;\n\n\t\treturn key.substring(0, prefixLength) + base64Hash;\n\t}\n\n\t_generateKeyFromObject(obj) {\n\t\tif (Array.isArray(obj)) {\n\t\t\treturn obj.map(o => this._generateKeyFromObject(o)).join(\"|\");\n\t\t}\n\t\telse if (isObject(obj)) {\n\t\t\treturn Object.keys(obj).map(key => [key, this._generateKeyFromObject(obj[key])].join(\"|\")).join(\"|\");\n\t\t}\n\t\telse if (obj != null) {\n\t\t\treturn obj.toString();\n\t\t} else {\n\t\t\treturn \"null\";\n\t\t}\n\t}\n\n\t/**\n\t * Get a cache key by name and params.\n\t * Concatenate the name and the hashed params object\n\t *\n\t * @param {String} name\n\t * @param {Object} params\n\t * @param {Object} meta\n\t * @param {Array|null} keys\n\t * @returns {String}\n\t */\n\tgetCacheKey(actionName, params, meta, keys) {\n\t\tif (isFunction(this.opts.keygen))\n\t\t\treturn this.opts.keygen.call(this, actionName, params, meta, keys);\n\t\telse\n\t\t\treturn this.defaultKeygen(actionName, params, meta, keys);\n\t}\n\n\t/**\n\t * Register cacher as a middleware\n\t *\n\t * @memberof Cacher\n\t */\n\tmiddleware() {\n\t\treturn (handler, action) => {\n\t\t\tconst opts = _.defaultsDeep({}, isObject(action.cache) ? action.cache : { enabled: !!action.cache });\n\t\t\topts.lock = _.defaultsDeep({}, isObject(opts.lock) ? opts.lock : { enabled: !!opts.lock });\n\t\t\tif (opts.enabled !== false) {\n\t\t\t\tconst isEnabledFunction = isFunction(opts.enabled);\n\n\t\t\t\treturn function cacherMiddleware(ctx) {\n\t\t\t\t\tif (isEnabledFunction) {\n\t\t\t\t\t\tif (!opts.enabled.call(ctx.service, ctx)) {\n\t\t\t\t\t\t\t// Cache is disabled. Call the handler only.\n\t\t\t\t\t\t\treturn handler(ctx);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Disable caching with `ctx.meta.$cache = false`\n\t\t\t\t\tif (ctx.meta[\"$cache\"] === false)\n\t\t\t\t\t\treturn handler(ctx);\n\n\t\t\t\t\tconst cacheKey = this.getCacheKey(action.name, ctx.params, ctx.meta, opts.keys);\n\t\t\t\t\t// Using lock\n\t\t\t\t\tif(opts.lock.enabled !== false){\n\t\t\t\t\t\tlet cachePromise;\n\t\t\t\t\t\tif(opts.lock.staleTime && this.getWithTTL){ // If enable cache refresh\n\t\t\t\t\t\t\tcachePromise = this.getWithTTL(cacheKey).then(({ data, ttl }) => {\n\t\t\t\t\t\t\t\tif (data != null) {\n\t\t\t\t\t\t\t\t\tif(opts.lock.staleTime && ttl && ttl < opts.lock.staleTime){\n\t\t\t\t\t\t\t\t\t\t// Cache is stale, try to refresh it.\n\t\t\t\t\t\t\t\t\t\tthis.tryLock(cacheKey, opts.lock.ttl).then(unlock=>{\n\t\t\t\t\t\t\t\t\t\t\treturn handler(ctx).then(result => {\n\t\t\t\t\t\t\t\t\t\t\t\t// Save the result to the cache and realse the lock.\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.set(cacheKey, result, opts.ttl).then(()=>unlock());\n\t\t\t\t\t\t\t\t\t\t\t}).catch((/*err*/) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.del(cacheKey).then(()=>unlock());\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}).catch((/*err*/)=>{\n\t\t\t\t\t\t\t\t\t\t\t// The cache is refreshing on somewhere else.\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcachePromise = this.get(cacheKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn cachePromise.then(data=>{\n\t\t\t\t\t\t\tif (data != null) {\n\t\t\t\t\t\t\t\t// Found in the cache! Don't call handler, return with the content\n\t\t\t\t\t\t\t\tctx.cachedResult = true;\n\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Not found in the cache! Acquire a lock\n\t\t\t\t\t\t\treturn this.lock(cacheKey, opts.lock.ttl).then(unlock => {\n\t\t\t\t\t\t\t\treturn this.get(cacheKey).then(content => {\n\t\t\t\t\t\t\t\t\tif (content != null) {\n\t\t\t\t\t\t\t\t\t\t// Cache found. Realse the lock and return the value.\n\t\t\t\t\t\t\t\t\t\tctx.cachedResult = true;\n\t\t\t\t\t\t\t\t\t\treturn unlock().then(() => {\n\t\t\t\t\t\t\t\t\t\t\treturn content;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Call the handler\n\t\t\t\t\t\t\t\t\treturn handler(ctx).then(result => {\n\t\t\t\t\t\t\t\t\t\t// Save the result to the cache and realse the lock.\n\t\t\t\t\t\t\t\t\t\tthis.set(cacheKey, result, opts.ttl).then(()=>unlock());\n\t\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t\t}).catch(e => {\n\t\t\t\t\t\t\t\t\t\treturn unlock().then(() => {\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// Not using lock\n\t\t\t\t\treturn this.get(cacheKey).then(content => {\n\t\t\t\t\t\tif (content != null) {\n\t\t\t\t\t\t\t// Found in the cache! Don't call handler, return with the content\n\t\t\t\t\t\t\tctx.cachedResult = true;\n\t\t\t\t\t\t\treturn content;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Call the handler\n\t\t\t\t\t\treturn handler(ctx).then(result => {\n\t\t\t\t\t\t\t// Save the result to the cache\n\t\t\t\t\t\t\tthis.set(cacheKey, result, opts.ttl);\n\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}.bind(this);\n\t\t\t}\n\n\t\t\treturn handler;\n\t\t};\n\t}\n\n}\n\nmodule.exports = Cacher;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nclass Lock {\n\tconstructor(){\n\t\tthis.locked = new Map();\n\t}\n\n\tacquire(key /*, ttl*/) {\n\t\tlet locked = this.locked.get(key);\n\t\tif (!locked) { // not locked\n\t\t\tlocked = [];\n\t\t\tthis.locked.set(key, locked);\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn new Promise(resolve => locked.push(resolve));\n\t\t}\n\t}\n\n\tisLocked(key) {\n\t\treturn !!this.locked.get(key);\n\t}\n\n\trelease(key){\n\t\tlet locked = this.locked.get(key);\n\t\tif(locked) {\n\t\t\tif(locked.length > 0) {\n\t\t\t\tlocked.shift()(); // Release the lock\n\t\t\t} else {\n\t\t\t\tthis.locked.delete(key);\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n\nmodule.exports = Lock;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst utils\t\t\t= require(\"../utils\");\nconst BaseCacher  \t= require(\"./base\");\nconst { METRIC }\t= require(\"../metrics\");\n\nconst Lock = require(\"../lock\");\n/**\n * Cacher factory for memory cache\n *\n * @class MemoryCacher\n */\nclass MemoryCacher extends BaseCacher {\n\n\t/**\n\t * Creates an instance of MemoryCacher.\n\t *\n\t * @param {object} opts\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\t// Cache container\n\t\tthis.cache = new Map();\n\t\t// Async lock\n\t\tthis._lock = new Lock();\n\t\t// Start TTL timer\n\t\tthis.timer = setInterval(() => {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.checkTTL();\n\t\t}, 30 * 1000);\n\t\tthis.timer.unref();\n\n\t\t// Set cloning\n\t\tthis.clone = this.opts.clone === true ? _.cloneDeep : this.opts.clone;\n\t}\n\n\t/**\n\t * Initialize cacher\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tinit(broker) {\n\t\tsuper.init(broker);\n\n\t\tbroker.localBus.on(\"$transporter.connected\", () => {\n\t\t\t// Clear all entries after transporter connected. Maybe we missed some \"cache.clear\" events.\n\t\t\treturn this.clean();\n\t\t});\n\t}\n\n\t/**\n\t * Close cacher\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tclose() {\n\t\tclearInterval(this.timer);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Get data from cache by key\n\t *\n\t * @param {any} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tget(key) {\n\t\tthis.logger.debug(`GET ${key}`);\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_GET_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_GET_TIME);\n\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.logger.debug(`FOUND ${key}`);\n\t\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_FOUND_TOTAL);\n\n\t\t\tlet item = this.cache.get(key);\n\t\t\tif (item.expire && item.expire < Date.now()) {\n\t\t\t\tthis.logger.debug(`EXPIRED ${key}`);\n\t\t\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_EXPIRED_TOTAL);\n\t\t\t\tthis.cache.delete(key);\n\t\t\t\ttimeEnd();\n\t\t\t\treturn this.broker.Promise.resolve(null);\n\t\t\t}\n\t\t\tconst res = this.clone ? this.clone(item.data) : item.data;\n\t\t\ttimeEnd();\n\n\t\t\treturn this.broker.Promise.resolve(res);\n\t\t} else {\n\t\t\ttimeEnd();\n\t\t}\n\t\treturn this.broker.Promise.resolve(null);\n\t}\n\n\t/**\n\t * Save data to cache by key\n\t *\n\t * @param {String} key\n\t * @param {any} data JSON object\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tset(key, data, ttl) {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_SET_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_SET_TIME);\n\n\t\tif (ttl == null)\n\t\t\tttl = this.opts.ttl;\n\n\t\tthis.cache.set(key, {\n\t\t\tdata,\n\t\t\texpire: ttl ? Date.now() + ttl * 1000 : null\n\t\t});\n\n\t\ttimeEnd();\n\t\tthis.logger.debug(`SET ${key}`);\n\n\t\treturn this.broker.Promise.resolve(data);\n\t}\n\n\t/**\n\t * Delete a key from cache\n\t *\n\t * @param {string|Array<string>} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tdel(keys) {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_DEL_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_DEL_TIME);\n\n\t\tkeys = Array.isArray(keys) ? keys : [keys];\n\t\tkeys.forEach(key => {\n\t\t\tthis.cache.delete(key);\n\t\t\tthis.logger.debug(`REMOVE ${key}`);\n\t\t});\n\t\ttimeEnd();\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Clean cache. Remove every key by match\n\t * @param {string|Array<string>} match string. Default is \"**\"\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tclean(match = \"**\") {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_CLEAN_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_CLEAN_TIME);\n\n\t\tconst matches = Array.isArray(match) ? match : [match];\n\t\tthis.logger.debug(`CLEAN ${matches.join(\", \")}`);\n\n\t\tthis.cache.forEach((value, key) => {\n\t\t\tif (matches.some(match => utils.match(key, match))) {\n\t\t\t\tthis.logger.debug(`REMOVE ${key}`);\n\t\t\t\tthis.cache.delete(key);\n\t\t\t}\n\t\t});\n\t\ttimeEnd();\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Get data and ttl from cache by key.\n\t *\n\t * @param {string|Array<string>} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tgetWithTTL(key){\n\t\tthis.logger.debug(`GET ${key}`);\n\t\tlet data = null;\n\t\tlet ttl = null;\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.logger.debug(`FOUND ${key}`);\n\n\t\t\tlet item = this.cache.get(key);\n\t\t\tlet now = Date.now();\n\t\t\tttl = (item.expire - now)/1000;\n\t\t\tttl = ttl > 0 ? ttl : null;\n\t\t\tif (this.opts.ttl) {\n\t\t\t\t// Update expire time (hold in the cache if we are using it)\n\t\t\t\titem.expire = now + this.opts.ttl * 1000;\n\t\t\t}\n\t\t\tdata = this.clone ? this.clone(item.data) : item.data;\n\t\t}\n\t\treturn this.broker.Promise.resolve({ data, ttl });\n\t}\n\n\t/**\n\t * Acquire a lock\n\t *\n\t * @param {string|Array<string>} key\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tlock(key, ttl) {\n\t\treturn this._lock.acquire(key, ttl).then(()=> {\n\t\t\treturn ()=>this._lock.release(key);\n\t\t});\n\t}\n\n\t/**\n\t * Try to acquire a lock\n\t *\n\t * @param {string|Array<string>} key\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryCacher\n\t */\n\ttryLock(key, ttl) {\n\t\tif(this._lock.isLocked(key)){\n\t\t\treturn this.broker.Promise.reject(new Error(\"Locked.\"));\n\t\t}\n\t\treturn this._lock.acquire(key, ttl).then(()=> {\n\t\t\treturn ()=>this._lock.release(key);\n\t\t});\n\t}\n\n\t/**\n\t * Check & remove the expired cache items\n\t *\n\t * @memberof MemoryCacher\n\t */\n\tcheckTTL() {\n\t\tlet now = Date.now();\n\t\tthis.cache.forEach((value, key) => {\n\t\t\tlet item = this.cache.get(key);\n\n\t\t\tif (item.expire && item.expire < now) {\n\t\t\t\tthis.logger.debug(`EXPIRED ${key}`);\n\t\t\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_EXPIRED_TOTAL);\n\t\t\t\tthis.cache.delete(key);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = MemoryCacher;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst utils\t\t\t= require(\"../utils\");\nconst BaseCacher  \t= require(\"./base\");\nconst LRU \t\t\t= require(\"lru-cache\");\nconst { METRIC }\t= require(\"../metrics\");\n\nconst Lock = require(\"../lock\");\n/**\n * Cacher factory for memory cache\n *\n * @class MemoryLRUCacher\n */\nclass MemoryLRUCacher extends BaseCacher {\n\n\t/**\n\t * Creates an instance of MemoryLRUCacher.\n\t *\n\t * @param {object} opts\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\t// Cache container\n\t\tthis.cache = new LRU({\n\t\t\tmax: this.opts.max,\n\t\t\tmaxAge: this.opts.ttl ? this.opts.ttl * 1000 : null,\n\t\t\tupdateAgeOnGet: !!this.opts.ttl\n\t\t});\n\t\t// Async lock\n\t\tthis._lock = new Lock();\n\t\t// Start TTL timer\n\t\tthis.timer = setInterval(() => {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.checkTTL();\n\t\t}, 30 * 1000);\n\t\tthis.timer.unref();\n\n\t\t// Set cloning\n\t\tthis.clone = this.opts.clone === true ? _.cloneDeep : this.opts.clone;\n\t}\n\n\t/**\n\t * Initialize cacher\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tinit(broker) {\n\t\tsuper.init(broker);\n\n\t\tbroker.localBus.on(\"$transporter.connected\", () => {\n\t\t\t// Clear all entries after transporter connected. Maybe we missed some \"cache.clear\" events.\n\t\t\treturn this.clean();\n\t\t});\n\t\tif(this.opts.lock && this.opts.lock.enabled !== false && this.opts.lock.staleTime){\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.logger.warn(\"setting lock.staleTime with MemoryLRUCacher is not supported.\");\n\t\t}\n\t}\n\n\t/**\n\t * Close cacher\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tclose() {\n\t\tclearInterval(this.timer);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Get data from cache by key\n\t *\n\t * @param {any} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tget(key) {\n\t\tthis.logger.debug(`GET ${key}`);\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_GET_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_GET_TIME);\n\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.logger.debug(`FOUND ${key}`);\n\t\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_FOUND_TOTAL);\n\n\t\t\tlet item = this.cache.get(key);\n\t\t\tconst res = this.clone ? this.clone(item) : item;\n\t\t\ttimeEnd();\n\n\t\t\treturn this.broker.Promise.resolve(res);\n\t\t} else {\n\t\t\ttimeEnd();\n\t\t}\n\t\treturn this.broker.Promise.resolve(null);\n\t}\n\n\t/**\n\t * Save data to cache by key\n\t *\n\t * @param {String} key\n\t * @param {any} data JSON object\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tset(key, data, ttl) {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_SET_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_SET_TIME);\n\n\t\tif (ttl == null)\n\t\t\tttl = this.opts.ttl;\n\n\t\tthis.cache.set(key, data, ttl ? ttl * 1000 : null);\n\n\t\ttimeEnd();\n\t\tthis.logger.debug(`SET ${key}`);\n\n\t\treturn this.broker.Promise.resolve(data);\n\t}\n\n\t/**\n\t * Delete a key from cache\n\t *\n\t * @param {string|Array<string>} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tdel(keys) {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_DEL_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_DEL_TIME);\n\n\t\tkeys = Array.isArray(keys) ? keys : [keys];\n\t\tkeys.forEach(key => {\n\t\t\tthis.cache.del(key);\n\t\t\tthis.logger.debug(`REMOVE ${key}`);\n\t\t});\n\t\ttimeEnd();\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Clean cache. Remove every key by match\n\t * @param {string|Array<string>} match string. Default is \"**\"\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tclean(match = \"**\") {\n\t\tthis.metrics.increment(METRIC.MOLECULER_CACHER_CLEAN_TOTAL);\n\t\tconst timeEnd = this.metrics.timer(METRIC.MOLECULER_CACHER_CLEAN_TIME);\n\n\t\tconst matches = Array.isArray(match) ? match : [match];\n\t\tthis.logger.debug(`CLEAN ${matches.join(\", \")}`);\n\n\t\tthis.cache.keys().forEach(key => {\n\t\t\tif (matches.some(match => utils.match(key, match))) {\n\t\t\t\tthis.logger.debug(`REMOVE ${key}`);\n\t\t\t\tthis.cache.del(key);\n\t\t\t}\n\t\t});\n\t\ttimeEnd();\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\t/**\n\t * Get data and ttl from cache by key.\n\t *\n\t * @param {string|Array<string>} key\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tgetWithTTL(key){\n\t\t// There are no way to get the ttl of LRU cache :(\n\t\treturn this.get(key).then(data=>{\n\t\t\treturn { data, ttl: null };\n\t\t});\n\t}\n\n\t/**\n\t * Acquire a lock\n\t *\n\t * @param {string|Array<string>} key\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\n\tlock(key, ttl) {\n\t\treturn this._lock.acquire(key, ttl).then(()=> {\n\t\t\treturn ()=>this._lock.release(key);\n\t\t});\n\t}\n\n\t/**\n\t * Try to acquire a lock\n\t *\n\t * @param {string|Array<string>} key\n\t * @param {Number} ttl Optional Time-to-Live\n\t * @returns {Promise}\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\ttryLock(key, ttl) {\n\t\tif(this._lock.isLocked(key)){\n\t\t\treturn this.broker.Promise.reject(new Error(\"Locked.\"));\n\t\t}\n\t\treturn this._lock.acquire(key, ttl).then(()=> {\n\t\t\treturn ()=>this._lock.release(key);\n\t\t});\n\t}\n\n\n\t/**\n\t * Check & remove the expired cache items\n\t *\n\t * @memberof MemoryLRUCacher\n\t */\n\tcheckTTL() {\n\t\tthis.cache.prune();\n\t}\n}\n\nmodule.exports = MemoryLRUCacher;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Cachers = {\n\tBase: require(\"./base\"),\n\tMemory: require(\"./memory\"),\n\tMemoryLRU: require(\"./memory-lru\"),\n\tRedis: require(\"./redis\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Cachers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Cachers[n];\n}\n\n/**\n * Resolve cacher by name\n *\n * @param {object|string} opt\n * @returns {Cacher}\n */\nfunction resolve(opt) {\n\tif (opt instanceof Cachers.Base) {\n\t\treturn opt;\n\t} else if (opt === true) {\n\t\treturn new Cachers.Memory();\n\t} else if (isString(opt)) {\n\t\tlet CacherClass = getByName(opt);\n\t\tif (CacherClass)\n\t\t\treturn new CacherClass();\n\n\t\tif (opt.startsWith(\"redis://\"))\n\t\t\tCacherClass = Cachers.Redis;\n\n\t\tif (CacherClass)\n\t\t\treturn new CacherClass(opt);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid cacher type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet CacherClass = getByName(opt.type || \"Memory\");\n\t\tif (CacherClass)\n\t\t\treturn new CacherClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid cacher type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn null;\n}\n\nfunction register(name, value) {\n\tCachers[name] = value;\n}\n\nmodule.exports = Object.assign(Cachers, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _\t= require(\"lodash\");\nconst P = require(\"../packets\");\nconst { flatten } = require(\"../utils\");\nconst { BrokerDisconnectedError } = require(\"../errors\");\n\n/**\n * Base Transporter class\n *\n * @class BaseTransporter\n */\nclass BaseTransporter {\n\n\t/**\n\t * Creates an instance of BaseTransporter.\n\t *\n\t * @param {any} opts\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = opts;\n\t\tthis.connected = false;\n\t\tthis.hasBuiltInBalancer = false;\n\t}\n\n\t/**\n\t * Init transporter\n\t *\n\t * @param {Transit} transit\n\t * @param {Function} messageHandler\n\t * @param {Function} afterConnect\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tinit(transit, messageHandler, afterConnect) {\n\t\tif (transit) {\n\t\t\tthis.transit = transit;\n\t\t\tthis.broker = transit.broker;\n\t\t\tthis.nodeID = transit.nodeID;\n\t\t\tthis.logger = this.broker.getLogger(\"transporter\");\n\n\t\t\tthis.prefix = \"MOL\";\n\t\t\tif (this.broker.namespace)\n\t\t\t\tthis.prefix += \"-\" + this.broker.namespace;\n\n\t\t}\n\t\tthis.messageHandler = messageHandler;\n\t\tthis.afterConnect = afterConnect;\n\t}\n\n\t/**\n\t * Connect to the transporter server\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tconnect() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Event handler for connected.\n\t *\n\t * @param {any} wasReconnect\n\t * @returns {Promise}\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tonConnected(wasReconnect) {\n\t\tthis.connected = true;\n\t\tif (this.afterConnect) {\n\t\t\treturn this.afterConnect(wasReconnect);\n\t\t}\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Disconnect from the transporter server\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tdisconnect() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Subscribe to all topics\n\t *\n\t * @param {Array<Object>} topics\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tmakeSubscriptions(topics) {\n\t\treturn this.broker.Promise.all(topics.map(({ cmd, nodeID }) => this.subscribe(cmd, nodeID)));\n\t}\n\n\t/**\n\t * Process incoming messages\n\t *\n\t * @param {String} cmd\n\t * @param {Buffer} msg\n\t * @returns\n\t * @memberof BaseTransporter\n\t */\n\tincomingMessage(cmd, msg) {\n\t\tif (!msg) return;\n\t\ttry {\n\t\t\tconst packet = this.deserialize(cmd, msg);\n\t\t\treturn this.messageHandler(cmd, packet);\n\t\t} catch(err) {\n\t\t\tthis.logger.warn(\"Invalid incoming packet. Type:\", cmd, err);\n\t\t\tthis.logger.debug(\"Content:\", msg.toString ? msg.toString() : msg);\n\t\t}\n\t}\n\n\t/**\n\t * Received data. It's a wrapper for middlewares.\n\t * @param {String} cmd\n\t * @param {Buffer} data\n\t */\n\treceive(cmd, data) {\n\t\treturn this.incomingMessage(cmd, data);\n\t}\n\n\t/**\n\t * Subscribe to a command\n\t *\n\t * @param {String} cmd\n\t * @param {String} nodeID\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tsubscribe(/*cmd, nodeID*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Subscribe to balanced action commands\n\t *\n\t * @param {String} action\n\t * @memberof AmqpTransporter\n\t */\n\tsubscribeBalancedRequest(/*action*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Subscribe to balanced event command\n\t *\n\t * @param {String} event\n\t * @param {String} group\n\t * @memberof AmqpTransporter\n\t */\n\tsubscribeBalancedEvent(/*event, group*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Unsubscribe all balanced request and event commands\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tunsubscribeFromBalancedCommands() {\n\t\t/* istanbul ignore next */\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Publish a normal not balanced packet\n\t *\n\t * @param {Packet} packet\n\t * @returns {Promise}\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tpublish(packet) {\n\t\tconst topic = this.getTopicName(packet.type, packet.target);\n\t\tconst data = this.serialize(packet);\n\n\t\treturn this.send(topic, data, { packet });\n\t}\n\n\t/**\n\t * Publish a balanced EVENT packet to a balanced queue\n\t *\n\t * @param {Packet} packet\n\t * @param {String} group\n\t * @returns {Promise}\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tpublishBalancedEvent(packet, group) {\n\t\tconst topic = `${this.prefix}.${P.PACKET_EVENT}B.${group}.${packet.payload.event}`;\n\t\tconst data = this.serialize(packet);\n\n\t\treturn this.send(topic, data, { packet, balanced: true });\n\t}\n\n\t/**\n\t * Publish a balanced REQ packet to a balanced queue\n\t *\n\t * @param {Packet} packet\n\t * @returns {Promise}\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tpublishBalancedRequest(packet) {\n\t\tconst topic = `${this.prefix}.${P.PACKET_REQUEST}B.${packet.payload.action}`;\n\t\tconst data = this.serialize(packet);\n\n\t\treturn this.send(topic, data, { packet, balanced: true });\n\t}\n\n\t/**\n\t * Send data buffer.\n\t *\n\t * @param {String} topic\n\t * @param {Buffer} data\n\t * @param {Object} meta\n\t *\n\t * @returns {Promise}\n\t */\n\tsend(/*topic, data, meta*/) {\n\t\tthrow new Error(\"Not implemented!\");\n\t}\n\n\t/**\n\t * Get topic name from command & target nodeID\n\t *\n\t * @param {any} cmd\n\t * @param {any} nodeID\n\t *\n\t * @memberof BaseTransporter\n\t */\n\tgetTopicName(cmd, nodeID) {\n\t\treturn this.prefix + \".\" + cmd + (nodeID ? \".\" + nodeID : \"\");\n\t}\n\n\t/**\n\t * Initialize queues for REQUEST & EVENT packets.\n\t *\n\t * @memberof AmqpTransporter\n\t */\n\tmakeBalancedSubscriptions() {\n\t\tif (!this.hasBuiltInBalancer) return this.broker.Promise.resolve();\n\n\t\treturn this.unsubscribeFromBalancedCommands().then(() => {\n\t\t\tconst services = this.broker.getLocalNodeInfo().services;\n\t\t\treturn this.broker.Promise.all(services.map(service => {\n\t\t\t\tconst p = [];\n\n\t\t\t\t// Service actions queues\n\t\t\t\tif (service.actions && typeof(service.actions) == \"object\") {\n\t\t\t\t\tp.push(Object.keys(service.actions).map(action => this.subscribeBalancedRequest(action)));\n\t\t\t\t}\n\n\t\t\t\t// Load-balanced/grouped events queues\n\t\t\t\tif (service.events && typeof(service.events) == \"object\") {\n\t\t\t\t\tp.push(Object.keys(service.events).map(event => {\n\t\t\t\t\t\tconst group = service.events[event].group || service.name;\n\t\t\t\t\t\tthis.subscribeBalancedEvent(event, group);\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\treturn this.broker.Promise.all(_.compact(flatten(p, true)));\n\t\t\t}));\n\t\t});\n\t}\n\n\t/**\n\t * Prepublish a packet. Handle balancing.\n\t *\n\t * @param {Packet} packet\n\t * @returns {Promise}\n\t * @memberof BaseTransporter\n\t */\n\tprepublish(packet) {\n\t\t// Safely handle disconnected state\n\t\tif (!this.connected) {\n\t\t\t// For packets that are triggered intentionally by users, throw a retryable error.\n\t\t\tif ([P.PACKET_REQUEST, P.PACKET_EVENT, P.PACKET_PING].includes(packet.type)) {\n\t\t\t\treturn this.broker.Promise.reject(new BrokerDisconnectedError());\n\t\t\t}\n\n\t\t\t// For internal packets like INFO and HEARTBEATS, skip sending and don't throw\n\t\t\telse {\n\t\t\t\treturn this.broker.Promise.resolve();\n\t\t\t}\n\t\t}\n\n\t\tif (packet.type === P.PACKET_EVENT && packet.target == null && packet.payload.groups) {\n\t\t\tconst groups = packet.payload.groups;\n\t\t\t// If the packet contains groups, we don't send the packet to\n\t\t\t// the targetted node, but we push them to the event group queues\n\t\t\t// and AMQP will load-balanced it.\n\t\t\tif (groups.length > 0) {\n\t\t\t\tgroups.forEach(group => {\n\t\t\t\t\t// Change the groups to this group to avoid multi handling in consumers.\n\t\t\t\t\tpacket.payload.groups = [group];\n\t\t\t\t\tthis.publishBalancedEvent(packet, group);\n\t\t\t\t});\n\t\t\t\treturn this.broker.Promise.resolve();\n\t\t\t}\n\t\t\t// If it's not contain, then it is a broadcasted event,\n\t\t\t// we sent it in the normal way (exchange)\n\n\t\t} else if (packet.type === P.PACKET_REQUEST && packet.target == null) {\n\t\t\treturn this.publishBalancedRequest(packet);\n\t\t}\n\n\t\t// Normal packet publishing...\n\t\treturn this.publish(packet);\n\t}\n\n\t/**\n\t * Serialize the Packet to Buffer\n\t *\n\t * @param {Packet} packet\n\t * @returns {Buffer}\n\t *\n\t * @memberof Transit\n\t */\n\tserialize(packet) {\n\t\tpacket.payload.ver = this.broker.PROTOCOL_VERSION;\n\t\tpacket.payload.sender = this.nodeID;\n\t\treturn this.broker.serializer.serialize(packet.payload, packet.type);\n\t}\n\n\t/**\n\t * Deserialize the incoming Buffer to Packet\n\t *\n\t * @param {String} type\n\t * @param {Buffer} buf\n\t * @returns {Packet}\n\t *\n\t * @memberof Transit\n\t */\n\tdeserialize(type, buf) {\n\t\tif (buf == null) return null;\n\n\t\tconst msg = this.broker.serializer.deserialize(buf, type);\n\t\treturn new P.Packet(type, null, msg);\n\n\t}\n}\n\nmodule.exports = BaseTransporter;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Transporter \t= require(\"./base\");\n\nconst EventEmitter2 = require(\"eventemitter2\").EventEmitter2;\n\n// Put to global to transfer messages between brokers in the same process\nglobal.bus = new EventEmitter2({\n\twildcard: true,\n\tmaxListeners: 100\n});\n\n/**\n * Fake Transporter\n *\n * @class FakeTransporter\n * @extends {Transporter}\n */\nclass FakeTransporter extends Transporter {\n\n\t/**\n\t * Creates an instance of FakeTransporter.\n\t *\n\t * @param {any} opts\n\t *\n\t * @memberof FakeTransporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\t// Local event bus\n\t\tthis.bus = global.bus;\n\t\tthis.hasBuiltInBalancer = true;\n\n\t\tthis.subscriptions = [];\n\t}\n\n\t/**\n\t * Connect to a NATS server\n\t *\n\t * @memberof FakeTransporter\n\t */\n\tconnect() {\n\t\treturn this.onConnected();\n\t}\n\n\t/**\n\t * Disconnect from a NATS server\n\t *\n\t * @memberof FakeTransporter\n\t */\n\tdisconnect() {\n\t\tthis.connected = false;\n\t\tthis.subscriptions.forEach(({ topic, handler }) => this.bus.off(topic, handler));\n\t\tthis.subscriptions = [];\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Subscribe to a command\n\t *\n\t * @param {String} cmd\n\t * @param {String} nodeID\n\t *\n\t * @memberof FakeTransporter\n\t */\n\tsubscribe(cmd, nodeID) {\n\t\tconst t = this.getTopicName(cmd, nodeID);\n\t\tconst handler = msg => this.receive(cmd, msg);\n\t\tthis.subscriptions.push({ topic: t, handler });\n\n\t\tthis.bus.on(t, handler);\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Subscribe to balanced action commands\n\t *\n\t * @param {String} action\n\t * @memberof AmqpTransporter\n\t */\n\tsubscribeBalancedRequest(/*action*/) {\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Subscribe to balanced event command\n\t *\n\t * @param {String} event\n\t * @param {String} group\n\t * @memberof AmqpTransporter\n\t */\n\tsubscribeBalancedEvent(/*event, group*/) {\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Send data buffer.\n\t *\n\t * @param {String} topic\n\t * @param {Buffer} data\n\t * @param {Object} meta\n\t *\n\t * @returns {Promise}\n\t */\n\tsend(topic, data) {\n\t\tthis.bus.emit(topic, data);\n\t\treturn this.broker.Promise.resolve();\n\t}\n}\n\nmodule.exports = FakeTransporter;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Transporters = {\n\tBase: require(\"./base\"),\n\tFake: require(\"./fake\"),\n\tNATS: require(\"./nats\"),\n\tMQTT: require(\"./mqtt\"),\n\tRedis: require(\"./redis\"),\n\tAMQP: require(\"./amqp\"),\n\tAMQP10: require(\"./amqp10\"),\n\tKafka: require(\"./kafka\"),\n\tSTAN: require(\"./stan\"),\n\tTCP: require(\"./tcp\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Transporters).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Transporters[n];\n}\n\n/**\n * Resolve transporter by name\n *\n * @param {object|string} opt\n * @returns {Transporter}\n */\nfunction resolve(opt) {\n\tif (opt instanceof Transporters.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet TransporterClass = getByName(opt);\n\t\tif (TransporterClass)\n\t\t\treturn new TransporterClass();\n\n\t\tif (opt.startsWith(\"nats://\"))\n\t\t\tTransporterClass = Transporters.NATS;\n\t\telse if (opt.startsWith(\"mqtt://\") || opt.startsWith(\"mqtts://\"))\n\t\t\tTransporterClass = Transporters.MQTT;\n\t\telse if (opt.startsWith(\"redis://\") || opt.startsWith(\"rediss://\"))\n\t\t\tTransporterClass = Transporters.Redis;\n\t\telse if (opt.startsWith(\"amqp://\") || opt.startsWith(\"amqps://\"))\n\t\t\tTransporterClass = Transporters.AMQP;\n\t\telse if (opt.startsWith(\"amqp10://\"))\n\t\t\tTransporterClass = Transporters.AMQP10;\n\t\telse if (opt.startsWith(\"kafka://\"))\n\t\t\tTransporterClass = Transporters.Kafka;\n\t\telse if (opt.startsWith(\"stan://\"))\n\t\t\tTransporterClass = Transporters.STAN;\n\t\telse if (opt.startsWith(\"tcp://\"))\n\t\t\tTransporterClass = Transporters.TCP;\n\n\t\tif (TransporterClass)\n\t\t\treturn new TransporterClass(opt);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid transporter type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet TransporterClass = getByName(opt.type || \"NATS\");\n\n\t\tif (TransporterClass)\n\t\t\treturn new TransporterClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid transporter type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn null;\n}\n\nfunction register(name, value) {\n\tTransporters[name] = value;\n}\n\n\nmodule.exports = Object.assign(Transporters, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst P = require(\"../packets\");\n\n/**\n * Abstract serializer class\n *\n * @class Serializer\n */\nclass Serializer {\n\n\t/**\n\t * Creates an instance of Serializer.\n\t *\n\t * @memberof Serializer\n\t */\n\tconstructor() {\n\t}\n\n\t/**\n\t * Initialize Serializer\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof Serializer\n\t */\n\tinit(broker) {\n\t\tthis.broker = broker;\n\t\t/*if (this.broker) {\n\t\t\tthis.logger = broker.getLogger(\"serializer\");\n\t\t}*/\n\t}\n\n\t/**\n\t * Serializer a JS object to Buffer\n\t *\n\t * @param {Object} obj\n\t * @param {String} type of packet\n\t * @returns {Buffer}\n\t *\n\t * @memberof Serializer\n\t */\n\tserialize(/*obj, type*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Deserialize Buffer to JS object\n\t *\n\t * @param {Buffer} buf\n\t * @param {String} type of packet\n\t * @returns {Object}\n\t *\n\t * @memberof Serializer\n\t */\n\tdeserialize(/*buf, type*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Serialize custom fields (stringify)\n\t *\n\t * @param {String} type\n\t * @param {Packet} obj\n\t * @returns {Packet}\n\t * @memberof Serializer\n\t */\n\tserializeCustomFields(type, obj) {\n\t\tswitch (type) {\n\t\t\tcase P.PACKET_INFO: {\n\t\t\t\tobj.services = JSON.stringify(obj.services);\n\t\t\t\tif (obj.config)\n\t\t\t\t\tobj.config = JSON.stringify(obj.config);\n\t\t\t\tif (obj.metadata)\n\t\t\t\t\tobj.metadata = JSON.stringify(obj.metadata);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_EVENT: {\n\t\t\t\tthis.convertDataToTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.stringify(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_REQUEST: {\n\t\t\t\tthis.convertDataToTransport(obj, \"params\", \"paramsType\");\n\t\t\t\tobj.meta = JSON.stringify(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_RESPONSE: {\n\t\t\t\tthis.convertDataToTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.stringify(obj.meta);\n\t\t\t\tif (obj.error)\n\t\t\t\t\tobj.error = JSON.stringify(obj.error);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_REQ: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.stringify(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.stringify(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_RES: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.stringify(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.stringify(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\t/**\n\t * Deserialize custom fields\n\t *\n\t * @param {String} type\n\t * @param {Packet} obj\n\t * @returns {Packet}\n\t * @memberof Serializer\n\t */\n\tdeserializeCustomFields(type, obj) {\n\t\tswitch (type) {\n\t\t\tcase P.PACKET_INFO: {\n\t\t\t\tobj.services = JSON.parse(obj.services);\n\t\t\t\tif (obj.config)\n\t\t\t\t\tobj.config = JSON.parse(obj.config);\n\t\t\t\tif (obj.metadata)\n\t\t\t\t\tobj.metadata = JSON.parse(obj.metadata);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_EVENT: {\n\t\t\t\tthis.convertDataFromTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.parse(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_REQUEST: {\n\t\t\t\tthis.convertDataFromTransport(obj, \"params\", \"paramsType\");\n\t\t\t\tobj.meta = JSON.parse(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_RESPONSE: {\n\t\t\t\tthis.convertDataFromTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.parse(obj.meta);\n\t\t\t\tif (obj.error)\n\t\t\t\t\tobj.error = JSON.parse(obj.error);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_REQ: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.parse(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.parse(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_RES: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.parse(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.parse(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\tconvertDataToTransport(obj, field, fieldType) {\n\t\tif (obj[field] === undefined) {\n\t\t\tobj[fieldType] = P.DATATYPE_UNDEFINED;\n\t\t} else if (obj[field] === null) {\n\t\t\tobj[fieldType] = P.DATATYPE_NULL;\n\t\t} else if (Buffer.isBuffer(obj[field])) {\n\t\t\tobj[fieldType] = P.DATATYPE_BUFFER;\n\t\t} else {\n\t\t\t// JSON\n\t\t\tobj[fieldType] = P.DATATYPE_JSON;\n\t\t\tobj[field] = Buffer.from(JSON.stringify(obj[field]));\n\t\t}\n\t}\n\n\tconvertDataFromTransport(obj, field, fieldType) {\n\t\tconst type = obj[fieldType];\n\t\tswitch(type) {\n\t\t\tcase P.DATATYPE_UNDEFINED: {\n\t\t\t\tobj[field] = undefined;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.DATATYPE_NULL: {\n\t\t\t\tobj[field] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.DATATYPE_BUFFER: {\n\t\t\t\tif (!Buffer.isBuffer(obj[field]))\n\t\t\t\t\tobj[field] = Buffer.from(obj[field]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// JSON\n\t\t\t\tobj[field] = JSON.parse(obj[field]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tdelete obj[fieldType];\n\t}\n}\n\nmodule.exports = Serializer;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseSerializer  \t= require(\"./base\");\n/**\n * JSON serializer for Moleculer\n *\n * @class JSONSerializer\n */\nclass JSONSerializer extends BaseSerializer {\n\n\t/**\n\t * Creates an instance of JSONSerializer.\n\t *\n\t * @memberof JSONSerializer\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * Serializer a JS object to Buffer\n\t *\n\t * @param {Object} obj\n\t * @param {String} type of packet\n\t * @returns {Buffer}\n\t *\n\t * @memberof Serializer\n\t */\n\tserialize(obj) {\n\t\treturn Buffer.from(JSON.stringify(obj));\n\t}\n\n\t/**\n\t * Deserialize Buffer to JS object\n\t *\n\t * @param {Buffer} buf\n\t * @param {String} type of packet\n\t * @returns {Object}\n\t *\n\t * @memberof Serializer\n\t */\n\tdeserialize(buf) {\n\t\treturn JSON.parse(buf);\n\t}\n}\n\nmodule.exports = JSONSerializer;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Serializers = {\n\tBase: require(\"./base\"),\n\tJSON: require(\"./json\"),\n\tAvro: require(\"./avro\"),\n\tMsgPack: require(\"./msgpack\"),\n\tProtoBuf: require(\"./protobuf\"),\n\tThrift: require(\"./thrift\"),\n\tNotepack: require(\"./notepack\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Serializers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Serializers[n];\n}\n\n/**\n * Resolve serializer by name\n *\n * @param {object|string} opt\n * @returns {Serializer}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Serializers.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet SerializerClass = getByName(opt);\n\t\tif (SerializerClass)\n\t\t\treturn new SerializerClass();\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid serializer type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet SerializerClass = getByName(opt.type || \"JSON\");\n\t\tif (SerializerClass)\n\t\t\treturn new SerializerClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid serializer type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn new Serializers.JSON();\n}\n\nfunction register(name, value) {\n\tSerializers[name] = value;\n}\n\nmodule.exports = Object.assign(Serializers, { resolve, register });\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst os = require(\"os\");\nconst { getIpList } = require(\"./utils\");\nconst MOLECULER_VERSION = require(\"../package.json\").version;\n\nconst getClientInfo = () => {\n\treturn {\n\t\ttype: \"nodejs\",\n\t\tversion: MOLECULER_VERSION,\n\t\tlangVersion: process.version\n\t};\n};\n\nconst getCpuInfo = () => {\n\tconst cpus = os.cpus();\n\tconst load = os.loadavg();\n\tconst cpu = {\n\t\tload1: load[0],\n\t\tload5: load[1],\n\t\tload15: load[2],\n\t\tcores: Array.isArray(cpus) ? os.cpus().length : null,\n\t};\n\tcpu.utilization = Math.min(Math.floor(load[0] * 100 / cpu.cores), 100);\n\n\treturn cpu;\n};\n\nconst getMemoryInfo = () => {\n\tconst mem = {\n\t\tfree: os.freemem(),\n\t\ttotal: os.totalmem()\n\t};\n\tmem.percent = (mem.free * 100 / mem.total);\n\n\treturn mem;\n};\n\nconst getUserInfo = () => {\n\ttry {\n\t\treturn os.userInfo();\n\t} catch (e) {\n\t\treturn {};\n\t}\n};\n\nconst getOsInfo = () => {\n\treturn {\n\t\tuptime: os.uptime(),\n\t\ttype: os.type(),\n\t\trelease: os.release(),\n\t\thostname: os.hostname(),\n\t\tarch: os.arch(),\n\t\tplatform: os.platform(),\n\t\tuser: getUserInfo()\n\t};\n};\n\nconst getProcessInfo = () => {\n\treturn {\n\t\tpid: process.pid,\n\t\tmemory: process.memoryUsage(),\n\t\tuptime: process.uptime(),\n\t\targv: process.argv\n\t};\n};\n\nconst getNetworkInterfacesInfo = () => {\n\treturn {\n\t\tip:  getIpList()\n\t};\n};\n\nconst getDateTimeInfo = () => {\n\treturn {\n\t\tnow: Date.now(),\n\t\tiso: new Date().toISOString(),\n\t\tutc: new Date().toUTCString()\n\t};\n};\n\nconst getHealthStatus = (/*broker*/) => {\n\treturn {\n\t\tcpu: getCpuInfo(),\n\t\tmem: getMemoryInfo(),\n\t\tos: getOsInfo(),\n\t\tprocess: getProcessInfo(),\n\t\tclient: getClientInfo(),\n\t\tnet: getNetworkInterfacesInfo(),\n\t\ttime: getDateTimeInfo()\n\t};\n};\n\nmodule.exports = {\n\tgetHealthStatus,\n\tgetCpuInfo,\n\tgetMemoryInfo,\n\tgetOsInfo,\n\tgetProcessInfo,\n\tgetClientInfo,\n\tgetNetworkInterfacesInfo,\n\tgetDateTimeInfo\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isFunction, isString } = require(\"../utils\");\n\nmodule.exports = function actionHookMiddleware(broker) {\n\n\tfunction callHook(hook, service, ctx, res) {\n\t\tif (isFunction(hook)) {\n\t\t\treturn hook.call(service, ctx, res);\n\t\t} else if (Array.isArray(hook)) {\n\t\t\treturn hook.reduce((p, fn) => p.then(res => fn.call(service, ctx, res)), broker.Promise.resolve(res));\n\t\t}\n\t}\n\n\tfunction callErrorHook(hook, service, ctx, err) {\n\t\tif (isFunction(hook)) {\n\t\t\treturn hook.call(service, ctx, err);\n\t\t} else if (Array.isArray(hook)) {\n\t\t\treturn hook.reduce((p, fn) => p.catch(err => fn.call(service, ctx, err)), broker.Promise.reject(err));\n\t\t}\n\t}\n\n\t/**\n\t * Sanitize hooks. If the hook is a string, convert it to Service method calling.\n\t *\n\t * @param {Function|String|Array<any>} hooks\n\t * @param {Service?} service\n\t * @returns\n\t */\n\tfunction sanitizeHooks(hooks, service) {\n\t\tif (isString(hooks))\n\t\t\treturn service && isFunction(service[hooks]) ? service[hooks] : null;\n\n\t\tif (Array.isArray(hooks)) {\n\t\t\treturn _.compact(hooks.map(h => {\n\t\t\t\tif (isString(h))\n\t\t\t\t\treturn service && isFunction(service[h]) ? service[h] : null;\n\n\t\t\t\treturn h;\n\t\t\t}));\n\t\t}\n\n\t\treturn hooks;\n\t}\n\n\tfunction wrapActionHookMiddleware(handler, action) {\n\t\tconst name = action.rawName || action.name;\n\t\tconst hooks = action.service && action.service.schema ? action.service.schema.hooks : null;\n\t\tif (hooks || action.hooks) {\n\t\t\t// Global hooks\n\t\t\tconst beforeAllHook = hooks && hooks.before ? sanitizeHooks(hooks.before[\"*\"], action.service) : null;\n\t\t\tconst afterAllHook = hooks && hooks.after ? sanitizeHooks(hooks.after[\"*\"], action.service) : null;\n\t\t\tconst errorAllHook = hooks && hooks.error ? sanitizeHooks(hooks.error[\"*\"], action.service) : null;\n\n\t\t\t// Hooks in service\n\t\t\tconst beforeHook = hooks && hooks.before ? sanitizeHooks(hooks.before[name], action.service) : null;\n\t\t\tconst afterHook = hooks && hooks.after ? sanitizeHooks(hooks.after[name], action.service) : null;\n\t\t\tconst errorHook = hooks && hooks.error ? sanitizeHooks(hooks.error[name], action.service) : null;\n\n\t\t\t// Hooks in action definition\n\t\t\tconst actionBeforeHook = action.hooks && action.hooks.before ? sanitizeHooks(action.hooks.before, action.service) : null;\n\t\t\tconst actionAfterHook = action.hooks && action.hooks.after ? sanitizeHooks(action.hooks.after, action.service) : null;\n\t\t\tconst actionErrorHook = action.hooks && action.hooks.error ? sanitizeHooks(action.hooks.error, action.service) : null;\n\n\t\t\tif (beforeAllHook || beforeHook || actionBeforeHook\n\t\t\t\t|| afterAllHook || afterHook || actionAfterHook\n\t\t\t\t|| errorAllHook || errorHook || actionErrorHook) {\n\t\t\t\treturn function actionHookMiddleware(ctx) {\n\t\t\t\t\tlet p = broker.Promise.resolve();\n\n\t\t\t\t\t// Before hook all\n\t\t\t\t\tif (beforeAllHook)\n\t\t\t\t\t\tp = p.then(() => callHook(beforeAllHook, ctx.service, ctx));\n\n\t\t\t\t\t// Before hook\n\t\t\t\t\tif (beforeHook)\n\t\t\t\t\t\tp = p.then(() => callHook(beforeHook, ctx.service, ctx));\n\n\t\t\t\t\t// Before hook in action definition\n\t\t\t\t\tif (actionBeforeHook)\n\t\t\t\t\t\tp = p.then(() => callHook(actionBeforeHook, ctx.service, ctx));\n\n\t\t\t\t\t// Action hook handler\n\t\t\t\t\tp = p.then(() => handler(ctx));\n\n\t\t\t\t\t// After hook in action definition\n\t\t\t\t\tif (actionAfterHook)\n\t\t\t\t\t\tp = p.then(res => callHook(actionAfterHook, ctx.service, ctx, res));\n\n\t\t\t\t\t// After hook\n\t\t\t\t\tif (afterHook)\n\t\t\t\t\t\tp = p.then(res => callHook(afterHook, ctx.service, ctx, res));\n\n\t\t\t\t\t// After hook all\n\t\t\t\t\tif (afterAllHook)\n\t\t\t\t\t\tp = p.then(res => callHook(afterAllHook, ctx.service, ctx, res));\n\n\t\t\t\t\t// Error hook in action definition\n\t\t\t\t\tif (actionErrorHook)\n\t\t\t\t\t\tp = p.catch(err => callErrorHook(actionErrorHook, ctx.service, ctx, err));\n\n\t\t\t\t\t// Error hook\n\t\t\t\t\tif (errorHook)\n\t\t\t\t\t\tp = p.catch(err => callErrorHook(errorHook, ctx.service, ctx, err));\n\n\t\t\t\t\t// Error hook all\n\t\t\t\t\tif (errorAllHook)\n\t\t\t\t\t\tp = p.catch(err => callErrorHook(errorAllHook, ctx.service, ctx, err));\n\n\t\t\t\t\treturn p;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"ActionHook\",\n\t\tlocalAction: wrapActionHookMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { QueueIsFullError } = require(\"../errors\");\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function bulkheadMiddleware(broker) {\n\n\tfunction wrapActionBulkheadMiddleware(handler, action) {\n\t\tconst service = action.service;\n\n\t\tconst opts = Object.assign({}, this.options.bulkhead || {}, action.bulkhead || {});\n\t\tif (opts.enabled) {\n\t\t\tconst queue = [];\n\t\t\tlet currentInFlight = 0;\n\n\t\t\t// Call the next request from the queue\n\t\t\tconst callNext = function callNext() {\n\t\t\t/* istanbul ignore next */\n\t\t\t\tif (queue.length == 0) return;\n\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (currentInFlight >= opts.concurrency) return;\n\n\t\t\t\tconst item = queue.shift();\n\n\t\t\t\tcurrentInFlight++;\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\n\t\t\t\thandler(item.ctx)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\t\titem.resolve(res);\n\t\t\t\t\t\tcallNext();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\t\titem.reject(err);\n\t\t\t\t\t\tcallNext();\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn function bulkheadMiddleware(ctx) {\n\t\t\t// Call handler without waiting\n\t\t\t\tif (currentInFlight < opts.concurrency) {\n\t\t\t\t\tcurrentInFlight++;\n\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\treturn handler(ctx)\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\t\t\tcallNext();\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, currentInFlight, { action: action.name, service: service.fullName });\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\t\t\t\t\t\t\tcallNext();\n\t\t\t\t\t\t\treturn broker.Promise.reject(err);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Check whether the queue is full\n\t\t\t\tif (opts.maxQueueSize && queue.length >= opts.maxQueueSize) {\n\t\t\t\t\treturn broker.Promise.reject(new QueueIsFullError({ action: ctx.action.name, nodeID: ctx.nodeID }));\n\t\t\t\t}\n\n\t\t\t\t// Store the request in the queue\n\t\t\t\tconst p = new Promise((resolve, reject) => queue.push({ resolve, reject, ctx }));\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, queue.length, { action: action.name, service: service.fullName });\n\n\t\t\t\treturn p;\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\tfunction wrapEventBulkheadMiddleware(handler, event) {\n\t\tconst service = event.service;\n\n\t\tconst opts = Object.assign({}, this.options.bulkhead || {}, event.bulkhead || {});\n\t\tif (opts.enabled) {\n\t\t\tconst queue = [];\n\t\t\tlet currentInFlight = 0;\n\n\t\t\t// Call the next request from the queue\n\t\t\tconst callNext = function callNext() {\n\t\t\t/* istanbul ignore next */\n\t\t\t\tif (queue.length == 0) return;\n\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (currentInFlight >= opts.concurrency) return;\n\n\t\t\t\tconst item = queue.shift();\n\n\t\t\t\tcurrentInFlight++;\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\n\t\t\t\thandler(item.ctx)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\t\titem.resolve(res);\n\t\t\t\t\t\tcallNext();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\t\titem.reject(err);\n\t\t\t\t\t\tcallNext();\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\treturn function bulkheadMiddleware(ctx) {\n\t\t\t\t// Call handler without waiting\n\t\t\t\tif (currentInFlight < opts.concurrency) {\n\t\t\t\t\tcurrentInFlight++;\n\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\treturn handler(ctx)\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\t\t\tcallNext();\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\tcurrentInFlight--;\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, currentInFlight, { event: event.name, service: service.fullName });\n\t\t\t\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\t\t\t\t\t\t\tcallNext();\n\t\t\t\t\t\t\treturn broker.Promise.reject(err);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Check whether the queue is full\n\t\t\t\tif (opts.maxQueueSize && queue.length >= opts.maxQueueSize) {\n\t\t\t\t\treturn broker.Promise.reject(new QueueIsFullError({ event: ctx.eventName, service: service.fullName, nodeID: ctx.nodeID }));\n\t\t\t\t}\n\n\t\t\t\t// Store the request in the queue\n\t\t\t\tconst p = new Promise((resolve, reject) => queue.push({ resolve, reject, ctx }));\n\t\t\t\tbroker.metrics.set(METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, queue.length, { event: event.name, service: service.fullName });\n\n\t\t\t\treturn p;\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\n\treturn {\n\t\tname: \"Bulkhead\",\n\n\t\tcreated() {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_BULKHEAD_INFLIGHT, type: METRIC.TYPE_GAUGE, labelNames: [\"action\", \"service\"] });\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE, type: METRIC.TYPE_GAUGE, labelNames: [\"action\", \"service\"] });\n\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_EVENT_BULKHEAD_INFLIGHT, type: METRIC.TYPE_GAUGE, labelNames: [\"event\", \"service\"] });\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE, type: METRIC.TYPE_GAUGE, labelNames: [\"event\", \"service\"] });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapActionBulkheadMiddleware,\n\t\tlocalEvent: wrapEventBulkheadMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { GracefulStopTimeoutError } = require(\"../errors\");\n\nmodule.exports = function ContextTrackerMiddleware(broker) {\n\n\tfunction addContext(ctx) {\n\t\tif (ctx.service) {\n\t\t// Local request\n\t\t\tctx.service._trackedContexts.push(ctx);\n\t\t} else {\n\t\t// Remote request\n\t\t\tctx.broker._trackedContexts.push(ctx);\n\t\t}\n\t}\n\n\tfunction removeContext(ctx) {\n\t\tif (ctx.service) {\n\t\t\tconst idx = ctx.service._trackedContexts.indexOf(ctx);\n\t\t\tif (idx !== -1)\n\t\t\t\tctx.service._trackedContexts.splice(idx, 1);\n\t\t} else {\n\t\t\tconst idx = ctx.broker._trackedContexts.indexOf(ctx);\n\t\t\tif (idx !== -1)\n\t\t\t\tctx.broker._trackedContexts.splice(idx, 1);\n\t\t}\n\t}\n\n\tfunction wrapTrackerMiddleware(handler) {\n\t\tif (this.options.tracking && this.options.tracking.enabled) {\n\n\t\t\treturn function ContextTrackerMiddleware(ctx) {\n\n\t\t\t\tconst tracked = ctx.options.tracking != null ? ctx.options.tracking : this.options.tracking.enabled;\n\n\t\t\t\t// If no need to track\n\t\t\t\tif (!tracked)\n\t\t\t\t\treturn handler(ctx);\n\n\t\t\t\t// Track the context\n\t\t\t\taddContext(ctx);\n\n\t\t\t\t// Call the handler\n\t\t\t\tlet p = handler(ctx);\n\n\t\t\t\tp = p.then(res => {\n\t\t\t\t\tremoveContext(ctx);\n\t\t\t\t\treturn res;\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tremoveContext(ctx);\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\n\t\t\t\treturn p;\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\tfunction waitingForActiveContexts(list, logger, time, service) {\n\t\tif (!list || list.length === 0)\n\t\t\treturn broker.Promise.resolve();\n\n\t\treturn new broker.Promise((resolve) => {\n\t\t\tlet timedOut = false;\n\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\ttimedOut = true;\n\t\t\t\tlogger.error(new GracefulStopTimeoutError({ service }));\n\t\t\t\tlist.length = 0; // Clear pointers\n\t\t\t\tresolve();\n\t\t\t}, time);\n\n\t\t\tlet first = true;\n\t\t\tconst checkForContexts = () => {\n\t\t\t\tif (list.length === 0) {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\tif (first) {\n\t\t\t\t\t\tlogger.warn(`Waiting for ${list.length} running context(s)...`);\n\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!timedOut)\n\t\t\t\t\t\tsetTimeout(checkForContexts, 100);\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetImmediate(checkForContexts);\n\t\t});\n\t}\n\n\treturn {\n\t\tname: \"ContextTracker\",\n\n\t\tlocalAction: wrapTrackerMiddleware,\n\t\tremoteAction: wrapTrackerMiddleware,\n\n\t\tlocalEvent: wrapTrackerMiddleware,\n\n\t\t// After the broker created\n\t\tcreated(broker) {\n\t\t\tbroker._trackedContexts = [];\n\t\t},\n\n\t\t// Before a local service started\n\t\tserviceStarting(service) {\n\t\t\tservice._trackedContexts = [];\n\t\t},\n\n\t\t// Before a local service stopping\n\t\tserviceStopping(service) {\n\t\t\treturn waitingForActiveContexts(service._trackedContexts, service.logger, service.settings.$shutdownTimeout || service.broker.options.tracking.shutdownTimeout, service);\n\t\t},\n\n\t\t// Before broker stopping\n\t\tstopping(broker) {\n\t\t\treturn waitingForActiveContexts(broker._trackedContexts, broker.logger, broker.options.tracking.shutdownTimeout);\n\t\t},\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst C \t\t\t= require(\"../constants\");\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function circuitBreakerMiddleware(broker) {\n\n\tlet windowTimer;\n\tconst store = new Map();\n\tlet logger;\n\n\t/**\n\t * Create timer to clear endpoint store\n\t *\n\t * @param {Number} windowTime\n\t */\n\tfunction createWindowTimer(windowTime) {\n\t\tif (!windowTimer) {\n\t\t\twindowTimer = setInterval(() => resetStore(), (windowTime || 60) * 1000);\n\t\t\twindowTimer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Clear endpoint state store\n\t */\n\tfunction resetStore() {\n\t\tif (!logger) return;\n\n\t\tlogger.debug(\"Reset circuit-breaker endpoint states...\");\n\t\tstore.forEach((item, key) => {\n\t\t\tif (item.count == 0) {\n\t\t\t\tlogger.debug(`Remove '${key}' endpoint state because it is not used`);\n\t\t\t\tstore.delete(key);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogger.debug(`Clean '${key}' endpoint state.`);\n\t\t\titem.count = 0;\n\t\t\titem.failures = 0;\n\t\t});\n\t}\n\n\t/**\n\t * Get Endpoint state from store. If not exists, create it.\n\t *\n\t * @param {Endpoint} ep\n\t * @param {Service} service\n\t * @param {Object} opts\n\t * @returns {Object}\n\t */\n\tfunction getEpState(ep, service, opts) {\n\t\tlet item = store.get(ep.name);\n\t\tif (!item) {\n\t\t\titem = {\n\t\t\t\tep,\n\t\t\t\tservice,\n\t\t\t\topts,\n\t\t\t\tcount: 0,\n\t\t\t\tfailures: 0,\n\t\t\t\tstate: C.CIRCUIT_CLOSE,\n\t\t\t\tcbTimer: null\n\t\t\t};\n\t\t\tstore.set(ep.name, item);\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t * Increment failure counter\n\t *\n\t * @param {Object} item\n\t * @param {Error} err\n\t * @param {Context} ctx\n\t */\n\tfunction failure(item, err, ctx) {\n\t\titem.count++;\n\t\titem.failures++;\n\n\t\tcheckThreshold(item, ctx);\n\t}\n\n\t/**\n\t * Increment request counter and switch CB to CLOSE if it is on HALF_OPEN_WAIT.\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction success(item, ctx) {\n\t\titem.count++;\n\n\t\tif (item.state === C.CIRCUIT_HALF_OPEN_WAIT)\n\t\t\tcircuitClose(item, ctx);\n\t\telse\n\t\t\tcheckThreshold(item, ctx);\n\t}\n\n\t/**\n\t * Check circuit-breaker failure threshold of Endpoint\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction checkThreshold(item, ctx) {\n\t\tif (item.count >= item.opts.minRequestCount) {\n\t\t\tconst rate = item.failures / item.count;\n\t\t\tif (rate >= item.opts.threshold)\n\t\t\t\ttrip(item, ctx);\n\t\t}\n\t}\n\n\t/**\n\t * Trip the circuit-breaker, change the status to open\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction trip(item, ctx) {\n\t\tif (item.state == C.CIRCUIT_OPEN) return;\n\n\t\titem.state = C.CIRCUIT_OPEN;\n\t\titem.ep.state = false;\n\n\t\tif (item.cbTimer) {\n\t\t\tclearTimeout(item.cbTimer);\n\t\t\titem.cbTimer = null;\n\t\t}\n\n\t\titem.cbTimer = setTimeout(() => halfOpen(item, ctx), item.opts.halfOpenTime);\n\t\titem.cbTimer.unref();\n\n\t\tconst action = item.ep.action;\n\t\tconst service = item.service.fullName;\n\n\t\tconst rate = item.count > 0 ? item.failures / item.count : 0;\n\t\tlogger.debug(`Circuit breaker has been opened on '${item.ep.name}' endpoint.`, { nodeID: item.ep.id, service, action: action.name, failures: item.failures, count: item.count, rate });\n\t\tbroker.broadcast(\"$circuit-breaker.opened\", { nodeID: item.ep.id, service, action: action.name, failures: item.failures, count: item.count, rate });\n\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, 1, { affectedNodeID: item.ep.id, service, action: action.name });\n\t\tbroker.metrics.increment(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL, { affectedNodeID: item.ep.id, service, action: action.name });\n\t}\n\n\t/**\n\t * Change circuit-breaker status to half-open\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction halfOpen(item) {\n\t\titem.state = C.CIRCUIT_HALF_OPEN;\n\t\titem.ep.state = true;\n\n\t\tconst action = item.ep.action;\n\t\tconst service = item.service.fullName;\n\n\t\tlogger.debug(`Circuit breaker has been half-opened on '${item.ep.name}' endpoint.`, { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.broadcast(\"$circuit-breaker.half-opened\", { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, 0, { affectedNodeID: item.ep.id, service, action: action.name });\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE, 1, { affectedNodeID: item.ep.id, service, action: action.name });\n\n\t\tif (item.cbTimer) {\n\t\t\tclearTimeout(item.cbTimer);\n\t\t\titem.cbTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Change circuit-breaker status to half-open waiting. First request is invoked after half-open.\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t*/\n\tfunction halfOpenWait(item, ctx) {\n\t\titem.state = C.CIRCUIT_HALF_OPEN_WAIT;\n\t\titem.ep.state = false;\n\n\t\t// Anti-stick protection\n\t\titem.cbTimer = setTimeout(() => halfOpen(item, ctx), item.opts.halfOpenTime);\n\t\titem.cbTimer.unref();\n\t}\n\n\t/**\n\t * Change circuit-breaker status to close\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction circuitClose(item) {\n\t\titem.state = C.CIRCUIT_CLOSE;\n\t\titem.ep.state = true;\n\t\titem.failures = 0;\n\t\titem.count = 0;\n\n\t\tconst action = item.ep.action;\n\t\tconst service = item.service.fullName;\n\n\t\tlogger.debug(`Circuit breaker has been closed on '${item.ep.name}' endpoint.`, { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.broadcast(\"$circuit-breaker.closed\", { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, 0, { affectedNodeID: item.ep.id, service, action: action.name });\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE, 0, { affectedNodeID: item.ep.id, service, action: action.name });\n\n\t\tif (item.cbTimer) {\n\t\t\tclearTimeout(item.cbTimer);\n\t\t\titem.cbTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Middleware wrapper function\n\t *\n\t * @param {Function} handler\n\t * @param {Action} action\n\t * @returns {Function}\n\t */\n\tfunction wrapCBMiddleware(handler, action) {\n\t\tconst service = action.service;\n\t\t// Merge action option and broker options\n\t\tconst opts = Object.assign({}, this.options.circuitBreaker || {}, action.circuitBreaker || {});\n\t\tif (opts.enabled) {\n\t\t\treturn function circuitBreakerMiddleware(ctx) {\n\t\t\t\t// Get endpoint state item\n\t\t\t\tconst ep = ctx.endpoint;\n\t\t\t\tconst item = getEpState(ep, service, opts);\n\n\t\t\t\t// Handle half-open state in circuit breaker\n\t\t\t\tif (item.state == C.CIRCUIT_HALF_OPEN) {\n\t\t\t\t\thalfOpenWait(item, ctx);\n\t\t\t\t}\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler(ctx).then(res => {\n\t\t\t\t\tconst item = getEpState(ep, service, opts);\n\t\t\t\t\tsuccess(item, ctx);\n\n\t\t\t\t\treturn res;\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tif (opts.check && opts.check(err)) {\n\t\t\t\t\t\t// Failure if error is created locally (not came from a 3rd node error)\n\t\t\t\t\t\tif (item && (!err.nodeID || err.nodeID == ctx.nodeID)) {\n\t\t\t\t\t\t\tconst item = getEpState(ep, service, opts);\n\t\t\t\t\t\t\tfailure(item, err, ctx);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.Promise.reject(err);\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\n\treturn {\n\t\tname: \"CircuitBreaker\",\n\n\t\tcreated(broker) {\n\t\t\tlogger = broker.getLogger(\"circuit-breaker\");\n\n\t\t\t// Expose the internal state store.\n\t\t\tbroker.CircuitBreakerStore = store;\n\n\t\t\tconst opts = broker.options.circuitBreaker;\n\t\t\tif (opts.enabled) {\n\t\t\t\tcreateWindowTimer(opts.windowTime);\n\n\t\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"affectedNodeID\", \"service\", \"action\"], description: \"Number of active opened circuit-breakers\" });\n\t\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"affectedNodeID\", \"service\", \"action\"], description: \"Number of opened circuit-breakers\" });\n\t\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"affectedNodeID\", \"service\", \"action\"], description: \"Number of active half-opened circuit-breakers\" });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapCBMiddleware,\n\t\tremoteAction: wrapCBMiddleware,\n\n\t\tstopped() {\n\t\t\tif (windowTimer) {\n\t\t\t\tclearInterval(windowTimer);\n\t\t\t}\n\n\t\t\tdelete broker.CircuitBreakerStore;\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { RequestTimeoutError } = require(\"../errors\");\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function(broker) {\n\n\tfunction wrapTimeoutMiddleware(handler, action) {\n\t\tconst actionTimeout = action.timeout;\n\t\tconst actionName = action.name;\n\t\tconst service = action.service ? action.service.fullName : null;\n\n\t\treturn function timeoutMiddleware(ctx) {\n\n\t\t\t// Load opts with default values\n\t\t\tif (ctx.options.timeout == null) {\n\t\t\t\tif (actionTimeout != null)\n\t\t\t\t\tctx.options.timeout = actionTimeout;\n\t\t\t\telse\n\t\t\t\t\tctx.options.timeout = broker.options.requestTimeout;\n\t\t\t}\n\n\t\t\tif (ctx.options.timeout > 0 && !ctx.startHrTime) {\n\t\t\t// For distributed timeout calculation need to be set\n\t\t\t\tctx.startHrTime = process.hrtime();\n\t\t\t}\n\n\t\t\t// Call the handler\n\t\t\tconst p = handler(ctx);\n\t\t\tif (ctx.options.timeout > 0 && p.timeout) {\n\t\t\t\treturn p.timeout(ctx.options.timeout)\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tif (err instanceof broker.Promise.TimeoutError) {\n\t\t\t\t\t\t\tconst nodeID = ctx.nodeID;\n\t\t\t\t\t\t\tthis.logger.warn(`Request '${actionName}' is timed out.`, { requestID: ctx.requestID, nodeID, timeout: ctx.options.timeout });\n\t\t\t\t\t\t\terr = new RequestTimeoutError({ action: actionName, nodeID });\n\n\t\t\t\t\t\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_TIMEOUT_TOTAL, { service, action: actionName });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t}.bind(this);\n\t}\n\n\treturn {\n\t\tname: \"Timeout\",\n\n\t\tcreated(broker) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_TIMEOUT_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\"], description: \"Number of timed out requests\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapTimeoutMiddleware,\n\t\tremoteAction: wrapTimeoutMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function RetryMiddleware(broker) {\n\n\tfunction wrapRetryMiddleware(handler, action) {\n\t\tconst actionName = action.name;\n\t\tconst service = action.service ? action.service.fullName : null;\n\t\t// Merge action option and broker options\n\t\tconst opts = Object.assign({}, this.options.retryPolicy, action.retryPolicy || {});\n\t\tif (opts.enabled) {\n\t\t\treturn function retryMiddleware(ctx) {\n\t\t\t\tconst attempts = typeof ctx.options.retries === \"number\" ? ctx.options.retries : opts.retries;\n\t\t\t\tif (ctx._retryAttempts == null)\n\t\t\t\t\tctx._retryAttempts = 0;\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler(ctx).catch(err => {\n\n\t\t\t\t\t// Skip retry if it is a remote call. The retry logic will run on the caller node\n\t\t\t\t\t// because the Retry middleware wrap the `remoteAction` hook, as well.\n\t\t\t\t\tif (ctx.nodeID != broker.nodeID && ctx.endpoint.local)\n\t\t\t\t\t\treturn Promise.reject(err);\n\n\t\t\t\t\t// Check the error's `retryable` property.\n\t\t\t\t\tif (opts.check(err)) {\n\t\t\t\t\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL, { service, action: action.name });\n\n\t\t\t\t\t\tif (ctx._retryAttempts < attempts) {\n\t\t\t\t\t\t\t// Retry call\n\t\t\t\t\t\t\tctx._retryAttempts++;\n\n\t\t\t\t\t\t\t// Correct tracing\n\t\t\t\t\t\t\tif (ctx.span) {\n\t\t\t\t\t\t\t\tctx.span.setError(err);\n\t\t\t\t\t\t\t\tctx.span.addTags({ retryAttempts: ctx._retryAttempts });\n\t\t\t\t\t\t\t\tctx.finishSpan(ctx.span);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Calculate next delay\n\t\t\t\t\t\t\tconst delay = Math.min(opts.delay * Math.pow(opts.factor, ctx._retryAttempts - 1), opts.maxDelay);\n\n\t\t\t\t\t\t\tbroker.logger.warn(`Retry to call '${actionName}' action after ${delay} ms...`, { requestID: ctx.requestID, attempts: ctx._retryAttempts });\n\n\t\t\t\t\t\t\t// Wait & recall\n\t\t\t\t\t\t\treturn broker.Promise.delay(delay)\n\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\tconst newCtx = ctx.copy();\n\t\t\t\t\t\t\t\t\tnewCtx._retryAttempts = ctx._retryAttempts;\n\n\t\t\t\t\t\t\t\t\tif (action.visibility == \"private\")\n\t\t\t\t\t\t\t\t\t\treturn ctx.service.actions[action.rawName](ctx.params, { ctx: newCtx });\n\n\t\t\t\t\t\t\t\t\treturn broker.call(actionName, ctx.params, { ctx: newCtx });\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Throw error\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"Retry\",\n\n\t\tcreated() {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\"], description: \"Number of retries\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapRetryMiddleware,\n\t\tremoteAction: wrapRetryMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { MoleculerError } = require(\"../errors\");\nconst { METRIC }\t= require(\"../metrics\");\nconst { isFunction, isString } = require(\"../utils\");\n\nmodule.exports = function FallbackMiddleware(broker) {\n\n\tfunction handleContextFallback(ctx, err) {\n\t\tbroker.logger.warn(`The '${ctx.action.name}' request is failed. Return fallback response.`, { requestID: ctx.requestID, err: err.message });\n\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_FALLBACK_TOTAL, { action: ctx.action.name });\n\t\tctx.fallbackResult = true;\n\n\t\tif (isFunction(ctx.options.fallbackResponse))\n\t\t\treturn ctx.options.fallbackResponse(ctx, err);\n\t\telse\n\t\t\treturn Promise.resolve(ctx.options.fallbackResponse);\n\t}\n\n\tfunction wrapFallbackMiddleware(handler, action) {\n\t\treturn function fallbackMiddleware(ctx) {\n\t\t\t// Call the handler\n\t\t\treturn handler(ctx).catch(err => {\n\n\t\t\t\t// Handle fallback response from calling options\n\t\t\t\tif (ctx.options.fallbackResponse) {\n\t\t\t\t\treturn handleContextFallback(ctx, err);\n\t\t\t\t}\n\n\t\t\t\t// Handle fallback from Action Definition (only locally)\n\t\t\t\tif (action.fallback && action.service) {\n\t\t\t\t\tconst svc = action.service;\n\n\t\t\t\t\tconst fallback = isString(action.fallback) ? svc[action.fallback] : action.fallback;\n\t\t\t\t\tif (!isFunction(fallback)) {\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tthrow new MoleculerError(`The 'fallback' of '${action.name}' action is not a Function or valid method name: ${action.fallback}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tsvc.logger.warn(`The '${ctx.action.name}' request is failed. Return fallback response.`, { requestID: ctx.requestID, err: err.message });\n\t\t\t\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_FALLBACK_TOTAL, { service: svc.fullName, action: action.name });\n\t\t\t\t\tctx.fallbackResult = true;\n\n\t\t\t\t\treturn fallback.call(svc, ctx, err);\n\t\t\t\t}\n\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}.bind(this);\n\t}\n\n\treturn {\n\t\tname: \"Fallback\",\n\n\t\tcreated(broker) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_FALLBACK_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\"], description: \"Number of fallbacked requests\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapFallbackMiddleware,\n\t\tremoteAction: wrapFallbackMiddleware,\n\n\t\t/*call(next) {\n\t\t\treturn (actionName, params, opts) => {\n\t\t\t\treturn next(actionName, params, opts).catch(err => {\n\t\t\t\t\tif (opts.fallbackResponse) {\n\t\t\t\t\t\treturn handleContextFallback(null, err);\n\t\t\t\t\t}\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\t\t\t};\n\t\t},*/\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { MoleculerError } = require(\"../errors\");\n\nfunction wrapActionErrorHandler(handler) {\n\treturn function errorHandlerMiddleware(ctx) {\n\t\t// Call the handler\n\t\treturn handler(ctx)\n\t\t\t.catch(err => {\n\t\t\t\tif (!(err instanceof Error))\n\t\t\t\t\terr = new MoleculerError(err, 500);\n\n\t\t\t\tif (ctx.nodeID !== this.nodeID) {\n\t\t\t\t\t// Remove pending request (the request didn't reach the target service)\n\t\t\t\t\tif (this.transit)\n\t\t\t\t\t\tthis.transit.removePendingRequest(ctx.id);\n\t\t\t\t}\n\n\t\t\t\tthis.logger.debug(`The '${ctx.action.name}' request is rejected.`, { requestID: ctx.requestID }, err);\n\n\t\t\t\tObject.defineProperty(err, \"ctx\", {\n\t\t\t\t\tvalue: ctx,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tenumerable: false\n\t\t\t\t});\n\n\t\t\t\t// Call global errorHandler\n\t\t\t\treturn ctx.broker.errorHandler(err, {\n\t\t\t\t\tctx,\n\t\t\t\t\tservice: ctx.service,\n\t\t\t\t\taction: ctx.action\n\t\t\t\t});\n\t\t\t});\n\n\t}.bind(this);\n}\n\nfunction wrapEventErrorHandler(handler) {\n\treturn function errorHandlerMiddleware(ctx) {\n\t\t// Call the handler\n\t\treturn handler(ctx)\n\t\t\t.catch(err => {\n\t\t\t\tif (!(err instanceof Error))\n\t\t\t\t\terr = new MoleculerError(err, 500);\n\n\t\t\t\tthis.logger.debug(`Error occured in the '${ctx.event.name}' event handler in the '${ctx.service.fullName}' service.`, { requestID: ctx.requestID }, err);\n\n\t\t\t\tObject.defineProperty(err, \"ctx\", {\n\t\t\t\t\tvalue: ctx,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tenumerable: false\n\t\t\t\t});\n\n\t\t\t\t// Call global errorHandler\n\t\t\t\treturn ctx.broker.errorHandler(err, {\n\t\t\t\t\tctx,\n\t\t\t\t\tservice: ctx.service,\n\t\t\t\t\tevent: ctx.event\n\t\t\t\t});\n\t\t\t}).catch(err => {\n\t\t\t\t// No global error Handler, or thrown further, so we handle it because it's an event handler.\n\t\t\t\tctx.broker.logger.error(err);\n\t\t\t});\n\n\t}.bind(this);\n}\n\nmodule.exports = function() {\n\treturn {\n\t\tname: \"ErrorHandler\",\n\n\t\tlocalAction: wrapActionErrorHandler,\n\t\tremoteAction: wrapActionErrorHandler,\n\n\t\tlocalEvent: wrapEventErrorHandler\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function MetricsMiddleware(broker) {\n\tconst metrics = broker.metrics;\n\n\tfunction getActionHandler(type, actionDef, next) {\n\t\tconst action = actionDef.name;\n\t\tconst service = actionDef.service ? actionDef.service.fullName : null;\n\n\t\treturn function metricsMiddleware(ctx) {\n\t\t\tconst caller = ctx.caller;\n\n\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_TOTAL, { service, action, caller, type });\n\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_ACTIVE, { service, action, caller, type });\n\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_LEVELS, { service, action, caller, level: ctx.level });\n\t\t\tconst timeEnd = metrics.timer(METRIC.MOLECULER_REQUEST_TIME, { service, action, caller, type });\n\n\t\t\t// Call the next handler\n\t\t\treturn next(ctx).then(res => {\n\t\t\t\ttimeEnd();\n\t\t\t\tmetrics.decrement(METRIC.MOLECULER_REQUEST_ACTIVE, { service, action, caller, type });\n\t\t\t\treturn res;\n\t\t\t}).catch(err => {\n\t\t\t\ttimeEnd();\n\t\t\t\tmetrics.decrement(METRIC.MOLECULER_REQUEST_ACTIVE, { service, action, caller, type });\n\t\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_ERROR_TOTAL, {\n\t\t\t\t\tservice,\n\t\t\t\t\taction,\n\t\t\t\t\tcaller,\n\t\t\t\t\ttype,\n\t\t\t\t\terrorName: err ? err.name : null,\n\t\t\t\t\terrorCode: err ? err.code : null,\n\t\t\t\t\terrorType: err ? err.type : null\n\t\t\t\t});\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\t};\n\t}\n\n\treturn {\n\t\tname: \"Metrics\",\n\n\t\tcreated() {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\t// --- MOLECULER REQUEST METRICS ---\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\", \"type\", \"caller\"], unit: METRIC.UNIT_REQUEST, description: \"Number of requests\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"service\", \"action\", \"type\", \"caller\"], unit: METRIC.UNIT_REQUEST, description: \"Number of active requests\" });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_ERROR_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\", \"type\", \"caller\", \"errorName\", \"errorCode\", \"errorType\"], unit: METRIC.UNIT_REQUEST, description: \"Number of request errors\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_TIME, type: METRIC.TYPE_HISTOGRAM, labelNames: [\"service\", \"action\", \"type\", \"caller\"], quantiles: true, buckets: true, unit: METRIC.UNIT_MILLISECONDS, description: \"Request times in milliseconds\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_LEVELS, type: METRIC.TYPE_COUNTER, labelNames: [\"level\"], unit: METRIC.UNIT_REQUEST, description: \"Number of requests by context level\" });\n\t\t\t\t//metrics.register({ name: METRIC.MOLECULER_REQUEST_DIRECTCALL_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"action\"], unit: METRIC.UNIT_REQUEST, description: \"Number of direct calls\", rate: true });\n\t\t\t\t//metrics.register({ name: METRIC.MOLECULER_REQUEST_MULTICALL_TOTAL, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_REQUEST, description: \"Number of multicalls\", rate: true });\n\n\t\t\t\t// --- MOLECULER EVENTS METRICS ---\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_EMIT_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"event\", \"groups\"], unit: METRIC.UNIT_EVENT, description: \"Number of emitted events\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_BROADCAST_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"event\", \"groups\"], unit: METRIC.UNIT_EVENT, description: \"Number of broadcast events\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_BROADCASTLOCAL_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"event\", \"groups\"], unit: METRIC.UNIT_EVENT, description: \"Number of local broadcast events\", rate: true });\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"group\", \"event\", \"caller\"], unit: METRIC.UNIT_EVENT, description: \"Number of received events\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"service\", \"group\", \"event\", \"caller\"], unit: METRIC.UNIT_REQUEST, description: \"Number of active event executions\" });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_ERROR_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"group\", \"event\", \"caller\", \"errorName\", \"errorCode\", \"errorType\"], unit: METRIC.UNIT_REQUEST, description: \"Number of event execution errors\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_TIME, type: METRIC.TYPE_HISTOGRAM, labelNames: [\"service\", \"group\", \"event\", \"caller\"], quantiles: true, buckets: true, unit: METRIC.UNIT_MILLISECONDS, description: \"Execution time of events in milliseconds\", rate: true });\n\n\t\t\t\t// --- MOLECULER TRANSIT METRICS ---\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_PUBLISH_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"type\"], unit: METRIC.UNIT_PACKET, description: \"Number of published packets\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_RECEIVE_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"type\"], unit: METRIC.UNIT_PACKET, description: \"Number of received packets\", rate: true });\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_REQUESTS_ACTIVE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_REQUEST, description: \"Number of active requests\" });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_STREAMS_SEND_ACTIVE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_STREAM, description: \"Number of active sent streams\" });\n\t\t\t\t//metrics.register({ name: METRIC.MOLECULER_TRANSIT_STREAMS_RECEIVE_ACTIVE, type: METRIC.TYPE_GAUGE, description: \"\" });\n\n\t\t\t\t// --- MOLECULER TRANSPORTER METRICS ---\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_PACKET, description: \"Number of sent packets\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_BYTES, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_BYTE, description: \"Number of sent bytes\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_PACKET, description: \"Number of received packets\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_BYTE, description: \"Number of received bytes\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction(next, action) {\n\t\t\tif (broker.isMetricsEnabled())\n\t\t\t\treturn getActionHandler(\"local\", action, next);\n\n\t\t\treturn next;\n\t\t},\n\n\t\tremoteAction(next, action) {\n\t\t\tif (broker.isMetricsEnabled())\n\t\t\t\treturn getActionHandler(\"remote\", action, next);\n\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap local event handlers\n\t\tlocalEvent(next, event) {\n\t\t\tconst service = event.service ? event.service.name : null;\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(ctx) {\n\t\t\t\t\tconst group = event.group || service;\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_RECEIVED_TOTAL, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\tconst timeEnd = metrics.timer(METRIC.MOLECULER_EVENT_RECEIVED_TIME, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\treturn next.apply(this, arguments).then(res => {\n\t\t\t\t\t\ttimeEnd();\n\t\t\t\t\t\tmetrics.decrement(METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\ttimeEnd();\n\t\t\t\t\t\tmetrics.decrement(METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_RECEIVED_ERROR_TOTAL, {\n\t\t\t\t\t\t\tservice, event: ctx.eventName, group, caller: ctx.caller,\n\t\t\t\t\t\t\terrorName: err ? err.name : null,\n\t\t\t\t\t\t\terrorCode: err ? err.code : null,\n\t\t\t\t\t\t\terrorType: err ? err.type : null\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t\t}.bind(this);\n\t\t\t}\n\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap broker.emit method\n\t\temit(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* event, payload */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_EMIT_TOTAL, { event: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap broker.broadcast method\n\t\tbroadcast(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* event, payload */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_BROADCAST_TOTAL, { event: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap broker.broadcastLocal method\n\t\tbroadcastLocal(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* event, payload */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_BROADCASTLOCAL_TOTAL, { event: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transit publishing a packet\n\t\ttransitPublish(next) {\n\t\t\tconst transit = this;\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* packet */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_PUBLISH_TOTAL, { type: arguments[0].type });\n\n\t\t\t\t\tconst p = next.apply(this, arguments);\n\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_REQUESTS_ACTIVE, null, transit.pendingRequests.size);\n\t\t\t\t\t//metrics.increment(METRIC.MOLECULER_TRANSIT_STREAMS_RECEIVE_ACTIVE, null, transit.);\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_STREAMS_SEND_ACTIVE, null, transit.pendingReqStreams.size + this.pendingResStreams.size);\n\n\t\t\t\t\treturn p;\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transit receives & handles a packet\n\t\ttransitMessageHandler(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* cmd, packet */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_RECEIVE_TOTAL, { type: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transporter send data\n\t\ttransporterSend(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* topic, data, meta */) {\n\t\t\t\t\tconst data = arguments[1];\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL);\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_BYTES, null, data && data.length ? data.length : 0);\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transporter received data\n\t\ttransporterReceive(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* cmd, data, s */) {\n\t\t\t\t\tconst data = arguments[1];\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL);\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES, null, data && data.length ? data.length : 0);\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t}\n\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isFunction, isPlainObject } = require(\"../utils\");\n\nmodule.exports = function TracingMiddleware(broker) {\n\n\tconst tracer = broker.tracer;\n\n\tfunction tracingLocalActionMiddleware(handler, action) {\n\t\tlet opts = action.tracing;\n\t\tif (opts === true || opts === false)\n\t\t\topts = { enabled: !!opts };\n\t\topts = _.defaultsDeep({}, opts, { enabled: true });\n\n\t\tif (opts.enabled) {\n\t\t\treturn function tracingLocalActionMiddleware(ctx) {\n\n\t\t\t\tctx.requestID = ctx.requestID || tracer.getCurrentTraceID();\n\t\t\t\tctx.parentID = ctx.parentID || tracer.getActiveSpanID();\n\n\t\t\t\tconst tags = {\n\t\t\t\t\tcallingLevel: ctx.level,\n\t\t\t\t\taction: ctx.action ? {\n\t\t\t\t\t\tname: ctx.action.name,\n\t\t\t\t\t\trawName: ctx.action.rawName\n\t\t\t\t\t} : null,\n\t\t\t\t\tremoteCall: ctx.nodeID !== ctx.broker.nodeID,\n\t\t\t\t\tcallerNodeID: ctx.nodeID,\n\t\t\t\t\tnodeID: ctx.broker.nodeID,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\ttimeout: ctx.options.timeout,\n\t\t\t\t\t\tretries: ctx.options.retries\n\t\t\t\t\t},\n\t\t\t\t\trequestID: ctx.requestID,\n\t\t\t\t};\n\t\t\t\tconst globalActionTags = tracer.opts.tags.action;\n\t\t\t\tlet actionTags;\n\t\t\t\t// local action tags take precedence\n\t\t\t\tif (isFunction(opts.tags)) {\n\t\t\t\t\tactionTags = opts.tags;\n\t\t\t\t} else if (!opts.tags && isFunction(globalActionTags)) {\n\t\t\t\t\tactionTags = globalActionTags;\n\t\t\t\t} else {\n\t\t\t\t\t// By default all params are captured. This can be overridden globally and locally\n\t\t\t\t\tactionTags = { ...{ params: true }, ...globalActionTags, ...opts.tags };\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(actionTags)) {\n\t\t\t\t\tconst res = actionTags.call(ctx.service, ctx);\n\t\t\t\t\tif (res)\n\t\t\t\t\t\tObject.assign(tags, res);\n\n\t\t\t\t} else if (isPlainObject(actionTags)) {\n\t\t\t\t\tif (actionTags.params === true)\n\t\t\t\t\t\ttags.params = ctx.params != null && isPlainObject(ctx.params) ? Object.assign({}, ctx.params) : ctx.params;\n\t\t\t\t\telse if (Array.isArray(actionTags.params))\n\t\t\t\t\t\ttags.params = _.pick(ctx.params, actionTags.params);\n\n\t\t\t\t\tif (actionTags.meta === true)\n\t\t\t\t\t\ttags.meta = ctx.meta != null ? Object.assign({}, ctx.meta) : ctx.meta;\n\t\t\t\t\telse if (Array.isArray(actionTags.meta))\n\t\t\t\t\t\ttags.meta = _.pick(ctx.meta, actionTags.meta);\n\t\t\t\t}\n\n\t\t\t\tlet spanName = `action '${ctx.action.name}'`;\n\t\t\t\tif (opts.spanName) {\n\t\t\t\t\tswitch(typeof opts.spanName) {\n\t\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\t\tspanName = opts.spanName;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\t\tspanName = opts.spanName.call(ctx.service, ctx);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst span = ctx.startSpan(spanName, {\n\t\t\t\t\tid: ctx.id,\n\t\t\t\t\ttype: \"action\",\n\t\t\t\t\ttraceID: ctx.requestID,\n\t\t\t\t\tparentID: ctx.parentID,\n\t\t\t\t\tservice: ctx.service,\n\t\t\t\t\tsampled: ctx.tracing,\n\t\t\t\t\ttags\n\t\t\t\t});\n\n\t\t\t\tctx.tracing = span.sampled;\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler(ctx).then(res => {\n\t\t\t\t\tconst tags = {\n\t\t\t\t\t\tfromCache: ctx.cachedResult\n\t\t\t\t\t};\n\n\t\t\t\t\tif (isFunction(actionTags)) {\n\t\t\t\t\t\tconst r = actionTags.call(ctx.service, ctx, res);\n\t\t\t\t\t\tif (r)\n\t\t\t\t\t\t\tObject.assign(tags, r);\n\n\t\t\t\t\t} else if (isPlainObject(actionTags)) {\n\t\t\t\t\t\tif (actionTags.response === true)\n\t\t\t\t\t\t\ttags.response = res != null && isPlainObject(res) ? Object.assign({}, res) : res;\n\t\t\t\t\t\telse if (Array.isArray(actionTags.response))\n\t\t\t\t\t\t\ttags.response = _.pick(res, actionTags.response);\n\t\t\t\t\t}\n\n\t\t\t\t\tspan.addTags(tags);\n\t\t\t\t\tctx.finishSpan(span);\n\n\t\t\t\t\t//ctx.duration = span.duration;\n\n\t\t\t\t\treturn res;\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tspan.setError(err);\n\t\t\t\t\tctx.finishSpan(span);\n\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\tfunction tracingLocalEventMiddleware(handler, event) {\n\t\tconst service = event.service;\n\n\t\tlet opts = event.tracing;\n\t\tif (opts === true || opts === false)\n\t\t\topts = { enabled: !!opts };\n\t\topts = _.defaultsDeep({}, opts, { enabled: true  });\n\n\t\tif (opts.enabled) {\n\t\t\treturn function tracingLocalEventMiddleware(ctx) {\n\n\t\t\t\tctx.requestID = ctx.requestID || tracer.getCurrentTraceID();\n\t\t\t\tctx.parentID = ctx.parentID || tracer.getActiveSpanID();\n\n\t\t\t\tconst tags = {\n\t\t\t\t\tevent: {\n\t\t\t\t\t\tname: event.name,\n\t\t\t\t\t\tgroup: event.group\n\t\t\t\t\t},\n\t\t\t\t\teventName: ctx.eventName,\n\t\t\t\t\teventType: ctx.eventType,\n\t\t\t\t\tcallerNodeID: ctx.nodeID,\n\t\t\t\t\tcallingLevel: ctx.level,\n\t\t\t\t\tremoteCall: ctx.nodeID !== broker.nodeID,\n\t\t\t\t\tnodeID: broker.nodeID,\n\t\t\t\t\trequestID: ctx.requestID,\n\t\t\t\t};\n\n\t\t\t\tconst globalEventTags = tracer.opts.tags.event;\n\t\t\t\tlet eventTags;\n\t\t\t\t// local event tags take precedence\n\t\t\t\tif (isFunction(opts.tags)) {\n\t\t\t\t\teventTags = opts.tags;\n\t\t\t\t} else if (!opts.tags && isFunction(globalEventTags)) {\n\t\t\t\t\teventTags = globalEventTags;\n\t\t\t\t} else {\n\t\t\t\t\t// By default all params are captured. This can be overridden globally and locally\n\t\t\t\t\teventTags = { ...{ params: true }, ...globalEventTags, ...opts.tags };\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(eventTags)) {\n\t\t\t\t\tconst res = eventTags.call(service, ctx);\n\t\t\t\t\tif (res)\n\t\t\t\t\t\tObject.assign(tags, res);\n\n\t\t\t\t} else if (isPlainObject(eventTags)) {\n\t\t\t\t\tif (eventTags.params === true)\n\t\t\t\t\t\ttags.params = ctx.params != null && isPlainObject(ctx.params) ? Object.assign({}, ctx.params) : ctx.params;\n\t\t\t\t\telse if (Array.isArray(eventTags.params))\n\t\t\t\t\t\ttags.params = _.pick(ctx.params, eventTags.params);\n\n\t\t\t\t\tif (eventTags.meta === true)\n\t\t\t\t\t\ttags.meta = ctx.meta != null ? Object.assign({}, ctx.meta) : ctx.meta;\n\t\t\t\t\telse if (Array.isArray(eventTags.meta))\n\t\t\t\t\t\ttags.meta = _.pick(ctx.meta, eventTags.meta);\n\t\t\t\t}\n\n\t\t\t\tlet spanName = `event '${ctx.eventName}' in '${service.fullName}'`;\n\t\t\t\tif (opts.spanName) {\n\t\t\t\t\tswitch(typeof opts.spanName) {\n\t\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\t\tspanName = opts.spanName;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\t\tspanName = opts.spanName.call(service, ctx);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst span = ctx.startSpan(spanName, {\n\t\t\t\t\tid: ctx.id,\n\t\t\t\t\ttype: \"event\",\n\t\t\t\t\ttraceID: ctx.requestID,\n\t\t\t\t\tparentID: ctx.parentID,\n\t\t\t\t\tservice,\n\t\t\t\t\tsampled: ctx.tracing,\n\t\t\t\t\ttags\n\t\t\t\t});\n\n\t\t\t\tctx.tracing = span.sampled;\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler.apply(service, arguments).then(() => {\n\t\t\t\t\tctx.finishSpan(span);\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tspan.setError(err);\n\t\t\t\t\tctx.finishSpan(span);\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\t/*\n\tfunction wrapRemoteTracingMiddleware(handler) {\n\n\t\tif (this.options.tracing) {\n\t\t\treturn function tracingMiddleware(ctx) {\n\t\t\t\tif (ctx.tracing == null) {\n\t\t\t\t\tctx.tracing = shouldTracing(ctx);\n\t\t\t\t}\n\t\t\t\treturn handler(ctx);\n\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}*/\n\treturn {\n\t\tname: \"Tracing\",\n\n\t\tlocalAction: broker.isTracingEnabled() && tracer.opts.actions ? tracingLocalActionMiddleware : null,\n\t\tlocalEvent: broker.isTracingEnabled() && tracer.opts.events ? tracingLocalEventMiddleware : null,\n\t\t//remoteAction: wrapRemoteTracingMiddleware\n\t};\n};\n","const fflate = require('fflate')\n\nmodule.exports = {\n  deflateRaw: (...args) => fflate.deflateSync(...args),\n  inflateRaw: (...args) => fflate.inflateSync(...args),\n  gzip: (...args) => fflate.gzip(...args),\n  gunzip: (...args) => fflate.gunzip(...args),\n  deflate: (...args) => fflate.zlibSync(...args),\n  inflate: (...args) => fflate.unzlibSync(...args)\n}\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { defaultsDeep } = require(\"lodash\");\nconst { parseByteString } = require(\"../../utils\");\nconst zlib = require(\"zlib\");\nconst { promisify } = require(\"util\");\n\n/**\n * This is a transmission compression middleware. It supports\n * the `deflate`, `deflateRaw` & `gzip` compression methods.\n *\n * @param {String?} opts.method\n * @param {String|Number} opts.threshold\n */\nmodule.exports = function CompressionMiddleware(opts) {\n\topts = defaultsDeep(opts, { method: \"deflate\", threshold: \"1kb\" });\n\n\tlet compress, decompress;\n\tconst threshold = parseByteString(opts.threshold);\n\n\tswitch(opts.method) {\n\t\tcase \"deflate\":\n\t\t\tcompress = promisify(zlib.deflate);\n\t\t\tdecompress = promisify(zlib.inflate);\n\t\t\tbreak;\n\t\tcase \"deflateRaw\":\n\t\t\tcompress = promisify(zlib.deflateRaw);\n\t\t\tdecompress = promisify(zlib.inflateRaw);\n\t\t\tbreak;\n\t\tcase \"gzip\":\n\t\t\tcompress = promisify(zlib.gzip);\n\t\t\tdecompress = promisify(zlib.gunzip);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t/* istanbul ignore next */\n\t\t\tthrow new Error(\"Unknow compression method: \" + opts.method);\n\t}\n\n\tlet logger;\n\n\treturn {\n\t\tname: \"Compression\",\n\n\t\tcreated(broker) {\n\t\t\tlogger = broker.getLogger(\"TX-COMPRESS\");\n\t\t\t/* istanbul ignore next */\n\t\t\tlogger.info(`The transmission is COMPRESSED by '${opts.method}'. Threshold: ${ threshold != null ? opts.threshold : \"none\"}`);\n\t\t},\n\n\t\ttransporterSend(next) {\n\t\t\treturn (topic, data, meta) => {\n\t\t\t\tif (threshold != null && data.length < threshold) {\n\t\t\t\t\tlogger.debug(`Packet '${topic}' is small and not compressed. Size: ${data.length}`);\n\t\t\t\t\treturn next(topic, Buffer.concat([Buffer.from([0x00]), data]), meta);\n\t\t\t\t}\n\t\t\t\treturn compress(data)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tlogger.debug(`Packet '${topic}' compressed. Saving: ${Number((1 - (res.length / data.length)) * 100).toFixed(0)}%`, data.length, res.length);\n\t\t\t\t\t\treturn next(topic, Buffer.concat([Buffer.from([0x01]), res]), meta);\n\t\t\t\t\t});\n\t\t\t};\n\t\t},\n\n\t\ttransporterReceive(next) {\n\t\t\treturn (cmd, data, s) => {\n\t\t\t\tconst isCompressed = data.readInt8(0);\n\t\t\t\tif (isCompressed == 0) {\n\t\t\t\t\tlogger.debug(`Packet '${cmd}' is small and not compressed. Size: ${data.length}`);\n\t\t\t\t\treturn next(cmd, data.slice(1), s);\n\t\t\t\t} else {\n\t\t\t\t\treturn decompress(data.slice(1))\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tlogger.debug(`Packet '${cmd}' decompressed. Saving: ${Number((1 - (data.length / res.length)) * 100).toFixed(0)}%`, res.length, data.length);\n\t\t\t\t\t\t\treturn next(cmd, res, s);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst kleur = require(\"kleur\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst { makeDirs } = require(\"../../utils\");\n\nmodule.exports = function TransitLoggerMiddleware(opts) {\n\topts = _.defaultsDeep(opts, {\n\t\tlogger: null,\n\t\tlogLevel: \"info\",\n\t\tlogPacketData: false,\n\n\t\tfolder: null,\n\t\textension: \".json\",\n\n\t\tcolors: {\n\t\t\treceive: \"grey\",\n\t\t\tsend: \"grey\"\n\t\t},\n\n\t\tpacketFilter: [\"HEARTBEAT\"]\n\t});\n\n\tlet logger;\n\tlet nodeID;\n\n\tlet targetFolder;\n\n\tfunction saveToFile(filename, payload) {\n\t\tconst data = JSON.stringify(payload, payload instanceof Error ? Object.getOwnPropertyNames(payload) : null, 4);\n\t\tfs.writeFile(path.join(targetFolder, filename), data, () => { /* Silent error */ });\n\t}\n\n\tconst coloringSend = opts.colors && opts.colors.send ? opts.colors.send.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\tconst coloringReceive = opts.colors && opts.colors.receive ? opts.colors.receive.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\n\tlet logFn;\n\n\treturn {\n\t\tname: \"TransitLogger\",\n\t\tcreated(broker) {\n\t\t\tlogger = opts.logger || broker.getLogger(\"debug\");\n\t\t\tnodeID = broker.nodeID;\n\n\t\t\tif (opts.folder) {\n\t\t\t\ttargetFolder = path.join(opts.folder, nodeID);\n\t\t\t\tmakeDirs(targetFolder);\n\t\t\t}\n\n\t\t\tlogFn = opts.logLevel ? logger[opts.logLevel] : null;\n\t\t},\n\n\t\ttransitPublish(next) {\n\t\t\treturn packet => {\n\t\t\t\t// Packet filtering\n\t\t\t\tif (opts.packetFilter.includes(packet.type)) {\n\t\t\t\t\treturn next(packet);\n\t\t\t\t}\n\n\t\t\t\tconst payload = packet.payload;\n\n\t\t\t\t// Logging to logger\n\t\t\t\tif (logFn) {\n\t\t\t\t\tlogFn(coloringSend(`=> Send ${packet.type} packet to '${packet.target || \"<all nodes>\"}'`));\n\t\t\t\t\tif (opts.logPacketData) {\n\t\t\t\t\t\tlogFn(\"=>\", payload);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (targetFolder) {\n\t\t\t\t\tsaveToFile(`${Date.now()}-send-${packet.type}-to-${packet.target || \"all\"}${opts.extension}`, payload);\n\t\t\t\t}\n\n\t\t\t\treturn next(packet);\n\t\t\t};\n\t\t},\n\n\t\ttransitMessageHandler(next) {\n\t\t\treturn (cmd, packet) => {\n\t\t\t\t// Packet filtering\n\t\t\t\tif (opts.packetFilter.includes(cmd)) {\n\t\t\t\t\treturn next(cmd, packet);\n\t\t\t\t}\n\n\t\t\t\tconst payload = packet.payload;\n\n\t\t\t\tif (logFn) {\n\t\t\t\t\tlogFn(coloringReceive(`<= Receive ${cmd} packet from '${payload.sender}'`));\n\t\t\t\t\tif (opts.logPacketData) {\n\t\t\t\t\t\tlogFn(\"<=\", packet.payload);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (targetFolder) {\n\t\t\t\t\tsaveToFile(`${Date.now()}-receive-${cmd}-from-${payload.sender}${opts.extension}`, payload);\n\t\t\t\t}\n\n\t\t\t\treturn next(cmd, packet);\n\t\t\t};\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst kleur = require(\"kleur\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst { makeDirs, match, isObject } = require(\"../../utils\");\n\nmodule.exports = function ActionLoggerMiddleware(opts) {\n\topts = _.defaultsDeep(opts, {\n\t\tlogger: null,\n\t\tlogLevel: \"info\",\n\t\tlogParams: false,\n\t\tlogResponse: false,\n\t\tlogMeta: false,\n\n\t\tfolder: null,\n\t\textension: \".json\",\n\n\t\tcolors: {\n\t\t\trequest: \"yellow\",\n\t\t\tresponse: \"cyan\",\n\t\t\terror: \"red\"\n\t\t},\n\t\twhitelist: [\"**\"]\n\t});\n\n\tlet logger;\n\tlet nodeID;\n\n\tlet targetFolder;\n\n\tfunction saveToFile(filename, payload) {\n\t\tconst data = JSON.stringify(payload, payload instanceof Error ? Object.getOwnPropertyNames(payload) : null, 4);\n\t\tfs.writeFile(path.join(targetFolder, filename), data, () => { /* Silent error */ });\n\t}\n\n\tfunction isWhiteListed(actionName) {\n\t\treturn !!opts.whitelist.find(pattern => match(actionName, pattern));\n\t}\n\n\tconst coloringRequest = opts.colors && opts.colors.request ? opts.colors.request.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\tconst coloringResponse = opts.colors && opts.colors.response ? opts.colors.response.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\tconst coloringError = opts.colors && opts.colors.error ? opts.colors.error.split(\".\").reduce((a,b) => a[b] || a()[b], kleur) : s => s;\n\n\tlet logFn;\n\n\treturn {\n\t\tname: \"ActionLogger\",\n\t\tcreated(broker) {\n\t\t\tlogger = opts.logger || broker.getLogger(\"debug\");\n\t\t\tnodeID = broker.nodeID;\n\n\t\t\tif (opts.folder) {\n\t\t\t\ttargetFolder = path.join(opts.folder, nodeID);\n\t\t\t\tmakeDirs(targetFolder);\n\t\t\t}\n\n\t\t\tlogFn = opts.logLevel ? logger[opts.logLevel] : null;\n\t\t},\n\n\t\tcall(next) {\n\t\t\treturn (actionName, params, callingOpts) => {\n\t\t\t\t// Whitelist filtering\n\t\t\t\tif (!isWhiteListed(isObject(actionName) ? actionName.action.name : actionName)) {\n\t\t\t\t\treturn next(actionName, params, callingOpts);\n\t\t\t\t}\n\n\t\t\t\t// Logging to logger\n\t\t\t\tif (logFn) {\n\t\t\t\t\tconst msg = coloringRequest(`Calling '${actionName}'` + (opts.logParams ? \" with params:\" : \".\"));\n\t\t\t\t\topts.logParams ? logFn(msg, params) : logFn(msg);\n\t\t\t\t\tif (opts.logMeta && callingOpts && callingOpts.meta) {\n\t\t\t\t\t\tlogFn(\"Meta:\", callingOpts.meta);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Logging to file\n\t\t\t\tif (targetFolder) {\n\t\t\t\t\tif (opts.logParams) {\n\t\t\t\t\t\tsaveToFile(`${Date.now()}-call-${actionName}-request${opts.extension}`, params);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (opts.logMeta && callingOpts && callingOpts.meta) {\n\t\t\t\t\t\tsaveToFile(`${Date.now()}-call-${actionName}-meta${opts.extension}`, callingOpts.meta);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Call the original method\n\t\t\t\tconst p = next(actionName, params, callingOpts);\n\n\t\t\t\tconst p2 = p\n\t\t\t\t\t.then(response => {\n\n\t\t\t\t\t\t// Log response to logger\n\t\t\t\t\t\tif (logFn) {\n\t\t\t\t\t\t\tconst msg = coloringResponse(`Response for '${actionName}' is received` + (opts.logResponse ? \":\" : \".\"));\n\t\t\t\t\t\t\topts.logResponse ? logFn(msg, response) : logFn(msg);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Log response to file\n\t\t\t\t\t\tif (targetFolder && opts.logResponse)\n\t\t\t\t\t\t\tsaveToFile(`${Date.now()}-call-${actionName}-response${opts.extension}`, response);\n\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\n\t\t\t\t\t\t// Log error to logger\n\t\t\t\t\t\tif (logFn) {\n\t\t\t\t\t\t\tlogFn(coloringError(`Error for '${actionName}' is received:`), err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Logger error to file\n\t\t\t\t\t\tif (targetFolder && opts.logResponse)\n\t\t\t\t\t\t\tsaveToFile(`${Date.now()}-call-${actionName}-error${opts.extension}`, err);\n\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\n\t\t\t\t// Context issue workaround: https://github.com/moleculerjs/moleculer/issues/413\n\t\t\t\tp2.ctx = p.ctx;\n\n\t\t\t\treturn p2;\n\t\t\t};\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst Middlewares = {\n\tActionHook: require(\"./action-hook\"),\n\tBulkhead: require(\"./bulkhead\"),\n\tContextTracker: require(\"./context-tracker\"),\n\tCircuitBreaker: require(\"./circuit-breaker\"),\n\tTimeout: require(\"./timeout\"),\n\tRetry: require(\"./retry\"),\n\tFallback: require(\"./fallback\"),\n\tErrorHandler: require(\"./error-handler\"),\n\tMetrics: require(\"./metrics\"),\n\tTracing: require(\"./tracing\"),\n\n\tDebounce: require(\"./debounce\"),\n\tThrottle: require(\"./throttle\"),\n\n\tHotReload: require(\"./hot-reload\"),\n\n\tTransmit: {\n\t\tEncryption: require(\"./transmit/encryption\"),\n\t\tCompression: require(\"./transmit/compression\")\n\t},\n\n\tDebugging: {\n\t\tTransitLogger: require(\"./debugging/transit-logger\"),\n\t\tActionLogger: require(\"./debugging/action-logger\"),\n\t}\n};\n\nmodule.exports = Middlewares;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = function debounceMiddleware(broker) {\n\n\tfunction wrapEventDebounceMiddleware(handler, event) {\n\t\tif (event.debounce > 0) {\n\t\t\tlet timer;\n\n\t\t\treturn function debounceMiddleware(ctx) {\n\t\t\t\tif (timer)\n\t\t\t\t\tclearTimeout(timer);\n\n\t\t\t\ttimer = setTimeout(() => {\n\t\t\t\t\ttimer = null;\n\t\t\t\t\treturn handler(ctx);\n\t\t\t\t}, event.debounce);\n\n\t\t\t\treturn broker.Promise.resolve();\n\t\t\t}.bind(this);\n\t\t}\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"Debounce\",\n\n\t\tlocalEvent: wrapEventDebounceMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = function throttleMiddleware(broker) {\n\n\tfunction wrapEventThrottleMiddleware(handler, event) {\n\t\tif (event.throttle > 0) {\n\t\t\tlet lastInvoke = 0;\n\n\t\t\treturn function throttleMiddleware(ctx) {\n\t\t\t\tconst now = Date.now();\n\t\t\t\tif (now - lastInvoke < event.throttle) {\n\t\t\t\t\treturn broker.Promise.resolve();\n\t\t\t\t}\n\t\t\t\tlastInvoke = now;\n\t\t\t\treturn handler(ctx);\n\t\t\t}.bind(this);\n\t\t}\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"Throttle\",\n\n\t\tlocalEvent: wrapEventThrottleMiddleware\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst crypto = require(\"crypto\");\n\n/**\n * This is a AES encryption middleware to protect the whole\n * Moleculer transporter communication with AES.\n *\n * @param {String|Buffer} password\n * @param {String?} algorithm\n * @param {String|Buffer?} iv\n */\nmodule.exports = function EncryptionMiddleware(password, algorithm = \"aes-256-cbc\", iv) {\n\tif (!password || password.length == 0) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Must be set a password for encryption\");\n\t}\n\n\treturn {\n\t\tname: \"Encryption\",\n\n\t\tcreated() {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.logger.info(`The transmission is ENCRYPTED by '${algorithm}'.`);\n\t\t},\n\n\t\ttransporterSend(next) {\n\t\t\treturn (topic, data, meta) => {\n\t\t\t\tconst encrypter = iv ? crypto.createCipheriv(algorithm, password, iv) : crypto.createCipher(algorithm, password);\n\t\t\t\tconst res = Buffer.concat([encrypter.update(data), encrypter.final()]);\n\t\t\t\treturn next(topic, res, meta);\n\t\t\t};\n\t\t},\n\n\t\ttransporterReceive(next) {\n\t\t\treturn (cmd, data, s) => {\n\t\t\t\tconst decrypter = iv ? crypto.createDecipheriv(algorithm, password, iv) : crypto.createDecipher(algorithm, password);\n\t\t\t\tconst res = Buffer.concat([decrypter.update(data), decrypter.final()]);\n\t\t\t\treturn next(cmd, res, s);\n\t\t\t};\n\t\t}\n\t};\n};\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst Middlewares \t= require(\"./middlewares\");\nconst { BrokerOptionsError } = require(\"./errors\");\nconst { isObject, isFunction, isString }\t= require(\"./utils\");\n\nclass MiddlewareHandler {\n\n\tconstructor(broker) {\n\t\tthis.broker = broker;\n\n\t\tthis.list = [];\n\n\t\tthis.registeredHooks = {};\n\t}\n\n\tadd(mw) {\n\t\tif (!mw) return;\n\n\t\tif (isString(mw)) {\n\t\t\tconst found = _.get(Middlewares, mw);\n\t\t\tif (!found)\n\t\t\t\tthrow new BrokerOptionsError(`Invalid built-in middleware type '${mw}'.`, { type: mw });\n\t\t\tmw = found;\n\t\t}\n\n\t\tif (isFunction(mw))\n\t\t\tmw = mw.call(this.broker, this.broker);\n\n\t\tif (!isObject(mw))\n\t\t\tthrow new BrokerOptionsError(`Invalid middleware type '${typeof mw}'. Accepted only Object of Function.`, { type: typeof mw });\n\n\t\tObject.keys(mw).forEach(key => {\n\t\t\tif (isFunction(mw[key])) {\n\t\t\t\tif (Array.isArray(this.registeredHooks[key]))\n\t\t\t\t\tthis.registeredHooks[key].push(mw[key]);\n\t\t\t\telse\n\t\t\t\t\tthis.registeredHooks[key] = [mw[key]];\n\t\t\t}\n\t\t});\n\n\t\tthis.list.push(mw);\n\t}\n\n\t/**\n\t * Wrap a handler\n\t *\n\t * @param {string} method\n\t * @param {Function} handler\n\t * @param {Object} def\n\t * @returns {Function}\n\t * @memberof MiddlewareHandler\n\t */\n\twrapHandler(method, handler, def) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\thandler = this.registeredHooks[method].reduce((handler, fn) => {\n\t\t\t\treturn fn.call(this.broker, handler, def);\n\t\t\t}, handler);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\t/**\n\t * Call a handler asynchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns {Promise}\n\t * @memberof MiddlewareHandler\n\t */\n\tcallHandlers(method, args, opts = {}) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\tconst list = opts.reverse ? Array.from(this.registeredHooks[method]).reverse() : this.registeredHooks[method];\n\t\t\treturn list.reduce((p, fn) => p.then(() => fn.apply(this.broker, args)), this.broker.Promise.resolve());\n\t\t}\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Call a handler synchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns {Array<any}\n\t * @memberof MiddlewareHandler\n\t */\n\tcallSyncHandlers(method, args, opts = {}) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\tconst list = opts.reverse ? Array.from(this.registeredHooks[method]).reverse() : this.registeredHooks[method];\n\t\t\treturn list.map(fn => fn.apply(this.broker, args));\n\t\t}\n\t\treturn;\n\t}\n\n\t/**\n\t * Get count of registered middlewares\n\t *\n\t * @returns {Number}\n\t * @memberof MiddlewareHandler\n\t */\n\tcount() {\n\t\treturn this.list.length;\n\t}\n\n\t/**\n\t * Wrap a method\n\t *\n\t * @param {string} method\n\t * @param {Function} handler\n\t * @param {any} bindTo\n\t * @param {Object} opts\n\t * @returns {Function}\n\t * @memberof MiddlewareHandler\n\t */\n\twrapMethod(method, handler, bindTo = this.broker, opts = {}) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\tconst list = opts.reverse ? Array.from(this.registeredHooks[method]).reverse() : this.registeredHooks[method];\n\t\t\thandler = list.reduce((next, fn) => fn.call(bindTo, next), handler.bind(bindTo));\n\t\t}\n\n\t\treturn handler;\n\t}\n\n}\n\nmodule.exports = MiddlewareHandler;\n\n/*\n{\n    // After broker is created\n    created(broker) {\n\t\treturn;\n    },\n\n    // Wrap local action handlers (legacy middleware handler)\n    localAction(next, action) {\n\t\treturn ctx => {\n\t\t\treturn next(ctx);\n\t\t};\n    },\n\n    // Wrap remote action handlers\n    remoteAction(next, action) {\n\t\treturn ctx => {\n\t\t\treturn next(ctx);\n\t\t};\n    },\n\n\t// Wrap local event handlers\n\tlocalEvent(next, event) {\n\t\treturn (payload, sender, event) => {\n\t\t\treturn next(payload, sender, event);\n\t\t};\n\t},\n\n    // Wrap local method handlers\n    localMethod(next, method) {\n\t\treturn () => {\n\t\t\treturn next(...arguments);\n\t\t};\n\t},\n\n\t// Wrap broker.createService method\n\tcreateService(next) {\n\t\treturn (schema, schemaMods) => {\n\t\t\treturn next(schema, schemaMods);\n\t\t};\n\t},\n\n\t// Wrap broker.registerLocalService method\n\tregisterLocalService(next) {\n\t\treturn (svc) => {\n\t\t\treturn next(svc);\n\t\t};\n\t},\n\n\t// Wrap broker.destroyService method\n\tdestroyService(next) {\n\t\treturn (svc) => {\n\t\t\treturn next(svc);\n\t\t};\n\t},\n\n\t// Wrap broker.call method\n\tcall(next) {\n\t\treturn (actionName, params, opts) => {\n\t\t\treturn next(actionName, params, opts);\n\t\t};\n\t},\n\n\t// Wrap broker.mcall method\n\tmcall(next) {\n\t\treturn (def) => {\n\t\t\treturn next(def);\n\t\t};\n\t},\n\n    // Wrap broker.emit method\n    emit(next) {\n\t\treturn (event, payload) => {\n\t\t\treturn next(event, payload);\n\t\t};\n    },\n\n    // Wrap broker.broadcast method\n    broadcast(next) {\n\t\treturn (event, payload) => {\n\t\t\treturn next(event, payload);\n\t\t};\n    },\n\n    // Wrap broker.broadcastLocal method\n    broadcastLocal(next) {\n\t\treturn (event, payload) => {\n\t\t\treturn next(event, payload);\n\t\t};\n    },\n\n\t// While a new local service creating (after mixins are mixed)\n\tserviceCreating(service, schema) {\n\t\treturn;\n\t},\n\n\t// After a new local service created\n\tserviceCreated(service) {\n\t\treturn;\n\t},\n\n\t// Before a local service started\n\tserviceStarting(service) {\n\t\treturn Promise.resolve();\n\t},\n\n\t// After a local service started\n\tserviceStarted(service) {\n\t\treturn Promise.resolve();\n\t},\n\n\t// Before a local service stopping\n\tserviceStopping(service) {\n\t\treturn Promise.resolve();\n\t},\n\n\t// After a local service stopped\n\tserviceStopped(service) {\n\t\treturn Promise.resolve();\n\t},\n\n    // Before broker starting\n    starting(broker) {\n\t\treturn Promise.resolve();\n    },\n\n    // After broker started\n    started(broker) {\n\t\treturn Promise.resolve();\n    },\n\n    // Before broker stopping\n    stopping(broker) {\n\t\treturn Promise.resolve();\n    },\n\n    // After broker stopped\n    stopped(broker) {\n\t\treturn Promise.resolve();\n    },\n\n\t// When transit publishing a packet\n\ttransitPublish(next) {\n\t\treturn (packet) => {\n\t\t\treturn next(packet);\n\t\t};\n\t},\n\n\t// When transit receives & handles a packet\n\ttransitMessageHandler(next) {\n\t\treturn (cmd, packet) => {\n\t\t\treturn next(cmd, packet);\n\t\t};\n\t},\n\n\t// When transporter send data\n\ttransporterSend(next) {\n\t\treturn (topic, data, meta) => {\n\t\t\treturn next(topic, data, meta);\n\t\t};\n\t},\n\n\t// When transporter received data\n\ttransporterReceive(next) {\n\t\treturn (cmd, data, s) => {\n\t\t\treturn next(cmd, data, s);\n\t\t};\n\t},\n\n\t// When transporter received data\n\tnewLogEntry(type, args, bindings) {\n\t\t// Do something\n\t}\n}\n\n*/\n","\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isObject } = require(\"../../utils\");\n\n/**\n * Abstract Trace Exporter\n *\n * @class BaseTraceExporter\n */\nclass BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of BaseTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof BaseTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = opts || {};\n\t\tthis.Promise = Promise; // default promise before logger is initialized\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof BaseTraceExporter\n\t */\n\tinit(tracer) {\n\t\tthis.tracer = tracer;\n\t\tthis.broker = tracer.broker;\n\t\tthis.Promise = this.broker.Promise;\n\t\tthis.logger = this.opts.logger || this.tracer.logger;\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanStarted(/*span*/) {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanFinished(/*span*/) {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Flattening tags to one-level object.\n\t * E.g.\n\t *  **From:**\n\t * \t```js\n\t * \t{\n\t * \t\terror: {\n\t * \t\t\tname: \"MoleculerError\"\n\t * \t\t}\n\t * \t}\n\t *  ```\n\t *\n\t * \t**To:**\n\t * \t```js\n\t *  {\n\t * \t\t\"error.name\": \"MoleculerError\"\n\t *  }\n\t *  ```\n\t *\n\t * @param {Object} obj\n\t * @param {boolean} [convertToString=false]\n\t * @param {string} [path=\"\"]\n\t * @returns {Object}\n\t * @memberof BaseTraceExporter\n\t */\n\tflattenTags(obj, convertToString = false, path = \"\") {\n\t\tif (!obj) return null;\n\n\t\treturn Object.keys(obj).reduce((res, k) => {\n\t\t\tconst o = obj[k];\n\t\t\tconst pp = (path ? path + \".\" : \"\") + k;\n\n\t\t\tif (isObject(o))\n\t\t\t\tObject.assign(res, this.flattenTags(o, convertToString, pp));\n\t\t\telse if (o !== undefined) {\n\t\t\t\tres[pp] = convertToString ? String(o) : o;\n\t\t\t}\n\n\t\t\treturn res;\n\t\t}, {});\n\t}\n\n\t/**\n\t * Convert Error to POJO.\n\t *\n\t * @param {Error} err\n\t * @returns {Object}\n\t * @memberof BaseTraceExporter\n\t */\n\terrorToObject(err) {\n\t\tif (!err) return null;\n\n\t\treturn _.pick(err, this.tracer.opts.errorFields);\n\t}\n}\n\nmodule.exports = BaseTraceExporter;\n","\"use strict\";\n\nconst _ \t\t\t\t\t\t= require(\"lodash\");\nconst r \t\t\t\t\t\t= _.repeat;\nconst kleur \t\t\t\t\t= require(\"kleur\");\nconst { humanize, isFunction }  = require(\"../../utils\");\n\nconst BaseTraceExporter = require(\"./base\");\n\n/**\n * Console Trace Exporter only for debugging\n *\n * @class ConsoleTraceExporter\n */\nclass ConsoleTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of ConsoleTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof ConsoleTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\tlogger: null,\n\t\t\tcolors: true,\n\t\t\twidth: 100,\n\t\t\tgaugeWidth: 40\n\t\t});\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\n\t\tthis.spans = {};\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof ConsoleTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tthis.spans = {};\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof ConsoleTraceExporter\n\t */\n\tspanStarted(span) {\n\t\tthis.spans[span.id] = {\n\t\t\tspan,\n\t\t\tchildren: []\n\t\t};\n\n\t\tif (span.parentID) {\n\t\t\tconst parentItem = this.spans[span.parentID];\n\t\t\tif (parentItem)\n\t\t\t\tparentItem.children.push(span.id);\n\t\t}\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof ConsoleTraceExporter\n\t */\n\tspanFinished(span) {\n\t\t//this.log(span);\n\t\tif (!this.spans[span.parentID]) {\n\t\t\tthis.printRequest(span.id);\n\n\t\t\t// remove old printed requests\n\t\t\tthis.removeSpanWithChildren(span.id);\n\t\t}\n\t}\n\n\t/**\n\t * Remove a finished span with children.\n\t *\n\t * @param {String} spanID\n\t * @memberof ConsoleTraceExporter\n\t */\n\tremoveSpanWithChildren(spanID) {\n\t\tconst span = this.spans[spanID];\n\t\tif (span) {\n\t\t\tif (span.children && span.children.length > 0) {\n\t\t\t\tspan.children.forEach(child => this.removeSpanWithChildren(child));\n\t\t\t}\n\t\t\tdelete this.spans[spanID];\n\t\t}\n\t}\n\n\tdrawTableTop() {\n\t\tthis.log(kleur.grey(\"┌\" + r(\"─\", this.opts.width - 2) + \"┐\"));\n\t}\n\n\tdrawHorizonalLine() {\n\t\tthis.log(kleur.grey(\"├\" + r(\"─\", this.opts.width - 2) + \"┤\"));\n\t}\n\n\tdrawLine(text) {\n\t\tthis.log(kleur.grey(\"│ \") + text + kleur.grey(\" │\"));\n\t}\n\n\tdrawTableBottom() {\n\t\tthis.log(kleur.grey(\"└\" + r(\"─\", this.opts.width - 2) + \"┘\"));\n\t}\n\n\tgetAlignedTexts(str, space) {\n\t\tconst len = str.length;\n\n\t\tlet left;\n\t\tif (len <= space)\n\t\t\tleft = str + r(\" \", space - len);\n\t\telse {\n\t\t\tleft = str.slice(0, Math.max(space - 3, 0));\n\t\t\tleft += r(\".\", Math.min(3, space));\n\t\t}\n\n\t\treturn left;\n\t}\n\n\tdrawGauge(gstart, gstop) {\n\t\tconst gw = this.opts.gaugeWidth;\n\t\tconst p1 = Math.floor(gw * gstart / 100);\n\t\tconst p2 = Math.max(Math.floor(gw * gstop / 100) - p1, 1);\n\t\tconst p3 = Math.max(gw - (p1 + p2), 0);\n\n\t\treturn [\n\t\t\tkleur.grey(\"[\"),\n\t\t\tkleur.grey(r(\".\", p1)),\n\t\t\tr(\"■\", p2),\n\t\t\tkleur.grey(r(\".\", p3)),\n\t\t\tkleur.grey(\"]\")\n\t\t].join(\"\");\n\t}\n\n\tgetCaption(span) {\n\t\tlet caption = span.name;\n\n\t\tif (span.tags.fromCache)\n\t\t\tcaption += \" *\";\n\t\tif (span.tags.remoteCall)\n\t\t\tcaption += \" »\";\n\t\tif (span.error)\n\t\t\tcaption += \" ×\";\n\n\t\treturn caption;\n\t}\n\n\tgetColor(span) {\n\t\tlet c = kleur.bold;\n\t\tif (span.tags.fromCache)\n\t\t\tc = c().yellow;\n\t\tif (span.tags.remoteCall)\n\t\t\tc = c().cyan;\n\t\tif (span.duration == null)\n\t\t\tc = c().grey;\n\t\tif (span.error)\n\t\t\tc = c().red;\n\n\t\treturn c;\n\t}\n\n\tgetTraceInfo(main) {\n\t\tlet depth = 0;\n\t\tlet total = 0;\n\t\tlet check = (item, level, parents) => {\n\t\t\titem.level = level;\n\t\t\titem.parents = parents || [];\n\t\t\ttotal++;\n\t\t\tif (level > depth)\n\t\t\t\tdepth = level;\n\n\t\t\tif (item.children.length > 0) {\n\t\t\t\titem.children.forEach((spanID, idx) => {\n\t\t\t\t\tconst span = this.spans[spanID];\n\t\t\t\t\tspan.first = idx == 0;\n\t\t\t\t\tspan.last = idx == item.children.length - 1;\n\t\t\t\t\tcheck(span, item.level + 1, [].concat(item.parents, [item]));\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcheck(main, 1);\n\n\t\treturn { depth, total };\n\t}\n\n\tgetSpanIndent(spanItem) {\n\t\tif (spanItem.level > 1) {\n\t\t\tlet s = spanItem.parents.map((item, idx) => {\n\t\t\t\tif (idx > 0)\n\t\t\t\t\treturn item.last ? \"  \" : \"│ \";\n\n\t\t\t\treturn \"\";\n\t\t\t}).join(\"\");\n\n\t\t\ts += spanItem.last ? \"└─\" : \"├─\";\n\n\t\t\treturn s + (spanItem.children.length > 0 ? \"┬─\" : \"──\") + \" \";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Print a span row\n\t *\n\t * @param {Object} span\n\t * @param {Object} main\n\t */\n\tprintSpanTime(spanItem, mainItem, level) {\n\t\tconst span = spanItem.span;\n\t\tconst mainSpan = mainItem.span;\n\t\tconst margin = 2 * 2;\n\t\tconst w = (this.opts.width || 80) - margin;\n\t\tconst gw = this.opts.gaugeWidth || 40;\n\n\t\tconst time = span.duration == null ? \"?\" : humanize(span.duration);\n\t\tconst indent = this.getSpanIndent(spanItem);\n\t\tconst caption = this.getCaption(span);\n\t\tconst info = kleur.grey(indent) + this.getAlignedTexts(caption, w - gw - 3 - time.length - 1 - indent.length) + \" \" + time;\n\n\t\tconst startTime = span.startTime || mainSpan.startTime;\n\t\tconst finishTime = span.finishTime || mainSpan.finishTime;\n\n\t\tlet gstart = (startTime - mainSpan.startTime) / (mainSpan.finishTime - mainSpan.startTime) * 100;\n\t\tlet gstop = (finishTime - mainSpan.startTime) / (mainSpan.finishTime - mainSpan.startTime) * 100;\n\n\t\tif (Number.isNaN(gstart) && Number.isNaN(gstop)) {\n\t\t\tgstart = 0;\n\t\t\tgstop = 100;\n\t\t}\n\t\tif (gstop > 100)\n\t\t\tgstop = 100;\n\n\t\tconst c = this.getColor(span);\n\t\tthis.drawLine(c(info + \" \" + this.drawGauge(gstart, gstop)));\n\n\t\tif (spanItem.children.length > 0)\n\t\t\tspanItem.children.forEach((spanID, idx) =>\n\t\t\t\tthis.printSpanTime(this.spans[spanID], mainItem, level + 1, spanItem, {\n\t\t\t\t\tfirst: idx == 0,\n\t\t\t\t\tlast: idx == spanItem.children.length - 1\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\t/**\n\t * Print request traces\n\t *\n\t * @param {String} id\n\t */\n\tprintRequest(id) {\n\t\tconst main = this.spans[id];\n\t\tif (!main) return ; // Async span\n\n\t\tconst margin = 2 * 2;\n\t\tconst w = this.opts.width - margin;\n\n\t\tthis.drawTableTop();\n\n\t\tconst { total, depth } = this.getTraceInfo(main);\n\n\t\tconst truncatedID = this.getAlignedTexts(id, w - \"ID: \".length - \"Depth: \".length - (\"\"+depth).length - \"Total: \".length - (\"\"+total).length - 2);\n\t\tconst line = kleur.grey(\"ID: \") + kleur.bold(truncatedID) + \" \" + kleur.grey(\"Depth: \") + kleur.bold(depth) + \" \" + kleur.grey(\"Total: \") + kleur.bold(total);\n\t\tthis.drawLine(line);\n\n\t\tthis.drawHorizonalLine();\n\n\t\tthis.printSpanTime(main, main, 1, null, {});\n\n\t\tthis.drawTableBottom();\n\t}\n\n\tlog(...args) {\n\t\tif (isFunction(this.opts.logger)) {\n\t\t\treturn this.opts.logger(...args);\n\t\t} else {\n\t\t\treturn this.logger.info(...args);\n\t\t}\n\t}\n}\n\nmodule.exports = ConsoleTraceExporter;\n","\"use strict\";\n\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst BaseTraceExporter \t= require(\"./base\");\nconst { isFunction } \t\t= require(\"../../utils\");\n\n/**\n * Event Trace Exporter.\n *\n * @class EventTraceExporter\n */\nclass EventTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of EventTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof EventTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\t/** @type {String} Base URL for Zipkin server. */\n\t\t\teventName: \"$tracing.spans\",\n\n\t\t\tsendStartSpan: false,\n\t\t\tsendFinishSpan: true,\n\n\t\t\tbroadcast: false,\n\n\t\t\tgroups: null,\n\n\t\t\t/** @type {Number} Batch send time interval. */\n\t\t\tinterval: 5,\n\n\t\t\tspanConverter: null,\n\n\t\t\t/** @type {Object?} Default span tags */\n\t\t\tdefaultTags: null\n\t\t});\n\n\t\tthis.queue = [];\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof EventTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.flush(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\n\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, tracer) : this.opts.defaultTags;\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = null;\n\t\t}\n\t\treturn this.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanStarted(span) {\n\t\tif (this.opts.sendStartSpan) {\n\t\t\tthis.queue.push(span);\n\t\t\tif (!this.timer)\n\t\t\t\tthis.flush();\n\t\t}\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof EventTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tif (this.opts.sendFinishSpan) {\n\t\t\tthis.queue.push(span);\n\t\t\tif (!this.timer)\n\t\t\t\tthis.flush();\n\t\t}\n\t}\n\n\t/**\n\t * Flush tracing data to Datadog server\n\t *\n\t * @memberof EventTraceExporter\n\t */\n\tflush() {\n\t\tif (this.queue.length == 0) return;\n\n\t\tconst data = this.generateTracingData();\n\t\tthis.queue.length = 0;\n\n\t\tif (this.opts.broadcast) {\n\t\t\tthis.logger.debug(`Send tracing spans (${data.length} spans) broadcast events.`);\n\t\t\tthis.broker.broadcast(this.opts.eventName, data, { groups: this.opts.groups });\n\t\t} else {\n\t\t\tthis.logger.debug(`Send tracing spans (${data.length} spans) events.`);\n\t\t\tthis.broker.emit(this.opts.eventName, data, { groups: this.opts.groups });\n\t\t}\n\t}\n\n\t/**\n\t * Generate tracing data with custom converter\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof EventTraceExporter\n\t */\n\tgenerateTracingData() {\n\t\tif (isFunction(this.opts.spanConverter))\n\t\t\treturn this.queue.map(span => this.opts.spanConverter.call(this, span));\n\n\t\treturn Array.from(this.queue).map(span => {\n\t\t\tconst newSpan = Object.assign({}, span);\n\t\t\tif (newSpan.error)\n\t\t\t\tnewSpan.error = this.errorToObject(span.error);\n\n\t\t\treturn newSpan;\n\t\t});\n\t}\n\n}\n\nmodule.exports = EventTraceExporter;\n","\"use strict\";\n\nconst _ \t\t\t\t\t\t= require(\"lodash\");\nconst BaseTraceExporter \t\t= require(\"./base\");\nconst { isObject, isFunction }\t= require(\"../../utils\");\n\n/**\n * Event Trace Exporter. It sends same trace events as in Moleculer <= v0.13.\n *\n * @class EventLegacyTraceExporter\n */\nclass EventLegacyTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of EventLegacyTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof EventLegacyTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t});\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof EventLegacyTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\t\tthis.broker = tracer.broker;\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanStarted(span) {\n\t\tconst payload = this.generateMetricPayload(span);\n\t\tthis.broker.emit(\"metrics.trace.span.start\", payload);\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof EventLegacyTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tconst payload = this.generateMetricPayload(span);\n\t\tthis.broker.emit(\"metrics.trace.span.finish\", payload);\n\t}\n\n\t/**\n\t * Generate metrics payload\n\t *\n\t * @param {Context} ctx\n\t * @returns {Object}\n\t */\n\tgenerateMetricPayload(span) {\n\t\tlet payload = {\n\t\t\tid: span.id,\n\t\t\trequestID: span.traceID,\n\t\t\tlevel: span.tags.callingLevel,\n\t\t\tstartTime: span.startTime,\n\t\t\tremoteCall: span.tags.remoteCall\n\t\t};\n\n\t\t// Process extra metrics\n\t\tif (span.opts.ctx)\n\t\t\tthis.processExtraMetrics(span.opts.ctx, payload);\n\n\t\tpayload.action = span.tags.action;\n\t\tpayload.service = span.service;\n\n\t\tif (span.parentID)\n\t\t\tpayload.parent = span.parentID;\n\n\t\tpayload.nodeID = this.broker.nodeID;\n\t\tif (payload.remoteCall)\n\t\t\tpayload.callerNodeID = span.tags.callerNodeID;\n\n\t\tif (span.finishTime) {\n\t\t\tpayload.endTime = span.finishTime;\n\t\t\tpayload.duration = span.duration;\n\t\t\tpayload.fromCache = span.tags.fromCache;\n\n\t\t\tif (span.error) {\n\t\t\t\tpayload.error = this.errorToObject(span.error);\n\t\t\t}\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * Assign extra metrics taking into account action definitions\n\t *\n\t * @param {Context} ctx\n\t * @param {string} name Field of the context to be assigned.\n\t * @param {any} payload Object for assignment.\n\t *\n\t * @private\n\t */\n\tassignExtraMetrics(ctx, name, payload) {\n\t\tlet def = ctx.action.metrics[name];\n\t\t// if metrics definitions is boolean do default, metrics=true\n\t\tif (def === true) {\n\t\t\tpayload[name] = ctx[name];\n\t\t} else if (Array.isArray(def)) {\n\t\t\tpayload[name] = _.pick(ctx[name], def);\n\t\t} else if (isFunction(def)) {\n\t\t\tpayload[name] = def(ctx[name]);\n\t\t}\n\t}\n\n\t/**\n\t * Decide and process extra metrics taking into account action definitions\n\t *\n\t * @param {Context} ctx\n\t * @param {any} payload Object for assignment.\n\t *\n\t * @private\n\t */\n\tprocessExtraMetrics(ctx, payload) {\n\t\t// extra metrics (params and meta)\n\t\tif (isObject(ctx.action.metrics)) {\n\t\t\t// custom metrics def\n\t\t\tthis.assignExtraMetrics(ctx, \"params\", payload);\n\t\t\tthis.assignExtraMetrics(ctx, \"meta\", payload);\n\t\t}\n\t}\n\n\n}\n\nmodule.exports = EventLegacyTraceExporter;\n","/* global self */\n\nconst scope = (typeof global !== 'undefined' && global) ||\n            (typeof self !== 'undefined' && self) ||\n            window\n\nmodule.exports = (...args) => scope.fetch(...args)\n","\"use strict\";\n\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst fetch \t\t\t\t= require(\"node-fetch\");\nconst BaseTraceExporter \t= require(\"./base\");\nconst { isFunction } \t\t= require(\"../../utils\");\n\n/**\n * Trace Exporter for Zipkin.\n *\n * API v2: https://zipkin.io/zipkin-api/#/\n * API v1: https://zipkin.io/pages/data_model.html\n *\n * Running Zipkin in Docker:\n *\n * \t docker run -d -p 9411:9411 --name=zipkin openzipkin/zipkin\n *\n * @class ZipkinTraceExporter\n */\nclass ZipkinTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of ZipkinTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof ZipkinTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\t/** @type {String} Base URL for Zipkin server. */\n\t\t\tbaseURL: process.env.ZIPKIN_URL || \"http://localhost:9411\",\n\n\t\t\t/** @type {String} Zipkin REST API version. */\n\t\t\t//version: \"v2\",\n\n\t\t\t/** @type {Number} Batch send time interval in seconds. */\n\t\t\tinterval: 5,\n\n\t\t\t/** @type {Object} Additional payload options. */\n\t\t\tpayloadOptions: {\n\n\t\t\t\t/** @type {Boolean} Set `debug` property in v2 payload. */\n\t\t\t\tdebug: false,\n\n\t\t\t\t/** @type {Boolean} Set `shared` property in v2 payload. */\n\t\t\t\tshared: false\n\t\t\t},\n\n\t\t\t/** @type {Object?} Default span tags */\n\t\t\tdefaultTags: null\n\t\t});\n\n\t\tthis.queue = [];\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof ZipkinTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\n\t\tfetch.Promise = this.broker.Promise;\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.flush(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\n\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, tracer) : this.opts.defaultTags;\n\t\tif (this.defaultTags) {\n\t\t\tthis.defaultTags = this.flattenTags(this.defaultTags, true);\n\t\t}\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = null;\n\t\t}\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof ZipkinTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tthis.queue.push(span);\n\t}\n\n\t/**\n\t * Flush tracing data to Datadog server\n\t *\n\t * @memberof ZipkinTraceExporter\n\t */\n\tflush() {\n\t\tif (this.queue.length == 0) return;\n\n\t\tconst data = this.generateTracingData();\n\t\tthis.queue.length = 0;\n\n\t\tfetch(`${this.opts.baseURL}/api/v2/spans`, {\n\t\t\tmethod: \"post\",\n\t\t\tbody: JSON.stringify(data),\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t}\n\t\t}).then(res => {\n\t\t\tif (res.status >= 400) {\n\t\t\t\tthis.logger.warn(`Unable to upload tracing spans to Zipkin. Status: ${res.status} ${res.statusText}`);\n\t\t\t} else {\n\t\t\t\tthis.logger.debug(`Tracing spans (${data.length} spans) are uploaded to Zipkin. Status: ${res.statusText}`);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.logger.warn(\"Unable to upload tracing spans to Zipkin. Error:\" + err.message, err);\n\t\t});\n\t}\n\n\t/**\n\t * Generate tracing data for Zipkin\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof ZipkinTraceExporter\n\t */\n\tgenerateTracingData() {\n\t\treturn this.queue.map(span => this.makePayload(span));\n\t}\n\n\t/**\n\t * Create Zipkin v2 payload from metric event\n\t *\n\t * @param {Span} span\n\t * @returns {Object}\n\t */\n\tmakePayload(span) {\n\t\tconst serviceName = span.service ? span.service.fullName : null;\n\t\tconst payload = {\n\t\t\tname: span.name,\n\t\t\tkind: \"SERVER\",\n\n\t\t\t// Trace & span IDs\n\t\t\ttraceId: this.convertID(span.traceID),\n\t\t\tid: this.convertID(span.id),\n\t\t\tparentId: this.convertID(span.parentID),\n\n\t\t\tlocalEndpoint: { serviceName },\n\t\t\tremoteEndpoint: { serviceName },\n\n\t\t\tannotations: [],\n\n\t\t\ttimestamp: this.convertTime(span.startTime),\n\t\t\tduration: this.convertTime(span.duration),\n\n\t\t\ttags: {\n\t\t\t\tservice: serviceName,\n\t\t\t\t\"span.type\": span.type,\n\t\t\t},\n\n\t\t\tdebug: this.opts.payloadOptions.debug,\n\t\t\tshared: this.opts.payloadOptions.shared\n\t\t};\n\n\t\tif (span.error) {\n\t\t\tpayload.tags[\"error\"] = span.error.message;\n\n\t\t\tpayload.annotations.push({\n\t\t\t\tvalue: \"error\",\n\t\t\t\tendpoint: { serviceName: serviceName, ipv4: \"\", port: 0 },\n\t\t\t\ttimestamp: this.convertTime(span.finishTime)\n\t\t\t});\n\t\t}\n\n\t\tObject.assign(\n\t\t\tpayload.tags,\n\t\t\tthis.defaultTags || {},\n\t\t\tthis.flattenTags(span.tags, true),\n\t\t\tthis.flattenTags(this.errorToObject(span.error), true, \"error\") || {}\n\t\t);\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * Convert Context ID to Zipkin format\n\t *\n\t * @param {String} id\n\t * @returns {String}\n\t */\n\tconvertID(id) {\n\t\treturn id ? id.replace(/-/g, \"\").substring(0, 16) : null;\n\t}\n\n\t/**\n\t * Convert JS timestamp to microseconds\n\t *\n\t * @param {Number} ts\n\t * @returns {Number}\n\t */\n\tconvertTime(ts) {\n\t\treturn ts != null ? Math.round(ts * 1000) : null;\n\t}\n\n}\n\nmodule.exports = ZipkinTraceExporter;\n","\"use strict\";\n\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst fetch \t\t\t\t= require(\"node-fetch\");\nconst BaseTraceExporter \t= require(\"./base\");\nconst { isFunction } \t\t= require(\"../../utils\");\n\n/**\n * Trace Exporter for NewRelic using Zipkin data.\n *\n * NewRelic zipkin tracer: https://docs.newrelic.com/docs/understand-dependencies/distributed-tracing/trace-api/report-zipkin-format-traces-trace-api\n * API v2: https://zipkin.io/zipkin-api/#/\n *\n * @class NewRelicTraceExporter\n */\nclass NewRelicTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of NewRelicTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof NewRelicTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\t/** @type {String} Base URL for NewRelic server. */\n\t\t\tbaseURL:\n\t\t\tprocess.env.NEW_RELIC_TRACE_API_URL || \"https://trace-api.newrelic.com\",\n\n\t\t  /** @type {String} NewRelic Insert API Key */\n\t\t  insertKey: \"\",\n\n\t\t  /** @type {Number} Batch send time interval in seconds. */\n\t\t  interval: 5,\n\n\t\t  /** @type {Object} Additional payload options. */\n\t\t  payloadOptions: {\n\t\t\t/** @type {Boolean} Set `debug` property in v2 payload. */\n\t\t\t\tdebug: false,\n\n\t\t\t\t/** @type {Boolean} Set `shared` property in v2 payload. */\n\t\t\t\tshared: false,\n\t\t  },\n\n\t\t  /** @type {Object?} Default span tags */\n\t\t  defaultTags: null,\n\t\t});\n\n\t\tthis.queue = [];\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof NewRelicTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\n\t\tfetch.Promise = this.broker.Promise;\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.flush(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\n\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, tracer) : this.opts.defaultTags;\n\t\tif (this.defaultTags) {\n\t\t\tthis.defaultTags = this.flattenTags(this.defaultTags, true);\n\t\t}\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = null;\n\t\t}\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof NewRelicTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tthis.queue.push(span);\n\t}\n\n\t/**\n\t * Flush tracing data to NewRelic Zipkin api endpoint\n\t *\n\t * @memberof NewRelicTraceExporter\n\t */\n\tflush() {\n\t\tif (this.queue.length == 0) return;\n\n\t\tconst data = this.generateTracingData();\n\t\tthis.queue.length = 0;\n\n\t\tfetch(`${this.opts.baseURL}/trace/v1`,\n\t\t\t{\n\t\t\t\tmethod: \"post\",\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"Api-Key\": this.opts.insertKey,\n \t\t\t\t\"Data-Format\": \"zipkin\",\n \t\t\t\t\"Data-Format-Version\": \"2\"\n\t\t\t\t}\n\t\t\t}).then(res => {\n\t\t\tif (res.status >= 400) {\n\t\t\t\tthis.logger.warn(`Unable to upload tracing spans to NewRelic. Status: ${res.status} ${res.statusText}`);\n\t\t\t} else {\n\t\t\t\tthis.logger.debug(`Tracing spans (${data.length} spans) uploaded to NewRelic. Status: ${res.statusText}`);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.logger.warn(\"Unable to upload tracing spans to NewRelic. Error:\" + err.message, err);\n\t\t});\n\t}\n\n\t/**\n\t * Generate tracing data for NewRelic\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof NewRelicTraceExporter\n\t */\n\tgenerateTracingData() {\n\t\treturn this.queue.map(span => this.makePayload(span));\n\t}\n\n\t/**\n\t * Create Zipkin v2 payload from metric event\n\t *\n\t * @param {Span} span\n\t * @returns {Object}\n\t */\n\tmakePayload(span) {\n\t\tconst serviceName = span.service ? span.service.fullName : null;\n\t\tconst payload = {\n\t\t\tname: span.name,\n\t\t\tkind: \"CONSUMER\",\n\n\t\t\t// Trace & span IDs\n\t\t\ttraceId: this.convertID(span.traceID),\n\t\t\tid: this.convertID(span.id),\n\t\t\tparentId: this.convertID(span.parentID),\n\n\t\t\tlocalEndpoint: { serviceName },\n\t\t\tremoteEndpoint: { serviceName },\n\n\t\t\tannotations: [\n\t\t\t\t{ timestamp: this.convertTime(span.startTime), value: \"sr\" },\n\t\t\t\t{ timestamp: this.convertTime(span.finishTime), value: \"ss\" },\n\t\t\t],\n\n\t\t\ttimestamp: this.convertTime(span.startTime),\n\t\t\tduration: this.convertTime(span.duration),\n\n\t\t\ttags: {\n\t\t\t\tservice: serviceName,\n\t\t\t\t\"span.type\": span.type,\n\t\t\t},\n\n\t\t\tdebug: this.opts.payloadOptions.debug,\n\t\t\tshared: this.opts.payloadOptions.shared\n\t\t};\n\n\t\tif (span.error) {\n\t\t\tpayload.tags[\"error\"] = span.error.message;\n\n\t\t\tpayload.annotations.push({\n\t\t\t\tvalue: \"error\",\n\t\t\t\tendpoint: { serviceName: serviceName, ipv4: \"\", port: 0 },\n\t\t\t\ttimestamp: this.convertTime(span.finishTime)\n\t\t\t});\n\t\t}\n\n\t\tObject.assign(\n\t\t\tpayload.tags,\n\t\t\tthis.defaultTags || {},\n\t\t\tthis.flattenTags(span.tags, true),\n\t\t\tthis.flattenTags(this.errorToObject(span.error), true, \"error\") || {}\n\t\t);\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * Convert Context ID to Zipkin format\n\t *\n\t * @param {String} id\n\t * @returns {String}\n\t */\n\tconvertID(id) {\n\t\treturn id ? id.replace(/-/g, \"\").substring(0, 16) : null;\n\t}\n\n\t/**\n\t * Convert JS timestamp to microseconds\n\t *\n\t * @param {Number} ts\n\t * @returns {Number}\n\t */\n\tconvertTime(ts) {\n\t\treturn ts != null ? Math.round(ts * 1000) : null;\n\t}\n\n}\n\nmodule.exports = NewRelicTraceExporter;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../../utils\");\nconst { BrokerOptionsError } = require(\"../../errors\");\n\nconst Exporters = {\n\tBase: require(\"./base\"),\n\tConsole: require(\"./console\"),\n\tDatadog: require(\"./datadog\"),\n\t//DatadogSimple: require(\"./datadog-simple\"),\n\tEvent: require(\"./event\"),\n\tEventLegacy: require(\"./event-legacy\"),\n\tJaeger: require(\"./jaeger\"),\n\tZipkin: require(\"./zipkin\"),\n\tNewRelic: require(\"./newrelic\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Exporters).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Exporters[n];\n}\n\n/**\n * Resolve exporter by name\n *\n * @param {object|string} opt\n * @returns {Exporters.Base}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Exporters.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet ExporterClass = getByName(opt);\n\t\tif (ExporterClass)\n\t\t\treturn new ExporterClass();\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid tracing exporter type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet ExporterClass = getByName(opt.type);\n\t\tif (ExporterClass)\n\t\t\treturn new ExporterClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid tracing exporter type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\tthrow new BrokerOptionsError(`Invalid tracing exporter type '${opt}'.`, { type: opt });\n}\n\nfunction register(name, value) {\n\tExporters[name] = value;\n}\n\nmodule.exports = Object.assign(Exporters, { resolve, register });\n\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\n/**\n * Rate Limiter class for Tracing.\n *\n * Inspired by\n * \thttps://github.com/jaegertracing/jaeger-client-node/blob/master/src/rate_limiter.js\n *\n * @class RateLimiter\n */\nclass RateLimiter {\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\ttracesPerSecond: 1\n\t\t});\n\n\t\tthis.lastTime = Date.now();\n\t\tthis.balance = 0;\n\t\tthis.maxBalance = this.opts.tracesPerSecond < 1 ? 1 : this.opts.tracesPerSecond;\n\t}\n\n\tcheck(cost = 1) {\n\t\tconst now = Date.now();\n\t\tconst elapsedTime = (now - this.lastTime) / 1000;\n\t\tthis.lastTime = now;\n\n\t\tthis.balance += elapsedTime * this.opts.tracesPerSecond;\n\t\tif (this.balance > this.maxBalance)\n\t\t\tthis.balance = this.maxBalance;\n\n\t\tif (this.balance >= cost) {\n\t\t\tthis.balance -= cost;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nmodule.exports = RateLimiter;\n","const loadTime = getNanoSeconds();\nconst nodeLoadTime = loadTime - process.uptime() * 1e9;\n\nfunction getNanoSeconds() {\n\tconst time = process.hrtime();\n\treturn time[0] * 1e9 + time[1];\n}\n\nfunction now() {\n\treturn (getNanoSeconds() - nodeLoadTime) / 1e6;\n}\n\nconst loadNs = now();\nconst loadMs = Date.now();\n\nmodule.exports = () => loadMs + now() - loadNs;\n","\"use strict\";\n\nconst now = require(\"./now\");\n\nfunction defProp(instance, propName, value, readOnly = false) {\n\tObject.defineProperty(instance, propName, {\n\t\tvalue,\n\t\twritable: !!readOnly,\n\t\tenumerable: false\n\t});\n}\n\n/**\n * Trace Span class\n *\n * @class Span\n */\nclass Span {\n\n\t/**\n\t * Creates an instance of Span.\n\t * @param {Tracer} tracer\n\t * @param {String} name\n\t * @param {Object?} opts\n\t *\n\t * @memberof Span\n\t */\n\tconstructor(tracer, name, opts) {\n\t\tdefProp(this, \"tracer\", tracer, true);\n\t\tdefProp(this, \"logger\", this.tracer.logger, true);\n\t\tdefProp(this, \"opts\", opts || {});\n\t\tdefProp(this, \"meta\", {});\n\n\t\tthis.name = name;\n\t\tthis.type = this.opts.type || \"custom\";\n\t\tthis.id = this.opts.id || this.tracer.broker.generateUid();\n\t\tthis.traceID = this.opts.traceID || this.id;\n\t\tthis.parentID = this.opts.parentID;\n\n\t\tif (this.opts.service) {\n\t\t\tif (typeof this.opts.service == \"string\") {\n\t\t\t\tthis.service = {\n\t\t\t\t\tname: this.opts.service,\n\t\t\t\t\tfullName: this.opts.service,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tthis.service = {\n\t\t\t\t\tname: this.opts.service.name,\n\t\t\t\t\tversion: this.opts.service.version,\n\t\t\t\t\tfullName: this.opts.service.fullName,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthis.priority = this.opts.priority != null ? this.opts.priority : 5;\n\t\tthis.sampled = this.opts.sampled != null ? this.opts.sampled : this.tracer.shouldSample(this);\n\n\t\tthis.startTime = null;\n\t\tthis.finishTime = null;\n\t\tthis.duration = null;\n\n\t\tthis.error = null;\n\n\t\tthis.logs = [];\n\t\tthis.tags = {};\n\n\t\tif (this.opts.defaultTags)\n\t\t\tthis.addTags(this.opts.defaultTags);\n\n\t\tif (this.opts.tags)\n\t\t\tthis.addTags(this.opts.tags);\n\t}\n\n\t/**\n\t * Start span.\n\t *\n\t * @param {Number?} time\n\t * @returns {Span}\n\t * @memberof Span\n\t */\n\tstart(time) {\n\t\tthis.logger.debug(`[${this.id}] Span '${this.name}' is started.`);\n\n\t\tthis.startTime = time || now();\n\t\t// console.log(`\"${this.name}\" start time: ${this.startTime}`);\n\n\t\tthis.tracer.spanStarted(this);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add tags. It will be merged with previous tags.\n\t *\n\t * @param {Object} obj\n\t * @returns {Span}\n\t *\n\t * @memberof Span\n\t */\n\taddTags(obj) {\n\t\tObject.assign(this.tags, obj);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Log a trace event.\n\t *\n\t * @param {String} name\n\t * @param {Object?} fields\n\t * @param {Number?} time\n\t * @returns {Span}\n\t * @memberof Span\n\t */\n\tlog(name, fields, time) {\n\t\ttime = time || now();\n\n\t\tthis.logs.push({\n\t\t\tname,\n\t\t\tfields: fields || {},\n\t\t\ttime,\n\t\t\telapsed: time - this.startTime\n\t\t});\n\n\t\tthis.logger.debug(`[${this.id}] Span '${this.name}' has a new log event: ${name}.`);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set error span.\n\t *\n\t * @param {Error} err\n\t * @memberof Span\n\t */\n\tsetError(err) {\n\t\tthis.error = err != null ? err : true;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Finish span.\n\t *\n\t * @param {Number?} time\n\t * @returns {Span}\n\t * @memberof Span\n\t */\n\tfinish(time) {\n\t\tthis.finishTime = time ? time : now();\n\t\tthis.duration = this.finishTime - this.startTime;\n\n\t\t// console.log(`\"${this.name}\" stop time: ${this.finishTime}  Duration: ${this.duration}`);\n\n\t\tthis.logger.debug(`[${this.id}] Span '${this.name}' is finished. Duration: ${Number(this.duration).toFixed(3)} ms`, this.tags);\n\n\t\tthis.tracer.spanFinished(this);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Check the span is active or finished.\n\t *\n\t * @returns {boolean}\n\t */\n\tisActive() {\n\t\treturn this.finishTime == null;\n\t}\n\n\t/**\n\t * Start a child span.\n\t *\n\t * @param {String} name\n\t * @param {Object?} opts\n\t * @returns {Span} Child span\n\t * @memberof Span\n\t */\n\tstartSpan(name, opts) {\n\t\tconst r = {\n\t\t\ttraceID: this.traceID,\n\t\t\tparentID: this.id,\n\t\t\tsampled: this.sampled,\n\t\t\tservice: this.service\n\t\t};\n\t\treturn this.tracer.startSpan(name, opts ? Object.assign(r, opts) : r);\n\t}\n\n}\n\nmodule.exports = Span;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst Exporters = require(\"./exporters\");\n//const AsyncStorage = require(\"../async-storage\");\nconst RateLimiter = require(\"./rate-limiter\");\nconst Span = require(\"./span\");\nconst { isFunction } = require(\"../utils\");\n\n/**\n * Moleculer Tracer class\n */\nclass Tracer {\n\n\t/**\n\t * Creates an instance of Tracer.\n\t *\n\t * @param {ServiceBroker} broker\n\t * @param {Object} opts\n\t * @memberof Tracer\n\t */\n\tconstructor(broker, opts) {\n\t\tthis.broker = broker;\n\t\tthis.logger = broker.getLogger(\"tracer\");\n\n\t\tif (opts === true || opts === false)\n\t\t\topts = { enabled: opts };\n\n\t\tthis.opts = _.defaultsDeep({}, opts, {\n\t\t\tenabled: true,\n\n\t\t\texporter: null,\n\n\t\t\tsampling: {\n\t\t\t\t// Constants sampling\n\t\t\t\trate: 1.0, // 0.0 - Never, 1.0 > x > 0.0 - Fix, 1.0 - Always\n\n\t\t\t\t// Ratelimiting sampling https://opencensus.io/tracing/sampling/ratelimited/\n\t\t\t\ttracesPerSecond: null, // 1: 1 trace / sec, 5: 5 traces / sec, 0.1: 1 trace / 10 secs\n\n\t\t\t\tminPriority: null\n\t\t\t},\n\n\t\t\tactions: true,\n\t\t\tevents: false,\n\n\t\t\terrorFields: [\"name\", \"message\", \"code\", \"type\", \"data\"],\n\t\t\tstackTrace: false,\n\n\t\t\tdefaultTags: null,\n\n\t\t\ttags: {\n\t\t\t\taction: null,\n\t\t\t\tevent: null,\n\t\t\t}\n\t\t});\n\n\t\tif (this.opts.stackTrace && this.opts.errorFields.indexOf(\"stack\") === -1)\n\t\t\tthis.opts.errorFields.push(\"stack\");\n\n\t\tthis.sampleCounter = 0;\n\n\t\tif (this.opts.sampling.tracesPerSecond != null && this.opts.sampling.tracesPerSecond > 0) {\n\t\t\tthis.rateLimiter = new RateLimiter({\n\t\t\t\ttracesPerSecond: this.opts.sampling.tracesPerSecond\n\t\t\t});\n\t\t}\n\n\t\t//this.scope = new AsyncStorage(this.broker);\n\t\t//this.scope.enable();\n\t\t//this._scopeEnabled = true;\n\n\t\tif (this.opts.enabled)\n\t\t\tthis.logger.info(\"Tracing: Enabled\");\n\t}\n\n\t/**\n\t * Initialize Tracer.\n\t */\n\tinit() {\n\t\tif (this.opts.enabled) {\n\n\t\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, this) : this.opts.defaultTags;\n\n\t\t\t// Create Exporter instances\n\t\t\tif (this.opts.exporter) {\n\t\t\t\tconst exporters = Array.isArray(this.opts.exporter) ? this.opts.exporter : [this.opts.exporter];\n\n\t\t\t\tthis.exporter = _.compact(exporters).map(r => {\n\t\t\t\t\tconst exporter = Exporters.resolve(r);\n\t\t\t\t\texporter.init(this);\n\t\t\t\t\treturn exporter;\n\t\t\t\t});\n\n\t\t\t\tconst exporterNames = this.exporter.map(exporter => this.broker.getConstructorName(exporter));\n\t\t\t\tthis.logger.info(`Tracing exporter${exporterNames.length > 1 ? \"s\": \"\"}: ${exporterNames.join(\", \")}`);\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/**\n\t * Stop Tracer.\n\t */\n\tstop() {\n\t\tif (this.exporter) {\n\t\t\treturn this.broker.Promise.all(this.exporter.map(r => r.stop()));\n\t\t}\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Check tracing is enabled\n\t *\n\t * @returns {boolean}\n\t * @memberof MetricRegistry\n\t */\n\tisEnabled() {\n\t\treturn this.opts.enabled;\n\t}\n\n\t/**\n\t * Disable trace hooks and clear the store - noop if scope is already stopped\n\t *\n\t * @memberof Tracer\n\t *\n\tstopAndClearScope() {\n\t\tif (this._scopeEnabled) {\n\t\t\tthis.scope.stop();\n\t\t\tthis._scopeEnabled = false;\n\t\t}\n\t}*/\n\n\t/**\n\t * Renable the trace hooks - noop if scope is already enabled\n\t *\n\t * @memberof Tracer\n\t *\n\trestartScope() {\n\t\tif (!this._scopeEnabled) {\n\t\t\tthis.scope.enable();\n\t\t\tthis._scopeEnabled = true;\n\t\t}\n\t}*/\n\n\t/**\n\t * Decide that span should be sampled.\n\t *\n\t * @param {Span} span\n\t * @returns {Boolean}\n\t * @memberof Tracer\n\t */\n\tshouldSample(span) {\n\t\tif (this.opts.sampling.minPriority != null) {\n\t\t\tif (span.priority < this.opts.sampling.minPriority)\n\t\t\t\treturn false;\n\t\t}\n\n\t\tif (this.rateLimiter) {\n\t\t\treturn this.rateLimiter.check();\n\t\t}\n\n\t\tif (this.opts.sampling.rate == 0)\n\t\t\treturn false;\n\n\t\tif (this.opts.sampling.rate == 1)\n\t\t\treturn true;\n\n\t\tif (++this.sampleCounter * this.opts.sampling.rate >= 1.0) {\n\t\t\tthis.sampleCounter = 0;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Start a new Span.\n\t *\n\t * @param {String} name\n\t * @param {Object?} opts\n\t * @returns {Span}\n\t *\n\t * @memberof Tracer\n\t */\n\tstartSpan(name, opts = {}) {\n\t\tlet parentOpts = {};\n\t\tif (opts.parentSpan) {\n\t\t\tparentOpts.traceID = opts.parentSpan.traceID;\n\t\t\tparentOpts.parentID = opts.parentSpan.id;\n\t\t\tparentOpts.sampled = opts.parentSpan.sampled;\n\t\t}\n\n\t\tconst span = new Span(this, name, Object.assign({\n\t\t\ttype: \"custom\",\n\t\t\tdefaultTags: this.defaultTags\n\t\t}, parentOpts, opts, { parentSpan: undefined }));\n\n\t\tspan.start();\n\n\t\treturn span;\n\t}\n\n\t/**\n\t * Invoke Exporter method.\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @memberof Tracer\n\t */\n\tinvokeExporter(method, args) {\n\t\tif (this.exporter) {\n\t\t\tthis.exporter.forEach(exporter => exporter[method].apply(exporter, args));\n\t\t}\n\t}\n\n\t/**\n\t * Set the active span\n\t *\n\t * @param {Span} span\n\t * @memberof Tracer\n\t *\n\tsetCurrentSpan(span) {\n\t\tconst state = this.scope.getSessionData() || {\n\t\t\tspans: []\n\t\t};\n\n\t\tstate.spans.push(span);\n\t\tthis.scope.setSessionData(state);\n\n\t\tspan.meta.state = state;\n\t}*/\n\n\t/**\n\t * Remove the active span (because async block destroyed)\n\t *\n\t * @param {Span} span\n\t * @memberof Tracer\n\t *\n\tremoveCurrentSpan(span) {\n\t\tconst state = span.meta.state || this.scope.getSessionData();\n\t\tif (state && state.spans.length > 0) {\n\t\t\tconst idx = state.spans.indexOf(span);\n\t\t\tif (idx >= 0)\n\t\t\t\tstate.spans.splice(idx, 1);\n\t\t}\n\t}*/\n\n\t/**\n\t * Get the current active span\n\t *\n\t * @returns {Span}\n\t * @memberof Tracer\n\t *\n\tgetCurrentSpan() {\n\t\tconst state = this.scope.getSessionData();\n\t\treturn state ? state.spans[state.spans.length - 1] : null;\n\t}*/\n\n\t/**\n\t * Get the current trace ID\n\t *\n\t * @returns\n\t * @memberof Tracer\n\t */\n\tgetCurrentTraceID() {\n\t\treturn null;\n\t\t//const span = this.getCurrentSpan();\n\t\t//return span ? span.traceID : null;\n\t}\n\n\t/**\n\t * Get the active span ID (for the next span as parent ID)\n\t *\n\t * @returns\n\t * @memberof Tracer\n\t */\n\tgetActiveSpanID() {\n\t\treturn null;\n\t\t//const span = this.getCurrentSpan();\n\t\t//return span ? span.id : null;\n\t}\n\n\t/**\n\t * Called when a span started. Call exporters.\n\t *\n\t * @param {Span} span\n\t * @memberof Tracer\n\t */\n\tspanStarted(span) {\n\t\t//this.setCurrentSpan(span);\n\n\t\tif (span.sampled)\n\t\t\tthis.invokeExporter(\"spanStarted\", [span]);\n\t}\n\n\t/**\n\t * Called when a span finished. Call exporters.\n\t *\n\t * @param {Span} span\n\t * @memberof Tracer\n\t */\n\tspanFinished(span) {\n\t\t//this.removeCurrentSpan(span);\n\n\t\tif (span.sampled)\n\t\t\tthis.invokeExporter(\"spanFinished\", [span]);\n\t}\n}\n\nmodule.exports = Tracer;\n","/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = {\n\tTracer: require(\"./tracer\"),\n\tSpan: require(\"./span\"),\n\tExporters: require(\"./exporters\"),\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t\t\t\t= require(\"lodash\");\nconst functionArguments \t\t= require(\"fn-args\");\nconst { ServiceSchemaError, MoleculerError } \t= require(\"./errors\");\nconst { isObject, isFunction, flatten }\t= require(\"./utils\");\n\n/**\n * Wrap a handler Function to an object with a `handler` property.\n *\n * @param {Function|Object} o\n * @returns {Object}\n */\nfunction wrapToHander(o) {\n\treturn isFunction(o) ? { handler: o } : o;\n}\n\n/**\n * Wrap any value to an array.\n * @param {any} o\n * @returns {Array}\n */\nfunction wrapToArray(o) {\n\treturn Array.isArray(o) ? o : [o];\n}\n\nfunction isNewSignature(args) {\n\treturn args.length > 0 && [\"ctx\", \"context\"].indexOf(args[0].toLowerCase()) !== -1;\n}\n\n\n/**\n * Service class\n *\n * @class Service\n */\nclass Service {\n\n\t/**\n\t * Creates an instance of Service by schema.\n\t *\n\t * @param {ServiceBroker} \tbroker\tbroker of service\n\t * @param {Object} \t\t\tschema\tschema of service\n\t *\n\t * @memberof Service\n\t */\n\tconstructor(broker, schema) {\n\t\tif (!isObject(broker))\n\t\t\tthrow new ServiceSchemaError(\"Must set a ServiceBroker instance!\");\n\n\t\tthis.broker = broker;\n\n\t\tif (broker)\n\t\t\tthis.Promise = broker.Promise;\n\n\t\tif (schema)\n\t\t\tthis.parseServiceSchema(schema);\n\t}\n\n\t/**\n\t * Parse Service schema & register as local service\n\t *\n\t * @param {Object} schema of Service\n\t */\n\tparseServiceSchema(schema) {\n\t\tif (!isObject(schema))\n\t\t\tthrow new ServiceSchemaError(\"The service schema can't be null. Maybe is it not a service schema?\");\n\n\t\tthis.originalSchema = _.cloneDeep(schema);\n\n\t\tif (schema.mixins) {\n\t\t\tschema = Service.applyMixins(schema);\n\t\t}\n\n\t\tif (isFunction(schema.merged)) {\n\t\t\tschema.merged.call(this, schema);\n\t\t} else if (Array.isArray(schema.merged)) {\n\t\t\tschema.merged.forEach(fn => fn.call(this, schema));\n\t\t}\n\n\t\tthis.broker.callMiddlewareHookSync(\"serviceCreating\", [this, schema]);\n\n\t\tif (!schema.name) {\n\t\t\t/* eslint-disable-next-line */\n\t\t\tconsole.error(\"Service name can't be empty! Maybe it is not a valid Service schema. Maybe is it not a service schema?\", { schema });\n\t\t\tthrow new ServiceSchemaError(\"Service name can't be empty! Maybe it is not a valid Service schema. Maybe is it not a service schema?\", { schema });\n\t\t}\n\n\t\tthis.name = schema.name;\n\t\tthis.version = schema.version;\n\t\tthis.settings = schema.settings || {};\n\t\tthis.metadata = schema.metadata || {};\n\t\tthis.schema = schema;\n\n\t\tthis.fullName = Service.getVersionedFullName(this.name, this.settings.$noVersionPrefix !== true ? this.version : undefined);\n\n\t\tthis.logger = this.broker.getLogger(this.fullName, {\n\t\t\tsvc: this.name,\n\t\t\tver: this.version\n\t\t});\n\n\t\tthis.actions = {}; // external access to actions\n\t\tthis.events = {}; // external access to event handlers.\n\n\t\t// Service item for Registry\n\t\tconst serviceSpecification = {\n\t\t\tname: this.name,\n\t\t\tversion: this.version,\n\t\t\tfullName: this.fullName,\n\t\t\tsettings: this._getPublicSettings(this.settings),\n\t\t\tmetadata: this.metadata,\n\t\t\tactions: {},\n\t\t\tevents: {}\n\t\t};\n\n\t\t// Register methods\n\t\tif (isObject(schema.methods)) {\n\n\t\t\t_.forIn(schema.methods, (method, name) => {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif ([\"name\", \"version\", \"settings\", \"metadata\", \"dependencies\", \"schema\", \"broker\", \"actions\", \"logger\", \"created\", \"started\", \"stopped\", \"_start\", \"_stop\", \"_init\"].indexOf(name) != -1) {\n\t\t\t\t\tthrow new ServiceSchemaError(`Invalid method name '${name}' in '${this.name}' service!`);\n\t\t\t\t}\n\n\t\t\t\tthis._createMethod(method, name);\n\t\t\t});\n\t\t}\n\n\t\t// Register actions\n\t\tif (isObject(schema.actions)) {\n\t\t\t_.forIn(schema.actions, (action, name) => {\n\t\t\t\tif (action === false)\n\t\t\t\t\treturn;\n\n\t\t\t\tlet innerAction = this._createAction(action, name);\n\n\t\t\t\tserviceSpecification.actions[innerAction.name] = innerAction;\n\n\t\t\t\tconst wrappedHandler = this.broker.middlewares.wrapHandler(\"localAction\", innerAction.handler, innerAction);\n\n\t\t\t\t// Expose to be callable as `this.actions.find({ ...params })`\n\t\t\t\tconst ep = this.broker.registry.createPrivateActionEndpoint(innerAction);\n\t\t\t\tthis.actions[name] = (params, opts) => {\n\t\t\t\t\tlet ctx;\n\t\t\t\t\tif (opts && opts.ctx) {\n\t\t\t\t\t\t// Reused context (in case of retry)\n\t\t\t\t\t\tctx = opts.ctx;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx = this.broker.ContextFactory.create(this.broker, ep, params, opts || {});\n\t\t\t\t\t}\n\t\t\t\t\treturn wrappedHandler(ctx);\n\t\t\t\t};\n\n\t\t\t});\n\t\t}\n\n\t\t// Event subscriptions\n\t\tif (isObject(schema.events)) {\n\t\t\t_.forIn(schema.events, (event, name) => {\n\t\t\t\tconst innerEvent = this._createEvent(event, name);\n\t\t\t\tserviceSpecification.events[innerEvent.name] = innerEvent;\n\n\t\t\t\t// Expose to be callable as `this.events[''](params, opts);\n\t\t\t\tthis.events[innerEvent.name] = (params, opts) => {\n\t\t\t\t\tlet ctx;\n\t\t\t\t\tif (opts && opts.ctx) {\n\t\t\t\t\t\t// Reused context (in case of retry)\n\t\t\t\t\t\tctx = opts.ctx;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst ep = {\n\t\t\t\t\t\t\tid: this.broker.nodeID,\n\t\t\t\t\t\t\tevent: innerEvent\n\t\t\t\t\t\t};\n\t\t\t\t\t\tctx = this.broker.ContextFactory.create(this.broker, ep, params, opts || {});\n\t\t\t\t\t}\n\t\t\t\t\tctx.eventName = name;\n\t\t\t\t\tctx.eventType = \"emit\";\n\t\t\t\t\tctx.eventGroups = [innerEvent.group || this.name];\n\n\t\t\t\t\treturn innerEvent.handler(ctx);\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tthis._serviceSpecification = serviceSpecification;\n\n\t\t// Initialize\n\t\tthis._init();\n\t}\n\n\t/**\n\t * Return a service settings without protected properties.\n\t *\n\t * @param {Object?} settings\n\t */\n\t_getPublicSettings(settings) {\n\t\tif (settings && Array.isArray(settings.$secureSettings)) {\n\t\t\treturn _.omit(settings, [].concat(settings.$secureSettings, [\"$secureSettings\"]));\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\t/**\n\t * Initialize service. It called `created` handler in schema\n\t *\n\t * @private\n\t * @memberof Service\n\t */\n\t_init() {\n\t\tthis.logger.debug(`Service '${this.fullName}' is creating...`);\n\t\tif (isFunction(this.schema.created)) {\n\t\t\tthis.schema.created.call(this);\n\t\t} else if (Array.isArray(this.schema.created)) {\n\t\t\tthis.schema.created.forEach(fn => fn.call(this));\n\t\t}\n\n\t\tthis.broker.addLocalService(this);\n\n\t\tthis.broker.callMiddlewareHookSync(\"serviceCreated\", [this]);\n\n\t\tthis.logger.debug(`Service '${this.fullName}' created.`);\n\t}\n\n\t/**\n\t * Start service\n\t *\n\t * @returns {Promise}\n\t * @private\n\t * @memberof Service\n\t */\n\t_start() {\n\t\tthis.logger.debug(`Service '${this.fullName}' is starting...`);\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\treturn this.broker.callMiddlewareHook(\"serviceStarting\", [this]);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Wait for dependent services\n\t\t\t\tif (this.schema.dependencies)\n\t\t\t\t\treturn this.waitForServices(this.schema.dependencies, this.settings.$dependencyTimeout || 0, this.settings.$dependencyInterval || this.broker.options.dependencyInterval);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (isFunction(this.schema.started))\n\t\t\t\t\treturn this.Promise.method(this.schema.started).call(this);\n\n\t\t\t\tif (Array.isArray(this.schema.started)) {\n\t\t\t\t\treturn this.schema.started\n\t\t\t\t\t\t.map(fn => this.Promise.method(fn.bind(this)))\n\t\t\t\t\t\t.reduce((p, fn) => p.then(() => fn()), this.Promise.resolve());\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Register service\n\t\t\t\tthis.broker.registerLocalService(this._serviceSpecification);\n\t\t\t\treturn null;\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.broker.callMiddlewareHook(\"serviceStarted\", [this]);\n\t\t\t})\n\t\t\t.then(() => this.logger.info(`Service '${this.fullName}' started.`));\n\t}\n\n\t/**\n\t * Stop service\n\t *\n\t * @returns {Promise}\n\t * @private\n\t * @memberof Service\n\t */\n\t_stop() {\n\t\tthis.logger.debug(`Service '${this.fullName}' is stopping...`);\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\treturn this.broker.callMiddlewareHook(\"serviceStopping\", [this], { reverse: true });\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (isFunction(this.schema.stopped))\n\t\t\t\t\treturn this.Promise.method(this.schema.stopped).call(this);\n\n\t\t\t\tif (Array.isArray(this.schema.stopped)) {\n\t\t\t\t\tconst arr = Array.from(this.schema.stopped).reverse();\n\t\t\t\t\treturn arr\n\t\t\t\t\t\t.map(fn => this.Promise.method(fn.bind(this)))\n\t\t\t\t\t\t.reduce((p, fn) => p.then(() => fn()), this.Promise.resolve());\n\t\t\t\t}\n\n\t\t\t\treturn this.Promise.resolve();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.broker.callMiddlewareHook(\"serviceStopped\", [this], { reverse: true });\n\t\t\t})\n\t\t\t.then(() => this.logger.info(`Service '${this.fullName}' stopped.`));\n\t}\n\n\t/**\n\t * Create an external action handler for broker (internal command!)\n\t *\n\t * @param {Object|Function} actionDef\n\t * @param {String} name\n\t * @returns {Object}\n\t *\n\t * @private\n\t * @memberof Service\n\t */\n\t_createAction(actionDef, name) {\n\t\tlet action;\n\t\tif (isFunction(actionDef)) {\n\t\t\t// Wrap to an object\n\t\t\taction = {\n\t\t\t\thandler: actionDef\n\t\t\t};\n\t\t} else if (isObject(actionDef)) {\n\t\t\taction = _.cloneDeep(actionDef);\n\t\t} else {\n\t\t\tthrow new ServiceSchemaError(`Invalid action definition in '${name}' action in '${this.fullName}' service!`);\n\t\t}\n\n\t\tlet handler = action.handler;\n\t\tif (!isFunction(handler)) {\n\t\t\tthrow new ServiceSchemaError(`Missing action handler on '${name}' action in '${this.fullName}' service!`);\n\t\t}\n\n\t\taction.rawName = action.name || name;\n\t\tif (this.settings.$noServiceNamePrefix !== true)\n\t\t\taction.name = this.fullName + \".\" + action.rawName;\n\t\telse\n\t\t\taction.name = action.rawName;\n\n\t\tif (action.cache === undefined && this.settings.$cache !== undefined) {\n\t\t\taction.cache = this.settings.$cache;\n\t\t}\n\n\t\taction.service = this;\n\t\taction.handler = this.Promise.method(handler.bind(this));\n\n\t\treturn action;\n\t}\n\n\t/**\n\t * Create an internal service method.\n\t *\n\t * @param {Object|Function} methodDef\n\t * @param {String} name\n\t * @returns {Object}\n\t */\n\t_createMethod(methodDef, name) {\n\t\tlet method;\n\t\tif (isFunction(methodDef)) {\n\t\t\t// Wrap to an object\n\t\t\tmethod = {\n\t\t\t\thandler: methodDef\n\t\t\t};\n\t\t} else if (isObject(methodDef)) {\n\t\t\tmethod = methodDef;\n\t\t} else {\n\t\t\tthrow new ServiceSchemaError(`Invalid method definition in '${name}' method in '${this.fullName}' service!`);\n\t\t}\n\n\t\tif (!isFunction(method.handler)) {\n\t\t\tthrow new ServiceSchemaError(`Missing method handler on '${name}' method in '${this.fullName}' service!`);\n\t\t}\n\n\t\tmethod.name = name;\n\t\tmethod.service = this;\n\t\tmethod.handler = method.handler.bind(this);\n\n\t\tthis[name] = this.broker.middlewares.wrapHandler(\"localMethod\", method.handler, method);\n\n\t\treturn method;\n\t}\n\n\t/**\n\t * Create an event subscription for broker\n\t *\n\t * @param {Object|Function} eventDef\n\t * @param {String} name\n\t * @returns {Object}\n\t *\n\t * @private\n\t * @memberof Service\n\t */\n\t_createEvent(eventDef, name) {\n\t\tlet event;\n\t\tif (isFunction(eventDef) || Array.isArray(eventDef)) {\n\t\t\tevent = {\n\t\t\t\thandler: eventDef\n\t\t\t};\n\t\t} else if (isObject(eventDef)) {\n\t\t\tevent = _.cloneDeep(eventDef);\n\t\t} else {\n\t\t\tthrow new ServiceSchemaError(`Invalid event definition in '${name}' event in '${this.fullName}' service!`);\n\t\t}\n\n\t\tif (!isFunction(event.handler) && !Array.isArray(event.handler)) {\n\t\t\tthrow new ServiceSchemaError(`Missing event handler on '${name}' event in '${this.fullName}' service!`);\n\t\t}\n\n\t\t// Detect new or legacy parameter list of event handler\n\t\t// Legacy: handler(payload, sender, eventName)\n\t\t// New: handler(ctx)\n\t\tlet handler;\n\t\tif (isFunction(event.handler)) {\n\t\t\tconst args = functionArguments(event.handler);\n\t\t\thandler = this.Promise.method(event.handler);\n\t\t\thandler.__newSignature = event.context === true || isNewSignature(args);\n\t\t} else if (Array.isArray(event.handler)) {\n\t\t\thandler = event.handler.map(h => {\n\t\t\t\tconst args = functionArguments(h);\n\t\t\t\th = this.Promise.method(h);\n\t\t\t\th.__newSignature = event.context === true || isNewSignature(args);\n\t\t\t\treturn h;\n\t\t\t});\n\t\t}\n\n\t\tif (!event.name)\n\t\t\tevent.name = name;\n\n\t\tevent.service = this;\n\t\tconst self = this;\n\t\tif (isFunction(handler)) {\n\t\t\t// Call single handler\n\t\t\tevent.handler = function(ctx) {\n\t\t\t\treturn handler.apply(self, handler.__newSignature ? [ctx] : [ctx.params, ctx.nodeID, ctx.eventName, ctx]);\n\t\t\t};\n\t\t} else if (Array.isArray(handler)) {\n\t\t\t// Call multiple handler\n\t\t\tevent.handler = function(ctx) {\n\t\t\t\treturn self.Promise.all(handler.map(fn => fn.apply(self, fn.__newSignature ? [ctx] : [ctx.params, ctx.nodeID, ctx.eventName, ctx])));\n\t\t\t};\n\t\t}\n\n\t\treturn event;\n\t}\n\n\t/**\n\t * Call a local event handler. Useful for unit tests.\n\t *\n\t * @param {String} eventName\n\t * @param {any?} params\n\t * @param {Object?} opts\n\t */\n\temitLocalEventHandler(eventName, params, opts) {\n\t\tif (!this.events[eventName])\n\t\t\treturn Promise.reject(new MoleculerError(`No '${eventName}' registered local event handler`, 500, \"NOT_FOUND_EVENT\", { eventName }));\n\n\t\treturn this.events[eventName](params, opts);\n\t}\n\n\t/**\n\t * Getter of current Context.\n\t * @returns {Context?}\n\t *\n\t * @memberof Service\n\t *\n\tget currentContext() {\n\t\treturn this.broker.getCurrentContext();\n\t}*/\n\n\t/**\n\t * Setter of current Context\n\t *\n\t * @memberof Service\n\t *\n\tset currentContext(ctx) {\n\t\tthis.broker.setCurrentContext(ctx);\n\t}*/\n\n\t/**\n\t * Wait for other services\n\t *\n\t * @param {String|Array<String>} serviceNames\n\t * @param {Number} timeout Timeout in milliseconds\n\t * @param {Number} interval Check interval in milliseconds\n\t * @returns {Promise}\n\t * @memberof Service\n\t */\n\twaitForServices(serviceNames, timeout, interval) {\n\t\treturn this.broker.waitForServices(serviceNames, timeout, interval, this.logger);\n\t}\n\n\t/**\n\t * Apply `mixins` list in schema. Merge the schema with mixins schemas. Returns with the mixed schema\n\t *\n\t * @static\n\t * @param {Schema} schema\n\t * @returns {Schema}\n\t *\n\t * @memberof Service\n\t */\n\tstatic applyMixins(schema) {\n\t\tif (schema.mixins) {\n\t\t\tconst mixins = Array.isArray(schema.mixins) ? schema.mixins : [schema.mixins];\n\t\t\tif (mixins.length > 0) {\n\t\t\t\tconst mixedSchema = Array.from(mixins).reverse().reduce((s, mixin) => {\n\t\t\t\t\tif (mixin.mixins)\n\t\t\t\t\t\tmixin = Service.applyMixins(mixin);\n\n\t\t\t\t\treturn s ? Service.mergeSchemas(s, mixin) : mixin;\n\t\t\t\t}, null);\n\n\t\t\t\treturn Service.mergeSchemas(mixedSchema, schema);\n\t\t\t}\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\treturn schema;\n\t}\n\n\t/**\n\t * Merge two Service schema\n\t *\n\t * @static\n\t * @param {Object} mixinSchema\t\tMixin schema\n\t * @param {Object} svcSchema \t\tService schema\n\t * @returns {Object} Mixed schema\n\t *\n\t * @memberof Service\n\t */\n\tstatic mergeSchemas(mixinSchema, svcSchema) {\n\t\tconst res = _.cloneDeep(mixinSchema);\n\t\tconst mods = _.cloneDeep(svcSchema);\n\n\t\tObject.keys(mods).forEach(key => {\n\t\t\tif ([\"name\", \"version\"].indexOf(key) !== -1 && mods[key] !== undefined) {\n\t\t\t\t// Simple overwrite\n\t\t\t\tres[key] = mods[key];\n\t\t\t} else if (key == \"settings\") {\n\t\t\t\t// Merge with defaultsDeep\n\t\t\t\tres[key] = Service.mergeSchemaSettings(mods[key], res[key]);\n\n\t\t\t} else if (key == \"metadata\") {\n\t\t\t\t// Merge with defaultsDeep\n\t\t\t\tres[key] = Service.mergeSchemaMetadata(mods[key], res[key]);\n\n\t\t\t} else if (key == \"hooks\") {\n\t\t\t\t// Merge & concat\n\t\t\t\tres[key] = Service.mergeSchemaHooks(mods[key], res[key] || {});\n\n\t\t\t} else if (key == \"actions\") {\n\t\t\t\t// Merge with defaultsDeep\n\t\t\t\tres[key] = Service.mergeSchemaActions(mods[key], res[key] || {});\n\n\t\t\t} else if (key == \"methods\") {\n\t\t\t\t// Overwrite\n\t\t\t\tres[key] = Service.mergeSchemaMethods(mods[key], res[key]);\n\n\t\t\t} else if (key == \"events\") {\n\t\t\t\t// Merge & concat by groups\n\t\t\t\tres[key] = Service.mergeSchemaEvents(mods[key], res[key] || {});\n\n\t\t\t} else if ([\"merged\", \"created\", \"started\", \"stopped\"].indexOf(key) !== -1) {\n\t\t\t\t// Concat lifecycle event handlers\n\t\t\t\tres[key] = Service.mergeSchemaLifecycleHandlers(mods[key], res[key]);\n\n\t\t\t} else if (key == \"mixins\") {\n\t\t\t\t// Concat mixins\n\t\t\t\tres[key] = Service.mergeSchemaUniqArray(mods[key], res[key]);\n\n\t\t\t} else if (key == \"dependencies\") {\n\t\t\t\t// Concat mixins\n\t\t\t\tres[key] = Service.mergeSchemaUniqArray(mods[key], res[key]);\n\n\t\t\t} else {\n\t\t\t\tconst customFnName = \"mergeSchema\" + key.replace(/./, key[0].toUpperCase()); // capitalize first letter\n\t\t\t\tif (isFunction(Service[customFnName])) {\n\t\t\t\t\tres[key] = Service[customFnName](mods[key], res[key]);\n\t\t\t\t} else {\n\t\t\t\t\tres[key] = Service.mergeSchemaUnknown(mods[key], res[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Merge `settings` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaSettings(src, target) {\n\t\tif ((target && target.$secureSettings) || (src && src.$secureSettings)) {\n\t\t\tconst srcSS = src && src.$secureSettings ? src.$secureSettings : [];\n\t\t\tconst targetSS = target && target.$secureSettings ? target.$secureSettings : [];\n\t\t\tif (!target) target = {};\n\n\t\t\ttarget.$secureSettings = _.uniq([].concat(srcSS, targetSS));\n\t\t}\n\n\t\treturn _.defaultsDeep(src, target);\n\t}\n\n\t/**\n\t * Merge `metadata` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaMetadata(src, target) {\n\t\treturn _.defaultsDeep(src, target);\n\t}\n\n\t/**\n\t * Merge `mixins` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaUniqArray(src, target) {\n\t\treturn _.uniqWith(_.compact(flatten([src, target])), _.isEqual);\n\t}\n\n\t/**\n\t * Merge `dependencies` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaDependencies(src, target) {\n\t\treturn Service.mergeSchemaUniqArray(src, target);\n\t}\n\n\t/**\n\t * Merge `hooks` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaHooks(src, target) {\n\t\tObject.keys(src).forEach(k => {\n\t\t\tif (target[k] == null)\n\t\t\t\ttarget[k] = {};\n\n\t\t\tObject.keys(src[k]).forEach(k2 => {\n\t\t\t\tconst modHook = wrapToArray(src[k][k2]);\n\t\t\t\tconst resHook = wrapToArray(target[k][k2]);\n\n\t\t\t\ttarget[k][k2] = _.compact(flatten(k == \"before\" ? [resHook, modHook] : [modHook, resHook]));\n\t\t\t});\n\t\t});\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Merge `actions` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property (real schema)\n\t * @param {Object} target Target schema property (mixin schema)\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaActions(src, target) {\n\t\tObject.keys(src).forEach(k => {\n\t\t\tif (src[k] === false && target[k]) {\n\t\t\t\tdelete target[k];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst srcAction = wrapToHander(src[k]);\n\t\t\tconst targetAction = wrapToHander(target[k]);\n\n\t\t\tif (srcAction && srcAction.hooks && targetAction && targetAction.hooks) {\n\t\t\t\tObject.keys(srcAction.hooks).forEach(k => {\n\t\t\t\t\tconst modHook = wrapToArray(srcAction.hooks[k]);\n\t\t\t\t\tconst resHook = wrapToArray(targetAction.hooks[k]);\n\n\t\t\t\t\tsrcAction.hooks[k] = _.compact(flatten(k == \"before\" ? [resHook, modHook] : [modHook, resHook]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttarget[k] = _.defaultsDeep(srcAction, targetAction);\n\t\t});\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Merge `methods` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaMethods(src, target) {\n\t\treturn Object.assign(target || {}, src || {});\n\t}\n\n\t/**\n\t * Merge `events` property in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaEvents(src, target) {\n\t\tObject.keys(src).forEach(k => {\n\t\t\tconst modEvent = wrapToHander(src[k]);\n\t\t\tconst resEvent = wrapToHander(target[k]);\n\n\t\t\tlet handler = _.compact(flatten([resEvent ? resEvent.handler : null, modEvent ? modEvent.handler : null]));\n\t\t\tif (handler.length == 1) handler = handler[0];\n\n\t\t\ttarget[k] = _.defaultsDeep(modEvent, resEvent);\n\t\t\ttarget[k].handler = handler;\n\t\t});\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Merge `started`, `stopped`, `created` event handler properties in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaLifecycleHandlers(src, target) {\n\t\treturn _.compact(flatten([target, src]));\n\t}\n\n\t/**\n\t * Merge unknown properties in schema\n\t *\n\t * @static\n\t * @param {Object} src Source schema property\n\t * @param {Object} target Target schema property\n\t *\n\t * @returns {Object} Merged schema\n\t */\n\tstatic mergeSchemaUnknown(src, target) {\n\t\tif (src !== undefined)\n\t\t\treturn src;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Return a versioned full service name.\n\t * @param {String} name\n\t * @param {String|Number?} version\n\t */\n\tstatic getVersionedFullName(name, version) {\n\t\tif (version != null)\n\t\t\treturn (typeof(version) == \"number\" ? \"v\" + version : version) + \".\" + name;\n\n\t\treturn name;\n\t}\n\n}\n\nmodule.exports = Service;\n","/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst { isString } = require(\"./utils\");\nconst _ = require(\"lodash\");\nconst { RequestSkippedError, MaxCallLevelError } = require(\"./errors\");\n\n/**\n * Merge metadata\n *\n * @param {Object} newMeta\n *\n * @private\n * @memberof Context\n */\nfunction mergeMeta(ctx, newMeta) {\n\tif (newMeta)\n\t\tObject.assign(ctx.meta, newMeta);\n\treturn ctx.meta;\n}\n\n/**\n * Context class for action calls\n *\n * @property {String} id - Context ID\n * @property {ServiceBroker} broker - Broker instance\n * @property {Action} action - Action definition\n * @property {String} [nodeID=null] - Node ID\n * @property {String} parentID - Parent Context ID\n * @property {Boolean} tracing - Enable tracing\n * @property {Number} [level=1] - Level of context\n *\n * @class Context\n */\nclass Context {\n\n\t/**\n\t * Creates an instance of Context.\n\t *\n\t * @param {ServiceBroker} broker - Broker instance\n\t * @param {Endpoint} endpoint\n\t *\n\t * @memberof Context\n\t */\n\tconstructor(broker, endpoint) {\n\n\t\tthis.broker = broker;\n\t\tif (this.broker) {\n\t\t\tthis.nodeID = this.broker.nodeID;\n\t\t\tthis.id = this.broker.generateUid();\n\t\t} else {\n\t\t\tthis.nodeID = null;\n\t\t}\n\n\t\tif (endpoint) {\n\t\t\tthis.setEndpoint(endpoint);\n\t\t} else {\n\t\t\tthis.endpoint = null;\n\t\t\tthis.service = null;\n\t\t\tthis.action = null;\n\t\t\tthis.event = null;\n\t\t}\n\n\t\t// The emitted event \"user.created\" because `ctx.event.name` can be \"user.**\"\n\t\tthis.eventName = null;\n\t\t// Type of event (\"emit\" or \"broadcast\")\n\t\tthis.eventType = null;\n\t\t// The groups of event\n\t\tthis.eventGroups = null;\n\n\t\tthis.options = {\n\t\t\ttimeout: null,\n\t\t\tretries: null,\n\t\t};\n\n\t\tthis.parentID = null;\n\t\tthis.caller = null;\n\n\t\tthis.level = 1;\n\n\t\tthis.params = null;\n\t\tthis.meta = {};\n\t\tthis.locals = {};\n\n\t\tthis.requestID = this.id;\n\n\t\tthis.tracing = null;\n\t\tthis.span = null;\n\t\tthis._spanStack = [];\n\n\t\tthis.needAck = null;\n\t\tthis.ackID = null;\n\n\t\t//this.startTime = null;\n\t\t//his.startHrTime = null;\n\t\t//this.stopTime = null;\n\t\t//this.duration = null;\n\n\t\t//this.error = null;\n\t\tthis.cachedResult = false;\n\t}\n\n\t/**\n\t * Create a new Context instance\n\t *\n\t * @param {ServiceBroker} broker\n\t * @param {Endpoint} endpoint\n\t * @param {Object?} params\n\t * @param {Object} opts\n\t * @returns {Context}\n\t *\n\t * @static\n\t * @memberof Context\n\t */\n\tstatic create(broker, endpoint, params, opts = {}) {\n\t\tconst ctx = new broker.ContextFactory(broker, endpoint);\n\n\t\tif (endpoint != null)\n\t\t\tctx.setEndpoint(endpoint);\n\n\t\tif (params != null) {\n\t\t\tlet cloning = broker ? broker.options.contextParamsCloning : false;\n\t\t\tif (opts.paramsCloning != null)\n\t\t\t\tcloning = opts.paramsCloning;\n\t\t\tctx.setParams(params, cloning);\n\t\t}\n\n\t\t//Object.assign(ctx.options, opts);\n\t\tctx.options = opts;\n\n\t\t// RequestID\n\t\tif (opts.requestID != null)\n\t\t\tctx.requestID = opts.requestID;\n\t\telse if (opts.parentCtx != null && opts.parentCtx.requestID != null)\n\t\t\tctx.requestID = opts.parentCtx.requestID;\n\n\t\t// Meta\n\t\tif (opts.parentCtx != null && opts.parentCtx.meta != null)\n\t\t\tctx.meta = Object.assign({}, opts.parentCtx.meta || {}, opts.meta || {});\n\t\telse if (opts.meta != null)\n\t\t\tctx.meta = opts.meta;\n\n\t\t// ParentID, Level, Caller, Tracing\n\t\tif (opts.parentCtx != null) {\n\t\t\tctx.tracing = opts.parentCtx.tracing;\n\t\t\tctx.level = opts.parentCtx.level + 1;\n\n\t\t\tif (opts.parentCtx.span)\n\t\t\t\tctx.parentID = opts.parentCtx.span.id;\n\t\t\telse\n\t\t\t\tctx.parentID = opts.parentCtx.id;\n\n\t\t\tif (opts.parentCtx.service)\n\t\t\t\tctx.caller = opts.parentCtx.service.fullName;\n\t\t}\n\n\t\t// caller\n\t\tif (opts.caller) {\n\t\t\tctx.caller = opts.caller;\n\t\t}\n\n\t\t// Parent span\n\t\tif (opts.parentSpan != null) {\n\t\t\tctx.parentID = opts.parentSpan.id;\n\t\t\tctx.requestID = opts.parentSpan.traceID;\n\t\t\tctx.tracing = opts.parentSpan.sampled;\n\t\t}\n\n\t\t// Event acknowledgement\n\t\tif (opts.needAck) {\n\t\t\tctx.needAck = opts.needAck;\n\t\t}\n\n\t\treturn ctx;\n\t}\n\n\t/**\n\t * Copy itself without ID.\n\t * @param {Endpoint} ep\n\t * @returns {Context}\n\t */\n\tcopy(ep) {\n\t\tconst newCtx = new this.constructor(this.broker);\n\n\t\tnewCtx.nodeID = this.nodeID;\n\t\tnewCtx.setEndpoint(ep || this.endpoint);\n\t\tnewCtx.options = this.options;\n\t\tnewCtx.parentID = this.parentID;\n\t\tnewCtx.caller = this.caller;\n\t\tnewCtx.level = this.level;\n\t\tnewCtx.params = this.params;\n\t\tnewCtx.meta = this.meta;\n\t\tnewCtx.locals = this.locals;\n\t\tnewCtx.requestID = this.requestID;\n\t\tnewCtx.tracing = this.tracing;\n\t\tnewCtx.span = this.span;\n\t\tnewCtx.needAck = this.needAck;\n\t\tnewCtx.ackID = this.ackID;\n\t\tnewCtx.eventName = this.eventName;\n\t\tnewCtx.eventType = this.eventType;\n\t\tnewCtx.eventGroups = this.eventGroups;\n\n\t\tnewCtx.cachedResult = this.cachedResult;\n\n\t\treturn newCtx;\n\t}\n\n\t/**\n\t * Set endpoint of context\n\t *\n\t * @param {Endpoint} endpoint\n\t * @memberof Context\n\t */\n\tsetEndpoint(endpoint) {\n\t\tthis.endpoint = endpoint;\n\t\tif (endpoint) {\n\t\t\tthis.nodeID = endpoint.id;\n\t\t\tif (endpoint.action) {\n\t\t\t\tthis.action = endpoint.action;\n\t\t\t\tthis.service = this.action.service;\n\t\t\t\tthis.event = null;\n\t\t\t} else if (endpoint.event) {\n\t\t\t\tthis.event =  endpoint.event;\n\t\t\t\tthis.service = this.event.service;\n\t\t\t\tthis.action = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set params of context\n\t *\n\t * @param {Object} newParams\n\t * @param {Boolean} cloning\n\t *\n\t * @memberof Context\n\t */\n\tsetParams(newParams, cloning = false) {\n\t\tif (cloning && newParams)\n\t\t\tthis.params = Object.assign({}, newParams);\n\t\telse\n\t\t\tthis.params = newParams;\n\t}\n\n\t/**\n\t * Call an other action. It creates a sub-context.\n\t *\n\t * @param {String} actionName\n\t * @param {Object?} params\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @example <caption>Call an other service with params & options</caption>\n\t * ctx.call(\"posts.get\", { id: 12 }, { timeout: 1000 });\n\t *\n\t * @memberof Context\n\t */\n\tcall(actionName, params, _opts) {\n\t\tconst opts = Object.assign({\n\t\t\tparentCtx: this\n\t\t}, _opts);\n\n\t\tif (this.options.timeout > 0 && this.startHrTime) {\n\t\t\t// Distributed timeout handling. Decrementing the timeout value with the elapsed time.\n\t\t\t// If the timeout below 0, skip the call.\n\t\t\tconst diff = process.hrtime(this.startHrTime);\n\t\t\tconst duration = (diff[0] * 1e3) + (diff[1] / 1e6);\n\t\t\tconst distTimeout = this.options.timeout - duration;\n\n\t\t\tif (distTimeout <= 0) {\n\t\t\t\treturn this.broker.Promise.reject(new RequestSkippedError({ action: actionName, nodeID: this.broker.nodeID }));\n\t\t\t}\n\n\t\t\tif (!opts.timeout || distTimeout < opts.timeout)\n\t\t\t\topts.timeout = distTimeout;\n\t\t}\n\n\t\t// Max calling level check to avoid calling loops\n\t\tif (this.broker.options.maxCallLevel > 0 && this.level >= this.broker.options.maxCallLevel) {\n\t\t\treturn this.broker.Promise.reject(new MaxCallLevelError({ nodeID: this.broker.nodeID, level: this.level }));\n\t\t}\n\n\t\tlet p = this.broker.call(actionName, params, opts);\n\n\t\t// Merge metadata with sub context metadata\n\t\treturn p.then(res => {\n\t\t\tif (p.ctx)\n\t\t\t\tmergeMeta(this, p.ctx.meta);\n\n\t\t\treturn res;\n\t\t}).catch(err => {\n\t\t\tif (p.ctx)\n\t\t\t\tmergeMeta(this, p.ctx.meta);\n\n\t\t\treturn this.broker.Promise.reject(err);\n\t\t});\n\t}\n\n\tmcall(def, _opts) {\n\t\tconst opts = Object.assign({\n\t\t\tparentCtx: this\n\t\t}, _opts);\n\n\t\tif (this.options.timeout > 0 && this.startHrTime) {\n\t\t\t// Distributed timeout handling. Decrementing the timeout value with the elapsed time.\n\t\t\t// If the timeout below 0, skip the call.\n\t\t\tconst diff = process.hrtime(this.startHrTime);\n\t\t\tconst duration = (diff[0] * 1e3) + (diff[1] / 1e6);\n\t\t\tconst distTimeout = this.options.timeout - duration;\n\n\t\t\tif (distTimeout <= 0) {\n\t\t\t\tconst action = (Array.isArray(def) ? def : Object.values(def)).map(d => d.action).join(\", \");\n\t\t\t\treturn this.broker.Promise.reject(new RequestSkippedError({ action, nodeID: this.broker.nodeID }));\n\t\t\t}\n\n\t\t\tif (!opts.timeout || distTimeout < opts.timeout)\n\t\t\t\topts.timeout = distTimeout;\n\t\t}\n\n\t\t// Max calling level check to avoid calling loops\n\t\tif (this.broker.options.maxCallLevel > 0 && this.level >= this.broker.options.maxCallLevel) {\n\t\t\treturn this.broker.Promise.reject(new MaxCallLevelError({ nodeID: this.broker.nodeID, level: this.level }));\n\t\t}\n\n\t\tlet p = this.broker.mcall(def, opts);\n\n\t\t// Merge metadata with sub context metadata\n\t\treturn p.then(res => {\n\t\t\tif (Array.isArray(p.ctx) && p.ctx.length)\n\t\t\t\tp.ctx.forEach(ctx => mergeMeta(this, ctx.meta));\n\n\t\t\treturn res;\n\t\t}).catch(err => {\n\t\t\tif (Array.isArray(p.ctx) && p.ctx.length)\n\t\t\t\tp.ctx.forEach(ctx => mergeMeta(this, ctx.meta));\n\n\t\t\treturn this.broker.Promise.reject(err);\n\t\t});\n\t}\n\n\t/**\n\t * Emit an event (grouped & balanced global event)\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @example\n\t * ctx.emit(\"user.created\", { entity: user, creator: ctx.meta.user });\n\t *\n\t * @memberof Context\n\t */\n\temit(eventName, data, opts) {\n\t\tif (Array.isArray(opts) || isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\topts.parentCtx = this;\n\t\treturn this.broker.emit(eventName, data, opts);\n\t}\n\n\t/**\n\t * Emit an event for all local & remote services\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @example\n\t * ctx.broadcast(\"user.created\", { entity: user, creator: ctx.meta.user });\n\t *\n\t * @memberof Context\n\t */\n\tbroadcast(eventName, data, opts) {\n\t\tif (Array.isArray(opts) || isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\topts.parentCtx = this;\n\t\treturn this.broker.broadcast(eventName, data, opts);\n\t}\n\n\t/**\n\t * Start a new child tracing span.\n\t *\n\t * @param {String} name\n\t * @param {Object?} opts\n\t * @returns {Span}\n\t * @memberof Context\n\t */\n\tstartSpan(name, opts) {\n\t\tlet span;\n\t\tif (this.span) {\n\t\t\tspan = this.span.startSpan(name, Object.assign({ ctx: this }, opts));\n\t\t} else {\n\t\t\tspan = this.broker.tracer.startSpan(name, Object.assign({ ctx: this }, opts));\n\t\t}\n\n\t\tthis._spanStack.push(span);\n\t\tthis.span = span;\n\n\t\treturn span;\n\t}\n\n\t/**\n\t * Finish an active span.\n\t *\n\t * @param {Span} span\n\t * @param {Number?} time\n\t */\n\tfinishSpan(span, time) {\n\t\tif (!span.isActive()) return;\n\n\t\tspan.finish(time);\n\n\t\tconst idx = this._spanStack.findIndex(sp => sp == span);\n\t\tif (idx !== -1) {\n\t\t\tthis._spanStack.splice(idx, 1);\n\t\t\tthis.span = this._spanStack[this._spanStack.length - 1];\n\t\t} else {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.service.logger.warn(\"This span is not assigned to this context\", span);\n\t\t}\n\t}\n\n\t/**\n\t * Convert Context to a printable POJO object.\n\t */\n\ttoJSON() {\n\t\tconst res = _.pick(this, [\n\t\t\t\"id\",\n\t\t\t\"nodeID\",\n\t\t\t\"action.name\",\n\t\t\t\"event.name\",\n\t\t\t\"service.name\",\n\t\t\t\"service.version\",\n\t\t\t\"service.fullName\",\n\t\t\t\"options\",\n\t\t\t\"parentID\",\n\t\t\t\"caller\",\n\t\t\t\"level\",\n\t\t\t\"params\",\n\t\t\t\"meta\",\n\t\t\t//\"locals\",\n\t\t\t\"requestID\",\n\t\t\t\"tracing\",\n\t\t\t\"span\",\n\t\t\t\"needAck\",\n\t\t\t\"ackID\",\n\t\t\t\"eventName\",\n\t\t\t\"eventType\",\n\t\t\t\"eventGroups\",\n\t\t\t\"cachedResult\"\n\t\t]);\n\n\t\treturn res;\n\t}\n\n\t/* istanbul ignore next */\n\t[util.inspect.custom](depth, options) {\n\t\t// https://nodejs.org/docs/latest-v8.x/api/util.html#util_custom_inspection_functions_on_objects\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(\"[Context]\", \"special\");\n\t\t}\n\n\t\tconst inner = util.inspect(this.toJSON(), options);\n\t\treturn `${options.stylize(\"Context\", \"special\")}< ${inner} >`;\n\t}\n}\n\nmodule.exports = Context;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { MoleculerClientError } = require(\"./errors\");\nconst utils = require(\"./utils\");\n\nmodule.exports = function() {\n\tconst schema = {\n\t\tname: \"$node\",\n\n\t\tactions: {\n\t\t\tlist: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\twithServices: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tonlyAvailable: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\treturn this.broker.registry.getNodeList(ctx.params);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tservices: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\tonlyLocal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tskipInternal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\twithActions: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\twithEvents: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tonlyAvailable: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tgrouping: { type: \"boolean\", optional: true, convert: true, default: true },\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\treturn this.broker.registry.getServiceList(ctx.params);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tactions: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\tonlyLocal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tskipInternal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\twithEndpoints: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tonlyAvailable: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\treturn this.broker.registry.getActionList(ctx.params);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tevents: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\tonlyLocal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tskipInternal: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\twithEndpoints: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t\tonlyAvailable: { type: \"boolean\", optional: true, convert: true, default: false },\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\treturn this.broker.registry.getEventList(ctx.params);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thealth: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\thandler() {\n\t\t\t\t\treturn this.broker.getHealthStatus();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\toptions: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {},\n\t\t\t\thandler() {\n\t\t\t\t\treturn utils.safetyObject(this.broker.options, this.broker.options);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tmetrics: {\n\t\t\t\tcache: false,\n\t\t\t\ttracing: false,\n\t\t\t\tparams: {\n\t\t\t\t\ttypes: { type: \"multi\", optional: true, rules: [ { type: \"string\" }, { type: \"array\", items: \"string\" } ] },\n\t\t\t\t\tincludes: { type: \"multi\", optional: true, rules: [ { type: \"string\" }, { type: \"array\", items: \"string\" } ] },\n\t\t\t\t\texcludes: { type: \"multi\", optional: true, rules: [ { type: \"string\" }, { type: \"array\", items: \"string\" } ] }\n\t\t\t\t},\n\t\t\t\thandler(ctx) {\n\t\t\t\t\tif (!this.broker.isMetricsEnabled())\n\t\t\t\t\t\treturn this.Promise.reject(new MoleculerClientError(\"Metrics feature is disabled\", 400, \"METRICS_DISABLED\"));\n\n\t\t\t\t\treturn this.broker.metrics.list(ctx.params);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn schema;\n};\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst EventEmitter2 \t\t= require(\"eventemitter2\").EventEmitter2;\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst glob \t\t\t\t\t= require(\"glob\");\nconst path \t\t\t\t\t= require(\"path\");\n\nconst Transit \t\t\t\t= require(\"./transit\");\nconst Registry \t\t\t\t= require(\"./registry\");\nconst E \t\t\t\t\t= require(\"./errors\");\nconst utils \t\t\t\t= require(\"./utils\");\nconst LoggerFactory\t\t\t= require(\"./logger-factory\");\nconst Validators \t\t\t= require(\"./validators\");\n//const AsyncStorage \t\t\t= require(\"./async-storage\");\n\nconst Cachers \t\t\t\t= require(\"./cachers\");\nconst Transporters \t\t\t= require(\"./transporters\");\nconst Serializers \t\t\t= require(\"./serializers\");\nconst H \t\t\t\t\t= require(\"./health\");\nconst MiddlewareHandler\t\t= require(\"./middleware\");\nconst cpuUsage \t\t\t\t= require(\"./cpu-usage\");\n\nconst { MetricRegistry, METRIC }\t= require(\"./metrics\");\nconst { Tracer }\t\t\t= require(\"./tracing\");\n\n/**\n * Default broker options\n */\nconst defaultOptions = {\n\tnamespace: \"\",\n\tnodeID: null,\n\n\tlogger: true,\n\tlogLevel: null,\n\n\ttransporter: null, //\"TCP\",\n\n\trequestTimeout: 0 * 1000,\n\tretryPolicy: {\n\t\tenabled: false,\n\t\tretries: 5,\n\t\tdelay: 100,\n\t\tmaxDelay: 1000,\n\t\tfactor: 2,\n\t\tcheck: err => err && !!err.retryable\n\t},\n\n\tcontextParamsCloning: false,\n\tmaxCallLevel: 0,\n\theartbeatInterval: 10,\n\theartbeatTimeout: 30,\n\n\ttracking: {\n\t\tenabled: false,\n\t\tshutdownTimeout: 5000,\n\t},\n\n\tdisableBalancer: false,\n\n\tregistry: {\n\t\tstrategy: \"RoundRobin\",\n\t\tpreferLocal: true\n\t},\n\n\tcircuitBreaker: {\n\t\tenabled: false,\n\t\tthreshold: 0.5,\n\t\twindowTime: 60,\n\t\tminRequestCount: 20,\n\t\thalfOpenTime: 10 * 1000,\n\t\tcheck: err => err && err.code >= 500\n\t},\n\n\tbulkhead: {\n\t\tenabled: false,\n\t\tconcurrency: 10,\n\t\tmaxQueueSize: 100,\n\t},\n\n\ttransit: {\n\t\tmaxQueueSize: 50 * 1000, // 50k ~ 400MB,\n\t\tmaxChunkSize: 256*1024, // 256KB\n\t\tdisableReconnect: false,\n\t\tdisableVersionCheck: false\n\t},\n\n\tuidGenerator: null,\n\n\terrorHandler: null,\n\n\tcacher: null,\n\tserializer: null,\n\n\tvalidator: true,\n\n\tmetrics: false,\n\ttracing: false,\n\n\tinternalServices: true,\n\tinternalMiddlewares: true,\n\tdependencyInterval: 1000,\n\n\thotReload: false,\n\n\tmiddlewares: null,\n\n\treplCommands: null,\n\treplDelimiter: null,\n\n\tmetadata: {},\n\n\tskipProcessEventRegistration: false,\n\n\t/**\n\t * Maximum size of objects that can be serialized\n\t *\n\t * On serialization process, check each object property size (based on length or size property value)\n\t * and trim it, if object size bigger than maxSafeObjectSize value\n\t *\n\t * @type {(number|null)}\n\t */\n\tmaxSafeObjectSize: null,\n\t// ServiceFactory: null,\n\t// ContextFactory: null\n\t// Promise: null\n};\n\n/**\n * Service broker class\n *\n * @class ServiceBroker\n */\nclass ServiceBroker {\n\n\t/**\n\t * Creates an instance of ServiceBroker.\n\t *\n\t * @param {Object} options\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tconstructor(options) {\n\t\ttry {\n\t\t\tthis.options = _.defaultsDeep(options, defaultOptions);\n\n\t\t\t// Custom Promise lib\n\t\t\tif (this.options.Promise) {\n\t\t\t\tthis.Promise = this.options.Promise;\n\t\t\t} else {\n\t\t\t\t// Use native Promise lib\n\t\t\t\tthis.Promise = Promise;\n\t\t\t}\n\t\t\tutils.polyfillPromise(this.Promise);\n\t\t\tServiceBroker.Promise = this.Promise;\n\n\t\t\t// Broker started flag\n\t\t\tthis.started = false;\n\n\t\t\t// Class factories\n\t\t\tthis.ServiceFactory = this.options.ServiceFactory || require(\"./service\");\n\t\t\tthis.ContextFactory = this.options.ContextFactory || require(\"./context\");\n\n\t\t\t// Namespace\n\t\t\tthis.namespace = this.options.namespace || \"\";\n\n\t\t\t// Metadata\n\t\t\tthis.metadata = this.options.metadata || {};\n\n\t\t\t// Self nodeID\n\t\t\tthis.nodeID = this.options.nodeID || utils.getNodeID();\n\n\t\t\t// Instance ID\n\t\t\tthis.instanceID = utils.generateToken();\n\n\t\t\t// Internal maps\n\t\t\tthis.services = [];\n\n\t\t\t// Internal event bus\n\t\t\tthis.localBus = new EventEmitter2({\n\t\t\t\twildcard: true,\n\t\t\t\tmaxListeners: 100\n\t\t\t});\n\n\t\t\t// Log Factory\n\t\t\tthis.loggerFactory = new LoggerFactory(this);\n\t\t\tthis.loggerFactory.init(this.options.logger);\n\n\t\t\t// Logger\n\t\t\tthis.logger = this.getLogger(\"broker\");\n\n\t\t\tthis.logger.info(`Moleculer v${this.MOLECULER_VERSION} is starting...`);\n\t\t\tthis.logger.info(`Namespace: ${this.namespace || \"<not defined>\"}`);\n\t\t\tthis.logger.info(`Node ID: ${this.nodeID}`);\n\n\t\t\t// Async storage for Contexts\n\t\t\t//this.scope = new AsyncStorage(this);\n\n\t\t\t// Metrics Registry\n\t\t\tthis.metrics = new MetricRegistry(this, this.options.metrics);\n\t\t\tthis.metrics.init();\n\t\t\tthis.registerMoleculerMetrics();\n\n\t\t\t// Middleware handler\n\t\t\tthis.middlewares = new MiddlewareHandler(this);\n\n\t\t\t// Service registry\n\t\t\tthis.registry = new Registry(this);\n\n\t\t\t// Cacher\n\t\t\tthis.cacher = Cachers.resolve(this.options.cacher);\n\t\t\tif (this.cacher) {\n\t\t\t\tthis.cacher.init(this);\n\n\t\t\t\tconst name = this.getConstructorName(this.cacher);\n\t\t\t\tthis.logger.info(`Cacher: ${name}`);\n\t\t\t}\n\n\t\t\t// Serializer\n\t\t\tthis.serializer = Serializers.resolve(this.options.serializer);\n\t\t\tthis.serializer.init(this);\n\n\t\t\tconst serializerName = this.getConstructorName(this.serializer);\n\t\t\tthis.logger.info(`Serializer: ${serializerName}`);\n\n\t\t\t// Validator\n\t\t\tif (this.options.validator) {\n\t\t\t\tthis.validator = Validators.resolve(this.options.validator);\n\t\t\t\tif (this.validator) {\n\t\t\t\t\tconst validatorName = this.getConstructorName(this.validator);\n\t\t\t\t\tthis.logger.info(`Validator: ${validatorName}`);\n\t\t\t\t\tthis.validator.init(this);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tracing\n\t\t\tthis.tracer = new Tracer(this, this.options.tracing);\n\t\t\tthis.tracer.init();\n\n\t\t\t// Register middlewares\n\t\t\tthis.registerMiddlewares(this.options.middlewares);\n\n\t\t\t// Transit & Transporter\n\t\t\tif (this.options.transporter) {\n\t\t\t\tconst tx = Transporters.resolve(this.options.transporter);\n\t\t\t\tthis.transit = new Transit(this, tx, this.options.transit);\n\n\t\t\t\tconst txName = this.getConstructorName(tx);\n\t\t\t\tthis.logger.info(`Transporter: ${txName}`);\n\n\t\t\t\tif (this.options.disableBalancer) {\n\t\t\t\t\tif (tx.hasBuiltInBalancer) {\n\t\t\t\t\t\tthis.logger.info(\"The broker built-in balancer is DISABLED.\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logger.warn(`The ${txName} has no built-in balancer. Broker balancer is ENABLED.`);\n\t\t\t\t\t\tthis.options.disableBalancer = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Change the call method if balancer is disabled\n\t\t\tif (this.options.disableBalancer) {\n\t\t\t\tthis.call = this.callWithoutBalancer;\n\t\t\t}\n\n\t\t\tthis.registry.init(this);\n\n\t\t\t// Register internal actions\n\t\t\tif (this.options.internalServices)\n\t\t\t\tthis.registerInternalServices(this.options.internalServices);\n\n\t\t\t// Call `created` event handler in middlewares\n\t\t\tthis.callMiddlewareHookSync(\"created\", [this]);\n\n\t\t\t// Call `created` event handler from options\n\t\t\tif (utils.isFunction(this.options.created))\n\t\t\t\tthis.options.created(this);\n\n\t\t\t// Graceful exit\n\t\t\tthis._closeFn = () => {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.stop()\n\t\t\t\t\t.catch(err => this.logger.error(err))\n\t\t\t\t\t.then(() => process.exit(0));\n\t\t\t};\n\n\t\t\tprocess.setMaxListeners(0);\n\t\t\tif (this.options.skipProcessEventRegistration === false) {\n\t\t\t\tprocess.on(\"beforeExit\", this._closeFn);\n\t\t\t\tprocess.on(\"exit\", this._closeFn);\n\t\t\t\tprocess.on(\"SIGINT\", this._closeFn);\n\t\t\t\tprocess.on(\"SIGTERM\", this._closeFn);\n\t\t\t}\n\n\t\t} catch(err) {\n\t\t\tif (this.logger)\n\t\t\t\tthis.fatal(\"Unable to create ServiceBroker.\", err, true);\n\t\t\telse {\n\t\t\t\t/* eslint-disable-next-line no-console */\n\t\t\t\tconsole.error(\"Unable to create ServiceBroker.\", err);\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Register middlewares (user & internal)\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tregisterMiddlewares(userMiddlewares) {\n\t\t// Register user middlewares\n\t\tif (Array.isArray(userMiddlewares) && userMiddlewares.length > 0) {\n\t\t\t_.compact(userMiddlewares).forEach(mw => this.middlewares.add(mw));\n\n\t\t\tthis.logger.info(`Registered ${this.middlewares.count()} custom middleware(s).`);\n\t\t}\n\n\t\tif (this.options.internalMiddlewares) {\n\t\t\t// Register internal middlewares\n\n\t\t\tconst prevCount = this.middlewares.count();\n\n\t\t\t// 0. ActionHook\n\t\t\tthis.middlewares.add(\"ActionHook\");\n\n\t\t\t// 1. Validator\n\t\t\tif (this.validator && utils.isFunction(this.validator.middleware)) {\n\t\t\t\tconst mw = this.validator.middleware(this);\n\t\t\t\tif (utils.isPlainObject(mw))\n\t\t\t\t\tthis.middlewares.add(mw);\n\t\t\t\telse\n\t\t\t\t\tthis.middlewares.add({ localAction: mw });\n\t\t\t}\n\n\t\t\t// 2. Bulkhead\n\t\t\tthis.middlewares.add(\"Bulkhead\");\n\n\t\t\t// 3. Cacher\n\t\t\tif (this.cacher && utils.isFunction(this.cacher.middleware)) {\n\t\t\t\tconst mw = this.cacher.middleware();\n\t\t\t\tif (utils.isPlainObject(mw))\n\t\t\t\t\tthis.middlewares.add(mw);\n\t\t\t\telse\n\t\t\t\t\tthis.middlewares.add({ localAction: mw });\n\t\t\t}\n\n\t\t\t// 4. Context tracker\n\t\t\tthis.middlewares.add(\"ContextTracker\");\n\n\t\t\t// 5. CircuitBreaker\n\t\t\tthis.middlewares.add(\"CircuitBreaker\");\n\n\t\t\t// 6. Timeout\n\t\t\tthis.middlewares.add(\"Timeout\");\n\n\t\t\t// 7. Retry\n\t\t\tthis.middlewares.add(\"Retry\");\n\n\t\t\t// 8. Fallback\n\t\t\tthis.middlewares.add(\"Fallback\");\n\n\t\t\t// 9. Error handler\n\t\t\tthis.middlewares.add(\"ErrorHandler\");\n\n\t\t\t// 10. Tracing\n\t\t\tthis.middlewares.add(\"Tracing\");\n\n\t\t\t// 11. Metrics\n\t\t\tthis.middlewares.add(\"Metrics\");\n\n\t\t\t// 12. Debounce\n\t\t\tthis.middlewares.add(\"Debounce\");\n\n\t\t\t// 13. Throttle\n\t\t\tthis.middlewares.add(\"Throttle\");\n\n\t\t\tif (this.options.hotReload) {\n\t\t\t\t// 14. Hot Reload\n\t\t\t\tthis.middlewares.add(\"HotReload\");\n\t\t\t}\n\n\t\t\tthis.logger.info(`Registered ${this.middlewares.count() - prevCount} internal middleware(s).`);\n\t\t}\n\n\t\tthis.createService = this.wrapMethod(\"createService\", this.createService);\n\t\tthis.registerLocalService = this.wrapMethod(\"registerLocalService\", this.registerLocalService);\n\t\tthis.destroyService = this.wrapMethod(\"destroyService\", this.destroyService);\n\t\tthis.call = this.wrapMethod(\"call\", this.call);\n\t\tthis.callWithoutBalancer = this.wrapMethod(\"call\", this.callWithoutBalancer);\n\t\tthis.mcall = this.wrapMethod(\"mcall\", this.mcall);\n\t\tthis.emit = this.wrapMethod(\"emit\", this.emit);\n\t\tthis.broadcast = this.wrapMethod(\"broadcast\", this.broadcast);\n\t\tthis.broadcastLocal = this.wrapMethod(\"broadcastLocal\", this.broadcastLocal);\n\n\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_MIDDLEWARES_TOTAL,this.middlewares.count());\n\t}\n\n\t/**\n\t * Register Moleculer Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tif (!this.isMetricsEnabled()) return;\n\n\t\t// --- MOLECULER NODE METRICS ---\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_NODE_TYPE, type: METRIC.TYPE_INFO, description: \"Moleculer implementation type\" }).set(\"nodejs\");\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_NODE_VERSIONS_MOLECULER, type: METRIC.TYPE_INFO, description: \"Moleculer version number\" }).set(ServiceBroker.MOLECULER_VERSION);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_NODE_VERSIONS_PROTOCOL, type: METRIC.TYPE_INFO, description: \"Moleculer protocol version\" }).set(ServiceBroker.PROTOCOL_VERSION);\n\n\t\t// --- MOLECULER BROKER METRICS ---\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_BROKER_NAMESPACE, type: METRIC.TYPE_INFO, description: \"Moleculer namespace\" }).set(this.namespace);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_BROKER_STARTED, type: METRIC.TYPE_GAUGE, description: \"ServiceBroker started\" }).set(0);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_BROKER_LOCAL_SERVICES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of local services\" }).set(0);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_BROKER_MIDDLEWARES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of local middlewares\" }).set(0);\n\t}\n\n\t/**\n\t * Start broker. If has transporter, transporter.connect will be called.\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tstart() {\n\t\tconst startTime = Date.now();\n\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\t//this.tracer.restartScope();\n\t\t\t\t//this.scope.enable();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.callMiddlewareHook(\"starting\", [this]);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.transit)\n\t\t\t\t\treturn this.transit.connect();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Call service `started` handlers\n\t\t\t\treturn this.Promise.all(this.services.map(svc => svc._start.call(svc)))\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tthis.logger.error(\"Unable to start all services.\", err);\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.started = true;\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_STARTED, 1);\n\t\t\t\tthis.broadcastLocal(\"$broker.started\");\n\t\t\t\tthis.registry.regenerateLocalRawInfo(true);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.transit)\n\t\t\t\t\treturn this.transit.ready();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.callMiddlewareHook(\"started\", [this]);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (utils.isFunction(this.options.started))\n\t\t\t\t\treturn this.options.started(this);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tconst duration = Date.now() - startTime;\n\t\t\t\tthis.logger.info(`✔ ServiceBroker with ${this.services.length} service(s) is started successfully in ${utils.humanize(duration)}.`);\n\t\t\t});\n\t}\n\n\t/**\n\t * Stop broker. If has transporter, transporter.disconnect will be called.\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tstop() {\n\t\tthis.started = false;\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\tif (this.transit) {\n\t\t\t\t\tthis.registry.regenerateLocalRawInfo(true);\n\t\t\t\t\t// Send empty node info in order to block incoming requests\n\t\t\t\t\treturn this.registry.discoverer.sendLocalNodeInfo();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.callMiddlewareHook(\"stopping\", [this], { reverse: true });\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Call service `stopped` handlers\n\t\t\t\treturn this.Promise.all(this.services.map(svc => svc._stop.call(svc)))\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tthis.logger.error(\"Unable to stop all services.\", err);\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.transit) {\n\t\t\t\t\treturn this.transit.disconnect();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.cacher) {\n\t\t\t\t\treturn this.cacher.close();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.metrics) {\n\t\t\t\t\treturn this.metrics.stop();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (this.tracer) {\n\t\t\t\t\treturn this.tracer.stop();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.registry.stop();\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.callMiddlewareHook(\"stopped\", [this], { reverse: true });\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (utils.isFunction(this.options.stopped))\n\t\t\t\t\treturn this.options.stopped(this);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.logger.error(err);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.logger.info(\"ServiceBroker is stopped. Good bye.\");\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_STARTED, 0);\n\n\t\t\t\tthis.broadcastLocal(\"$broker.stopped\");\n\n\t\t\t\tif (this.options.skipProcessEventRegistration === false) {\n\t\t\t\t\tprocess.removeListener(\"beforeExit\", this._closeFn);\n\t\t\t\t\tprocess.removeListener(\"exit\", this._closeFn);\n\t\t\t\t\tprocess.removeListener(\"SIGINT\", this._closeFn);\n\t\t\t\t\tprocess.removeListener(\"SIGTERM\", this._closeFn);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn this.loggerFactory.stop();\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\t// Silent\n\t\t\t});\n\t}\n\n\t/**\n\t * Switch the console to REPL mode.\n\t *\n\t * @example\n\t * broker.start().then(() => broker.repl());\n\t * @returns {object}\n\t */\n\trepl() {\n\t\tlet repl;\n\t\ttry {\n\t\t\trepl = require(\"moleculer-repl\");\n\t\t}\n\t\tcatch (error) {\n\t\t\tconsole.error(\"The 'moleculer-repl' package is missing. Please install it with 'npm install moleculer-repl' command.\"); // eslint-disable-line no-console\n\t\t\tthis.logger.error(\"The 'moleculer-repl' package is missing. Please install it with 'npm install moleculer-repl' command.\");\n\t\t\tthis.logger.debug(\"ERROR\", error);\n\t\t\treturn;\n\t\t}\n\n\t\tif (repl)\n\t\t{\n\t\t\tlet opts = null;\n\t\t\tconst delimiter = this.options.replDelimiter;\n\t\t\tconst customCommands = this.options.replCommands;\n\t\t\tdelimiter && (opts = { delimiter });\n\t\t\tcustomCommands && (opts = { ...opts,customCommands });\n\t\t\treturn repl(this, opts);\n\t\t}\n\t}\n\n\t/**\n\t * Global error handler.\n\t *\n\t * @param {Error} err\n\t * @param {object} info\n\t * @returns\n\t * @memberof ServiceBroker\n\t */\n\terrorHandler(err, info) {\n\t\tif (this.options.errorHandler) {\n\t\t\treturn this.options.errorHandler.call(this, err, info);\n\t\t}\n\n\t\tthrow err;\n\t}\n\n\t/**\n\t * Wrap a method with middlewares\n\t *\n\t * @param {string} method\n\t * @param {Function} handler\n\t * @param {any} bindTo\n\t * @param {Object} opts\n\t * @returns {Function}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\twrapMethod(name, handler, bindTo, opts) {\n\t\treturn this.middlewares.wrapMethod(name, handler, bindTo, opts);\n\t}\n\n\t/**\n\t * Call a handler asynchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns {Promise}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tcallMiddlewareHook(name, args, opts) {\n\t\treturn this.middlewares.callHandlers(name, args, opts);\n\t}\n\n\t/**\n\t * Call a handler synchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tcallMiddlewareHookSync(name, args, opts) {\n\t\treturn this.middlewares.callSyncHandlers(name, args, opts);\n\t}\n\n\t/**\n\t * Check metrics are enabled.\n\t *\n\t * @returns {boolean}\n\t * @memberof ServiceBroker\n\t */\n\tisMetricsEnabled() {\n\t\treturn this.metrics.isEnabled();\n\t}\n\n\t/**\n\t * Check tracing is enabled.\n\t *\n\t * @returns {boolean}\n\t * @memberof ServiceBroker\n\t */\n\tisTracingEnabled() {\n\t\treturn this.tracer.isEnabled();\n\t}\n\n\t/**\n\t * Get a custom logger for sub-modules (service, transporter, cacher, context...etc)\n\t *\n\t * @param {String} mod\tName of module\n\t * @param {Object} props\tModule properties (service name, version, ...etc\n\t * @returns {ModuleLogger}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tgetLogger(mod, props) {\n\t\tlet bindings = Object.assign({\n\t\t\tnodeID: this.nodeID,\n\t\t\tns: this.namespace,\n\t\t\tmod\n\t\t}, props);\n\n\t\treturn this.loggerFactory.getLogger(bindings);\n\t}\n\n\t/**\n\t * Fatal error. Print the message to console and exit the process (if need)\n\t *\n\t * @param {String} message\n\t * @param {Error?} err\n\t * @param {boolean} [needExit=true]\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tfatal(message, err, needExit = true) {\n\t\tif (this.logger)\n\t\t\tthis.logger.fatal(message, err);\n\t\telse\n\t\t\tconsole.error(message, err); // eslint-disable-line no-console\n\n\t\tif (needExit)\n\t\t\tprocess.exit(1);\n\t}\n\n\t/**\n\t * Load services from a folder\n\t *\n\t * @param {string} [folder=\"./services\"]\t\tFolder of services\n\t * @param {string} [fileMask=\"**\\/*.service.js\"]\tService filename mask\n\t * @returns\t{Number}\t\t\t\t\t\t\tNumber of found services\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tloadServices(folder = \"./services\", fileMask = \"**/*.service.js\") {\n\t\tthis.logger.debug(`Search services in '${folder}/${fileMask}'...`);\n\n\t\tlet serviceFiles;\n\n\t\tif (Array.isArray(fileMask))\n\t\t\tserviceFiles = fileMask.map(f => path.join(folder, f));\n\t\telse\n\t\t\tserviceFiles = glob.sync(path.join(folder, fileMask));\n\n\t\tif (serviceFiles)\n\t\t\tserviceFiles.forEach(filename => this.loadService(filename));\n\n\t\treturn serviceFiles.length;\n\t}\n\n\t/**\n\t * Load a service from file\n\t *\n\t * @param {string} \t\tPath of service\n\t * @returns\t{Service}\tLoaded service\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tloadService(filePath) {\n\t\tlet fName, schema;\n\n\t\ttry {\n\t\t\tfName = require.resolve(path.resolve(filePath));\n\t\t\tthis.logger.debug(`Load service '${path.basename(fName)}'...`);\n\n\t\t\tconst r = require(fName);\n\t\t\tschema = r.default != null ? r.default : r;\n\n\t\t\tlet svc;\n\t\t\tschema = this.normalizeSchemaConstructor(schema);\n\t\t\tif (Object.prototype.isPrototypeOf.call(this.ServiceFactory, schema)) {\n\t\t\t\t// Service implementation\n\t\t\t\tsvc = new schema(this);\n\n\t\t\t\t// If broker is started, call the started lifecycle event of service\n\t\t\t\tif (this.started)\n\t\t\t\t\tthis._restartService(svc);\n\n\t\t\t} else if (utils.isFunction(schema)) {\n\t\t\t\t// Function\n\t\t\t\tsvc = schema(this);\n\t\t\t\tif (!(svc instanceof this.ServiceFactory)) {\n\t\t\t\t\tsvc = this.createService(svc);\n\t\t\t\t} else {\n\t\t\t\t\t// If broker is started, call the started lifecycle event of service\n\t\t\t\t\tif (this.started)\n\t\t\t\t\t\tthis._restartService(svc);\n\t\t\t\t}\n\n\t\t\t} else if (schema) {\n\t\t\t\t// Schema object\n\t\t\t\tsvc = this.createService(schema);\n\t\t\t}\n\n\t\t\tif (svc) {\n\t\t\t\tsvc.__filename = fName;\n\t\t\t}\n\n\t\t\treturn svc;\n\n\t\t} catch (e) {\n\t\t\tthis.logger.error(`Failed to load service '${filePath}'`, e);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Create a new service by schema\n\t *\n\t * @param {any} schema\tSchema of service or a Service class\n\t * @param {any=} schemaMods\tModified schema\n\t * @returns {Service}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tcreateService(schema, schemaMods) {\n\t\tlet service;\n\n\t\tschema = this.normalizeSchemaConstructor(schema);\n\t\tif (Object.prototype.isPrototypeOf.call(this.ServiceFactory, schema)) {\n\t\t\tservice = new schema(this, schemaMods);\n\t\t} else {\n\t\t\tlet s = schema;\n\t\t\tif (schemaMods)\n\t\t\t\ts = this.ServiceFactory.mergeSchemas(schema, schemaMods);\n\n\t\t\tservice = new this.ServiceFactory(this, s);\n\t\t}\n\n\t\t// If broker has started yet, call the started lifecycle event of service\n\t\tif (this.started)\n\t\t\tthis._restartService(service);\n\n\t\treturn service;\n\t}\n\n\t/**\n\t * Restart a hot-reloaded service after creation.\n\t *\n\t * @param {Service} service\n\t * @returns {Promise}\n\t * @memberof ServiceBroker\n\t * @private\n\t */\n\t_restartService(service) {\n\t\treturn service._start.call(service)\n\t\t\t.catch(err => this.logger.error(\"Unable to start service.\", err));\n\t}\n\n\t/**\n\t * Add a local service instance\n\t *\n\t * @param {Service} service\n\t * @memberof ServiceBroker\n\t */\n\taddLocalService(service) {\n\t\tthis.services.push(service);\n\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_LOCAL_SERVICES_TOTAL, this.services.length);\n\t}\n\n\t/**\n\t * Register a local service to Service Registry\n\t *\n\t * @param {Object} registryItem\n\t * @memberof ServiceBroker\n\t */\n\tregisterLocalService(registryItem) {\n\t\tthis.registry.registerLocalService(registryItem);\n\t}\n\n\t/**\n\t * Destroy a local service\n\t *\n\t * @param {Service|string|object} service\n\t * @returns Promise<void>\n\t * @memberof ServiceBroker\n\t */\n\tdestroyService(service) {\n\t\tlet serviceName;\n\t\tlet serviceVersion;\n\t\tif (utils.isString(service)) {\n\t\t\tserviceName = service;\n\t\t\tservice = this.getLocalService(service);\n\t\t} else if (utils.isPlainObject(service)) {\n\t\t\tserviceName = service.name;\n\t\t\tserviceVersion  = service.version;\n\t\t\tservice = this.getLocalService(service.name, service.version);\n\t\t}\n\n\t\tif (!service) {\n\t\t\treturn this.Promise.reject(new E.ServiceNotFoundError({ service: serviceName, version: serviceVersion }));\n\t\t}\n\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => service._stop())\n\t\t\t.catch(err => {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.logger.error(`Unable to stop '${service.fullName}' service.`, err);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tutils.removeFromArray(this.services, service);\n\t\t\t\tthis.registry.unregisterService(service.fullName, this.nodeID);\n\n\t\t\t\tthis.logger.info(`Service '${service.fullName}' is stopped.`);\n\t\t\t\tthis.servicesChanged(true);\n\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_BROKER_LOCAL_SERVICES_TOTAL, this.services.length);\n\t\t\t});\n\t}\n\n\t/**\n\t * It will be called when a new local or remote service\n\t * is registered or unregistered.\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tservicesChanged(localService = false) {\n\t\tthis.broadcastLocal(\"$services.changed\", { localService });\n\n\t\t// Should notify remote nodes, because our service list is changed.\n\t\tif (this.started && localService && this.transit) {\n\t\t\tthis.registry.discoverer.sendLocalNodeInfo();\n\t\t}\n\t}\n\n\t/**\n\t * Register internal services\n\t * @param {Object?} opts\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tregisterInternalServices(opts) {\n\t\topts = utils.isObject(opts) ? opts : {};\n\t\tthis.createService(require(\"./internals\")(this), opts[\"$node\"]);\n\t}\n\n\t/**\n\t * Get a local service by name\n\t *\n\t * Example:\n\t * \tgetLocalService(\"v2.posts\");\n\t * \tgetLocalService({ name: \"posts\", version: 2 });\n\t *\n\t * @param {String|ServiceSearchObj} name\n\t * @param {String|Number?} version\n\t * @returns {Service}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tgetLocalService(name, version) {\n\t\tif (arguments.length == 1) {\n\t\t\tif (utils.isString(name))\n\t\t\t\treturn this.services.find(service => service.fullName == name);\n\t\t\telse if (utils.isPlainObject(name))\n\t\t\t\treturn this.services.find(service => service.name == name.name && service.version == name.version);\n\t\t}\n\t\t// Deprecated\n\t\treturn this.services.find(service => service.name == name && service.version == version);\n\t}\n\n\t/**\n\t * Wait for other services\n\t *\n\t * @param {String|Array<String>} serviceNames\n\t * @param {Number} timeout Timeout in milliseconds\n\t * @param {Number} interval Check interval in milliseconds\n\t * @returns {Promise}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\twaitForServices(serviceNames, timeout, interval, logger = this.logger) {\n\t\tif (!Array.isArray(serviceNames))\n\t\t\tserviceNames = [serviceNames];\n\n\t\tserviceNames = _.uniq(_.compact(serviceNames.map(x => {\n\t\t\tif (utils.isPlainObject(x) && x.name)\n\t\t\t\treturn this.ServiceFactory.getVersionedFullName(x.name, x.version);\n\n\t\t\tif (utils.isString(x))\n\t\t\t\treturn x;\n\t\t})));\n\n\t\tif (serviceNames.length == 0)\n\t\t\treturn this.Promise.resolve();\n\n\t\tlogger.info(`Waiting for service(s) '${serviceNames.join(\", \")}'...`);\n\n\t\tconst startTime = Date.now();\n\t\treturn new this.Promise((resolve, reject) => {\n\t\t\tconst check = () => {\n\t\t\t\tconst count = serviceNames.filter(fullName => {\n\t\t\t\t\treturn this.registry.hasService(fullName);\n\t\t\t\t});\n\n\t\t\t\tif (count.length == serviceNames.length) {\n\t\t\t\t\tlogger.info(`Service(s) '${serviceNames.join(\", \")}' are available.`);\n\t\t\t\t\treturn resolve();\n\t\t\t\t}\n\n\t\t\t\tlogger.debug(`${count.length} of ${serviceNames.length} services are available. Waiting further...`);\n\n\t\t\t\tif (timeout && Date.now() - startTime > timeout)\n\t\t\t\t\treturn reject(new E.MoleculerServerError(\"Services waiting is timed out.\", 500, \"WAITFOR_SERVICES\", { services: serviceNames }));\n\n\t\t\t\tsetTimeout(check, interval || this.options.dependencyInterval || 1000);\n\t\t\t};\n\n\t\t\tcheck();\n\t\t});\n\t}\n\n\t/**\n\t * Find the next available endpoint for action\n\t *\n\t * @param {String} actionName\n\t * @param {Object?} opts\n\t * @param {Context?} ctx\n\t * @returns {Endpoint|Error}\n\t *\n\t * @performance-critical\n\t * @memberof ServiceBroker\n\t */\n\tfindNextActionEndpoint(actionName, opts, ctx) {\n\t\tif (typeof actionName !== \"string\") {\n\t\t\treturn actionName;\n\t\t} else {\n\t\t\tif (opts && opts.nodeID) {\n\t\t\t\tconst nodeID = opts.nodeID;\n\t\t\t\t// Direct call\n\t\t\t\tconst endpoint = this.registry.getActionEndpointByNodeId(actionName, nodeID);\n\t\t\t\tif (!endpoint) {\n\t\t\t\t\tthis.logger.warn(`Service '${actionName}' is not found on '${nodeID}' node.`);\n\t\t\t\t\treturn new E.ServiceNotFoundError({ action: actionName, nodeID });\n\t\t\t\t}\n\t\t\t\treturn endpoint;\n\n\t\t\t} else {\n\t\t\t\t// Get endpoint list by action name\n\t\t\t\tconst epList = this.registry.getActionEndpoints(actionName);\n\t\t\t\tif (!epList) {\n\t\t\t\t\tthis.logger.warn(`Service '${actionName}' is not registered.`);\n\t\t\t\t\treturn new E.ServiceNotFoundError({ action: actionName });\n\t\t\t\t}\n\n\t\t\t\t// Get the next available endpoint\n\t\t\t\tconst endpoint = epList.next(ctx);\n\t\t\t\tif (!endpoint) {\n\t\t\t\t\tconst errMsg = `Service '${actionName}' is not available.`;\n\t\t\t\t\tthis.logger.warn(errMsg);\n\t\t\t\t\treturn new E.ServiceNotAvailableError({ action: actionName });\n\t\t\t\t}\n\t\t\t\treturn endpoint;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Call an action\n\t *\n\t * @param {String} actionName\tname of action\n\t * @param {Object?} params\t\tparams of action\n\t * @param {Object?} opts\t\toptions of call (optional)\n\t * @returns {Promise}\n\t *\n\t * @performance-critical\n\t * @memberof ServiceBroker\n\t */\n\tcall(actionName, params, opts = {}) {\n\t\tif (params === undefined)\n\t\t\tparams = {}; // Backward compatibility\n\n\t\t// Create context\n\t\tlet ctx;\n\t\tif (opts.ctx != null) {\n\n\t\t\tconst endpoint = this.findNextActionEndpoint(actionName, opts, opts.ctx);\n\t\t\tif (endpoint instanceof Error) {\n\t\t\t\treturn this.Promise.reject(endpoint).catch(err => this.errorHandler(err, { actionName, params, opts }));\n\t\t\t}\n\n\t\t\t// Reused context\n\t\t\tctx = opts.ctx;\n\t\t\tctx.endpoint = endpoint;\n\t\t\tctx.nodeID = endpoint.id;\n\t\t\tctx.action = endpoint.action;\n\t\t\tctx.service = endpoint.action.service;\n\t\t} else {\n\t\t\t// New root context\n\t\t\tctx = this.ContextFactory.create(this, null, params, opts);\n\n\t\t\tconst endpoint = this.findNextActionEndpoint(actionName, opts, ctx);\n\t\t\tif (endpoint instanceof Error) {\n\t\t\t\treturn this.Promise.reject(endpoint).catch(err => this.errorHandler(err, { actionName, params, opts }));\n\t\t\t}\n\n\t\t\tctx.setEndpoint(endpoint);\n\t\t}\n\n\t\tif (ctx.endpoint.local)\n\t\t\tthis.logger.debug(\"Call action locally.\", { action: ctx.action.name, requestID: ctx.requestID });\n\t\telse\n\t\t\tthis.logger.debug(\"Call action on remote node.\", { action: ctx.action.name, nodeID: ctx.nodeID, requestID: ctx.requestID });\n\n\t\t//this.setCurrentContext(ctx);\n\n\t\tlet p = ctx.endpoint.action.handler(ctx);\n\n\t\t// Pointer to Context\n\t\tp.ctx = ctx;\n\n\t\treturn p;\n\t}\n\n\t/**\n\t * Call an action without built-in balancer.\n\t * You don't call it directly. Broker will replace the\n\t * original 'call' method to this if you disable the\n\t * built-in balancer with the \"disableBalancer\" option.\n\t *\n\t * @param {String} actionName\tname of action\n\t * @param {Object?} params\t\tparams of action\n\t * @param {Object?} opts \t\toptions of call (optional)\n\t * @returns {Promise}\n\t *\n\t * @private\n\t * @memberof ServiceBroker\n\t */\n\tcallWithoutBalancer(actionName, params, opts = {}) {\n\t\tif (params === undefined)\n\t\t\tparams = {}; // Backward compatibility\n\n\t\tlet nodeID = null;\n\t\tlet endpoint = null;\n\t\tif (typeof actionName !== \"string\") {\n\t\t\tendpoint = actionName;\n\t\t\tactionName = endpoint.action.name;\n\t\t\tnodeID = endpoint.id;\n\t\t} else {\n\t\t\tif (opts.nodeID) {\n\t\t\t\tnodeID = opts.nodeID;\n\t\t\t\tendpoint = this.registry.getActionEndpointByNodeId(actionName, nodeID);\n\t\t\t\tif (!endpoint) {\n\t\t\t\t\tthis.logger.warn(`Service '${actionName}' is not found on '${nodeID}' node.`);\n\t\t\t\t\treturn this.Promise.reject(new E.ServiceNotFoundError({ action: actionName, nodeID })).catch(err => this.errorHandler(err, { nodeID, actionName, params, opts }));\n\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Get endpoint list by action name\n\t\t\t\tconst epList = this.registry.getActionEndpoints(actionName);\n\t\t\t\tif (epList == null) {\n\t\t\t\t\tthis.logger.warn(`Service '${actionName}' is not registered.`);\n\t\t\t\t\treturn this.Promise.reject(new E.ServiceNotFoundError({ action: actionName })).catch(err => this.errorHandler(err, { actionName, params, opts }));\n\n\t\t\t\t}\n\n\t\t\t\tendpoint = epList.getFirst();\n\t\t\t\tif (endpoint == null) {\n\t\t\t\t\tconst errMsg = `Service '${actionName}' is not available.`;\n\t\t\t\t\tthis.logger.warn(errMsg);\n\t\t\t\t\treturn this.Promise.reject(new E.ServiceNotAvailableError({ action: actionName })).catch(err => this.errorHandler(err, { actionName, params, opts }));\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Create context\n\t\tlet ctx;\n\t\tif (opts.ctx != null) {\n\t\t\t// Reused context\n\t\t\tctx = opts.ctx;\n\t\t\tif (endpoint) {\n\t\t\t\tctx.endpoint = endpoint;\n\t\t\t\tctx.action = endpoint.action;\n\t\t\t}\n\t\t} else {\n\t\t\t// New root context\n\t\t\tctx = this.ContextFactory.create(this, endpoint, params, opts);\n\t\t}\n\t\tctx.nodeID = nodeID;\n\n\t\tthis.logger.debug(\"Call action on a node.\", { action: ctx.action.name, nodeID: ctx.nodeID, requestID: ctx.requestID });\n\n\t\tlet p = endpoint.action.remoteHandler(ctx);\n\n\t\t// Pointer to Context\n\t\tp.ctx = ctx;\n\n\t\treturn p;\n\t}\n\n\t_getLocalActionEndpoint(actionName, ctx) {\n\t\t// Find action by name\n\t\tlet epList = this.registry.getActionEndpoints(actionName);\n\t\tif (epList == null || !epList.hasLocal()) {\n\t\t\tthis.logger.warn(`Service '${actionName}' is not registered locally.`);\n\t\t\tthrow new E.ServiceNotFoundError({ action: actionName, nodeID: this.nodeID });\n\t\t}\n\n\t\t// Get local endpoint\n\t\tlet endpoint = epList.nextLocal(ctx);\n\t\tif (!endpoint) {\n\t\t\tthis.logger.warn(`Service '${actionName}' is not available locally.`);\n\t\t\tthrow new E.ServiceNotAvailableError({ action: actionName, nodeID: this.nodeID });\n\t\t}\n\n\t\treturn endpoint;\n\t}\n\n\t/**\n\t * Multiple action calls.\n\t *\n\t * @param {Array<Object>|Object} def Calling definitions.\n\t * @returns {Promise<Array<Object>|Object>}\n\t *\n\t * @example\n\t * Call `mcall` with an array:\n\t * ```js\n\t * broker.mcall([\n\t * \t{ action: \"posts.find\", params: { limit: 5, offset: 0 } },\n\t * \t{ action: \"users.find\", params: { limit: 5, sort: \"username\" }, opts: { timeout: 500 } }\n\t * ]).then(results => {\n\t * \tlet posts = results[0];\n\t * \tlet users = results[1];\n\t * })\n\t * ```\n\t *\n\t * @example\n\t * Call `mcall` with an Object:\n\t * ```js\n\t * broker.mcall({\n\t * \tposts: { action: \"posts.find\", params: { limit: 5, offset: 0 } },\n\t * \tusers: { action: \"users.find\", params: { limit: 5, sort: \"username\" }, opts: { timeout: 500 } }\n\t * }).then(results => {\n\t * \tlet posts = results.posts;\n\t * \tlet users = results.users;\n\t * })\n\t * ```\n\t * @throws MoleculerServerError - If the `def` is not an `Array` and not an `Object`.\n\t * @memberof ServiceBroker\n\t */\n\tmcall(def, opts) {\n\t\tif (Array.isArray(def)) {\n\t\t\treturn this.Promise.all(def.map(item => this.call(item.action, item.params, item.options || opts)));\n\n\t\t} else if (utils.isObject(def)) {\n\t\t\tlet results = {};\n\t\t\tlet promises = Object.keys(def).map(name => {\n\t\t\t\tconst item = def[name];\n\t\t\t\tconst options = item.options || opts;\n\t\t\t\treturn this.call(item.action, item.params, options).then(res => results[name] = res);\n\t\t\t});\n\n\t\t\tlet p = this.Promise.all(promises);\n\n\t\t\t// Pointer to Context\n\t\t\tp.ctx = promises.map(promise => promise.ctx);\n\n\t\t\treturn p.then(() => results);\n\t\t} else {\n\t\t\treturn this.Promise.reject(new E.MoleculerServerError(\"Invalid calling definition.\", 500, \"INVALID_PARAMETERS\"));\n\t\t}\n\t}\n\n\n\t/**\n\t * Emit an event (grouped & balanced global event)\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise<any>}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\temit(eventName, payload, opts) {\n\t\tif (Array.isArray(opts) || utils.isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\tconst promises = [];\n\n\t\tconst ctx = this.ContextFactory.create(this, null, payload, opts);\n\t\tctx.eventName = eventName;\n\t\tctx.eventType = \"emit\";\n\t\tctx.eventGroups = opts.groups;\n\n\t\tthis.logger.debug(`Emit '${eventName}' event`+ (opts.groups ? ` to '${opts.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\t// Call local/internal subscribers\n\t\tif (/^\\$/.test(eventName))\n\t\t\tthis.localBus.emit(eventName, payload);\n\n\t\tif (!this.options.disableBalancer) {\n\n\t\t\tconst endpoints = this.registry.events.getBalancedEndpoints(eventName, opts.groups);\n\n\t\t\t// Grouping remote events (reduce the network traffic)\n\t\t\tconst groupedEP = {};\n\n\t\t\tendpoints.forEach(([ep, group]) => {\n\t\t\t\tif (ep.id == this.nodeID) {\n\t\t\t\t\t// Local service, call handler\n\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\tpromises.push(this.registry.events.callEventHandler(newCtx));\n\t\t\t\t} else {\n\t\t\t\t\t// Remote service\n\t\t\t\t\tconst e = groupedEP[ep.id];\n\t\t\t\t\tif (e)\n\t\t\t\t\t\te.groups.push(group);\n\t\t\t\t\telse\n\t\t\t\t\t\tgroupedEP[ep.id] = {\n\t\t\t\t\t\t\tep,\n\t\t\t\t\t\t\tgroups: [group]\n\t\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.transit) {\n\t\t\t\t// Remote service\n\t\t\t\t_.forIn(groupedEP, item => {\n\t\t\t\t\tconst newCtx = ctx.copy(item.ep);\n\t\t\t\t\tnewCtx.eventGroups = item.groups;\n\t\t\t\t\tpromises.push(this.transit.sendEvent(newCtx));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this.Promise.all(promises);\n\n\t\t} else if (this.transit) {\n\t\t\t// Disabled balancer case\n\t\t\tlet groups = opts.groups;\n\n\t\t\tif (!groups || groups.length == 0) {\n\t\t\t\t// Apply to all groups\n\t\t\t\tgroups = this.getEventGroups(eventName);\n\t\t\t}\n\n\t\t\tif (groups.length == 0)\n\t\t\t\treturn this.Promise.resolve();\n\n\t\t\tctx.eventGroups = groups;\n\t\t\treturn this.transit.sendEvent(ctx);\n\t\t}\n\t}\n\n\t/**\n\t * Broadcast an event for all local & remote services\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tbroadcast(eventName, payload, opts) {\n\t\tif (Array.isArray(opts) || utils.isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\tconst promises = [];\n\n\t\tthis.logger.debug(`Broadcast '${eventName}' event`+ (opts.groups ? ` to '${opts.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\tif (this.transit) {\n\t\t\tconst ctx = this.ContextFactory.create(this, null, payload, opts);\n\t\t\tctx.eventName = eventName;\n\t\t\tctx.eventType = \"broadcast\";\n\t\t\tctx.eventGroups = opts.groups;\n\n\t\t\tif (!this.options.disableBalancer) {\n\t\t\t\tconst endpoints = this.registry.events.getAllEndpoints(eventName, opts.groups);\n\n\t\t\t\t// Send to remote services\n\t\t\t\tendpoints.forEach(ep => {\n\t\t\t\t\tif (ep.id != this.nodeID) {\n\t\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\t\tpromises.push(this.transit.sendEvent(newCtx));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Disabled balancer case\n\t\t\t\tlet groups = opts.groups;\n\n\t\t\t\tif (!groups || groups.length == 0) {\n\t\t\t\t\t// Apply to all groups\n\t\t\t\t\tgroups = this.getEventGroups(eventName);\n\t\t\t\t}\n\n\t\t\t\tif (groups.length == 0)\n\t\t\t\t\treturn; // Return here because balancer disabled, so we can't call the local services.\n\n\t\t\t\tconst endpoints = this.registry.events.getAllEndpoints(eventName, groups);\n\n\t\t\t\t// Return here because balancer disabled, so we can't call the local services.\n\t\t\t\treturn this.Promise.all(endpoints.map(ep => {\n\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\tnewCtx.eventGroups = groups;\n\t\t\t\t\treturn this.transit.sendEvent(newCtx);\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\t// Send to local services\n\t\tpromises.push(this.broadcastLocal(eventName, payload, opts));\n\n\t\treturn this.Promise.all(promises);\n\t}\n\n\t/**\n\t * Broadcast an event for all local services\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} groups\n\t * @returns\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tbroadcastLocal(eventName, payload, opts) {\n\t\tif (Array.isArray(opts) || utils.isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\tthis.logger.debug(`Broadcast '${eventName}' local event`+ (opts.groups ? ` to '${opts.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\t// Call internal subscribers\n\t\tif (/^\\$/.test(eventName))\n\t\t\tthis.localBus.emit(eventName, payload);\n\n\t\tconst ctx = this.ContextFactory.create(this, null, payload, opts);\n\t\tctx.eventName = eventName;\n\t\tctx.eventType = \"broadcastLocal\";\n\t\tctx.eventGroups = opts.groups;\n\n\t\treturn this.emitLocalServices(ctx);\n\t}\n\n\t/**\n\t * Send ping to a node (or all nodes if nodeID is null)\n\t *\n\t * @param {String|Array<String>?} nodeID\n\t * @param {Number?} timeout\n\t * @returns {Promise}\n\t * @memberof ServiceBroker\n\t */\n\tping(nodeID, timeout = 2000) {\n\t\tif (this.transit && this.transit.connected) {\n\t\t\tif (utils.isString(nodeID)) {\n\t\t\t\t// Ping a single node\n\t\t\t\treturn new this.Promise(resolve => {\n\n\t\t\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t\t\tthis.localBus.off(\"$node.pong\", handler);\n\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t}, timeout);\n\n\t\t\t\t\tconst handler = pong => {\n\t\t\t\t\t\tif (pong.nodeID == nodeID) {\n\t\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\t\tthis.localBus.off(\"$node.pong\", handler);\n\t\t\t\t\t\t\tresolve(pong);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.localBus.on(\"$node.pong\", handler);\n\n\t\t\t\t\tthis.transit.sendPing(nodeID);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tconst pongs = {};\n\t\t\t\tlet nodes = nodeID;\n\t\t\t\tif (!nodes) {\n\t\t\t\t\tnodes = this.registry.getNodeList({ onlyAvailable: true })\n\t\t\t\t\t\t.filter(node => node.id != this.nodeID)\n\t\t\t\t\t\t.map(node => node.id);\n\t\t\t\t}\n\n\t\t\t\tnodes.forEach(id => pongs[id] = null);\n\t\t\t\tconst processing = new Set(nodes);\n\n\t\t\t\t// Ping multiple nodes\n\t\t\t\treturn new this.Promise(resolve => {\n\n\t\t\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t\t\tthis.localBus.off(\"$node.pong\", handler);\n\t\t\t\t\t\tresolve(pongs);\n\t\t\t\t\t}, timeout);\n\n\t\t\t\t\tconst handler = pong => {\n\t\t\t\t\t\tpongs[pong.nodeID] = pong;\n\t\t\t\t\t\tprocessing.delete(pong.nodeID);\n\n\t\t\t\t\t\tif (processing.size == 0) {\n\t\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\t\tthis.localBus.off(\"$node.pong\", handler);\n\t\t\t\t\t\t\tresolve(pongs);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.localBus.on(\"$node.pong\", handler);\n\n\t\t\t\t\tnodes.forEach(id => this.transit.sendPing(id));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn this.Promise.resolve(nodeID ? null : []);\n\t}\n\n\t/**\n\t * Get local node health status\n\t *\n\t * @returns {Promise}\n\t * @memberof ServiceBroker\n\t */\n\tgetHealthStatus() {\n\t\treturn H.getHealthStatus(this);\n\t}\n\n\t/**\n\t * Get local node info.\n\t *\n\t * @returns\n\t * @memberof ServiceBroker\n\t */\n\tgetLocalNodeInfo() {\n\t\treturn this.registry.getLocalNodeInfo();\n\t}\n\n\t/**\n\t * Get event groups by event name\n\t *\n\t * @param {String} eventName\n\t * @returns\n\t * @memberof ServiceBroker\n\t */\n\tgetEventGroups(eventName) {\n\t\treturn this.registry.events.getGroups(eventName);\n\t}\n\n\t/**\n\t * Has registered event listener for an event name?\n\t *\n\t * @param {String} eventName\n\t * @returns {boolean}\n\t */\n\thasEventListener(eventName) {\n\t\treturn this.registry.events.getAllEndpoints(eventName).length > 0;\n\t}\n\n\t/**\n\t * Get all registered event listener for an event name.\n\t *\n\t * @param {String} eventName\n\t * @returns {Array<Object>}\n\t */\n\tgetEventListeners(eventName) {\n\t\treturn this.registry.events.getAllEndpoints(eventName);\n\t}\n\n\t/**\n\t * Emit event to local nodes. It is called from transit when a remote event received\n\t * or from `broadcastLocal`\n\t *\n\t * @param {Context} ctx\n\t * @returns\n\t * @memberof ServiceBroker\n\t */\n\temitLocalServices(ctx) {\n\t\treturn this.registry.events.emitLocalServices(ctx);\n\t}\n\n\t/**\n\t * Set the current Context to the async storage.\n\t *\n\t * @param {Context} ctx\n\t * @memberof ServiceBroker\n\t *\n\tsetCurrentContext(ctx) {\n\t\tthis.scope.setSessionData(ctx);\n\t}*/\n\n\t/**\n\t * Get the current Context from the async storage.\n\t *\n\t * @returns {Context?}\n\t * @memberof ServiceBroker\n\t *\n\tgetCurrentContext() {\n\t\treturn this.scope.getSessionData();\n\t}*/\n\n\t/**\n\t * Get node overall CPU usage\n\t *\n\t * @returns {Promise<object>}\n\t * @memberof ServiceBroker\n\t */\n\tgetCpuUsage() {\n\t\treturn cpuUsage();\n\t}\n\n\t/**\n\t * Generate an UUID.\n\t *\n\t * @returns {String} uuid\n\t */\n\tgenerateUid() {\n\t\tif (this.options.uidGenerator)\n\t\t\treturn this.options.uidGenerator.call(this, this);\n\n\t\treturn utils.generateToken();\n\t}\n\n\n\t/**\n\t * Get the Constructor name of any object if it exists\n\t * @param {any} obj\n\t * @returns {string}\n\t *\n\t */\n\tgetConstructorName(obj) {\n\t\tlet target = obj.prototype;\n\t\tif (target && target.constructor && target.constructor.name){\n\t\t\treturn target.constructor.name;\n\t\t}\n\t\tif (obj.constructor && obj.constructor.name){\n\t\t\treturn obj.constructor.name;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Ensure the service schema will be prototype of ServiceFactory;\n\t *\n\t * @param {any} schema\n\t * @returns {string}\n\t *\n\t */\n\tnormalizeSchemaConstructor(schema) {\n\t\tif (Object.prototype.isPrototypeOf.call(this.ServiceFactory, schema)) {\n\t\t\treturn schema;\n\t\t}\n\t\t// Sometimes the schame was loaded from another node_module or is a object copy.\n\t\t// Then we will check if the constructor name is the same, asume that is a derivate object\n\t\t// and adjust the prototype of the schema.\n\t\tlet serviceName = this.getConstructorName(this.ServiceFactory);\n\t\tlet target = this.getConstructorName(schema);\n\t\tif (serviceName === target){\n\t\t\tObject.setPrototypeOf(schema, this.ServiceFactory);\n\t\t\treturn schema;\n\t\t}\n\t\t// Depending how the schema was create the correct constructor name (from base class) will be locate on __proto__.\n\t\ttarget = this.getConstructorName(schema.__proto__);\n\t\tif (serviceName === target){\n\t\t\tObject.setPrototypeOf(schema.__proto__, this.ServiceFactory);\n\t\t\treturn schema;\n\t\t}\n\t\t// This is just to handle some idiosyncrasies from Jest.\n\t\tif (schema._isMockFunction){\n\t\t\ttarget = this.getConstructorName(schema.prototype.__proto__);\n\t\t\tif (serviceName === target){\n\t\t\t\tObject.setPrototypeOf(schema, this.ServiceFactory);\n\t\t\t\treturn schema;\n\t\t\t}\n\t\t}\n\t\treturn schema;\n\t}\n}\n\n/**\n * Version of Moleculer\n */\nServiceBroker.MOLECULER_VERSION = require(\"../package.json\").version;\nServiceBroker.prototype.MOLECULER_VERSION = ServiceBroker.MOLECULER_VERSION;\n\n/**\n * Version of Protocol\n */\nServiceBroker.PROTOCOL_VERSION = \"4\";\nServiceBroker.prototype.PROTOCOL_VERSION = ServiceBroker.PROTOCOL_VERSION;\n\n/**\n * Default configuration\n */\nServiceBroker.defaultOptions = defaultOptions;\n\nmodule.exports = ServiceBroker;\n","/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst {\n\tCIRCUIT_CLOSE,\n\tCIRCUIT_HALF_OPEN,\n\tCIRCUIT_HALF_OPEN_WAIT,\n\tCIRCUIT_OPEN\n} = require(\"./src/constants\");\n\nmodule.exports = {\n\tServiceBroker: require(\"./src/service-broker\"),\n\tLoggers: require(\"./src/loggers\"),\n\tService: require(\"./src/service\"),\n\tContext: require(\"./src/context\"),\n\n\tCachers: require(\"./src/cachers\"),\n\n\tTransporters: require(\"./src/transporters\"),\n\tSerializers: require(\"./src/serializers\"),\n\tStrategies: require(\"./src/strategies\"),\n\tValidators: require(\"./src/validators\"),\n\tValidator: require(\"./src/validators/fastest\"), // deprecated\n\tTracerExporters: require(\"./src/tracing/exporters\"),\n\tMetricTypes: require(\"./src/metrics/types\"),\n\tMetricReporters: require(\"./src/metrics/reporters\"),\n\tMETRIC: require(\"./src/metrics/constants\"),\n\n\tRegistry: require(\"./src/registry\"),\n\tDiscoverers: require(\"./src/registry/discoverers\"),\n\n\tMiddlewares: require(\"./src/middlewares\"),\n\n\tErrors: require(\"./src/errors\"),\n\n\tRunner: require(\"./src/runner\"),\n\tUtils: require(\"./src/utils\"),\n\n\tCIRCUIT_CLOSE,\n\tCIRCUIT_HALF_OPEN,\n\tCIRCUIT_HALF_OPEN_WAIT,\n\tCIRCUIT_OPEN,\n\n\tMOLECULER_VERSION: require(\"./src/service-broker\").MOLECULER_VERSION,\n\tPROTOCOL_VERSION: require(\"./src/service-broker\").PROTOCOL_VERSION\n};\n"],"names":["CIRCUIT_CLOSE","CIRCUIT_HALF_OPEN","CIRCUIT_HALF_OPEN_WAIT","CIRCUIT_OPEN","queueMicrotask","_process","nextTick","handler","args","memoryUsage","performance","memory","rss","heapTotal","Number","MAX_SAFE_INTEGER","heapUsed","external","totalJSHeapSize","usedJSHeapSize","_getActiveHandles","_getActiveRequests","setTimeout","require$$0","PACKET_UNKNOWN","PACKET_EVENT","PACKET_REQUEST","PACKET_RESPONSE","PACKET_DISCOVER","PACKET_INFO","PACKET_DISCONNECT","PACKET_HEARTBEAT","PACKET_PING","PACKET_PONG","PACKET_GOSSIP_REQ","PACKET_GOSSIP_RES","PACKET_GOSSIP_HELLO","DATATYPE_UNDEFINED","DATATYPE_NULL","DATATYPE_JSON","DATATYPE_BUFFER","Packet","[object Object]","type","target","payload","this","MoleculerError","ExtendableError","message","code","data","super","retryable","MoleculerRetryableError","MoleculerClientError","module","MoleculerServerError","ServiceNotFoundError","msg","nodeID","action","service","version","ServiceNotAvailableError","ValidationError","RequestTimeoutError","RequestSkippedError","RequestRejectedError","QueueIsFullError","MaxCallLevelError","level","ServiceSchemaError","BrokerOptionsError","GracefulStopTimeoutError","name","ProtocolVersionMismatchError","InvalidPacketDataError","BrokerDisconnectedError","stack","recreateError","err","Class","exports","TYPE_COUNTER","TYPE_GAUGE","TYPE_HISTOGRAM","TYPE_INFO","PROCESS_ARGUMENTS","PROCESS_PID","PROCESS_PPID","PROCESS_MEMORY_HEAP_SIZE_TOTAL","PROCESS_MEMORY_HEAP_SIZE_USED","PROCESS_MEMORY_RSS","PROCESS_MEMORY_EXTERNAL","PROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL","PROCESS_MEMORY_HEAP_SPACE_SIZE_USED","PROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE","PROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL","PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL","PROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL","PROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL","PROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL","PROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE","PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT","PROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY","PROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY","PROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE","PROCESS_UPTIME","PROCESS_INTERNAL_ACTIVE_HANDLES","PROCESS_INTERNAL_ACTIVE_REQUESTS","PROCESS_VERSIONS_NODE","PROCESS_EVENTLOOP_LAG_MIN","PROCESS_EVENTLOOP_LAG_AVG","PROCESS_EVENTLOOP_LAG_MAX","PROCESS_EVENTLOOP_LAG_COUNT","PROCESS_GC_TIME","PROCESS_GC_TOTAL_TIME","PROCESS_GC_EXECUTED_TOTAL","OS_MEMORY_FREE","OS_MEMORY_USED","OS_MEMORY_TOTAL","OS_UPTIME","OS_TYPE","OS_RELEASE","OS_HOSTNAME","OS_ARCH","OS_PLATFORM","OS_USER_UID","OS_USER_GID","OS_USER_USERNAME","OS_USER_HOMEDIR","OS_DATETIME_UNIX","OS_DATETIME_ISO","OS_DATETIME_UTC","OS_DATETIME_TZ_OFFSET","OS_NETWORK_ADDRESS","OS_NETWORK_MAC","OS_CPU_LOAD_1","OS_CPU_LOAD_5","OS_CPU_LOAD_15","OS_CPU_UTILIZATION","OS_CPU_USER","OS_CPU_SYSTEM","OS_CPU_TOTAL","OS_CPU_INFO_MODEL","OS_CPU_INFO_SPEED","OS_CPU_INFO_TIMES_USER","OS_CPU_INFO_TIMES_SYS","MOLECULER_NODE_TYPE","MOLECULER_NODE_VERSIONS_MOLECULER","MOLECULER_NODE_VERSIONS_LANG","MOLECULER_NODE_VERSIONS_PROTOCOL","MOLECULER_BROKER_NAMESPACE","MOLECULER_BROKER_STARTED","MOLECULER_BROKER_LOCAL_SERVICES_TOTAL","MOLECULER_BROKER_MIDDLEWARES_TOTAL","MOLECULER_REGISTRY_NODES_TOTAL","MOLECULER_REGISTRY_NODES_ONLINE_TOTAL","MOLECULER_REGISTRY_SERVICES_TOTAL","MOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL","MOLECULER_REGISTRY_ACTIONS_TOTAL","MOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL","MOLECULER_REGISTRY_EVENTS_TOTAL","MOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL","MOLECULER_REQUEST_TOTAL","MOLECULER_REQUEST_ACTIVE","MOLECULER_REQUEST_ERROR_TOTAL","MOLECULER_REQUEST_TIME","MOLECULER_REQUEST_LEVELS","MOLECULER_EVENT_EMIT_TOTAL","MOLECULER_EVENT_BROADCAST_TOTAL","MOLECULER_EVENT_BROADCASTLOCAL_TOTAL","MOLECULER_EVENT_RECEIVED_TOTAL","MOLECULER_EVENT_RECEIVED_ACTIVE","MOLECULER_EVENT_RECEIVED_ERROR_TOTAL","MOLECULER_EVENT_RECEIVED_TIME","MOLECULER_TRANSIT_PUBLISH_TOTAL","MOLECULER_TRANSIT_RECEIVE_TOTAL","MOLECULER_TRANSIT_REQUESTS_ACTIVE","MOLECULER_TRANSIT_STREAMS_SEND_ACTIVE","MOLECULER_TRANSIT_READY","MOLECULER_TRANSIT_CONNECTED","MOLECULER_TRANSIT_PONG_TIME","MOLECULER_TRANSIT_PONG_SYSTIME_DIFF","MOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL","MOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL","MOLECULER_TRANSPORTER_PACKETS_SENT_BYTES","MOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL","MOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES","MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE","MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL","MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE","MOLECULER_REQUEST_FALLBACK_TOTAL","MOLECULER_REQUEST_BULKHEAD_INFLIGHT","MOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE","MOLECULER_EVENT_BULKHEAD_INFLIGHT","MOLECULER_EVENT_BULKHEAD_QUEUE_SIZE","MOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL","MOLECULER_REQUEST_TIMEOUT_TOTAL","MOLECULER_CACHER_GET_TOTAL","MOLECULER_CACHER_GET_TIME","MOLECULER_CACHER_FOUND_TOTAL","MOLECULER_CACHER_SET_TOTAL","MOLECULER_CACHER_SET_TIME","MOLECULER_CACHER_DEL_TOTAL","MOLECULER_CACHER_DEL_TIME","MOLECULER_CACHER_CLEAN_TOTAL","MOLECULER_CACHER_CLEAN_TIME","MOLECULER_CACHER_EXPIRED_TOTAL","MOLECULER_DISCOVERER_REDIS_COLLECT_TOTAL","MOLECULER_DISCOVERER_REDIS_COLLECT_TIME","MOLECULER_DISCOVERER_ETCD_COLLECT_TOTAL","MOLECULER_DISCOVERER_ETCD_COLLECT_TIME","UNIT_BIT","UNIT_BYTE","UNIT_KILOBYTES","UNIT_MEGABYTE","UNIT_GIGABYTE","UNIT_TERRABYTE","UNIT_PETABYTE","UNIT_EXOBYTE","UNIT_NANOSECONDS","UNIT_MICROSECONDS","UNIT_MILLISECONDS","UNIT_SECONDS","UNIT_MINUTE","UNIT_HOUR","UNIT_DAY","UNIT_WEEK","UNIT_MONTH","UNIT_YEAR","UNIT_HANDLE","UNIT_CPU","UNIT_GHZ","UNIT_REQUEST","UNIT_CONNECTION","UNIT_PACKET","UNIT_MESSAGE","UNIT_STREAM","UNIT_EVENT","setInterval","FORCE_COLOR","NODE_DISABLE_COLORS","NO_COLOR","TERM","isTTY","process","env","stdout","$","enabled","reset","init","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","grey","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","run","arr","str","tmp","i","beg","end","length","open","close","includes","replace","rgx","blk","RegExp","txt","has","push","keys","ctx","bind","chain","_osLoadAvg","time","Math","floor","Date","now","avg","getCpuUsage","sampleTime","engine","RafPerf","performances","samplesCount","sampleDuration","Promise","resolve","reject","once","ratio","stop","Error","avgByCpu","cpus","currentTime","updateLoadAvg","usages","map","cpu","start","loadavg","value","cpuUsage","totalmem","freemem","os","lut","toString","RegexCache","Map","deprecateList","byteMultipliers","b","kb","mb","gb","tb","pow","pb","parseByteStringRe","TimeoutError","units","divisors","utils","isFunction","fn","isString","s","String","isObject","o","isPlainObject","Object","getPrototypeOf","prototype","flatten","Array","reduce","call","a","concat","milli","val","d0","random","d1","d2","d3","item","idx","indexOf","splice","getNodeID","hostname","toLowerCase","pid","list","ilist","interfaces","networkInterfaces","iface","f","family","internal","address","isPromise","p","then","P","method","apply","arguments","delay","ms","res","timeout","timer","race","clearTimeout","catch","mapSeries","promFn","r","slice","filename","require","cache","forEach","key","text","pattern","firstStarPosition","len","endsWith","substring","startsWith","lastIndexOf","origPattern","regex","get","set","test","prop","console","warn","kleur","safetyObject","obj","options","JSON","parse","stringify","maxSafeObjectSize","Infinity","seen","WeakSet","objectType","constructor","size","add","circularReplacer","path","parts","split","part","shift","hasOwnProperty","dotSet","join","sep","prevPath","folder","currentPath","fs","existsSync","mkdirSync","v","isNaN","floatValue","results","exec","unit","parseFloat","parseInt","opts","registry","description","labelNames","aggregator","defaultAggregator","lastSnapshot","dirty","values","labels","hash","hashingLabels","changed","generateSnapshot","clearDirty","timestamp","setDirty","snapshot","metric","min","rate","lastValue","lastTickTime","tick","INTERVAL","unref","elapsedSec","diff","oneMinRate","abs","pick","BaseMetric","METRIC","update","MetricRate","from","GaugeMetric","sortAscending","setProp","k","HistogramMetric","linearBuckets","buckets","generateLinearBuckets","width","count","exponentialBuckets","generateExponentialBuckets","factor","isArray","defaultBuckets","sort","quantiles","defaultQuantiles","maxAgeSeconds","defaultMaxAgeSeconds","ageBuckets","defaultAgeBuckets","resetItem","_","sum","bucketValues","quantileValues","bound","generateItemSnapshot","assign","createBucketValues","TimeWindowQuantiles","ringBuckets","Bucket","currentBucket","rotate","clear","samples","mean","variance","stdDev","sqrt","max","q","ceil","Types","Base","require$$1","Counter","require$$2","Gauge","require$$3","Histogram","require$$4","Info","require$$5","TypeClass","n","find","getByName","register","match","defaultsDeep","excludes","metricNamePrefix","metricNameSuffix","metricNameFormatter","labelNameFormatter","broker","logger","some","every","BaseReporter","interval","colors","onlyChanges","lastChanges","Set","print","formatLabelName","filter","log","formatMetricName","pluralizeUnit","labelStr","labelsToStr","toFixed","info","matchMetricName","eventName","broadcast","groups","sendEvent","debug","emit","Reporters","Console","CSV","Event","Datadog","require$$6","Prometheus","require$$7","StatsD","require$$8","opt","ReporterClass","v8","eventLoop","e","startGCWatcher","gc","on","stats","pause","increment","gctype","startEventLoopStats","registerCommonMetrics","argv","arg","index","ppid","versions","node","release","arch","platform","userInfo","getUserInfo","uid","gid","username","homedir","store","updateCommonMetrics","procMem","getHeapSpaceStatistics","space","space_name","space_size","space_used_size","space_available_size","physical_space_size","getHeapStatistics","stat","total_heap_size","total_heap_size_executable","total_physical_size","total_available_size","used_heap_size","heap_size_limit","malloced_memory","peak_malloced_memory","does_zap_garbage","uptime","freeMem","totalMem","usedMem","getNetworkInterfaces","interface","mac","d","valueOf","toISOString","toUTCString","getTimezoneOffset","load","sense","num","duration","first","times","second","third","first_idle","idle","first_total","user","nice","sys","irq","second_idle","second_total","third_idle","per_usage","model","speed","METRIC_NAME_REGEXP","METRIC_LABEL_REGEXP","getLogger","collectProcessMetrics","NODE_ENV","collectInterval","reporter","reporters","compact","reporterNames","getConstructorName","collectTimer","clearInterval","all","MetricClass","getMetric","decrement","observe","resetAll","hrtime","delta","metricChanged","types","toObject","CounterMetric","HistrogramMetric","InfoMetric","Transform","transporter","metrics","instanceID","tx","discoverer","pendingRequests","pendingReqStreams","pendingResStreams","packets","sent","bytes","received","connected","disconnecting","isReady","wrappedMessageHandler","cmd","packet","messageHandler","publish","wrapMethod","afterConnect","send","receive","reverse","__connectResolve","registerMoleculerMetrics","isMetricsEnabled","wasReconnect","sendLocalNodeInfo","makeSubscriptions","discoverAllNodes","broadcastLocal","doConnect","reconnectStarted","errorHandler","disableReconnect","connect","graceFul","localNodeDisconnected","disconnect","localNodeReady","subscribing","E","ver","PROTOCOL_VERSION","disableVersionCheck","sender","actual","fatal","requestHandler","responseHandler","eventHandler","processRemoteNodeInfo","remoteNodeDisconnected","heartbeatReceived","sendPong","processPong","error","event","started","ContextFactory","id","setParams","contextParamsCloning","eventGroups","eventType","meta","tracing","parentID","requestID","caller","emitLocalServices","pass","undefined","stream","_handleIncomingRequestStream","endpoint","_getLocalActionEndpoint","setEndpoint","params","sendResponse","isNew","seq","objectMode","transform","chunk","encoding","done","$prevSeq","$pool","_createErrFromPayload","delete","write","Buffer","nextSeq","nextPacket","setImmediate","req","_handleIncomingResponseStream","removePendingRequest","success","maxQueueSize","limit","_sendRequest","isStream","readable","pipe","request","readableObjectMode","_readableState","nodeName","publishCatch","chunks","maxChunkSize","ch","copy","resume","_createPayloadErrorField","needAck","disableBalancer","makeBalancedSubscriptions","services","ipList","client","config","metadata","generateUid","arrived","elapsedTime","timeDiff","round","targetNodeID","localNode","topic","subscribe","prepublish","BaseStrategy","counter","sampleCount","lowLatency","collectCount","pingInterval","brokerStopped","hostAvgLatency","hostMap","transit","localBus","listenerCount","addNode","removeHostMap","discovery","removeHostLatency","updateLatency","sendPing","pingHosts","hosts","host","nodeList","nodes","getHostLatency","historicLatency","avgLatency","latency","minEp","minLatency","ep","epLatency","shardKey","vnodes","ringSize","cacheSize","LRU","maxAge","needRebuild","ring","getKeyFromContext","rebuild","getNodeIDByKey","cached","hashNum","getHash","found","ringLen","crypto","createHash","digest","total","j","Strategies","RoundRobin","Random","CpuUsage","Latency","Shard","isPrototypeOf","StrategyClass","heartbeatInterval","heartbeatTimeout","disableHeartbeatChecks","disableOfflineNodeRemoving","cleanOfflineNodesTimeout","heartbeatTimer","checkNodesTimer","offlineTimer","startHeartbeatTimers","stopHeartbeatTimers","beat","checkRemoteNodes","checkOfflineNodes","updateLocalInfo","sendHeartbeat","toArray","local","available","lastHeartbeatTime","disconnected","discoverNode","heartbeat","processNodeInfo","sendDisconnectPacket","isUnexpected","BaseDiscoverer","discoverNodes","getLocalNodeInfo","sendNodeInfo","Discoverers","Local","Etcd3","Redis","DiscovererClass","port","udpAddress","rawInfo","cpuSeq","offlineSince","isReconnected","newSeq","newVal","getIpList","createLocalNode","Node","MOLECULER_VERSION","langVersion","registerServices","reconnected","updateMetrics","unregisterServicesByNode","unexpected","removePendingRequestByNodeID","onlyAvailable","withServices","omit","fullName","settings","actions","events","svc","removeFromArray","ServiceItem","equals","onlyLocal","skipInternal","withActions","withEvents","grouping","forIn","protected","dependencies","remove","removeByService","group","EndPointFactory","StrategyFactory","strategyOptions","strategy","endpoints","localEndpoints","setLocalEndpoints","ret","select","hasLocal","nextLocal","isAvailable","preferLocal","epList","destroy","state","Endpoint","EndpointFactory","EventEndpoint","groupName","strategyFactory","EndpointList","next","uniq","groupNames","uniqBy","isBroadcast","promises","newCtx","callEventHandler","removeByNodeID","withEndpoints","hasAvailable","ActionEndpoint","actionName","NodeCatalog","ServiceCatalog","ActionCatalog","EventCatalog","onlineCount","registerActions","registerEvents","regenerateLocalRawInfo","servicesChanged","serviceList","prevActions","prevEvents","ServiceFactory","getVersionedFullName","unregisterAction","unregisterEvent","exist","unregisterService","visibility","checkActionVisibility","middlewares","wrapHandler","remoteHandler","addAction","getEndpointByNodeID","removeAllByNodeID","addEvent","incSeq","getLocalNodeServices","force","BaseLogger","createLogger","loggerFactory","mod","toUpperCase","m","LEVELS","moduleColors","formatter","objectPrinter","autoPadding","maxPrefixLength","util","inspect","showHidden","depth","breakLength","POSITIVE_INFINITY","levelColorStr","getColor","padEnd","charCodeAt","repeat","bindings","modColorName","getNextColor","c","moduleColorName","printArgs","ts","prefixLen","substr","padLeft","render","FormattedLogger","getLogLevel","levelIdx","getFormatter","pargs","Loggers","Formatted","Bunyan","Debug","File","Log4js","Pino","require$$9","Winston","require$$10","LoggerClass","noop","cwd","appenders","globalLogLevel","logLevel","app","appender","_prepareStackTrace","prepareStackTrace","site","getFileName","lineNumber","getLineNumber","columnNumber","getColumnNumber","methodName","getMethodName","functionName","getFunctionName","getBindingsKey","logHandlers","getLogHandler","registeredHooks","newLogEntry","callSyncHandlers","paramName","self","localAction","check","compile","localEvent","BaseValidator","validator","Validator","schema","validate","Validators","Fastest","ValidatorClass","ttl","keygen","maxParamsLength","prefix","namespace","keyPrefix","_hashedKey","_generateKeyFromObject","getParamMetaValue","prefixLength","base64Hash","defaultKeygen","lock","isEnabledFunction","cacheKey","getCacheKey","cachePromise","staleTime","getWithTTL","tryLock","unlock","result","del","cachedResult","content","locked","BaseCacher","_lock","Lock","checkTTL","clone","cloneDeep","clean","timeEnd","expire","matches","acquire","isLocked","updateAgeOnGet","prune","Cachers","Memory","MemoryLRU","CacherClass","hasBuiltInBalancer","topics","deserialize","incomingMessage","getTopicName","serialize","balanced","unsubscribeFromBalancedCommands","subscribeBalancedRequest","subscribeBalancedEvent","publishBalancedEvent","publishBalancedRequest","serializer","buf","EventEmitter2","bus","wildcard","maxListeners","Transporter","global","subscriptions","onConnected","off","t","Transporters","Fake","NATS","MQTT","AMQP","AMQP10","Kafka","STAN","TCP","require$$11","TransporterClass","convertDataToTransport","online","offline","convertDataFromTransport","field","fieldType","isBuffer","BaseSerializer","Serializers","Avro","MsgPack","ProtoBuf","Thrift","Notepack","SerializerClass","getClientInfo","getCpuInfo","load1","load5","load15","cores","utilization","getMemoryInfo","mem","free","percent","getOsInfo","getProcessInfo","getNetworkInterfacesInfo","ip","getDateTimeInfo","iso","utc","net","wrapActionErrorHandler","defineProperty","writable","enumerable","wrapEventErrorHandler","fflate","deflateSync","inflateSync","gzip","gunzip","zlibSync","unzlibSync","parseByteString","promisify","makeDirs","ActionHook","callHook","hook","callErrorHook","sanitizeHooks","hooks","h","rawName","beforeAllHook","before","afterAllHook","after","errorAllHook","beforeHook","afterHook","errorHook","actionBeforeHook","actionAfterHook","actionErrorHook","Bulkhead","bulkhead","queue","currentInFlight","callNext","concurrency","ContextTracker","removeContext","_trackedContexts","wrapTrackerMiddleware","tracking","addContext","waitingForActiveContexts","timedOut","checkForContexts","remoteAction","serviceStopping","$shutdownTimeout","shutdownTimeout","stopping","CircuitBreaker","windowTimer","createWindowTimer","windowTime","failures","resetStore","getEpState","C","cbTimer","affectedNodeID","circuitClose","checkThreshold","minRequestCount","threshold","halfOpen","halfOpenTime","trip","wrapCBMiddleware","circuitBreaker","halfOpenWait","failure","CircuitBreakerStore","Timeout","wrapTimeoutMiddleware","actionTimeout","requestTimeout","startHrTime","Retry","wrapRetryMiddleware","retryPolicy","attempts","retries","_retryAttempts","span","setError","addTags","retryAttempts","finishSpan","maxDelay","Fallback","wrapFallbackMiddleware","fallbackResponse","fallbackResult","handleContextFallback","fallback","ErrorHandler","Metrics","getActionHandler","actionDef","errorName","errorCode","errorType","transitMessageHandler","transporterSend","transporterReceive","Tracing","tracer","isTracingEnabled","getCurrentTraceID","getActiveSpanID","tags","callingLevel","remoteCall","callerNodeID","globalActionTags","actionTags","spanName","startSpan","traceID","sampled","fromCache","response","globalEventTags","eventTags","Debounce","debounce","Throttle","throttle","lastInvoke","HotReload","require$$12","Transmit","Encryption","password","algorithm","iv","encrypter","createCipheriv","createCipher","final","decrypter","createDecipheriv","createDecipher","Compression","compress","decompress","zlib","readInt8","Debugging","TransitLogger","targetFolder","saveToFile","getOwnPropertyNames","writeFile","coloringSend","logPacketData","extension","packetFilter","coloringReceive","logFn","transitPublish","ActionLogger","coloringRequest","logParams","logResponse","logMeta","whitelist","coloringResponse","coloringError","callingOpts","isWhiteListed","p2","mw","Middlewares","def","bindTo","convertToString","pp","flattenTags","errorFields","humanize","BaseTraceExporter","gaugeWidth","spans","children","parentItem","printRequest","removeSpanWithChildren","spanID","child","left","gstart","gstop","gw","p1","p3","caption","main","parents","last","spanItem","mainItem","mainSpan","w","indent","getSpanIndent","getCaption","getAlignedTexts","startTime","finishTime","drawLine","drawGauge","printSpanTime","drawTableTop","getTraceInfo","truncatedID","line","drawHorizonalLine","drawTableBottom","sendStartSpan","sendFinishSpan","spanConverter","defaultTags","flush","generateTracingData","newSpan","errorToObject","generateMetricPayload","processExtraMetrics","parent","endTime","assignExtraMetrics","scope","window","fetch","baseURL","ZIPKIN_URL","payloadOptions","shared","body","headers","Content-Type","status","statusText","makePayload","serviceName","kind","traceId","convertID","parentId","localEndpoint","remoteEndpoint","annotations","convertTime","span.type","ipv4","NEW_RELIC_TRACE_API_URL","insertKey","Api-Key","Data-Format","Data-Format-Version","Exporters","EventLegacy","Jaeger","Zipkin","NewRelic","ExporterClass","tracesPerSecond","lastTime","balance","maxBalance","cost","nodeLoadTime","getNanoSeconds","loadNs","loadMs","defProp","instance","propName","readOnly","priority","shouldSample","logs","spanStarted","fields","elapsed","spanFinished","Tracer","exporter","sampling","minPriority","stackTrace","sampleCounter","rateLimiter","RateLimiter","exporters","exporterNames","parentOpts","parentSpan","Span","invokeExporter","wrapToHander","wrapToArray","isNewSignature","Service","parseServiceSchema","originalSchema","mixins","applyMixins","merged","callMiddlewareHookSync","$noVersionPrefix","serviceSpecification","_getPublicSettings","methods","_createMethod","innerAction","_createAction","wrappedHandler","createPrivateActionEndpoint","create","innerEvent","_createEvent","_serviceSpecification","_init","$secureSettings","created","addLocalService","callMiddlewareHook","waitForServices","$dependencyTimeout","$dependencyInterval","dependencyInterval","registerLocalService","stopped","$noServiceNamePrefix","$cache","methodDef","eventDef","functionArguments","__newSignature","context","serviceNames","mixedSchema","mixin","mergeSchemas","mixinSchema","svcSchema","mods","mergeSchemaSettings","mergeSchemaMetadata","mergeSchemaHooks","mergeSchemaActions","mergeSchemaMethods","mergeSchemaEvents","mergeSchemaLifecycleHandlers","mergeSchemaUniqArray","customFnName","mergeSchemaUnknown","src","srcSS","targetSS","uniqWith","isEqual","k2","modHook","resHook","srcAction","targetAction","modEvent","resEvent","mergeMeta","newMeta","Context","locals","_spanStack","ackID","cloning","paramsCloning","parentCtx","newParams","_opts","distTimeout","maxCallLevel","mcall","isActive","finish","findIndex","sp","custom","stylize","inner","toJSON","MetricRegistry","defaultOptions","uidGenerator","cacher","internalServices","internalMiddlewares","hotReload","replCommands","replDelimiter","skipProcessEventRegistration","ServiceBroker","polyfillPromise","generateToken","LoggerFactory","MiddlewareHandler","Registry","serializerName","validatorName","registerMiddlewares","Transit","txName","callWithoutBalancer","registerInternalServices","_closeFn","exit","setMaxListeners","userMiddlewares","prevCount","middleware","createService","destroyService","_start","ready","_stop","removeListener","repl","delimiter","customCommands","callHandlers","isEnabled","props","ns","needExit","fileMask","serviceFiles","glob","sync","loadService","filePath","fName","basename","default","normalizeSchemaConstructor","_restartService","__filename","schemaMods","registryItem","serviceVersion","getLocalService","localService","optional","convert","getNodeList","getServiceList","getActionList","getEventList","health","getHealthStatus","rules","items","x","hasService","getActionEndpointByNodeId","getActionEndpoints","errMsg","findNextActionEndpoint","getFirst","promise","getBalancedEndpoints","groupedEP","getEventGroups","getAllEndpoints","pong","pongs","processing","H","getGroups","setPrototypeOf","__proto__","_isMockFunction","TracerExporters","MetricTypes","MetricReporters","require$$13","require$$14","require$$15","require$$16","require$$17","Errors","require$$18","Runner","require$$19","Utils","require$$20"],"mappings":"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"}