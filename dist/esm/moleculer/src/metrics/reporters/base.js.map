{"version":3,"file":"base.js","sources":["../../../../../../src/moleculer/src/metrics/reporters/base.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { match, isString } = require(\"../../utils\");\n\n/**\n * Metric reporter base class.\n *\n * @class BaseReporter\n */\nclass BaseReporter {\n\n\t/**\n\t * Creates an instance of BaseReporter.\n\t *\n\t * @param {Object} opts\n\t * @memberof BaseReporter\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tincludes: null,\n\t\t\texcludes: null,\n\n\t\t\tmetricNamePrefix: null,\n\t\t\tmetricNameSuffix: null,\n\n\t\t\tmetricNameFormatter: null,\n\t\t\tlabelNameFormatter: null,\n\t\t});\n\n\t\tif (isString(this.opts.includes))\n\t\t\tthis.opts.includes = [this.opts.includes];\n\n\t\tif (isString(this.opts.excludes))\n\t\t\tthis.opts.excludes = [this.opts.excludes];\n\t}\n\n\t/**\n\t * Initialize reporter\n\t *\n\t * @param {MetricRegistry} registry\n\t * @memberof BaseReporter\n\t */\n\tinit(registry) {\n\t\tthis.registry = registry;\n\t\tthis.broker = this.registry.broker;\n\t\tthis.logger = this.registry.logger;\n\t}\n\n\t/**\n\t * Stop reporter\n\t *\n\t * @memberof BaseReporter\n\t */\n\tstop() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Match the metric name. Check the `includes` & `excludes` patterns.\n\t *\n\t * @param {String} name\n\t * @returns {boolean}\n\t * @memberof BaseReporter\n\t */\n\tmatchMetricName(name) {\n\t\tif (Array.isArray(this.opts.includes)) {\n\t\t\tif (!this.opts.includes.some(pattern => match(name, pattern)))\n\t\t\t\treturn false;\n\t\t}\n\n\t\tif (Array.isArray(this.opts.excludes)) {\n\t\t\tif (!this.opts.excludes.every(pattern => !match(name, pattern)))\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Format metric name. Add prefix, suffix and call custom formatter.\n\t *\n\t * @param {String} name\n\t * @returns {String}\n\t * @memberof BaseReporter\n\t */\n\tformatMetricName(name) {\n\t\tname = (this.opts.metricNamePrefix ? this.opts.metricNamePrefix : \"\") + name + (this.opts.metricNameSuffix ? this.opts.metricNameSuffix : \"\");\n\t\tif (this.opts.metricNameFormatter)\n\t\t\treturn this.opts.metricNameFormatter(name);\n\t\treturn name;\n\t}\n\n\t/**\n\t * Format label name. Call custom formatter.\n\t *\n\t * @param {String} name\n\t * @returns {String}\n\t * @memberof BaseReporter\n\t */\n\tformatLabelName(name) {\n\t\tif (this.opts.labelNameFormatter)\n\t\t\treturn this.opts.labelNameFormatter(name);\n\t\treturn name;\n\t}\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof BaseReporter\n\t */\n\tmetricChanged(/*metric, value, labels, timestamp*/) {\n\t\t// Not implemented. Abstract method\n\t}\n}\n\nmodule.exports = BaseReporter;\n"],"names":["match","isString","require$$0","[object Object]","opts","this","_","defaultsDeep","includes","excludes","metricNamePrefix","metricNameSuffix","metricNameFormatter","labelNameFormatter","registry","broker","logger","Promise","resolve","name","Array","isArray","some","pattern","every"],"mappings":"oDASA,MAAMA,MAAEA,EAAKC,SAAEA,GAAaC,QAO5B,MAQCC,YAAYC,GACXC,KAAKD,KAAOE,EAAEC,aAAaH,EAAM,CAChCI,SAAU,KACVC,SAAU,KAEVC,iBAAkB,KAClBC,iBAAkB,KAElBC,oBAAqB,KACrBC,mBAAoB,OAGjBZ,EAASI,KAAKD,KAAKI,YACtBH,KAAKD,KAAKI,SAAW,CAACH,KAAKD,KAAKI,WAE7BP,EAASI,KAAKD,KAAKK,YACtBJ,KAAKD,KAAKK,SAAW,CAACJ,KAAKD,KAAKK,WASlCN,KAAKW,GACJT,KAAKS,SAAWA,EAChBT,KAAKU,OAASV,KAAKS,SAASC,OAC5BV,KAAKW,OAASX,KAAKS,SAASE,OAQ7Bb,OACC,OAAOc,QAAQC,UAUhBf,gBAAgBgB,GACf,QAAIC,MAAMC,QAAQhB,KAAKD,KAAKI,YACtBH,KAAKD,KAAKI,SAASc,MAAKC,GAAWvB,EAAMmB,EAAMI,SAIjDH,MAAMC,QAAQhB,KAAKD,KAAKK,YACtBJ,KAAKD,KAAKK,SAASe,OAAMD,IAAYvB,EAAMmB,EAAMI,MAcxDpB,iBAAiBgB,GAEhB,OADAA,GAAQd,KAAKD,KAAKM,iBAAmBL,KAAKD,KAAKM,iBAAmB,IAAMS,GAAQd,KAAKD,KAAKO,iBAAmBN,KAAKD,KAAKO,iBAAmB,IACtIN,KAAKD,KAAKQ,oBACNP,KAAKD,KAAKQ,oBAAoBO,GAC/BA,EAURhB,gBAAgBgB,GACf,OAAId,KAAKD,KAAKS,mBACNR,KAAKD,KAAKS,mBAAmBM,GAC9BA,EAaRhB"}