{"version":3,"file":"console.js","sources":["../../../../../../src/moleculer/src/metrics/reporters/console.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst BaseReporter = require(\"./base\");\nconst _ = require(\"lodash\");\nconst kleur = require(\"kleur\");\nconst METRIC = require(\"../constants\");\nconst { isFunction } = require(\"../../utils\");\n\n/**\n * Console reporter for Moleculer Metrics\n *\n * @class ConsoleReporter\n * @extends {BaseReporter}\n */\nclass ConsoleReporter extends BaseReporter {\n\n\t/**\n\t * Creates an instance of ConsoleReporter.\n\t * @param {Object} opts\n\t * @memberof ConsoleReporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\tinterval: 5,\n\t\t\tlogger: null,\n\t\t\tcolors: true,\n\t\t\tonlyChanges: true,\n\t\t});\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\n\t\tthis.lastChanges = new Set();\n\t}\n\n\t/**\n\t * Initialize reporter\n\t * @param {MetricRegistry} registry\n\t * @memberof ConsoleReporter\n\t */\n\tinit(registry) {\n\t\tsuper.init(registry);\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.print(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Convert labels to label string\n\t *\n\t * @param {Object} labels\n\t * @returns {String}\n\t * @memberof ConsoleReporter\n\t */\n\tlabelsToStr(labels) {\n\t\tconst keys = Object.keys(labels);\n\t\tif (keys.length == 0)\n\t\t\treturn kleur.gray(\"{}\");\n\n\t\treturn kleur.gray(\"{\") + keys.map(key => `${kleur.gray(this.formatLabelName(key))}: ${kleur.magenta(\"\" + labels[key])}`).join(\", \") + kleur.gray(\"}\");\n\t}\n\n\t/**\n\t * Print metrics to the console.\n\t *\n\t * @memberof ConsoleReporter\n\t */\n\tprint() {\n\t\tlet list = this.registry.list({\n\t\t\tincludes: this.opts.includes,\n\t\t\texcludes: this.opts.excludes,\n\t\t});\n\n\t\tif (this.opts.onlyChanges)\n\t\t\tlist = list.filter(metric => this.lastChanges.has(metric.name));\n\n\t\tif (list.length == 0)\n\t\t\treturn;\n\n\t\tthis.log(kleur.gray(`------------------- [ METRICS START (${list.length}) ] -------------------`));\n\n\t\tlist.forEach(metric => {\n\t\t\tthis.log(kleur.cyan().bold(this.formatMetricName(metric.name)) + \" \" + kleur.gray(\"(\" + metric.type + \")\"));\n\t\t\tif (metric.values.size == 0) {\n\t\t\t\tthis.log(kleur.gray(\"  <no values>\"));\n\t\t\t} else {\n\t\t\t\tconst unit = metric.unit ? kleur.gray(this.registry.pluralizeUnit(metric.unit)) : \"\";\n\t\t\t\tmetric.values.forEach(item => {\n\t\t\t\t\tlet val;\n\t\t\t\t\tconst labelStr = this.labelsToStr(item.labels);\n\t\t\t\t\tswitch(metric.type) {\n\t\t\t\t\t\tcase METRIC.TYPE_COUNTER:\n\t\t\t\t\t\tcase METRIC.TYPE_GAUGE:\n\t\t\t\t\t\tcase METRIC.TYPE_INFO:\n\t\t\t\t\t\t\tval = item.value === \"\" ? kleur.grey(\"<empty string>\") : kleur.green().bold(item.value);\n\t\t\t\t\t\t\tif (item.rate != null) {\n\t\t\t\t\t\t\t\t/*const s = [];\n\t\t\t\t\t\t\t\tObject.keys(item.rates).forEach(b => {\n\t\t\t\t\t\t\t\t\ts.push(`Rate${b}: ${item.rates[b] != null ? item.rates[b].toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tval = kleur.green().bold(`Value: ${val} | ` + s.join(\" | \"));\n\t\t\t\t\t\t\t\t*/\n\n\t\t\t\t\t\t\t\tval = val + kleur.grey(\" | Rate: \") + (item.rate != null ? kleur.green().bold(item.rate.toFixed(2)) : \"-\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase METRIC.TYPE_HISTOGRAM: {\n\t\t\t\t\t\t\tconst s = [];\n\t\t\t\t\t\t\ts.push(`Count: ${item.count}`);\n\n\t\t\t\t\t\t\tif (item.buckets) {\n\t\t\t\t\t\t\t\tObject.keys(item.buckets).forEach(b => {\n\t\t\t\t\t\t\t\t\ts.push(`${b}: ${item.buckets[b] != null ? item.buckets[b] : \"-\"}`);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (item.quantiles) {\n\t\t\t\t\t\t\t\ts.push(`Min: ${item.min != null ? item.min.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`Mean: ${item.mean != null ? item.mean.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`Var: ${item.variance != null ? item.variance.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`StdDev: ${item.stdDev != null ? item.stdDev.toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\ts.push(`Max: ${item.max != null ? item.max.toFixed(2) : \"-\"}`);\n\n\t\t\t\t\t\t\t\tObject.keys(item.quantiles).forEach(key => {\n\t\t\t\t\t\t\t\t\ts.push(`${key}: ${item.quantiles[key] != null ? item.quantiles[key].toFixed(2) : \"-\"}`);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (item.rate != null)\n\t\t\t\t\t\t\t\ts.push(`Rate: ${item.rate != null ? item.rate.toFixed(2) : \"-\"}`);\n\n\t\t\t\t\t\t\tval = kleur.green().bold(s.join(\" | \"));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.log(`  ${labelStr}: ${val} ${unit}`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.log(\"\");\n\t\t});\n\n\t\tthis.log(kleur.gray(`-------------------- [ METRICS END (${list.length}) ] --------------------`));\n\n\t\tthis.lastChanges.clear();\n\t}\n\n\t/**\n\t * Print messages\n\t *\n\t * @param  {...any} args\n\t */\n\tlog(...args) {\n\t\tif (isFunction(this.opts.logger)) {\n\t\t\treturn this.opts.logger(...args);\n\t\t} else {\n\t\t\treturn this.logger.info(...args);\n\t\t}\n\t}\n\n\t/**\n\t * Some metric has been changed.\n\t *\n\t * @param {BaseMetric} metric\n\t * @param {any} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t *\n\t * @memberof BaseReporter\n\t */\n\tmetricChanged(metric) {\n\t\tif (!this.matchMetricName(metric.name)) return;\n\n\t\tthis.lastChanges.add(metric.name);\n\t}\n}\n\nmodule.exports = ConsoleReporter;\n"],"names":["isFunction","require$$0","BaseReporter","[object Object]","opts","super","this","_","defaultsDeep","interval","logger","colors","onlyChanges","kleur","enabled","lastChanges","Set","registry","init","timer","setInterval","print","unref","labels","keys","Object","length","gray","map","key","formatLabelName","magenta","join","list","includes","excludes","filter","metric","has","name","log","forEach","cyan","bold","formatMetricName","type","values","size","unit","pluralizeUnit","item","val","labelStr","labelsToStr","METRIC","TYPE_COUNTER","TYPE_GAUGE","TYPE_INFO","value","grey","green","rate","toFixed","TYPE_HISTOGRAM","s","push","count","buckets","b","quantiles","min","mean","variance","stdDev","max","clear","args","info","matchMetricName","add"],"mappings":"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"}