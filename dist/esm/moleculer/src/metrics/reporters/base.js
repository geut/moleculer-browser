import t from"lodash";import e from"../../utils.js";const{match:s,isString:r}=e;var i=class{constructor(e){this.opts=t.defaultsDeep(e,{includes:null,excludes:null,metricNamePrefix:null,metricNameSuffix:null,metricNameFormatter:null,labelNameFormatter:null}),r(this.opts.includes)&&(this.opts.includes=[this.opts.includes]),r(this.opts.excludes)&&(this.opts.excludes=[this.opts.excludes])}init(t){this.registry=t,this.broker=this.registry.broker,this.logger=this.registry.logger}stop(){return Promise.resolve()}matchMetricName(t){return!(Array.isArray(this.opts.includes)&&!this.opts.includes.some((e=>s(t,e))))&&!(Array.isArray(this.opts.excludes)&&!this.opts.excludes.every((e=>!s(t,e))))}formatMetricName(t){return t=(this.opts.metricNamePrefix?this.opts.metricNamePrefix:"")+t+(this.opts.metricNameSuffix?this.opts.metricNameSuffix:""),this.opts.metricNameFormatter?this.opts.metricNameFormatter(t):t}formatLabelName(t){return this.opts.labelNameFormatter?this.opts.labelNameFormatter(t):t}metricChanged(){}};export default i;
//# sourceMappingURL=base.js.map
