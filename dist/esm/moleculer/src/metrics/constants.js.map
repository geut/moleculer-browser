{"version":3,"file":"constants.js","sources":["../../../../../src/moleculer/src/metrics/constants.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nmodule.exports = {\n\n\t// --- METRIC TYPES ---\n\n\tTYPE_COUNTER:  \t\"counter\",\n\tTYPE_GAUGE:  \t\"gauge\",\n\tTYPE_HISTOGRAM: \"histogram\",\n\tTYPE_INFO:  \t\"info\",\n\n\t// --- METRICREGISTRY METRICS ---\n\n\t// MOLECULER_METRICS_COMMON_COLLECT_TOTAL: \"moleculer.metrics.common.collect.total\",\n\t// MOLECULER_METRICS_COMMON_COLLECT_TIME: \"moleculer.metrics.common.collect.time\",\n\n\t// --- PROCESS METRICS ---\n\n\tPROCESS_ARGUMENTS: \"process.arguments\",\n\n\tPROCESS_PID: \"process.pid\",\n\tPROCESS_PPID: \"process.ppid\",\n\n\tPROCESS_MEMORY_HEAP_SIZE_TOTAL: \"process.memory.heap.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_SIZE_USED: \"process.memory.heap.size.used\", // bytes\n\tPROCESS_MEMORY_RSS: \"process.memory.rss\", // bytes\n\tPROCESS_MEMORY_EXTERNAL: \"process.memory.external\", // bytes\n\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL: \"process.memory.heap.space.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_USED: \"process.memory.heap.space.size.used\", // bytes\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE: \"process.memory.heap.space.size.available\", // bytes\n\tPROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL: \"process.memory.heap.space.size.physical\", // bytes\n\n\tPROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL: \"process.memory.heap.stat.heap.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL: \"process.memory.heap.stat.executable.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL: \"process.memory.heap.stat.physical.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL: \"process.memory.heap.stat.available.size.total\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE: \"process.memory.heap.stat.used.heap.size\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT: \"process.memory.heap.stat.heap.size.limit\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY: \"process.memory.heap.stat.mallocated.memory\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY: \"process.memory.heap.stat.peak.mallocated.memory\", // bytes\n\tPROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE: \"process.memory.heap.stat.zap.garbage\",\n\n\tPROCESS_UPTIME: \"process.uptime\", // seconds\n\tPROCESS_INTERNAL_ACTIVE_HANDLES: \"process.internal.active.handles\",\n\tPROCESS_INTERNAL_ACTIVE_REQUESTS: \"process.internal.active.requests\",\n\n\tPROCESS_VERSIONS_NODE: \"process.versions.node\",\n\n\t// --- EVENT LOOP METRICS ---\n\n\tPROCESS_EVENTLOOP_LAG_MIN: \"process.eventloop.lag.min\", // msec\n\tPROCESS_EVENTLOOP_LAG_AVG: \"process.eventloop.lag.avg\", // msec\n\tPROCESS_EVENTLOOP_LAG_MAX: \"process.eventloop.lag.max\", // msec\n\tPROCESS_EVENTLOOP_LAG_COUNT: \"process.eventloop.lag.count\",\n\n\t// --- GARBAGE COLLECTOR METRICS ---\n\n\tPROCESS_GC_TIME: \"process.gc.time\", // nanoseconds\n\tPROCESS_GC_TOTAL_TIME: \"process.gc.total.time\", // milliseconds\n\tPROCESS_GC_EXECUTED_TOTAL: \"process.gc.executed.total\",\n\n\t// --- OS METRICS ---\n\n\tOS_MEMORY_FREE: \"os.memory.free\", // bytes\n\tOS_MEMORY_USED: \"os.memory.used\", // bytes\n\tOS_MEMORY_TOTAL: \"os.memory.total\", // bytes\n\tOS_UPTIME: \"os.uptime\", // seconds\n\tOS_TYPE: \"os.type\",\n\tOS_RELEASE: \"os.release\",\n\tOS_HOSTNAME: \"os.hostname\",\n\tOS_ARCH: \"os.arch\",\n\tOS_PLATFORM: \"os.platform\",\n\tOS_USER_UID: \"os.user.uid\",\n\tOS_USER_GID: \"os.user.gid\",\n\tOS_USER_USERNAME: \"os.user.username\",\n\tOS_USER_HOMEDIR: \"os.user.homedir\",\n\n\tOS_DATETIME_UNIX: \"os.datetime.unix\",\n\tOS_DATETIME_ISO: \"os.datetime.iso\",\n\tOS_DATETIME_UTC: \"os.datetime.utc\",\n\tOS_DATETIME_TZ_OFFSET: \"os.datetime.tz.offset\",\n\n\tOS_NETWORK_ADDRESS: \"os.network.address\",\n\tOS_NETWORK_MAC: \"os.network.mac\",\n\n\tOS_CPU_LOAD_1: \"os.cpu.load.1\",\n\tOS_CPU_LOAD_5: \"os.cpu.load.5\",\n\tOS_CPU_LOAD_15: \"os.cpu.load.15\",\n\tOS_CPU_UTILIZATION: \"os.cpu.utilization\",\n\n\tOS_CPU_USER: \"os.cpu.user\", // seconds\n\tOS_CPU_SYSTEM: \"os.cpu.system\", // seconds\n\n\tOS_CPU_TOTAL: \"os.cpu.total\",\n\tOS_CPU_INFO_MODEL: \"os.cpu.info.model\",\n\tOS_CPU_INFO_SPEED: \"os.cpu.info.speed\",\n\tOS_CPU_INFO_TIMES_USER: \"os.cpu.info.times.user\",\n\tOS_CPU_INFO_TIMES_SYS: \"os.cpu.info.times.sys\",\n\n\t// --- MOLECULER NODE METRICS ---\n\n\tMOLECULER_NODE_TYPE: \"moleculer.node.type\",\n\tMOLECULER_NODE_VERSIONS_MOLECULER: \"moleculer.node.versions.moleculer\",\n\tMOLECULER_NODE_VERSIONS_LANG: \"moleculer.node.versions.lang\",\n\tMOLECULER_NODE_VERSIONS_PROTOCOL: \"moleculer.node.versions.protocol\",\n\n\t// --- MOLECULER BROKER METRICS ---\n\n\tMOLECULER_BROKER_NAMESPACE: \"moleculer.broker.namespace\",\n\tMOLECULER_BROKER_STARTED: \"moleculer.broker.started\",\n\tMOLECULER_BROKER_LOCAL_SERVICES_TOTAL: \"moleculer.broker.local.services.total\",\n\tMOLECULER_BROKER_MIDDLEWARES_TOTAL: \"moleculer.broker.middlewares.total\",\n\n\t// --- MOLECULER REGISTRY METRICS ---\n\n\tMOLECULER_REGISTRY_NODES_TOTAL: \"moleculer.registry.nodes.total\",\n\tMOLECULER_REGISTRY_NODES_ONLINE_TOTAL: \"moleculer.registry.nodes.online.total\",\n\tMOLECULER_REGISTRY_SERVICES_TOTAL: \"moleculer.registry.services.total\",\n\tMOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL: \"moleculer.registry.service.endpoints.total\",\n\tMOLECULER_REGISTRY_ACTIONS_TOTAL: \"moleculer.registry.actions.total\",\n\tMOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL: \"moleculer.registry.action.endpoints.total\",\n\tMOLECULER_REGISTRY_EVENTS_TOTAL: \"moleculer.registry.events.total\",\n\tMOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL: \"moleculer.registry.event.endpoints.total\",\n\n\t// --- MOLECULER REQUEST METRICS ---\n\n\tMOLECULER_REQUEST_TOTAL: \"moleculer.request.total\",\n\tMOLECULER_REQUEST_ACTIVE: \"moleculer.request.active\",\n\tMOLECULER_REQUEST_ERROR_TOTAL: \"moleculer.request.error.total\",\n\tMOLECULER_REQUEST_TIME: \"moleculer.request.time\", //msec\n\tMOLECULER_REQUEST_LEVELS: \"moleculer.request.levels\",\n\t//MOLECULER_REQUEST_DIRECTCALL_TOTAL: \"moleculer.request.directcall.total\",\n\t//MOLECULER_REQUEST_MULTICALL_TOTAL: \"moleculer.request.multicall.total\",\n\n\t// --- MOLECULER EVENTS METRICS ---\n\n\tMOLECULER_EVENT_EMIT_TOTAL: \"moleculer.event.emit.total\",\n\tMOLECULER_EVENT_BROADCAST_TOTAL: \"moleculer.event.broadcast.total\",\n\tMOLECULER_EVENT_BROADCASTLOCAL_TOTAL: \"moleculer.event.broadcast-local.total\",\n\tMOLECULER_EVENT_RECEIVED_TOTAL: \"moleculer.event.received.total\",\n\tMOLECULER_EVENT_RECEIVED_ACTIVE: \"moleculer.event.received.active\",\n\tMOLECULER_EVENT_RECEIVED_ERROR_TOTAL: \"moleculer.event.received.error.total\",\n\tMOLECULER_EVENT_RECEIVED_TIME: \"moleculer.event.received.time\", //msec\n\n\t// --- MOLECULER TRANSIT METRICS ---\n\n\tMOLECULER_TRANSIT_PUBLISH_TOTAL: \"moleculer.transit.publish.total\",\n\tMOLECULER_TRANSIT_RECEIVE_TOTAL: \"moleculer.transit.receive.total\",\n\n\tMOLECULER_TRANSIT_REQUESTS_ACTIVE: \"moleculer.transit.requests.active\",\n\tMOLECULER_TRANSIT_STREAMS_SEND_ACTIVE: \"moleculer.transit.streams.send.active\",\n\t//MOLECULER_TRANSIT_STREAMS_RECEIVE_ACTIVE: \"moleculer.transit.streams.receive.active\",\n\tMOLECULER_TRANSIT_READY: \"moleculer.transit.ready\", // true/false\n\tMOLECULER_TRANSIT_CONNECTED: \"moleculer.transit.connected\", // true/false\n\n\tMOLECULER_TRANSIT_PONG_TIME: \"moleculer.transit.pong.time\", // true/false\n\tMOLECULER_TRANSIT_PONG_SYSTIME_DIFF: \"moleculer.transit.pong.systime-diff\", // true/false\n\n\tMOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL: \"moleculer.transit.orphan.response.total\",\n\n\t// --- MOLECULER TRANSPORTER METRICS ---\n\n\tMOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL: \"moleculer.transporter.packets.sent.total\",\n\tMOLECULER_TRANSPORTER_PACKETS_SENT_BYTES: \"moleculer.transporter.packets.sent.bytes\", // bytes\n\tMOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL: \"moleculer.transporter.packets.received.total\",\n\tMOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES: \"moleculer.transporter.packets.received.bytes\", // bytes\n\n\t// --- MOLECULER CIRCUIT BREAKER METRICS ---\n\n\tMOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE: \"moleculer.circuit-breaker.opened.active\",\n\tMOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL: \"moleculer.circuit-breaker.opened.total\",\n\tMOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE: \"moleculer.circuit-breaker.half-opened.active\",\n\n\t// --- MOLECULER FALLBACK METRICS ---\n\n\tMOLECULER_REQUEST_FALLBACK_TOTAL: \"moleculer.request.fallback.total\",\n\n\t// --- MOLECULER BULKHEAD METRICS ---\n\n\tMOLECULER_REQUEST_BULKHEAD_INFLIGHT: \"moleculer.request.bulkhead.inflight\",\n\tMOLECULER_REQUEST_BULKHEAD_QUEUE_SIZE: \"moleculer.request.bulkhead.queue.size\",\n\n\tMOLECULER_EVENT_BULKHEAD_INFLIGHT: \"moleculer.event.bulkhead.inflight\",\n\tMOLECULER_EVENT_BULKHEAD_QUEUE_SIZE: \"moleculer.event.bulkhead.queue.size\",\n\n\t// --- MOLECULER RETRY METRICS ---\n\n\tMOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL: \"moleculer.request.retry.attempts.total\",\n\n\t// --- MOLECULER TIMEOUT METRICS ---\n\n\tMOLECULER_REQUEST_TIMEOUT_TOTAL: \"moleculer.request.timeout.total\",\n\n\t// --- MOLECULER CACHER METRICS ---\n\n\tMOLECULER_CACHER_GET_TOTAL: \"moleculer.cacher.get.total\",\n\tMOLECULER_CACHER_GET_TIME: \"moleculer.cacher.get.time\",\n\tMOLECULER_CACHER_FOUND_TOTAL: \"moleculer.cacher.found.total\",\n\tMOLECULER_CACHER_SET_TOTAL: \"moleculer.cacher.set.total\",\n\tMOLECULER_CACHER_SET_TIME: \"moleculer.cacher.set.time\",\n\tMOLECULER_CACHER_DEL_TOTAL: \"moleculer.cacher.del.total\",\n\tMOLECULER_CACHER_DEL_TIME: \"moleculer.cacher.del.time\",\n\tMOLECULER_CACHER_CLEAN_TOTAL: \"moleculer.cacher.clean.total\",\n\tMOLECULER_CACHER_CLEAN_TIME: \"moleculer.cacher.clean.time\",\n\tMOLECULER_CACHER_EXPIRED_TOTAL: \"moleculer.cacher.expired.total\",\n\n\tMOLECULER_DISCOVERER_REDIS_COLLECT_TOTAL: \"moleculer.discoverer.redis.collect.total\",\n\tMOLECULER_DISCOVERER_REDIS_COLLECT_TIME: \"moleculer.discoverer.redis.collect.time\",\n\n\tMOLECULER_DISCOVERER_ETCD_COLLECT_TOTAL: \"moleculer.discoverer.etcd.collect.total\",\n\tMOLECULER_DISCOVERER_ETCD_COLLECT_TIME: \"moleculer.discoverer.etcd.collect.time\",\n\n\t// --- COMMON UNITS ---\n\t// Inspired by https://docs.datadoghq.com/developers/metrics/#units\n\n\t// Bytes\n\tUNIT_BIT: \"bit\",\n\tUNIT_BYTE: \"byte\",\n\tUNIT_KILOBYTES: \"kilobyte\",\n\tUNIT_MEGABYTE: \"megabyte\",\n\tUNIT_GIGABYTE: \"gigabyte\",\n\tUNIT_TERRABYTE: \"terrabyte\",\n\tUNIT_PETABYTE: \"petabyte\",\n\tUNIT_EXOBYTE: \"exabyte\",\n\n\t// Time\n\tUNIT_NANOSECONDS: \"nanosecond\",\n\tUNIT_MICROSECONDS: \"microsecond\",\n\tUNIT_MILLISECONDS: \"millisecond\",\n\tUNIT_SECONDS: \"second\",\n\tUNIT_MINUTE: \"minute\",\n\tUNIT_HOUR: \"hour\",\n\tUNIT_DAY: \"day\",\n\tUNIT_WEEK: \"week\",\n\tUNIT_MONTH: \"month\",\n\tUNIT_YEAR: \"year\",\n\n\t// Process\n\tUNIT_HANDLE: \"handle\",\n\tUNIT_CPU: \"cpu\",\n\tUNIT_GHZ: \"GHz\",\n\n\t// Network\n\tUNIT_REQUEST: \"request\",\n\tUNIT_CONNECTION: \"connection\",\n\tUNIT_PACKET: \"packet\",\n\tUNIT_MESSAGE: \"message\",\n\tUNIT_STREAM: \"stream\",\n\tUNIT_EVENT: \"event\",\n};\n"],"names":[],"mappings":"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"}