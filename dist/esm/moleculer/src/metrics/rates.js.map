{"version":3,"file":"rates.js","sources":["../../../../../src/moleculer/src/metrics/rates.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst INTERVAL = 5;\nconst SECONDS_PER_MINUTE = 60.0;\n\n// https://github.com/dropwizard/metrics/blob/4.0-maintenance/metrics-core/src/main/java/com/codahale/metrics/EWMA.java\n/* istanbul ignore next\nfunction getAlpha(min) {\n\treturn 1 - Math.exp(-INTERVAL / SECONDS_PER_MINUTE / min);\n}\n*/\n\nclass MetricRate {\n\n\tconstructor(metric, item, min) {\n\t\tthis.metric = metric;\n\t\tthis.item = item;\n\t\tthis.min = min;\n\t\t//this.alpha = getAlpha(min);\n\n\t\tthis.rate = 0;\n\n\t\tthis.lastValue = 0;\n\t\tthis.lastTickTime = Date.now();\n\t\tthis.value = null;\n\n\t\tthis.timer = setInterval(() => this.tick(), INTERVAL * 1000).unref();\n\t}\n\n\tupdate(value) {\n\t\tthis.value = value;\n\t}\n\n\ttick() {\n\t\t// Get elapsed seconds\n\t\tconst now = Date.now();\n\t\tconst elapsedSec = (now - this.lastTickTime) / 1000;\n\t\tthis.lastTickTime = now;\n\n\t\t// Get difference between new and old value\n\t\tconst diff = this.value - this.lastValue;\n\t\tthis.lastValue = this.value;\n\n\t\t// Calculate the current requests/minute\n\t\tconst oneMinRate = diff / elapsedSec * SECONDS_PER_MINUTE;\n\n\t\t// Weighted calculation\n\t\tlet rate = this.rate + (oneMinRate - this.rate) * 0.5;\n\t\t// EWMA: const rate = this.rate + (this.alpha * (oneMinRate - this.rate));\n\n\t\t// Rounding\n\t\tif (Math.abs(rate) < 0.05) rate = 0;\n\t\tconst changed = Math.abs(rate - this.rate) > 0.01;\n\n\t\tthis.rate = rate;\n\n\t\tif (changed)\n\t\t\tthis.metric.changed(this.item.value, this.item.labels, now);\n\t}\n\n\treset() {\n\t\tthis.lastValue = 0;\n\t\tthis.value = null;\n\n\t\tthis.rate = 0;\n\t}\n\n}\nmodule.exports = MetricRate;\n"],"names":[],"mappings":";;AAQA,MAAM,QAAQ,GAAG,CAAC,CAAC;AACnB,MAAM,kBAAkB,GAAG,IAAI,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,CAAC;AACjB;AACA,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE;AAChC,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACvB,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACjB;AACA;AACA,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AAChB;AACA,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACrB,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACjC,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACpB;AACA,EAAE,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;AACvE,EAAE;AACF;AACA,CAAC,MAAM,CAAC,KAAK,EAAE;AACf,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACrB,EAAE;AACF;AACA,CAAC,IAAI,GAAG;AACR;AACA,EAAE,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACzB,EAAE,MAAM,UAAU,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC;AACtD,EAAE,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;AAC1B;AACA;AACA,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;AAC3C,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AAC9B;AACA;AACA,EAAE,MAAM,UAAU,GAAG,IAAI,GAAG,UAAU,GAAG,kBAAkB,CAAC;AAC5D;AACA;AACA,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC;AACxD;AACA;AACA;AACA,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC;AACtC,EAAE,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AACpD;AACA,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB;AACA,EAAE,IAAI,OAAO;AACb,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAC/D,EAAE;AACF;AACA,CAAC,KAAK,GAAG;AACT,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACrB,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACpB;AACA,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AAChB,EAAE;AACF;AACA,CAAC;SACa,GAAG;;;;"}