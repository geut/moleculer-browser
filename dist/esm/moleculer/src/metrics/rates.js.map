{"version":3,"file":"rates.js","sources":["../../../../../src/moleculer/src/metrics/rates.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst INTERVAL = 5;\nconst SECONDS_PER_MINUTE = 60.0;\n\n// https://github.com/dropwizard/metrics/blob/4.0-maintenance/metrics-core/src/main/java/com/codahale/metrics/EWMA.java\n/* istanbul ignore next\nfunction getAlpha(min) {\n\treturn 1 - Math.exp(-INTERVAL / SECONDS_PER_MINUTE / min);\n}\n*/\n\nclass MetricRate {\n\n\tconstructor(metric, item, min) {\n\t\tthis.metric = metric;\n\t\tthis.item = item;\n\t\tthis.min = min;\n\t\t//this.alpha = getAlpha(min);\n\n\t\tthis.rate = 0;\n\n\t\tthis.lastValue = 0;\n\t\tthis.lastTickTime = Date.now();\n\t\tthis.value = null;\n\n\t\tthis.timer = setInterval(() => this.tick(), INTERVAL * 1000).unref();\n\t}\n\n\tupdate(value) {\n\t\tthis.value = value;\n\t}\n\n\ttick() {\n\t\t// Get elapsed seconds\n\t\tconst now = Date.now();\n\t\tconst elapsedSec = (now - this.lastTickTime) / 1000;\n\t\tthis.lastTickTime = now;\n\n\t\t// Get difference between new and old value\n\t\tconst diff = this.value - this.lastValue;\n\t\tthis.lastValue = this.value;\n\n\t\t// Calculate the current requests/minute\n\t\tconst oneMinRate = diff / elapsedSec * SECONDS_PER_MINUTE;\n\n\t\t// Weighted calculation\n\t\tlet rate = this.rate + (oneMinRate - this.rate) * 0.5;\n\t\t// EWMA: const rate = this.rate + (this.alpha * (oneMinRate - this.rate));\n\n\t\t// Rounding\n\t\tif (Math.abs(rate) < 0.05) rate = 0;\n\t\tconst changed = Math.abs(rate - this.rate) > 0.01;\n\n\t\tthis.rate = rate;\n\n\t\tif (changed)\n\t\t\tthis.metric.changed(this.item.value, this.item.labels, now);\n\t}\n\n\treset() {\n\t\tthis.lastValue = 0;\n\t\tthis.value = null;\n\n\t\tthis.rate = 0;\n\t}\n\n}\nmodule.exports = MetricRate;\n"],"names":["[object Object]","metric","item","min","this","rate","lastValue","lastTickTime","Date","now","value","timer","setInterval","tick","INTERVAL","unref","elapsedSec","diff","oneMinRate","Math","abs","changed","labels"],"mappings":"sDAkBA,MAECA,YAAYC,EAAQC,EAAMC,GACzBC,KAAKH,OAASA,EACdG,KAAKF,KAAOA,EACZE,KAAKD,IAAMA,EAGXC,KAAKC,KAAO,EAEZD,KAAKE,UAAY,EACjBF,KAAKG,aAAeC,KAAKC,MACzBL,KAAKM,MAAQ,KAEbN,KAAKO,MAAQC,GAAY,IAAMR,KAAKS,QAAQC,KAAiBC,QAG9Df,OAAOU,GACNN,KAAKM,MAAQA,EAGdV,OAEC,MAAMS,EAAMD,KAAKC,MACXO,GAAcP,EAAML,KAAKG,cAAgB,IAC/CH,KAAKG,aAAeE,EAGpB,MAAMQ,EAAOb,KAAKM,MAAQN,KAAKE,UAC/BF,KAAKE,UAAYF,KAAKM,MAGtB,MAAMQ,EAAaD,EAAOD,EAzCD,GA4CzB,IAAIX,EAAOD,KAAKC,KAAkC,IAA1Ba,EAAad,KAAKC,MAItCc,KAAKC,IAAIf,GAAQ,MAAMA,EAAO,GAClC,MAAMgB,EAAUF,KAAKC,IAAIf,EAAOD,KAAKC,MAAQ,IAE7CD,KAAKC,KAAOA,EAERgB,GACHjB,KAAKH,OAAOoB,QAAQjB,KAAKF,KAAKQ,MAAON,KAAKF,KAAKoB,OAAQb,GAGzDT,QACCI,KAAKE,UAAY,EACjBF,KAAKM,MAAQ,KAEbN,KAAKC,KAAO"}