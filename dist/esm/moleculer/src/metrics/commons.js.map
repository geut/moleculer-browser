{"version":3,"file":"commons.js","sources":["../../../../../src/moleculer/src/metrics/commons.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst os = require(\"os\");\nconst METRIC = require(\"./constants\");\nconst cpuUsage = require(\"../cpu-usage\");\n\nlet v8, eventLoop;\n\n// Load `v8` module for heap metrics.\ntry {\n\tv8 = require(\"v8\");\n} catch (e) {\n\t// silent\n}\n\n/**\n * Register common OS, process & Moleculer metrics.\n */\nfunction registerCommonMetrics() {\n\tthis.logger.debug(\"Registering common metrics...\");\n\n\t// --- METRICS SELF METRICS ---\n\n\t// this.register({ name: METRIC.MOLECULER_METRICS_COMMON_COLLECT_TOTAL, type: METRIC.TYPE_COUNTER, description: \"Number of metric collections\" });\n\t// this.register({ name: METRIC.MOLECULER_METRICS_COMMON_COLLECT_TIME, type: METRIC.TYPE_GAUGE, description: \"Time of collecting metrics\", unit: METRIC.UNIT_MILLISECONDS });\n\n\t// --- PROCESS METRICS ---\n\n\tconst item = this.register({ name: METRIC.PROCESS_ARGUMENTS, type: METRIC.TYPE_INFO, labelNames: [\"index\"], description: \"Process arguments\" });\n\tprocess.argv.map((arg, index) => item.set(arg, { index }));\n\n\tthis.register({ name: METRIC.PROCESS_PID, type: METRIC.TYPE_INFO, description: \"Process PID\" }).set(process.pid);\n\tthis.register({ name: METRIC.PROCESS_PPID, type: METRIC.TYPE_INFO, description: \"Process parent PID\" }).set(process.ppid);\n\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SIZE_USED, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process used heap size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_RSS, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process RSS size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_EXTERNAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process external memory size\" });\n\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process total heap space size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_USED, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process used heap space size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process available heap space size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL, type: METRIC.TYPE_GAUGE, labelNames: [\"space\"], unit: METRIC.UNIT_BYTE, description: \"Process physical heap space size\" });\n\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat executable size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat physical size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat available size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat used size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat size limit\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Process heap stat mallocated size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"Peak of process heap stat mallocated size\" });\n\tthis.register({ name: METRIC.PROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE, type: METRIC.TYPE_GAUGE, description: \"Process heap stat zap garbage\" });\n\n\tthis.register({ name: METRIC.PROCESS_UPTIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_SECONDS, description: \"Process uptime\" });\n\tthis.register({ name: METRIC.PROCESS_INTERNAL_ACTIVE_HANDLES, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_HANDLE, description: \"Number of active process handlers\" });\n\tthis.register({ name: METRIC.PROCESS_INTERNAL_ACTIVE_REQUESTS, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_REQUEST, description: \"Number of active process requests\" });\n\n\tthis.register({ name: METRIC.PROCESS_VERSIONS_NODE, type: METRIC.TYPE_INFO, description: \"Node version\" }).set(process.versions.node);\n\n\t// --- OS METRICS ---\n\n\tthis.register({ name: METRIC.OS_MEMORY_FREE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"OS free memory size\" });\n\tthis.register({ name: METRIC.OS_MEMORY_USED, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"OS used memory size\" });\n\tthis.register({ name: METRIC.OS_MEMORY_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_BYTE, description: \"OS total memory size\" });\n\tthis.register({ name: METRIC.OS_UPTIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_SECONDS, description: \"OS uptime\" });\n\tthis.register({ name: METRIC.OS_TYPE, type: METRIC.TYPE_INFO, description: \"OS type\" }).set(os.type());\n\tthis.register({ name: METRIC.OS_RELEASE, type: METRIC.TYPE_INFO, description: \"OS release\" }).set(os.release());\n\tthis.register({ name: METRIC.OS_HOSTNAME, type: METRIC.TYPE_INFO, description: \"Hostname\" }).set(os.hostname());\n\tthis.register({ name: METRIC.OS_ARCH, type: METRIC.TYPE_INFO, description: \"OS architecture\" }).set(os.arch());\n\tthis.register({ name: METRIC.OS_PLATFORM, type: METRIC.TYPE_INFO, description: \"OS platform\" }).set(os.platform());\n\n\tconst userInfo = getUserInfo();\n\tthis.register({ name: METRIC.OS_USER_UID, type: METRIC.TYPE_INFO, description: \"UID\" }).set(userInfo.uid);\n\tthis.register({ name: METRIC.OS_USER_GID, type: METRIC.TYPE_INFO, description: \"GID\" }).set(userInfo.gid);\n\tthis.register({ name: METRIC.OS_USER_USERNAME, type: METRIC.TYPE_INFO, description: \"Username\" }).set(userInfo.username);\n\tthis.register({ name: METRIC.OS_USER_HOMEDIR, type: METRIC.TYPE_INFO, description: \"User's home directory\" }).set(userInfo.homedir);\n\n\tthis.register({ name: METRIC.OS_NETWORK_ADDRESS, type: METRIC.TYPE_INFO, labelNames: [\"interface\", \"family\"], description: \"Network address\" });\n\tthis.register({ name: METRIC.OS_NETWORK_MAC, type: METRIC.TYPE_INFO, labelNames: [\"interface\", \"family\"], description: \"MAC address\" });\n\n\tthis.register({ name: METRIC.OS_DATETIME_UNIX, type: METRIC.TYPE_GAUGE, description: \"Current datetime in Unix format\" });\n\tthis.register({ name: METRIC.OS_DATETIME_ISO, type: METRIC.TYPE_INFO, description: \"Current datetime in ISO string\" });\n\tthis.register({ name: METRIC.OS_DATETIME_UTC, type: METRIC.TYPE_INFO, description: \"Current UTC datetime\" });\n\tthis.register({ name: METRIC.OS_DATETIME_TZ_OFFSET, type: METRIC.TYPE_GAUGE, description: \"Timezone offset\" });\n\n\tthis.register({ name: METRIC.OS_CPU_LOAD_1, type: METRIC.TYPE_GAUGE, description: \"CPU load1\" });\n\tthis.register({ name: METRIC.OS_CPU_LOAD_5, type: METRIC.TYPE_GAUGE, description: \"CPU load5\" });\n\tthis.register({ name: METRIC.OS_CPU_LOAD_15, type: METRIC.TYPE_GAUGE, description: \"CPU load15\" });\n\tthis.register({ name: METRIC.OS_CPU_UTILIZATION, type: METRIC.TYPE_GAUGE, description: \"CPU utilization\" });\n\n\tthis.register({ name: METRIC.OS_CPU_USER, type: METRIC.TYPE_GAUGE, description: \"CPU user time\" });\n\tthis.register({ name: METRIC.OS_CPU_SYSTEM, type: METRIC.TYPE_GAUGE, description: \"CPU system time\" });\n\n\tthis.register({ name: METRIC.OS_CPU_TOTAL, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_CPU, description: \"Number of CPUs\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_MODEL, type: METRIC.TYPE_INFO, labelNames: [\"index\"], description: \"CPU model\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_SPEED, type: METRIC.TYPE_GAUGE, labelNames: [\"index\"], unit: METRIC.UNIT_GHZ, description: \"CPU speed\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_TIMES_USER, type: METRIC.TYPE_GAUGE, labelNames: [\"index\"], description: \"CPU user time\" });\n\tthis.register({ name: METRIC.OS_CPU_INFO_TIMES_SYS, type: METRIC.TYPE_GAUGE, labelNames: [\"index\"], description: \"CPU system time\" });\n\n\tstartGCWatcher.call(this);\n\tstartEventLoopStats.call(this);\n\n\tthis.logger.debug(`Registered ${this.store.size} common metrics.`);\n}\n\n/**\n * Start GC watcher listener.\n */\nfunction startGCWatcher() {\n// Load `gc-stats` module for GC metrics.\n\ttry {\n\t\tconst gc = (require(\"gc-stats\"))();\n\n\t\t/* istanbul ignore next */\n\t\tif (gc) {\n\t\t\t// --- GARBAGE COLLECTOR METRICS ---\n\n\t\t\tthis.register({ name: METRIC.PROCESS_GC_TIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_NANOSECONDS, description: \"GC time\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_GC_TOTAL_TIME, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Total time of GC\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_GC_EXECUTED_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"type\"], unit: null, description: \"Number of executed GC\" });\n\n\t\t\tgc.on(\"stats\", stats => {\n\t\t\t\tthis.set(METRIC.PROCESS_GC_TIME, stats.pause);\n\t\t\t\tthis.increment(METRIC.PROCESS_GC_TOTAL_TIME, null, stats.pause / 1e6);\n\t\t\t\tif (stats.gctype == 1)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"scavenge\" });\n\t\t\t\tif (stats.gctype == 2)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"marksweep\" });\n\t\t\t\tif (stats.gctype == 4)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"incremental\" });\n\t\t\t\tif (stats.gctype == 8)\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"weakphantom\" });\n\t\t\t\tif (stats.gctype == 15) {\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"scavenge\" });\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"marksweep\" });\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"incremental\" });\n\t\t\t\t\tthis.increment(METRIC.PROCESS_GC_EXECUTED_TOTAL, { type: \"weakphantom\" });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} catch (e) {\n\t\t// silent\n\t}\n}\n\nfunction startEventLoopStats() {\n\t// Load `event-loop-stats` metric for Event-loop metrics.\n\ttry {\n\t\teventLoop = require(\"event-loop-stats\");\n\t\tif (eventLoop) {\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_MIN, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Minimum of event loop lag\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_AVG, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Average of event loop lag\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_MAX, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_MILLISECONDS, description: \"Maximum of event loop lag\" });\n\t\t\tthis.register({ name: METRIC.PROCESS_EVENTLOOP_LAG_COUNT, type: METRIC.TYPE_GAUGE, description: \"Number of event loop lag samples.\" });\n\t\t}\n\t} catch (e) {\n\t\t// silent\n\t}\n}\n\n/**\n * Update common metric values.\n *\n * @returns {Promise}\n */\nfunction updateCommonMetrics() {\n\tthis.logger.debug(\"Update common metric values...\");\n\tconst end = this.timer();\n\n\t// --- PROCESS METRICS ---\n\n\tconst procMem = process.memoryUsage();\n\n\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SIZE_TOTAL, procMem.heapTotal);\n\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SIZE_USED, procMem.heapUsed);\n\tthis.set(METRIC.PROCESS_MEMORY_RSS, procMem.rss);\n\tthis.set(METRIC.PROCESS_MEMORY_EXTERNAL, procMem.external);\n\n\tif (v8 && v8.getHeapSpaceStatistics) {\n\t\tconst stat = v8.getHeapSpaceStatistics();\n\t\tstat.forEach(item => {\n\t\t\tconst space = item.space_name;\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_TOTAL, item.space_size, { space });\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_USED, item.space_used_size, { space });\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_AVAILABLE, item.space_available_size, { space });\n\t\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_SPACE_SIZE_PHYSICAL, item.physical_space_size, { space });\n\t\t});\n\t}\n\n\tif (v8 && v8.getHeapStatistics) {\n\t\tconst stat = v8.getHeapStatistics();\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_TOTAL, stat.total_heap_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_EXECUTABLE_SIZE_TOTAL, stat.total_heap_size_executable);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_PHYSICAL_SIZE_TOTAL, stat.total_physical_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_AVAILABLE_SIZE_TOTAL, stat.total_available_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_USED_HEAP_SIZE, stat.used_heap_size);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_HEAP_SIZE_LIMIT, stat.heap_size_limit);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_MALLOCATED_MEMORY, stat.malloced_memory);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_PEAK_MALLOCATED_MEMORY, stat.peak_malloced_memory);\n\t\tthis.set(METRIC.PROCESS_MEMORY_HEAP_STAT_ZAP_GARBAGE, stat.does_zap_garbage);\n\t}\n\n\tthis.set(METRIC.PROCESS_UPTIME, process.uptime());\n\tthis.set(METRIC.PROCESS_INTERNAL_ACTIVE_HANDLES, process._getActiveHandles().length);\n\tthis.set(METRIC.PROCESS_INTERNAL_ACTIVE_REQUESTS, process._getActiveRequests().length);\n\n\t// --- OS METRICS ---\n\n\tconst freeMem = os.freemem();\n\tconst totalMem = os.totalmem();\n\tconst usedMem = totalMem - freeMem;\n\tthis.set(METRIC.OS_MEMORY_FREE, freeMem);\n\tthis.set(METRIC.OS_MEMORY_USED, usedMem);\n\tthis.set(METRIC.OS_MEMORY_TOTAL, totalMem);\n\tthis.set(METRIC.OS_UPTIME, os.uptime());\n\tthis.set(METRIC.OS_TYPE, os.type());\n\tthis.set(METRIC.OS_RELEASE, os.release());\n\tthis.set(METRIC.OS_HOSTNAME, os.hostname());\n\tthis.set(METRIC.OS_ARCH, os.arch());\n\tthis.set(METRIC.OS_PLATFORM, os.platform());\n\n\t// --- NETWORK INTERFACES ---\n\n\n\tconst getNetworkInterfaces = () =>{\n\t\tconst list = [];\n\t\tconst ilist = [];\n\t\tconst interfaces = os.networkInterfaces();\n\t\tfor (let iface in interfaces) {\n\t\t\tfor (let i in interfaces[iface]) {\n\t\t\t\tconst f = interfaces[iface][i];\n\t\t\t\tif (f.internal) {\n\t\t\t\t\tilist.push({ f,iface });\n\t\t\t\t} else{\n\t\t\t\t\tlist.push({ f,iface });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list.length > 0 ? list : ilist;\n\t};\n\n\tconst interfaces = getNetworkInterfaces();\n\tfor (let { f,iface } of interfaces) {\n\t\tthis.set(METRIC.OS_NETWORK_ADDRESS, f.address, { interface: iface, family: f.family });\n\t\tthis.set(METRIC.OS_NETWORK_MAC, f.mac, { interface: iface, family: f.family });\n\t}\n\n\tconst d = new Date();\n\tthis.set(METRIC.OS_DATETIME_UNIX, d.valueOf());\n\tthis.set(METRIC.OS_DATETIME_ISO, d.toISOString());\n\tthis.set(METRIC.OS_DATETIME_UTC, d.toUTCString());\n\tthis.set(METRIC.OS_DATETIME_TZ_OFFSET, d.getTimezoneOffset());\n\n\tconst load = os.loadavg();\n\tthis.set(METRIC.OS_CPU_LOAD_1, load[0]);\n\tthis.set(METRIC.OS_CPU_LOAD_5, load[1]);\n\tthis.set(METRIC.OS_CPU_LOAD_15, load[2]);\n\n\tif (eventLoop && eventLoop.sense) {\n\t\tconst stat = eventLoop.sense();\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_MIN, stat.min);\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_AVG, stat.num ? stat.sum / stat.num : 0);\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_MAX, stat.max);\n\t\tthis.set(METRIC.PROCESS_EVENTLOOP_LAG_COUNT, stat.num);\n\t}\n\n\t// this.increment(METRIC.MOLECULER_METRICS_COMMON_COLLECT_TOTAL);\n\tconst duration = end();\n\n\treturn this.broker.Promise.resolve()\n\t\t.then(() => cpuUsage().then(res => {\n\t\t\tthis.set(METRIC.OS_CPU_UTILIZATION, res.avg);\n\n\t\t\ttry {\n\t\t\t\tconst cpus = os.cpus();\n\t\t\t\tthis.set(METRIC.OS_CPU_TOTAL, cpus.length);\n\t\t\t\tthis.set(METRIC.OS_CPU_USER, cpus.reduce((a,b) => a + b.times.user, 0));\n\t\t\t\tthis.set(METRIC.OS_CPU_SYSTEM, cpus.reduce((a,b) => a + b.times.sys, 0));\n\n\t\t\t\tcpus.forEach((cpu, index) => {\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_MODEL, cpu.model, { index });\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_SPEED, cpu.speed, { index });\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_TIMES_USER, cpu.times.user, { index });\n\t\t\t\t\tthis.set(METRIC.OS_CPU_INFO_TIMES_SYS, cpu.times.sys, { index });\n\t\t\t\t});\n\n\t\t\t} catch(err) {\n\t\t\t\t// silent\n\t\t\t}\n\t\t}))\n\t\t.catch(() => {\n\t\t\t// silent this.logger.warn(\"Unable to collect CPU usage metrics.\", err);\n\t\t})\n\t\t.then(() => {\n\t\t\tthis.logger.debug(`Collected common metric values in ${duration.toFixed(3)} msec.`);\n\t\t});\n}\n\n/**\n * Get OS user info (safe-mode)\n *\n * @returns\n */\nfunction getUserInfo() {\n\ttry {\n\t\treturn os.userInfo();\n\t} catch (e) {\n\t\t/* istanbul ignore next */\n\t\treturn {};\n\t}\n}\n\n/**\n * Measure event loop lag.\n *\n * @returns {Promise<Number>}\n *\nfunction measureEventLoopLag() {\n\treturn new Promise(resolve => {\n\t\tconst start = process.hrtime();\n\t\tsetImmediate(() => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tresolve(delta[0] * 1e9 + delta[1]);\n\t\t});\n\t});\n}*/\n\nmodule.exports = {\n\tregisterCommonMetrics,\n\tupdateCommonMetrics\n};\n"],"names":["require$$0","METRIC","process","require$$1","require$$2"],"mappings":"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"}