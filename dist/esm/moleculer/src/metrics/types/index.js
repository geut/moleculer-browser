import r from"../../errors.js";import o from"./base.js";import t from"./gauge.js";import e from"./counter.js";import i from"./histogram.js";import n from"./info.js";const{BrokerOptionsError:s}=r,f={Base:o,Counter:e,Gauge:t,Histogram:i,Info:n};var m=Object.assign(f,{resolve:function(r){const o=function(r){if(!r)return null;let o=Object.keys(f).find((o=>o.toLowerCase()==r.toLowerCase()));return o?f[o]:void 0}(r);if(!o)throw new s(`Invalid metric type '${r}'.`,{type:r});return o},register:function(r,o){f[r]=o}});export default m;
//# sourceMappingURL=index.js.map
