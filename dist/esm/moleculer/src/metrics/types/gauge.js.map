{"version":3,"file":"gauge.js","sources":["../../../../../../src/moleculer/src/metrics/types/gauge.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { pick } = require(\"lodash\");\nconst BaseMetric = require(\"./base\");\nconst METRIC = require(\"../constants\");\nconst MetricRate = require(\"../rates\");\n\n/**\n * Gauge metric class.\n *\n * @class GaugeMetric\n * @extends {BaseMetric}\n */\nclass GaugeMetric extends BaseMetric {\n\n\t/**\n\t * Creates an instance of GaugeMetric.\n\t * @param {Object} opts\n\t * @param {MetricRegistry} registry\n\t * @memberof GaugeMetric\n\t */\n\tconstructor(opts, registry) {\n\t\tsuper(opts, registry);\n\t\tthis.type = METRIC.TYPE_GAUGE;\n\t\tthis.rate = opts.rate;\n\t}\n\n\t/**\n\t * Increment value\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} value\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\tincrement(labels, value, timestamp) {\n\t\tif (value == null)\n\t\t\tvalue = 1;\n\n\t\tconst item = this.get(labels);\n\t\treturn this.set((item ? item.value : 0) + value, labels, timestamp);\n\t}\n\n\t/**\n\t * Decrement value.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} value\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\tdecrement(labels, value, timestamp) {\n\t\tif (value == null)\n\t\t\tvalue = 1;\n\n\t\tconst item = this.get(labels);\n\t\treturn this.set((item ? item.value : 0) - value, labels, timestamp);\n\t}\n\n\t/**\n\t * Set value.\n\t *\n\t * @param {Number?} value\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\tset(value, labels, timestamp) {\n\t\tconst hash = this.hashingLabels(labels);\n\t\tlet item = this.values.get(hash);\n\t\tif (item) {\n\t\t\tif (item.value != value) {\n\t\t\t\titem.value = value;\n\t\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\n\t\t\t\tif (item.rate)\n\t\t\t\t\titem.rate.update(value);\n\n\t\t\t\tthis.changed(value, labels, timestamp);\n\t\t\t}\n\t\t} else {\n\t\t\titem = {\n\t\t\t\tvalue,\n\t\t\t\tlabels: pick(labels, this.labelNames),\n\t\t\t\ttimestamp: timestamp == null ? Date.now() : timestamp,\n\t\t\t};\n\t\t\tthis.values.set(hash, item);\n\n\t\t\tif (this.rate) {\n\t\t\t\titem.rate = new MetricRate(this, item, 1);\n\t\t\t\titem.rate.update(value);\n\t\t\t}\n\n\t\t\tthis.changed(value, labels, timestamp);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Reset item by labels.\n\t *\n\t * @param {Object} labels\n\t * @param {Number?} timestamp\n\t * @returns\n\t * @memberof GaugeMetric\n\t */\n\treset(labels, timestamp) {\n\t\treturn this.set(0, labels, timestamp);\n\t}\n\n\t/**\n\t * Reset all items.\n\t *\n\t * @param {Number?} timestamp\n\t * @memberof GaugeMetric\n\t */\n\tresetAll(timestamp) {\n\t\tthis.values.forEach(item => {\n\t\t\titem.value = 0;\n\t\t\titem.timestamp = timestamp == null ? Date.now() : timestamp;\n\t\t});\n\t\tthis.changed(null, null, timestamp);\n\t}\n\n\t/**\n\t * Generate a snapshot.\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof GaugeMetric\n\t */\n\tgenerateSnapshot() {\n\t\tconst snapshot = Array.from(this.values.keys()).map(key => {\n\t\t\tconst item = this.values.get(key);\n\t\t\tconst res = {\n\t\t\t\tkey,\n\t\t\t\tvalue: item.value,\n\t\t\t\tlabels: item.labels,\n\t\t\t\ttimestamp: item.timestamp\n\t\t\t};\n\n\t\t\tif (item.rate)\n\t\t\t\tres.rate = item.rate.rate;\n\n\t\t\treturn res;\n\t\t});\n\n\t\treturn snapshot;\n\t}\n}\n\nmodule.exports = GaugeMetric;\n"],"names":["pick","require$$0","BaseMetric","[object Object]","opts","registry","super","this","type","METRIC","TYPE_GAUGE","rate","labels","value","timestamp","item","get","set","hash","hashingLabels","values","Date","now","update","changed","labelNames","MetricRate","forEach","Array","from","keys","map","key","res"],"mappings":"yGAQA,MAAMA,KAAEA,GAASC,QAWjB,cAA0BC,EAQzBC,YAAYC,EAAMC,GACjBC,MAAMF,EAAMC,GACZE,KAAKC,KAAOC,EAAOC,WACnBH,KAAKI,KAAOP,EAAKO,KAYlBR,UAAUS,EAAQC,EAAOC,GACX,MAATD,IACHA,EAAQ,GAET,MAAME,EAAOR,KAAKS,IAAIJ,GACtB,OAAOL,KAAKU,KAAKF,EAAOA,EAAKF,MAAQ,GAAKA,EAAOD,EAAQE,GAY1DX,UAAUS,EAAQC,EAAOC,GACX,MAATD,IACHA,EAAQ,GAET,MAAME,EAAOR,KAAKS,IAAIJ,GACtB,OAAOL,KAAKU,KAAKF,EAAOA,EAAKF,MAAQ,GAAKA,EAAOD,EAAQE,GAY1DX,IAAIU,EAAOD,EAAQE,GAClB,MAAMI,EAAOX,KAAKY,cAAcP,GAChC,IAAIG,EAAOR,KAAKa,OAAOJ,IAAIE,GA2B3B,OA1BIH,EACCA,EAAKF,OAASA,IACjBE,EAAKF,MAAQA,EACbE,EAAKD,UAAyB,MAAbA,EAAoBO,KAAKC,MAAQR,EAE9CC,EAAKJ,MACRI,EAAKJ,KAAKY,OAAOV,GAElBN,KAAKiB,QAAQX,EAAOD,EAAQE,KAG7BC,EAAO,CACNF,MAAAA,EACAD,OAAQZ,EAAKY,EAAQL,KAAKkB,YAC1BX,UAAwB,MAAbA,EAAoBO,KAAKC,MAAQR,GAE7CP,KAAKa,OAAOH,IAAIC,EAAMH,GAElBR,KAAKI,OACRI,EAAKJ,KAAO,IAAIe,EAAWnB,KAAMQ,EAAM,GACvCA,EAAKJ,KAAKY,OAAOV,IAGlBN,KAAKiB,QAAQX,EAAOD,EAAQE,IAGtBC,EAWRZ,MAAMS,EAAQE,GACb,OAAOP,KAAKU,IAAI,EAAGL,EAAQE,GAS5BX,SAASW,GACRP,KAAKa,OAAOO,SAAQZ,IACnBA,EAAKF,MAAQ,EACbE,EAAKD,UAAyB,MAAbA,EAAoBO,KAAKC,MAAQR,KAEnDP,KAAKiB,QAAQ,KAAM,KAAMV,GAS1BX,mBAgBC,OAfiByB,MAAMC,KAAKtB,KAAKa,OAAOU,QAAQC,KAAIC,IACnD,MAAMjB,EAAOR,KAAKa,OAAOJ,IAAIgB,GACvBC,EAAM,CACXD,IAAAA,EACAnB,MAAOE,EAAKF,MACZD,OAAQG,EAAKH,OACbE,UAAWC,EAAKD,WAMjB,OAHIC,EAAKJ,OACRsB,EAAItB,KAAOI,EAAKJ,KAAKA,MAEfsB"}