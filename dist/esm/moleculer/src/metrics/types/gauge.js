import t from"lodash";import e from"../constants.js";import s from"./base.js";import a from"../rates.js";const{pick:r}=t;var l=class extends s{constructor(t,s){super(t,s),this.type=e.TYPE_GAUGE,this.rate=t.rate}increment(t,e,s){null==e&&(e=1);const a=this.get(t);return this.set((a?a.value:0)+e,t,s)}decrement(t,e,s){null==e&&(e=1);const a=this.get(t);return this.set((a?a.value:0)-e,t,s)}set(t,e,s){const l=this.hashingLabels(e);let n=this.values.get(l);return n?n.value!=t&&(n.value=t,n.timestamp=null==s?Date.now():s,n.rate&&n.rate.update(t),this.changed(t,e,s)):(n={value:t,labels:r(e,this.labelNames),timestamp:null==s?Date.now():s},this.values.set(l,n),this.rate&&(n.rate=new a(this,n,1),n.rate.update(t)),this.changed(t,e,s)),n}reset(t,e){return this.set(0,t,e)}resetAll(t){this.values.forEach((e=>{e.value=0,e.timestamp=null==t?Date.now():t})),this.changed(null,null,t)}generateSnapshot(){return Array.from(this.values.keys()).map((t=>{const e=this.values.get(t),s={key:t,value:e.value,labels:e.labels,timestamp:e.timestamp};return e.rate&&(s.rate=e.rate.rate),s}))}};export default l;
//# sourceMappingURL=gauge.js.map
