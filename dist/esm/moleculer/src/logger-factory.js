import e from"../../process.js";import r from"lodash";import t from"./utils.js";import s from"./loggers/index.js";const{isPlainObject:o,isString:n}=t,i=()=>{},a=e.cwd();var l=class{constructor(e){this.broker=e,this.appenders=[],this.cache=new Map}init(e){this.opts=e;const t=this.broker.options.logLevel||"info";!1===e||null==e?this.appenders=[]:!0===e||e===console?this.appenders=[s.resolve({type:"Console",options:{level:t}})]:(Array.isArray(e)||(e=[e]),this.appenders=r.compact(e).map((e=>n(e)?s.resolve({type:e,options:{level:t}}):o(e)?s.resolve(r.defaultsDeep({},e,{options:{level:t}})):s.resolve(e)))),this.appenders.forEach((e=>e.init(this)))}stop(){return this.broker.Promise.all(this.appenders.map((e=>e.stop())))}getCallerFromStack(){const e=Error.prepareStackTrace;Error.prepareStackTrace=(e,r)=>r;const r=(new Error).stack;if(Error.prepareStackTrace=e,r.length>2){const e=r[2];return{filename:e.getFileName().substring(a.length+1),lineNumber:e.getLineNumber(),columnNumber:e.getColumnNumber(),methodName:e.getMethodName(),functionName:e.getFunctionName()}}}getLogger(e){let t=this.cache.get(this.getBindingsKey(e));if(t)return t;t={};const o=this.broker,n=this.appenders,a=r.compact(n.map((r=>r.getLogHandler(e))));return s.LEVELS.forEach((r=>{if(0==a.length)return t[r]=i;t[r]=function(...t){if(o.middlewares&&o.middlewares.registeredHooks.newLogEntry&&o.middlewares.callSyncHandlers("newLogEntry",[r,t,e],{}),0!=a.length)for(let e=0;e<a.length;e++)a[e](r,t)}})),t.appenders=n,this.cache.set(this.getBindingsKey(e),t),t}getBindingsKey(e){return e?["nodeID","ns","mod"].map((r=>e[r])).join("|"):""}};export default l;
//# sourceMappingURL=logger-factory.js.map
