{"version":3,"file":"index.js","sources":["../../../../../src/moleculer/src/strategies/index.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Strategies = {\n\tBase: require(\"./base\"),\n\tRoundRobin: require(\"./round-robin\"),\n\tRandom: require(\"./random\"),\n\tCpuUsage: require(\"./cpu-usage\"),\n\tLatency: require(\"./latency\"),\n\tShard: require(\"./shard\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Strategies).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Strategies[n];\n}\n\n/**\n * Resolve strategy by name\n *\n * @param {object|string} opt\n * @returns {Strategy}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (Object.prototype.isPrototypeOf.call(Strategies.Base, opt)) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet StrategyClass = getByName(opt);\n\t\tif (StrategyClass)\n\t\t\treturn StrategyClass;\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid strategy type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet StrategyClass = getByName(opt.type || \"RoundRobin\");\n\t\tif (StrategyClass)\n\t\t\treturn StrategyClass;\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid strategy type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn Strategies.RoundRobin;\n}\n\n\nfunction register(name, value) {\n\tStrategies[name] = value;\n}\n\nmodule.exports = Object.assign(Strategies, { resolve, register });\n\n"],"names":["isObject","isString","require$$0","BrokerOptionsError","require$$1","Strategies","Base","require$$2","RoundRobin","require$$3","Random","require$$4","CpuUsage","require$$5","Latency","require$$6","Shard","require$$7","getByName","name","n","Object","keys","find","toLowerCase","assign","resolve","opt","prototype","isPrototypeOf","call","StrategyClass","type","register","value"],"mappings":"sOAQA,MAAMA,SAAEA,EAAQC,SAAEA,GAAaC,GACzBC,mBAAEA,GAAuBC,EAEzBC,EAAa,CAClBC,KAAMC,EACNC,WAAYC,EACZC,OAAQC,EACRC,SAAUC,EACVC,QAASC,EACTC,MAAOC,GAGR,SAASC,EAAUC,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIC,EAAIC,OAAOC,KAAKjB,GAAYkB,MAAKH,GAAKA,EAAEI,eAAiBL,EAAKK,gBAClE,OAAIJ,EACIf,EAAWe,QADnB,QAqCgBC,OAAOI,OAAOpB,EAAY,CAAEqB,QA1B7C,SAAiBC,GAChB,GAAIN,OAAOO,UAAUC,cAAcC,KAAKzB,EAAWC,KAAMqB,GACxD,OAAOA,EACD,GAAI1B,EAAS0B,GAAM,CACzB,IAAII,EAAgBb,EAAUS,GAC9B,GAAII,EACH,OAAOA,EAEP,MAAM,IAAI5B,EAAmB,0BAA0BwB,MAAS,CAAEK,KAAML,IAEnE,GAAI3B,EAAS2B,GAAM,CACzB,IAAII,EAAgBb,EAAUS,EAAIK,MAAQ,cAC1C,GAAID,EACH,OAAOA,EAEP,MAAM,IAAI5B,EAAmB,0BAA0BwB,EAAIK,SAAU,CAAEA,KAAML,EAAIK,OAGnF,OAAO3B,EAAWG,YAQmCyB,SAJtD,SAAkBd,EAAMe,GACvB7B,EAAWc,GAAQe"}