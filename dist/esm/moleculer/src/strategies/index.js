import r from"../errors.js";import t from"../../../cpu-usage.js";import o from"../utils.js";import e from"./base.js";import n from"./round-robin.js";import i from"./random.js";import s from"./latency.js";import p from"./shard.js";const{isObject:a,isString:f}=o,{BrokerOptionsError:u}=r,m={Base:e,RoundRobin:n,Random:i,CpuUsage:t,Latency:s,Shard:p};function y(r){if(!r)return null;let t=Object.keys(m).find((t=>t.toLowerCase()==r.toLowerCase()));return t?m[t]:void 0}var d=Object.assign(m,{resolve:function(r){if(Object.prototype.isPrototypeOf.call(m.Base,r))return r;if(f(r)){let t=y(r);if(t)return t;throw new u(`Invalid strategy type '${r}'.`,{type:r})}if(a(r)){let t=y(r.type||"RoundRobin");if(t)return t;throw new u(`Invalid strategy type '${r.type}'.`,{type:r.type})}return m.RoundRobin},register:function(r,t){m[r]=t}});export default d;
//# sourceMappingURL=index.js.map
