{"version":3,"file":"context.js","sources":["../../../../src/moleculer/src/context.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst { isString } = require(\"./utils\");\nconst _ = require(\"lodash\");\nconst { RequestSkippedError, MaxCallLevelError } = require(\"./errors\");\n\n/**\n * Merge metadata\n *\n * @param {Object} newMeta\n *\n * @private\n * @memberof Context\n */\nfunction mergeMeta(ctx, newMeta) {\n\tif (newMeta)\n\t\tObject.assign(ctx.meta, newMeta);\n\treturn ctx.meta;\n}\n\n/**\n * Context class for action calls\n *\n * @property {String} id - Context ID\n * @property {ServiceBroker} broker - Broker instance\n * @property {Action} action - Action definition\n * @property {String} [nodeID=null] - Node ID\n * @property {String} parentID - Parent Context ID\n * @property {Boolean} tracing - Enable tracing\n * @property {Number} [level=1] - Level of context\n *\n * @class Context\n */\nclass Context {\n\n\t/**\n\t * Creates an instance of Context.\n\t *\n\t * @param {ServiceBroker} broker - Broker instance\n\t * @param {Endpoint} endpoint\n\t *\n\t * @memberof Context\n\t */\n\tconstructor(broker, endpoint) {\n\n\t\tthis.broker = broker;\n\t\tif (this.broker) {\n\t\t\tthis.nodeID = this.broker.nodeID;\n\t\t\tthis.id = this.broker.generateUid();\n\t\t} else {\n\t\t\tthis.nodeID = null;\n\t\t}\n\n\t\tif (endpoint) {\n\t\t\tthis.setEndpoint(endpoint);\n\t\t} else {\n\t\t\tthis.endpoint = null;\n\t\t\tthis.service = null;\n\t\t\tthis.action = null;\n\t\t\tthis.event = null;\n\t\t}\n\n\t\t// The emitted event \"user.created\" because `ctx.event.name` can be \"user.**\"\n\t\tthis.eventName = null;\n\t\t// Type of event (\"emit\" or \"broadcast\")\n\t\tthis.eventType = null;\n\t\t// The groups of event\n\t\tthis.eventGroups = null;\n\n\t\tthis.options = {\n\t\t\ttimeout: null,\n\t\t\tretries: null,\n\t\t};\n\n\t\tthis.parentID = null;\n\t\tthis.caller = null;\n\n\t\tthis.level = 1;\n\n\t\tthis.params = null;\n\t\tthis.meta = {};\n\t\tthis.locals = {};\n\n\t\tthis.requestID = this.id;\n\n\t\tthis.tracing = null;\n\t\tthis.span = null;\n\t\tthis._spanStack = [];\n\n\t\tthis.needAck = null;\n\t\tthis.ackID = null;\n\n\t\t//this.startTime = null;\n\t\t//his.startHrTime = null;\n\t\t//this.stopTime = null;\n\t\t//this.duration = null;\n\n\t\t//this.error = null;\n\t\tthis.cachedResult = false;\n\t}\n\n\t/**\n\t * Create a new Context instance\n\t *\n\t * @param {ServiceBroker} broker\n\t * @param {Endpoint} endpoint\n\t * @param {Object?} params\n\t * @param {Object} opts\n\t * @returns {Context}\n\t *\n\t * @static\n\t * @memberof Context\n\t */\n\tstatic create(broker, endpoint, params, opts = {}) {\n\t\tconst ctx = new broker.ContextFactory(broker, endpoint);\n\n\t\tif (endpoint != null)\n\t\t\tctx.setEndpoint(endpoint);\n\n\t\tif (params != null) {\n\t\t\tlet cloning = broker ? broker.options.contextParamsCloning : false;\n\t\t\tif (opts.paramsCloning != null)\n\t\t\t\tcloning = opts.paramsCloning;\n\t\t\tctx.setParams(params, cloning);\n\t\t}\n\n\t\t//Object.assign(ctx.options, opts);\n\t\tctx.options = opts;\n\n\t\t// RequestID\n\t\tif (opts.requestID != null)\n\t\t\tctx.requestID = opts.requestID;\n\t\telse if (opts.parentCtx != null && opts.parentCtx.requestID != null)\n\t\t\tctx.requestID = opts.parentCtx.requestID;\n\n\t\t// Meta\n\t\tif (opts.parentCtx != null && opts.parentCtx.meta != null)\n\t\t\tctx.meta = Object.assign({}, opts.parentCtx.meta || {}, opts.meta || {});\n\t\telse if (opts.meta != null)\n\t\t\tctx.meta = opts.meta;\n\n\t\t// ParentID, Level, Caller, Tracing\n\t\tif (opts.parentCtx != null) {\n\t\t\tctx.tracing = opts.parentCtx.tracing;\n\t\t\tctx.level = opts.parentCtx.level + 1;\n\n\t\t\tif (opts.parentCtx.span)\n\t\t\t\tctx.parentID = opts.parentCtx.span.id;\n\t\t\telse\n\t\t\t\tctx.parentID = opts.parentCtx.id;\n\n\t\t\tif (opts.parentCtx.service)\n\t\t\t\tctx.caller = opts.parentCtx.service.fullName;\n\t\t}\n\n\t\t// caller\n\t\tif (opts.caller) {\n\t\t\tctx.caller = opts.caller;\n\t\t}\n\n\t\t// Parent span\n\t\tif (opts.parentSpan != null) {\n\t\t\tctx.parentID = opts.parentSpan.id;\n\t\t\tctx.requestID = opts.parentSpan.traceID;\n\t\t\tctx.tracing = opts.parentSpan.sampled;\n\t\t}\n\n\t\t// Event acknowledgement\n\t\tif (opts.needAck) {\n\t\t\tctx.needAck = opts.needAck;\n\t\t}\n\n\t\treturn ctx;\n\t}\n\n\t/**\n\t * Copy itself without ID.\n\t * @param {Endpoint} ep\n\t * @returns {Context}\n\t */\n\tcopy(ep) {\n\t\tconst newCtx = new this.constructor(this.broker);\n\n\t\tnewCtx.nodeID = this.nodeID;\n\t\tnewCtx.setEndpoint(ep || this.endpoint);\n\t\tnewCtx.options = this.options;\n\t\tnewCtx.parentID = this.parentID;\n\t\tnewCtx.caller = this.caller;\n\t\tnewCtx.level = this.level;\n\t\tnewCtx.params = this.params;\n\t\tnewCtx.meta = this.meta;\n\t\tnewCtx.locals = this.locals;\n\t\tnewCtx.requestID = this.requestID;\n\t\tnewCtx.tracing = this.tracing;\n\t\tnewCtx.span = this.span;\n\t\tnewCtx.needAck = this.needAck;\n\t\tnewCtx.ackID = this.ackID;\n\t\tnewCtx.eventName = this.eventName;\n\t\tnewCtx.eventType = this.eventType;\n\t\tnewCtx.eventGroups = this.eventGroups;\n\n\t\tnewCtx.cachedResult = this.cachedResult;\n\n\t\treturn newCtx;\n\t}\n\n\t/**\n\t * Set endpoint of context\n\t *\n\t * @param {Endpoint} endpoint\n\t * @memberof Context\n\t */\n\tsetEndpoint(endpoint) {\n\t\tthis.endpoint = endpoint;\n\t\tif (endpoint) {\n\t\t\tthis.nodeID = endpoint.id;\n\t\t\tif (endpoint.action) {\n\t\t\t\tthis.action = endpoint.action;\n\t\t\t\tthis.service = this.action.service;\n\t\t\t\tthis.event = null;\n\t\t\t} else if (endpoint.event) {\n\t\t\t\tthis.event =  endpoint.event;\n\t\t\t\tthis.service = this.event.service;\n\t\t\t\tthis.action = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set params of context\n\t *\n\t * @param {Object} newParams\n\t * @param {Boolean} cloning\n\t *\n\t * @memberof Context\n\t */\n\tsetParams(newParams, cloning = false) {\n\t\tif (cloning && newParams)\n\t\t\tthis.params = Object.assign({}, newParams);\n\t\telse\n\t\t\tthis.params = newParams;\n\t}\n\n\t/**\n\t * Call an other action. It creates a sub-context.\n\t *\n\t * @param {String} actionName\n\t * @param {Object?} params\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @example <caption>Call an other service with params & options</caption>\n\t * ctx.call(\"posts.get\", { id: 12 }, { timeout: 1000 });\n\t *\n\t * @memberof Context\n\t */\n\tcall(actionName, params, _opts) {\n\t\tconst opts = Object.assign({\n\t\t\tparentCtx: this\n\t\t}, _opts);\n\n\t\tif (this.options.timeout > 0 && this.startHrTime) {\n\t\t\t// Distributed timeout handling. Decrementing the timeout value with the elapsed time.\n\t\t\t// If the timeout below 0, skip the call.\n\t\t\tconst diff = process.hrtime(this.startHrTime);\n\t\t\tconst duration = (diff[0] * 1e3) + (diff[1] / 1e6);\n\t\t\tconst distTimeout = this.options.timeout - duration;\n\n\t\t\tif (distTimeout <= 0) {\n\t\t\t\treturn this.broker.Promise.reject(new RequestSkippedError({ action: actionName, nodeID: this.broker.nodeID }));\n\t\t\t}\n\n\t\t\tif (!opts.timeout || distTimeout < opts.timeout)\n\t\t\t\topts.timeout = distTimeout;\n\t\t}\n\n\t\t// Max calling level check to avoid calling loops\n\t\tif (this.broker.options.maxCallLevel > 0 && this.level >= this.broker.options.maxCallLevel) {\n\t\t\treturn this.broker.Promise.reject(new MaxCallLevelError({ nodeID: this.broker.nodeID, level: this.level }));\n\t\t}\n\n\t\tlet p = this.broker.call(actionName, params, opts);\n\n\t\t// Merge metadata with sub context metadata\n\t\treturn p.then(res => {\n\t\t\tif (p.ctx)\n\t\t\t\tmergeMeta(this, p.ctx.meta);\n\n\t\t\treturn res;\n\t\t}).catch(err => {\n\t\t\tif (p.ctx)\n\t\t\t\tmergeMeta(this, p.ctx.meta);\n\n\t\t\treturn this.broker.Promise.reject(err);\n\t\t});\n\t}\n\n\tmcall(def, _opts) {\n\t\tconst opts = Object.assign({\n\t\t\tparentCtx: this\n\t\t}, _opts);\n\n\t\tif (this.options.timeout > 0 && this.startHrTime) {\n\t\t\t// Distributed timeout handling. Decrementing the timeout value with the elapsed time.\n\t\t\t// If the timeout below 0, skip the call.\n\t\t\tconst diff = process.hrtime(this.startHrTime);\n\t\t\tconst duration = (diff[0] * 1e3) + (diff[1] / 1e6);\n\t\t\tconst distTimeout = this.options.timeout - duration;\n\n\t\t\tif (distTimeout <= 0) {\n\t\t\t\tconst action = (Array.isArray(def) ? def : Object.values(def)).map(d => d.action).join(\", \");\n\t\t\t\treturn this.broker.Promise.reject(new RequestSkippedError({ action, nodeID: this.broker.nodeID }));\n\t\t\t}\n\n\t\t\tif (!opts.timeout || distTimeout < opts.timeout)\n\t\t\t\topts.timeout = distTimeout;\n\t\t}\n\n\t\t// Max calling level check to avoid calling loops\n\t\tif (this.broker.options.maxCallLevel > 0 && this.level >= this.broker.options.maxCallLevel) {\n\t\t\treturn this.broker.Promise.reject(new MaxCallLevelError({ nodeID: this.broker.nodeID, level: this.level }));\n\t\t}\n\n\t\tlet p = this.broker.mcall(def, opts);\n\n\t\t// Merge metadata with sub context metadata\n\t\treturn p.then(res => {\n\t\t\tif (Array.isArray(p.ctx) && p.ctx.length)\n\t\t\t\tp.ctx.forEach(ctx => mergeMeta(this, ctx.meta));\n\n\t\t\treturn res;\n\t\t}).catch(err => {\n\t\t\tif (Array.isArray(p.ctx) && p.ctx.length)\n\t\t\t\tp.ctx.forEach(ctx => mergeMeta(this, ctx.meta));\n\n\t\t\treturn this.broker.Promise.reject(err);\n\t\t});\n\t}\n\n\t/**\n\t * Emit an event (grouped & balanced global event)\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @example\n\t * ctx.emit(\"user.created\", { entity: user, creator: ctx.meta.user });\n\t *\n\t * @memberof Context\n\t */\n\temit(eventName, data, opts) {\n\t\tif (Array.isArray(opts) || isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\topts.parentCtx = this;\n\t\treturn this.broker.emit(eventName, data, opts);\n\t}\n\n\t/**\n\t * Emit an event for all local & remote services\n\t *\n\t * @param {string} eventName\n\t * @param {any?} payload\n\t * @param {Object?} opts\n\t * @returns {Promise}\n\t *\n\t * @example\n\t * ctx.broadcast(\"user.created\", { entity: user, creator: ctx.meta.user });\n\t *\n\t * @memberof Context\n\t */\n\tbroadcast(eventName, data, opts) {\n\t\tif (Array.isArray(opts) || isString(opts))\n\t\t\topts = { groups: opts };\n\t\telse if (opts == null)\n\t\t\topts = {};\n\n\t\tif (opts.groups && !Array.isArray(opts.groups))\n\t\t\topts.groups = [opts.groups];\n\n\t\topts.parentCtx = this;\n\t\treturn this.broker.broadcast(eventName, data, opts);\n\t}\n\n\t/**\n\t * Start a new child tracing span.\n\t *\n\t * @param {String} name\n\t * @param {Object?} opts\n\t * @returns {Span}\n\t * @memberof Context\n\t */\n\tstartSpan(name, opts) {\n\t\tlet span;\n\t\tif (this.span) {\n\t\t\tspan = this.span.startSpan(name, Object.assign({ ctx: this }, opts));\n\t\t} else {\n\t\t\tspan = this.broker.tracer.startSpan(name, Object.assign({ ctx: this }, opts));\n\t\t}\n\n\t\tthis._spanStack.push(span);\n\t\tthis.span = span;\n\n\t\treturn span;\n\t}\n\n\t/**\n\t * Finish an active span.\n\t *\n\t * @param {Span} span\n\t * @param {Number?} time\n\t */\n\tfinishSpan(span, time) {\n\t\tif (!span.isActive()) return;\n\n\t\tspan.finish(time);\n\n\t\tconst idx = this._spanStack.findIndex(sp => sp == span);\n\t\tif (idx !== -1) {\n\t\t\tthis._spanStack.splice(idx, 1);\n\t\t\tthis.span = this._spanStack[this._spanStack.length - 1];\n\t\t} else {\n\t\t\t/* istanbul ignore next */\n\t\t\tthis.service.logger.warn(\"This span is not assigned to this context\", span);\n\t\t}\n\t}\n\n\t/**\n\t * Convert Context to a printable POJO object.\n\t */\n\ttoJSON() {\n\t\tconst res = _.pick(this, [\n\t\t\t\"id\",\n\t\t\t\"nodeID\",\n\t\t\t\"action.name\",\n\t\t\t\"event.name\",\n\t\t\t\"service.name\",\n\t\t\t\"service.version\",\n\t\t\t\"service.fullName\",\n\t\t\t\"options\",\n\t\t\t\"parentID\",\n\t\t\t\"caller\",\n\t\t\t\"level\",\n\t\t\t\"params\",\n\t\t\t\"meta\",\n\t\t\t//\"locals\",\n\t\t\t\"requestID\",\n\t\t\t\"tracing\",\n\t\t\t\"span\",\n\t\t\t\"needAck\",\n\t\t\t\"ackID\",\n\t\t\t\"eventName\",\n\t\t\t\"eventType\",\n\t\t\t\"eventGroups\",\n\t\t\t\"cachedResult\"\n\t\t]);\n\n\t\treturn res;\n\t}\n\n\t/* istanbul ignore next */\n\t[util.inspect.custom](depth, options) {\n\t\t// https://nodejs.org/docs/latest-v8.x/api/util.html#util_custom_inspection_functions_on_objects\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(\"[Context]\", \"special\");\n\t\t}\n\n\t\tconst inner = util.inspect(this.toJSON(), options);\n\t\treturn `${options.stylize(\"Context\", \"special\")}< ${inner} >`;\n\t}\n}\n\nmodule.exports = Context;\n"],"names":["isString","require$$0","RequestSkippedError","MaxCallLevelError","require$$1","mergeMeta","ctx","newMeta","Object","assign","meta","Context","[object Object]","broker","endpoint","this","nodeID","id","generateUid","setEndpoint","service","action","event","eventName","eventType","eventGroups","options","timeout","retries","parentID","caller","level","params","locals","requestID","tracing","span","_spanStack","needAck","ackID","cachedResult","opts","ContextFactory","cloning","contextParamsCloning","paramsCloning","setParams","parentCtx","fullName","parentSpan","traceID","sampled","ep","newCtx","constructor","newParams","actionName","_opts","startHrTime","diff","process","hrtime","duration","distTimeout","Promise","reject","maxCallLevel","p","call","then","res","catch","err","def","Array","isArray","values","map","d","join","mcall","length","forEach","data","groups","emit","broadcast","name","startSpan","tracer","push","time","isActive","finish","idx","findIndex","sp","splice","logger","warn","_","pick","util","inspect","custom","depth","stylize","inner","toJSON"],"mappings":"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"}