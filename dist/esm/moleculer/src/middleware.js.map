{"version":3,"file":"middleware.js","sources":["../../../../src/moleculer/src/middleware.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst Middlewares \t= require(\"./middlewares\");\nconst { BrokerOptionsError } = require(\"./errors\");\nconst { isObject, isFunction, isString }\t= require(\"./utils\");\n\nclass MiddlewareHandler {\n\n\tconstructor(broker) {\n\t\tthis.broker = broker;\n\n\t\tthis.list = [];\n\n\t\tthis.registeredHooks = {};\n\t}\n\n\tadd(mw) {\n\t\tif (!mw) return;\n\n\t\tif (isString(mw)) {\n\t\t\tconst found = _.get(Middlewares, mw);\n\t\t\tif (!found)\n\t\t\t\tthrow new BrokerOptionsError(`Invalid built-in middleware type '${mw}'.`, { type: mw });\n\t\t\tmw = found;\n\t\t}\n\n\t\tif (isFunction(mw))\n\t\t\tmw = mw.call(this.broker, this.broker);\n\n\t\tif (!isObject(mw))\n\t\t\tthrow new BrokerOptionsError(`Invalid middleware type '${typeof mw}'. Accepted only Object of Function.`, { type: typeof mw });\n\n\t\tObject.keys(mw).forEach(key => {\n\t\t\tif (isFunction(mw[key])) {\n\t\t\t\tif (Array.isArray(this.registeredHooks[key]))\n\t\t\t\t\tthis.registeredHooks[key].push(mw[key]);\n\t\t\t\telse\n\t\t\t\t\tthis.registeredHooks[key] = [mw[key]];\n\t\t\t}\n\t\t});\n\n\t\tthis.list.push(mw);\n\t}\n\n\t/**\n\t * Wrap a handler\n\t *\n\t * @param {string} method\n\t * @param {Function} handler\n\t * @param {Object} def\n\t * @returns {Function}\n\t * @memberof MiddlewareHandler\n\t */\n\twrapHandler(method, handler, def) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\thandler = this.registeredHooks[method].reduce((handler, fn) => {\n\t\t\t\treturn fn.call(this.broker, handler, def);\n\t\t\t}, handler);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\t/**\n\t * Call a handler asynchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns {Promise}\n\t * @memberof MiddlewareHandler\n\t */\n\tcallHandlers(method, args, opts = {}) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\tconst list = opts.reverse ? Array.from(this.registeredHooks[method]).reverse() : this.registeredHooks[method];\n\t\t\treturn list.reduce((p, fn) => p.then(() => fn.apply(this.broker, args)), this.broker.Promise.resolve());\n\t\t}\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Call a handler synchronously in all middlewares\n\t *\n\t * @param {String} method\n\t * @param {Array<any>} args\n\t * @param {Object} opts\n\t * @returns {Array<any}\n\t * @memberof MiddlewareHandler\n\t */\n\tcallSyncHandlers(method, args, opts = {}) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\tconst list = opts.reverse ? Array.from(this.registeredHooks[method]).reverse() : this.registeredHooks[method];\n\t\t\treturn list.map(fn => fn.apply(this.broker, args));\n\t\t}\n\t\treturn;\n\t}\n\n\t/**\n\t * Get count of registered middlewares\n\t *\n\t * @returns {Number}\n\t * @memberof MiddlewareHandler\n\t */\n\tcount() {\n\t\treturn this.list.length;\n\t}\n\n\t/**\n\t * Wrap a method\n\t *\n\t * @param {string} method\n\t * @param {Function} handler\n\t * @param {any} bindTo\n\t * @param {Object} opts\n\t * @returns {Function}\n\t * @memberof MiddlewareHandler\n\t */\n\twrapMethod(method, handler, bindTo = this.broker, opts = {}) {\n\t\tif (this.registeredHooks[method] && this.registeredHooks[method].length) {\n\t\t\tconst list = opts.reverse ? Array.from(this.registeredHooks[method]).reverse() : this.registeredHooks[method];\n\t\t\thandler = list.reduce((next, fn) => fn.call(bindTo, next), handler.bind(bindTo));\n\t\t}\n\n\t\treturn handler;\n\t}\n\n}\n\nmodule.exports = MiddlewareHandler;\n\n/*\n{\n    // After broker is created\n    created(broker) {\n\t\treturn;\n    },\n\n    // Wrap local action handlers (legacy middleware handler)\n    localAction(next, action) {\n\t\treturn ctx => {\n\t\t\treturn next(ctx);\n\t\t};\n    },\n\n    // Wrap remote action handlers\n    remoteAction(next, action) {\n\t\treturn ctx => {\n\t\t\treturn next(ctx);\n\t\t};\n    },\n\n\t// Wrap local event handlers\n\tlocalEvent(next, event) {\n\t\treturn (payload, sender, event) => {\n\t\t\treturn next(payload, sender, event);\n\t\t};\n\t},\n\n    // Wrap local method handlers\n    localMethod(next, method) {\n\t\treturn () => {\n\t\t\treturn next(...arguments);\n\t\t};\n\t},\n\n\t// Wrap broker.createService method\n\tcreateService(next) {\n\t\treturn (schema, schemaMods) => {\n\t\t\treturn next(schema, schemaMods);\n\t\t};\n\t},\n\n\t// Wrap broker.registerLocalService method\n\tregisterLocalService(next) {\n\t\treturn (svc) => {\n\t\t\treturn next(svc);\n\t\t};\n\t},\n\n\t// Wrap broker.destroyService method\n\tdestroyService(next) {\n\t\treturn (svc) => {\n\t\t\treturn next(svc);\n\t\t};\n\t},\n\n\t// Wrap broker.call method\n\tcall(next) {\n\t\treturn (actionName, params, opts) => {\n\t\t\treturn next(actionName, params, opts);\n\t\t};\n\t},\n\n\t// Wrap broker.mcall method\n\tmcall(next) {\n\t\treturn (def) => {\n\t\t\treturn next(def);\n\t\t};\n\t},\n\n    // Wrap broker.emit method\n    emit(next) {\n\t\treturn (event, payload) => {\n\t\t\treturn next(event, payload);\n\t\t};\n    },\n\n    // Wrap broker.broadcast method\n    broadcast(next) {\n\t\treturn (event, payload) => {\n\t\t\treturn next(event, payload);\n\t\t};\n    },\n\n    // Wrap broker.broadcastLocal method\n    broadcastLocal(next) {\n\t\treturn (event, payload) => {\n\t\t\treturn next(event, payload);\n\t\t};\n    },\n\n\t// While a new local service creating (after mixins are mixed)\n\tserviceCreating(service, schema) {\n\t\treturn;\n\t},\n\n\t// After a new local service created\n\tserviceCreated(service) {\n\t\treturn;\n\t},\n\n\t// Before a local service started\n\tserviceStarting(service) {\n\t\treturn Promise.resolve();\n\t},\n\n\t// After a local service started\n\tserviceStarted(service) {\n\t\treturn Promise.resolve();\n\t},\n\n\t// Before a local service stopping\n\tserviceStopping(service) {\n\t\treturn Promise.resolve();\n\t},\n\n\t// After a local service stopped\n\tserviceStopped(service) {\n\t\treturn Promise.resolve();\n\t},\n\n    // Before broker starting\n    starting(broker) {\n\t\treturn Promise.resolve();\n    },\n\n    // After broker started\n    started(broker) {\n\t\treturn Promise.resolve();\n    },\n\n    // Before broker stopping\n    stopping(broker) {\n\t\treturn Promise.resolve();\n    },\n\n    // After broker stopped\n    stopped(broker) {\n\t\treturn Promise.resolve();\n    },\n\n\t// When transit publishing a packet\n\ttransitPublish(next) {\n\t\treturn (packet) => {\n\t\t\treturn next(packet);\n\t\t};\n\t},\n\n\t// When transit receives & handles a packet\n\ttransitMessageHandler(next) {\n\t\treturn (cmd, packet) => {\n\t\t\treturn next(cmd, packet);\n\t\t};\n\t},\n\n\t// When transporter send data\n\ttransporterSend(next) {\n\t\treturn (topic, data, meta) => {\n\t\t\treturn next(topic, data, meta);\n\t\t};\n\t},\n\n\t// When transporter received data\n\ttransporterReceive(next) {\n\t\treturn (cmd, data, s) => {\n\t\t\treturn next(cmd, data, s);\n\t\t};\n\t},\n\n\t// When transporter received data\n\tnewLogEntry(type, args, bindings) {\n\t\t// Do something\n\t}\n}\n\n*/\n"],"names":["require$$0","require$$1","Middlewares"],"mappings":"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"}