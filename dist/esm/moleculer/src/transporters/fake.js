import s from"eventemitter2";import{commonjsGlobal as e}from"../../../_virtual/_commonjsHelpers.js";import r from"./base.js";const t=s.EventEmitter2;e.bus=new t({wildcard:!0,maxListeners:100});var i=class extends r{constructor(s){super(s),this.bus=e.bus,this.hasBuiltInBalancer=!0,this.subscriptions=[]}connect(){return this.onConnected()}disconnect(){return this.connected=!1,this.subscriptions.forEach((({topic:s,handler:e})=>this.bus.off(s,e))),this.subscriptions=[],this.broker.Promise.resolve()}subscribe(s,e){const r=this.getTopicName(s,e),t=e=>this.receive(s,e);return this.subscriptions.push({topic:r,handler:t}),this.bus.on(r,t),this.broker.Promise.resolve()}subscribeBalancedRequest(){return this.broker.Promise.resolve()}subscribeBalancedEvent(){return this.broker.Promise.resolve()}send(s,e){return this.bus.emit(s,e),this.broker.Promise.resolve()}};export default i;
//# sourceMappingURL=fake.js.map
