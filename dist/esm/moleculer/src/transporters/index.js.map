{"version":3,"file":"index.js","sources":["../../../../../src/moleculer/src/transporters/index.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Transporters = {\n\tBase: require(\"./base\"),\n\tFake: require(\"./fake\"),\n\tNATS: require(\"./nats\"),\n\tMQTT: require(\"./mqtt\"),\n\tRedis: require(\"./redis\"),\n\tAMQP: require(\"./amqp\"),\n\tAMQP10: require(\"./amqp10\"),\n\tKafka: require(\"./kafka\"),\n\tSTAN: require(\"./stan\"),\n\tTCP: require(\"./tcp\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Transporters).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Transporters[n];\n}\n\n/**\n * Resolve transporter by name\n *\n * @param {object|string} opt\n * @returns {Transporter}\n */\nfunction resolve(opt) {\n\tif (opt instanceof Transporters.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet TransporterClass = getByName(opt);\n\t\tif (TransporterClass)\n\t\t\treturn new TransporterClass();\n\n\t\tif (opt.startsWith(\"nats://\"))\n\t\t\tTransporterClass = Transporters.NATS;\n\t\telse if (opt.startsWith(\"mqtt://\") || opt.startsWith(\"mqtts://\"))\n\t\t\tTransporterClass = Transporters.MQTT;\n\t\telse if (opt.startsWith(\"redis://\") || opt.startsWith(\"rediss://\"))\n\t\t\tTransporterClass = Transporters.Redis;\n\t\telse if (opt.startsWith(\"amqp://\") || opt.startsWith(\"amqps://\"))\n\t\t\tTransporterClass = Transporters.AMQP;\n\t\telse if (opt.startsWith(\"amqp10://\"))\n\t\t\tTransporterClass = Transporters.AMQP10;\n\t\telse if (opt.startsWith(\"kafka://\"))\n\t\t\tTransporterClass = Transporters.Kafka;\n\t\telse if (opt.startsWith(\"stan://\"))\n\t\t\tTransporterClass = Transporters.STAN;\n\t\telse if (opt.startsWith(\"tcp://\"))\n\t\t\tTransporterClass = Transporters.TCP;\n\n\t\tif (TransporterClass)\n\t\t\treturn new TransporterClass(opt);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid transporter type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet TransporterClass = getByName(opt.type || \"NATS\");\n\n\t\tif (TransporterClass)\n\t\t\treturn new TransporterClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid transporter type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn null;\n}\n\nfunction register(name, value) {\n\tTransporters[name] = value;\n}\n\n\nmodule.exports = Object.assign(Transporters, { resolve, register });\n"],"names":["isObject","isString","require$$0","BrokerOptionsError","require$$1","Transporters","Base","require$$2","Fake","require$$3","NATS","require$$4","MQTT","require$$5","Redis","require$$6","AMQP","require$$7","AMQP10","require$$8","Kafka","require$$9","STAN","require$$10","TCP","require$$11","getByName","name","n","Object","keys","find","toLowerCase","assign","resolve","opt","TransporterClass","startsWith","type","options","register","value"],"mappings":"4IAQA,MAAMA,SAAEA,EAAQC,SAAEA,GAAaC,GACzBC,mBAAEA,GAAuBC,EAEzBC,EAAe,CACpBC,KAAMC,EACNC,KAAMC,EACNC,KAAMC,EACNC,KAAMC,EACNC,MAAOC,EACPC,KAAMC,EACNC,OAAQC,EACRC,MAAOC,EACPC,KAAMC,EACNC,IAAKC,GAGN,SAASC,EAAUC,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIC,EAAIC,OAAOC,KAAKzB,GAAc0B,MAAKH,GAAKA,EAAEI,eAAiBL,EAAKK,gBACpE,OAAIJ,EACIvB,EAAauB,QADrB,QAyDgBC,OAAOI,OAAO5B,EAAc,CAAE6B,QA/C/C,SAAiBC,GAChB,GAAIA,aAAe9B,EAAaC,KAC/B,OAAO6B,EACD,GAAIlC,EAASkC,GAAM,CACzB,IAAIC,EAAmBV,EAAUS,GACjC,GAAIC,EACH,OAAO,IAAIA,EAmBZ,GAjBID,EAAIE,WAAW,WAClBD,EAAmB/B,EAAaK,KACxByB,EAAIE,WAAW,YAAcF,EAAIE,WAAW,YACpDD,EAAmB/B,EAAaO,KACxBuB,EAAIE,WAAW,aAAeF,EAAIE,WAAW,aACrDD,EAAmB/B,EAAaS,MACxBqB,EAAIE,WAAW,YAAcF,EAAIE,WAAW,YACpDD,EAAmB/B,EAAaW,KACxBmB,EAAIE,WAAW,aACvBD,EAAmB/B,EAAaa,OACxBiB,EAAIE,WAAW,YACvBD,EAAmB/B,EAAae,MACxBe,EAAIE,WAAW,WACvBD,EAAmB/B,EAAaiB,KACxBa,EAAIE,WAAW,YACvBD,EAAmB/B,EAAamB,KAE7BY,EACH,OAAO,IAAIA,EAAiBD,GAE5B,MAAM,IAAIhC,EAAmB,6BAA6BgC,MAAS,CAAEG,KAAMH,IAEtE,GAAInC,EAASmC,GAAM,CACzB,IAAIC,EAAmBV,EAAUS,EAAIG,MAAQ,QAE7C,GAAIF,EACH,OAAO,IAAIA,EAAiBD,EAAII,SAEhC,MAAM,IAAIpC,EAAmB,6BAA6BgC,EAAIG,SAAU,CAAEA,KAAMH,EAAIG,OAGtF,OAAO,MAQgDE,SALxD,SAAkBb,EAAMc,GACvBpC,EAAasB,GAAQc"}