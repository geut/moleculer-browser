{"version":3,"file":"circuit-breaker.js","sources":["../../../../../src/moleculer/src/middlewares/circuit-breaker.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst C \t\t\t= require(\"../constants\");\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function circuitBreakerMiddleware(broker) {\n\n\tlet windowTimer;\n\tconst store = new Map();\n\tlet logger;\n\n\t/**\n\t * Create timer to clear endpoint store\n\t *\n\t * @param {Number} windowTime\n\t */\n\tfunction createWindowTimer(windowTime) {\n\t\tif (!windowTimer) {\n\t\t\twindowTimer = setInterval(() => resetStore(), (windowTime || 60) * 1000);\n\t\t\twindowTimer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Clear endpoint state store\n\t */\n\tfunction resetStore() {\n\t\tif (!logger) return;\n\n\t\tlogger.debug(\"Reset circuit-breaker endpoint states...\");\n\t\tstore.forEach((item, key) => {\n\t\t\tif (item.count == 0) {\n\t\t\t\tlogger.debug(`Remove '${key}' endpoint state because it is not used`);\n\t\t\t\tstore.delete(key);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogger.debug(`Clean '${key}' endpoint state.`);\n\t\t\titem.count = 0;\n\t\t\titem.failures = 0;\n\t\t});\n\t}\n\n\t/**\n\t * Get Endpoint state from store. If not exists, create it.\n\t *\n\t * @param {Endpoint} ep\n\t * @param {Service} service\n\t * @param {Object} opts\n\t * @returns {Object}\n\t */\n\tfunction getEpState(ep, service, opts) {\n\t\tlet item = store.get(ep.name);\n\t\tif (!item) {\n\t\t\titem = {\n\t\t\t\tep,\n\t\t\t\tservice,\n\t\t\t\topts,\n\t\t\t\tcount: 0,\n\t\t\t\tfailures: 0,\n\t\t\t\tstate: C.CIRCUIT_CLOSE,\n\t\t\t\tcbTimer: null\n\t\t\t};\n\t\t\tstore.set(ep.name, item);\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t * Increment failure counter\n\t *\n\t * @param {Object} item\n\t * @param {Error} err\n\t * @param {Context} ctx\n\t */\n\tfunction failure(item, err, ctx) {\n\t\titem.count++;\n\t\titem.failures++;\n\n\t\tcheckThreshold(item, ctx);\n\t}\n\n\t/**\n\t * Increment request counter and switch CB to CLOSE if it is on HALF_OPEN_WAIT.\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction success(item, ctx) {\n\t\titem.count++;\n\n\t\tif (item.state === C.CIRCUIT_HALF_OPEN_WAIT)\n\t\t\tcircuitClose(item, ctx);\n\t\telse\n\t\t\tcheckThreshold(item, ctx);\n\t}\n\n\t/**\n\t * Check circuit-breaker failure threshold of Endpoint\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction checkThreshold(item, ctx) {\n\t\tif (item.count >= item.opts.minRequestCount) {\n\t\t\tconst rate = item.failures / item.count;\n\t\t\tif (rate >= item.opts.threshold)\n\t\t\t\ttrip(item, ctx);\n\t\t}\n\t}\n\n\t/**\n\t * Trip the circuit-breaker, change the status to open\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction trip(item, ctx) {\n\t\tif (item.state == C.CIRCUIT_OPEN) return;\n\n\t\titem.state = C.CIRCUIT_OPEN;\n\t\titem.ep.state = false;\n\n\t\tif (item.cbTimer) {\n\t\t\tclearTimeout(item.cbTimer);\n\t\t\titem.cbTimer = null;\n\t\t}\n\n\t\titem.cbTimer = setTimeout(() => halfOpen(item, ctx), item.opts.halfOpenTime);\n\t\titem.cbTimer.unref();\n\n\t\tconst action = item.ep.action;\n\t\tconst service = item.service.fullName;\n\n\t\tconst rate = item.count > 0 ? item.failures / item.count : 0;\n\t\tlogger.debug(`Circuit breaker has been opened on '${item.ep.name}' endpoint.`, { nodeID: item.ep.id, service, action: action.name, failures: item.failures, count: item.count, rate });\n\t\tbroker.broadcast(\"$circuit-breaker.opened\", { nodeID: item.ep.id, service, action: action.name, failures: item.failures, count: item.count, rate });\n\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, 1, { affectedNodeID: item.ep.id, service, action: action.name });\n\t\tbroker.metrics.increment(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL, { affectedNodeID: item.ep.id, service, action: action.name });\n\t}\n\n\t/**\n\t * Change circuit-breaker status to half-open\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction halfOpen(item) {\n\t\titem.state = C.CIRCUIT_HALF_OPEN;\n\t\titem.ep.state = true;\n\n\t\tconst action = item.ep.action;\n\t\tconst service = item.service.fullName;\n\n\t\tlogger.debug(`Circuit breaker has been half-opened on '${item.ep.name}' endpoint.`, { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.broadcast(\"$circuit-breaker.half-opened\", { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, 0, { affectedNodeID: item.ep.id, service, action: action.name });\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE, 1, { affectedNodeID: item.ep.id, service, action: action.name });\n\n\t\tif (item.cbTimer) {\n\t\t\tclearTimeout(item.cbTimer);\n\t\t\titem.cbTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Change circuit-breaker status to half-open waiting. First request is invoked after half-open.\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t*/\n\tfunction halfOpenWait(item, ctx) {\n\t\titem.state = C.CIRCUIT_HALF_OPEN_WAIT;\n\t\titem.ep.state = false;\n\n\t\t// Anti-stick protection\n\t\titem.cbTimer = setTimeout(() => halfOpen(item, ctx), item.opts.halfOpenTime);\n\t\titem.cbTimer.unref();\n\t}\n\n\t/**\n\t * Change circuit-breaker status to close\n\t *\n\t * @param {Object} item\n\t * @param {Context} ctx\n\t */\n\tfunction circuitClose(item) {\n\t\titem.state = C.CIRCUIT_CLOSE;\n\t\titem.ep.state = true;\n\t\titem.failures = 0;\n\t\titem.count = 0;\n\n\t\tconst action = item.ep.action;\n\t\tconst service = item.service.fullName;\n\n\t\tlogger.debug(`Circuit breaker has been closed on '${item.ep.name}' endpoint.`, { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.broadcast(\"$circuit-breaker.closed\", { nodeID: item.ep.id, service, action: action.name });\n\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, 0, { affectedNodeID: item.ep.id, service, action: action.name });\n\t\tbroker.metrics.set(METRIC.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE, 0, { affectedNodeID: item.ep.id, service, action: action.name });\n\n\t\tif (item.cbTimer) {\n\t\t\tclearTimeout(item.cbTimer);\n\t\t\titem.cbTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Middleware wrapper function\n\t *\n\t * @param {Function} handler\n\t * @param {Action} action\n\t * @returns {Function}\n\t */\n\tfunction wrapCBMiddleware(handler, action) {\n\t\tconst service = action.service;\n\t\t// Merge action option and broker options\n\t\tconst opts = Object.assign({}, this.options.circuitBreaker || {}, action.circuitBreaker || {});\n\t\tif (opts.enabled) {\n\t\t\treturn function circuitBreakerMiddleware(ctx) {\n\t\t\t\t// Get endpoint state item\n\t\t\t\tconst ep = ctx.endpoint;\n\t\t\t\tconst item = getEpState(ep, service, opts);\n\n\t\t\t\t// Handle half-open state in circuit breaker\n\t\t\t\tif (item.state == C.CIRCUIT_HALF_OPEN) {\n\t\t\t\t\thalfOpenWait(item, ctx);\n\t\t\t\t}\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler(ctx).then(res => {\n\t\t\t\t\tconst item = getEpState(ep, service, opts);\n\t\t\t\t\tsuccess(item, ctx);\n\n\t\t\t\t\treturn res;\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tif (opts.check && opts.check(err)) {\n\t\t\t\t\t\t// Failure if error is created locally (not came from a 3rd node error)\n\t\t\t\t\t\tif (item && (!err.nodeID || err.nodeID == ctx.nodeID)) {\n\t\t\t\t\t\t\tconst item = getEpState(ep, service, opts);\n\t\t\t\t\t\t\tfailure(item, err, ctx);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.Promise.reject(err);\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\n\treturn {\n\t\tname: \"CircuitBreaker\",\n\n\t\tcreated(broker) {\n\t\t\tlogger = broker.getLogger(\"circuit-breaker\");\n\n\t\t\t// Expose the internal state store.\n\t\t\tbroker.CircuitBreakerStore = store;\n\n\t\t\tconst opts = broker.options.circuitBreaker;\n\t\t\tif (opts.enabled) {\n\t\t\t\tcreateWindowTimer(opts.windowTime);\n\n\t\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"affectedNodeID\", \"service\", \"action\"], description: \"Number of active opened circuit-breakers\" });\n\t\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"affectedNodeID\", \"service\", \"action\"], description: \"Number of opened circuit-breakers\" });\n\t\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"affectedNodeID\", \"service\", \"action\"], description: \"Number of active half-opened circuit-breakers\" });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapCBMiddleware,\n\t\tremoteAction: wrapCBMiddleware,\n\n\t\tstopped() {\n\t\t\tif (windowTimer) {\n\t\t\t\tclearInterval(windowTimer);\n\t\t\t}\n\n\t\t\tdelete broker.CircuitBreakerStore;\n\t\t}\n\t};\n};\n"],"names":["require$$0","C"],"mappings":"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"}