import e from"lodash";import a from"../utils.js";const{isFunction:t,isPlainObject:n}=a;export default function(a){const s=a.tracer;return{name:"Tracing",localAction:a.isTracingEnabled()&&s.opts.actions?function(a,r){let i=r.tracing;return!0!==i&&!1!==i||(i={enabled:!!i}),i=e.defaultsDeep({},i,{enabled:!0}),i.enabled?function(r){r.requestID=r.requestID||s.getCurrentTraceID(),r.parentID=r.parentID||s.getActiveSpanID();const c={callingLevel:r.level,action:r.action?{name:r.action.name,rawName:r.action.rawName}:null,remoteCall:r.nodeID!==r.broker.nodeID,callerNodeID:r.nodeID,nodeID:r.broker.nodeID,options:{timeout:r.options.timeout,retries:r.options.retries},requestID:r.requestID},p=s.opts.tags.action;let l;if(l=t(i.tags)?i.tags:!i.tags&&t(p)?p:{params:!0,...p,...i.tags},t(l)){const e=l.call(r.service,r);e&&Object.assign(c,e)}else n(l)&&(!0===l.params?c.params=null!=r.params&&n(r.params)?Object.assign({},r.params):r.params:Array.isArray(l.params)&&(c.params=e.pick(r.params,l.params)),!0===l.meta?c.meta=null!=r.meta?Object.assign({},r.meta):r.meta:Array.isArray(l.meta)&&(c.meta=e.pick(r.meta,l.meta)));let o=`action '${r.action.name}'`;if(i.spanName)switch(typeof i.spanName){case"string":o=i.spanName;break;case"function":o=i.spanName.call(r.service,r)}const m=r.startSpan(o,{id:r.id,type:"action",traceID:r.requestID,parentID:r.parentID,service:r.service,sampled:r.tracing,tags:c});return r.tracing=m.sampled,a(r).then((a=>{const s={fromCache:r.cachedResult};if(t(l)){const e=l.call(r.service,r,a);e&&Object.assign(s,e)}else n(l)&&(!0===l.response?s.response=null!=a&&n(a)?Object.assign({},a):a:Array.isArray(l.response)&&(s.response=e.pick(a,l.response)));return m.addTags(s),r.finishSpan(m),a})).catch((e=>{throw m.setError(e),r.finishSpan(m),e}))}.bind(this):a}:null,localEvent:a.isTracingEnabled()&&s.opts.events?function(r,i){const c=i.service;let p=i.tracing;return!0!==p&&!1!==p||(p={enabled:!!p}),p=e.defaultsDeep({},p,{enabled:!0}),p.enabled?function(l){l.requestID=l.requestID||s.getCurrentTraceID(),l.parentID=l.parentID||s.getActiveSpanID();const o={event:{name:i.name,group:i.group},eventName:l.eventName,eventType:l.eventType,callerNodeID:l.nodeID,callingLevel:l.level,remoteCall:l.nodeID!==a.nodeID,nodeID:a.nodeID,requestID:l.requestID},m=s.opts.tags.event;let u;if(u=t(p.tags)?p.tags:!p.tags&&t(m)?m:{params:!0,...m,...p.tags},t(u)){const e=u.call(c,l);e&&Object.assign(o,e)}else n(u)&&(!0===u.params?o.params=null!=l.params&&n(l.params)?Object.assign({},l.params):l.params:Array.isArray(u.params)&&(o.params=e.pick(l.params,u.params)),!0===u.meta?o.meta=null!=l.meta?Object.assign({},l.meta):l.meta:Array.isArray(u.meta)&&(o.meta=e.pick(l.meta,u.meta)));let g=`event '${l.eventName}' in '${c.fullName}'`;if(p.spanName)switch(typeof p.spanName){case"string":g=p.spanName;break;case"function":g=p.spanName.call(c,l)}const D=l.startSpan(g,{id:l.id,type:"event",traceID:l.requestID,parentID:l.parentID,service:c,sampled:l.tracing,tags:o});return l.tracing=D.sampled,r.apply(c,arguments).then((()=>{l.finishSpan(D)})).catch((e=>{throw D.setError(e),l.finishSpan(D),e}))}.bind(this):r}:null}}
//# sourceMappingURL=tracing.js.map
