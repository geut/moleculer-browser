import e from"kleur";import o from"lodash";import r from"path";import t from"fs";import l from"../../utils.js";const{makeDirs:s,match:n,isObject:a}=l;export default function(l){let i,c,g;function m(e,o){const l=JSON.stringify(o,o instanceof Error?Object.getOwnPropertyNames(o):null,4);t.writeFile(r.join(g,e),l,(()=>{}))}const u=(l=o.defaultsDeep(l,{logger:null,logLevel:"info",logParams:!1,logResponse:!1,logMeta:!1,folder:null,extension:".json",colors:{request:"yellow",response:"cyan",error:"red"},whitelist:["**"]})).colors&&l.colors.request?l.colors.request.split(".").reduce(((e,o)=>e[o]||e()[o]),e):e=>e,f=l.colors&&l.colors.response?l.colors.response.split(".").reduce(((e,o)=>e[o]||e()[o]),e):e=>e,p=l.colors&&l.colors.error?l.colors.error.split(".").reduce(((e,o)=>e[o]||e()[o]),e):e=>e;let d;return{name:"ActionLogger",created(e){i=l.logger||e.getLogger("debug"),c=e.nodeID,l.folder&&(g=r.join(l.folder,c),s(g)),d=l.logLevel?i[l.logLevel]:null},call:e=>(o,r,t)=>{if(!function(e){return!!l.whitelist.find((o=>n(e,o)))}(a(o)?o.action.name:o))return e(o,r,t);if(d){const e=u(`Calling '${o}'`+(l.logParams?" with params:":"."));l.logParams?d(e,r):d(e),l.logMeta&&t&&t.meta&&d("Meta:",t.meta)}g&&(l.logParams&&m(`${Date.now()}-call-${o}-request${l.extension}`,r),l.logMeta&&t&&t.meta&&m(`${Date.now()}-call-${o}-meta${l.extension}`,t.meta));const s=e(o,r,t),i=s.then((e=>{if(d){const r=f(`Response for '${o}' is received`+(l.logResponse?":":"."));l.logResponse?d(r,e):d(r)}return g&&l.logResponse&&m(`${Date.now()}-call-${o}-response${l.extension}`,e),e})).catch((e=>{throw d&&d(p(`Error for '${o}' is received:`),e),g&&l.logResponse&&m(`${Date.now()}-call-${o}-error${l.extension}`,e),e}));return i.ctx=s.ctx,i}}}
//# sourceMappingURL=action-logger.js.map
