{"version":3,"file":"error-handler.js","sources":["../../../../../src/moleculer/src/middlewares/error-handler.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { MoleculerError } = require(\"../errors\");\n\nfunction wrapActionErrorHandler(handler) {\n\treturn function errorHandlerMiddleware(ctx) {\n\t\t// Call the handler\n\t\treturn handler(ctx)\n\t\t\t.catch(err => {\n\t\t\t\tif (!(err instanceof Error))\n\t\t\t\t\terr = new MoleculerError(err, 500);\n\n\t\t\t\tif (ctx.nodeID !== this.nodeID) {\n\t\t\t\t\t// Remove pending request (the request didn't reach the target service)\n\t\t\t\t\tif (this.transit)\n\t\t\t\t\t\tthis.transit.removePendingRequest(ctx.id);\n\t\t\t\t}\n\n\t\t\t\tthis.logger.debug(`The '${ctx.action.name}' request is rejected.`, { requestID: ctx.requestID }, err);\n\n\t\t\t\tObject.defineProperty(err, \"ctx\", {\n\t\t\t\t\tvalue: ctx,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tenumerable: false\n\t\t\t\t});\n\n\t\t\t\t// Call global errorHandler\n\t\t\t\treturn ctx.broker.errorHandler(err, {\n\t\t\t\t\tctx,\n\t\t\t\t\tservice: ctx.service,\n\t\t\t\t\taction: ctx.action\n\t\t\t\t});\n\t\t\t});\n\n\t}.bind(this);\n}\n\nfunction wrapEventErrorHandler(handler) {\n\treturn function errorHandlerMiddleware(ctx) {\n\t\t// Call the handler\n\t\treturn handler(ctx)\n\t\t\t.catch(err => {\n\t\t\t\tif (!(err instanceof Error))\n\t\t\t\t\terr = new MoleculerError(err, 500);\n\n\t\t\t\tthis.logger.debug(`Error occured in the '${ctx.event.name}' event handler in the '${ctx.service.fullName}' service.`, { requestID: ctx.requestID }, err);\n\n\t\t\t\tObject.defineProperty(err, \"ctx\", {\n\t\t\t\t\tvalue: ctx,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tenumerable: false\n\t\t\t\t});\n\n\t\t\t\t// Call global errorHandler\n\t\t\t\treturn ctx.broker.errorHandler(err, {\n\t\t\t\t\tctx,\n\t\t\t\t\tservice: ctx.service,\n\t\t\t\t\tevent: ctx.event\n\t\t\t\t});\n\t\t\t}).catch(err => {\n\t\t\t\t// No global error Handler, or thrown further, so we handle it because it's an event handler.\n\t\t\t\tctx.broker.logger.error(err);\n\t\t\t});\n\n\t}.bind(this);\n}\n\nmodule.exports = function() {\n\treturn {\n\t\tname: \"ErrorHandler\",\n\n\t\tlocalAction: wrapActionErrorHandler,\n\t\tremoteAction: wrapActionErrorHandler,\n\n\t\tlocalEvent: wrapEventErrorHandler\n\t};\n};\n"],"names":["MoleculerError","require$$0","wrapActionErrorHandler","handler","ctx","catch","err","Error","nodeID","this","transit","removePendingRequest","id","logger","debug","action","name","requestID","Object","defineProperty","value","writable","enumerable","broker","errorHandler","service","bind","wrapEventErrorHandler","event","fullName","error","localAction","remoteAction","localEvent"],"mappings":"4BAQA,MAAMA,eAAEA,GAAmBC,EAE3B,SAASC,EAAuBC,GAC/B,OAAO,SAAgCC,GAEtC,OAAOD,EAAQC,GACbC,OAAMC,IACAA,aAAeC,QACpBD,EAAM,IAAIN,EAAeM,EAAK,MAE3BF,EAAII,SAAWC,KAAKD,QAEnBC,KAAKC,SACRD,KAAKC,QAAQC,qBAAqBP,EAAIQ,IAGxCH,KAAKI,OAAOC,MAAM,QAAQV,EAAIW,OAAOC,6BAA8B,CAAEC,UAAWb,EAAIa,WAAaX,GAEjGY,OAAOC,eAAeb,EAAK,MAAO,CACjCc,MAAOhB,EACPiB,UAAU,EACVC,YAAY,IAINlB,EAAImB,OAAOC,aAAalB,EAAK,CACnCF,IAAAA,EACAqB,QAASrB,EAAIqB,QACbV,OAAQX,EAAIW,aAIdW,KAAKjB,MAGR,SAASkB,EAAsBxB,GAC9B,OAAO,SAAgCC,GAEtC,OAAOD,EAAQC,GACbC,OAAMC,IACAA,aAAeC,QACpBD,EAAM,IAAIN,EAAeM,EAAK,MAE/BG,KAAKI,OAAOC,MAAM,yBAAyBV,EAAIwB,MAAMZ,+BAA+BZ,EAAIqB,QAAQI,qBAAsB,CAAEZ,UAAWb,EAAIa,WAAaX,GAEpJY,OAAOC,eAAeb,EAAK,MAAO,CACjCc,MAAOhB,EACPiB,UAAU,EACVC,YAAY,IAINlB,EAAImB,OAAOC,aAAalB,EAAK,CACnCF,IAAAA,EACAqB,QAASrB,EAAIqB,QACbG,MAAOxB,EAAIwB,WAEVvB,OAAMC,IAERF,EAAImB,OAAOV,OAAOiB,MAAMxB,OAGzBoB,KAAKjB,qBAGS,WAChB,MAAO,CACNO,KAAM,eAENe,YAAa7B,EACb8B,aAAc9B,EAEd+B,WAAYN"}