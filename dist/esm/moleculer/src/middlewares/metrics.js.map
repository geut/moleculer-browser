{"version":3,"file":"metrics.js","sources":["../../../../../src/moleculer/src/middlewares/metrics.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function MetricsMiddleware(broker) {\n\tconst metrics = broker.metrics;\n\n\tfunction getActionHandler(type, actionDef, next) {\n\t\tconst action = actionDef.name;\n\t\tconst service = actionDef.service ? actionDef.service.fullName : null;\n\n\t\treturn function metricsMiddleware(ctx) {\n\t\t\tconst caller = ctx.caller;\n\n\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_TOTAL, { service, action, caller, type });\n\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_ACTIVE, { service, action, caller, type });\n\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_LEVELS, { service, action, caller, level: ctx.level });\n\t\t\tconst timeEnd = metrics.timer(METRIC.MOLECULER_REQUEST_TIME, { service, action, caller, type });\n\n\t\t\t// Call the next handler\n\t\t\treturn next(ctx).then(res => {\n\t\t\t\ttimeEnd();\n\t\t\t\tmetrics.decrement(METRIC.MOLECULER_REQUEST_ACTIVE, { service, action, caller, type });\n\t\t\t\treturn res;\n\t\t\t}).catch(err => {\n\t\t\t\ttimeEnd();\n\t\t\t\tmetrics.decrement(METRIC.MOLECULER_REQUEST_ACTIVE, { service, action, caller, type });\n\t\t\t\tmetrics.increment(METRIC.MOLECULER_REQUEST_ERROR_TOTAL, {\n\t\t\t\t\tservice,\n\t\t\t\t\taction,\n\t\t\t\t\tcaller,\n\t\t\t\t\ttype,\n\t\t\t\t\terrorName: err ? err.name : null,\n\t\t\t\t\terrorCode: err ? err.code : null,\n\t\t\t\t\terrorType: err ? err.type : null\n\t\t\t\t});\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\t};\n\t}\n\n\treturn {\n\t\tname: \"Metrics\",\n\n\t\tcreated() {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\t// --- MOLECULER REQUEST METRICS ---\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\", \"type\", \"caller\"], unit: METRIC.UNIT_REQUEST, description: \"Number of requests\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"service\", \"action\", \"type\", \"caller\"], unit: METRIC.UNIT_REQUEST, description: \"Number of active requests\" });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_ERROR_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\", \"type\", \"caller\", \"errorName\", \"errorCode\", \"errorType\"], unit: METRIC.UNIT_REQUEST, description: \"Number of request errors\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_TIME, type: METRIC.TYPE_HISTOGRAM, labelNames: [\"service\", \"action\", \"type\", \"caller\"], quantiles: true, buckets: true, unit: METRIC.UNIT_MILLISECONDS, description: \"Request times in milliseconds\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_REQUEST_LEVELS, type: METRIC.TYPE_COUNTER, labelNames: [\"level\"], unit: METRIC.UNIT_REQUEST, description: \"Number of requests by context level\" });\n\t\t\t\t//metrics.register({ name: METRIC.MOLECULER_REQUEST_DIRECTCALL_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"action\"], unit: METRIC.UNIT_REQUEST, description: \"Number of direct calls\", rate: true });\n\t\t\t\t//metrics.register({ name: METRIC.MOLECULER_REQUEST_MULTICALL_TOTAL, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_REQUEST, description: \"Number of multicalls\", rate: true });\n\n\t\t\t\t// --- MOLECULER EVENTS METRICS ---\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_EMIT_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"event\", \"groups\"], unit: METRIC.UNIT_EVENT, description: \"Number of emitted events\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_BROADCAST_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"event\", \"groups\"], unit: METRIC.UNIT_EVENT, description: \"Number of broadcast events\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_BROADCASTLOCAL_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"event\", \"groups\"], unit: METRIC.UNIT_EVENT, description: \"Number of local broadcast events\", rate: true });\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"group\", \"event\", \"caller\"], unit: METRIC.UNIT_EVENT, description: \"Number of received events\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, type: METRIC.TYPE_GAUGE, labelNames: [\"service\", \"group\", \"event\", \"caller\"], unit: METRIC.UNIT_REQUEST, description: \"Number of active event executions\" });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_ERROR_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"group\", \"event\", \"caller\", \"errorName\", \"errorCode\", \"errorType\"], unit: METRIC.UNIT_REQUEST, description: \"Number of event execution errors\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_EVENT_RECEIVED_TIME, type: METRIC.TYPE_HISTOGRAM, labelNames: [\"service\", \"group\", \"event\", \"caller\"], quantiles: true, buckets: true, unit: METRIC.UNIT_MILLISECONDS, description: \"Execution time of events in milliseconds\", rate: true });\n\n\t\t\t\t// --- MOLECULER TRANSIT METRICS ---\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_PUBLISH_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"type\"], unit: METRIC.UNIT_PACKET, description: \"Number of published packets\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_RECEIVE_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"type\"], unit: METRIC.UNIT_PACKET, description: \"Number of received packets\", rate: true });\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_REQUESTS_ACTIVE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_REQUEST, description: \"Number of active requests\" });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSIT_STREAMS_SEND_ACTIVE, type: METRIC.TYPE_GAUGE, unit: METRIC.UNIT_STREAM, description: \"Number of active sent streams\" });\n\t\t\t\t//metrics.register({ name: METRIC.MOLECULER_TRANSIT_STREAMS_RECEIVE_ACTIVE, type: METRIC.TYPE_GAUGE, description: \"\" });\n\n\t\t\t\t// --- MOLECULER TRANSPORTER METRICS ---\n\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_PACKET, description: \"Number of sent packets\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_BYTES, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_BYTE, description: \"Number of sent bytes\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_PACKET, description: \"Number of received packets\", rate: true });\n\t\t\t\tmetrics.register({ name: METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES, type: METRIC.TYPE_COUNTER, unit: METRIC.UNIT_BYTE, description: \"Number of received bytes\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction(next, action) {\n\t\t\tif (broker.isMetricsEnabled())\n\t\t\t\treturn getActionHandler(\"local\", action, next);\n\n\t\t\treturn next;\n\t\t},\n\n\t\tremoteAction(next, action) {\n\t\t\tif (broker.isMetricsEnabled())\n\t\t\t\treturn getActionHandler(\"remote\", action, next);\n\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap local event handlers\n\t\tlocalEvent(next, event) {\n\t\t\tconst service = event.service ? event.service.name : null;\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(ctx) {\n\t\t\t\t\tconst group = event.group || service;\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_RECEIVED_TOTAL, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\tconst timeEnd = metrics.timer(METRIC.MOLECULER_EVENT_RECEIVED_TIME, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\treturn next.apply(this, arguments).then(res => {\n\t\t\t\t\t\ttimeEnd();\n\t\t\t\t\t\tmetrics.decrement(METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\ttimeEnd();\n\t\t\t\t\t\tmetrics.decrement(METRIC.MOLECULER_EVENT_RECEIVED_ACTIVE, { service, event: ctx.eventName, group, caller: ctx.caller });\n\t\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_RECEIVED_ERROR_TOTAL, {\n\t\t\t\t\t\t\tservice, event: ctx.eventName, group, caller: ctx.caller,\n\t\t\t\t\t\t\terrorName: err ? err.name : null,\n\t\t\t\t\t\t\terrorCode: err ? err.code : null,\n\t\t\t\t\t\t\terrorType: err ? err.type : null\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t\t}.bind(this);\n\t\t\t}\n\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap broker.emit method\n\t\temit(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* event, payload */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_EMIT_TOTAL, { event: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap broker.broadcast method\n\t\tbroadcast(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* event, payload */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_BROADCAST_TOTAL, { event: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// Wrap broker.broadcastLocal method\n\t\tbroadcastLocal(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* event, payload */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_EVENT_BROADCASTLOCAL_TOTAL, { event: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transit publishing a packet\n\t\ttransitPublish(next) {\n\t\t\tconst transit = this;\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* packet */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_PUBLISH_TOTAL, { type: arguments[0].type });\n\n\t\t\t\t\tconst p = next.apply(this, arguments);\n\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_REQUESTS_ACTIVE, null, transit.pendingRequests.size);\n\t\t\t\t\t//metrics.increment(METRIC.MOLECULER_TRANSIT_STREAMS_RECEIVE_ACTIVE, null, transit.);\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_STREAMS_SEND_ACTIVE, null, transit.pendingReqStreams.size + this.pendingResStreams.size);\n\n\t\t\t\t\treturn p;\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transit receives & handles a packet\n\t\ttransitMessageHandler(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* cmd, packet */) {\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSIT_RECEIVE_TOTAL, { type: arguments[0] });\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transporter send data\n\t\ttransporterSend(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* topic, data, meta */) {\n\t\t\t\t\tconst data = arguments[1];\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL);\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_SENT_BYTES, null, data && data.length ? data.length : 0);\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t},\n\n\t\t// When transporter received data\n\t\ttransporterReceive(next) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\treturn function metricsMiddleware(/* cmd, data, s */) {\n\t\t\t\t\tconst data = arguments[1];\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL);\n\t\t\t\t\tmetrics.increment(METRIC.MOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES, null, data && data.length ? data.length : 0);\n\t\t\t\t\treturn next.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn next;\n\t\t}\n\n\t};\n};\n"],"names":["METRIC","require$$0","broker","metrics","getActionHandler","type","actionDef","next","action","name","service","fullName","ctx","caller","increment","MOLECULER_REQUEST_TOTAL","MOLECULER_REQUEST_ACTIVE","MOLECULER_REQUEST_LEVELS","level","timeEnd","timer","MOLECULER_REQUEST_TIME","then","res","decrement","catch","err","MOLECULER_REQUEST_ERROR_TOTAL","errorName","errorCode","code","errorType","[object Object]","isMetricsEnabled","register","TYPE_COUNTER","labelNames","unit","UNIT_REQUEST","description","rate","TYPE_GAUGE","TYPE_HISTOGRAM","quantiles","buckets","UNIT_MILLISECONDS","MOLECULER_EVENT_EMIT_TOTAL","UNIT_EVENT","MOLECULER_EVENT_BROADCAST_TOTAL","MOLECULER_EVENT_BROADCASTLOCAL_TOTAL","MOLECULER_EVENT_RECEIVED_TOTAL","MOLECULER_EVENT_RECEIVED_ACTIVE","MOLECULER_EVENT_RECEIVED_ERROR_TOTAL","MOLECULER_EVENT_RECEIVED_TIME","MOLECULER_TRANSIT_PUBLISH_TOTAL","UNIT_PACKET","MOLECULER_TRANSIT_RECEIVE_TOTAL","MOLECULER_TRANSIT_REQUESTS_ACTIVE","MOLECULER_TRANSIT_STREAMS_SEND_ACTIVE","UNIT_STREAM","MOLECULER_TRANSPORTER_PACKETS_SENT_TOTAL","MOLECULER_TRANSPORTER_PACKETS_SENT_BYTES","UNIT_BYTE","MOLECULER_TRANSPORTER_PACKETS_RECEIVED_TOTAL","MOLECULER_TRANSPORTER_PACKETS_RECEIVED_BYTES","localAction","remoteAction","event","group","eventName","apply","this","arguments","bind","emit","broadcast","broadcastLocal","transit","p","pendingRequests","size","pendingReqStreams","pendingResStreams","transitMessageHandler","transporterSend","data","length","transporterReceive"],"mappings":"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"}