{"version":3,"file":"retry.js","sources":["../../../../../src/moleculer/src/middlewares/retry.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function RetryMiddleware(broker) {\n\n\tfunction wrapRetryMiddleware(handler, action) {\n\t\tconst actionName = action.name;\n\t\tconst service = action.service ? action.service.fullName : null;\n\t\t// Merge action option and broker options\n\t\tconst opts = Object.assign({}, this.options.retryPolicy, action.retryPolicy || {});\n\t\tif (opts.enabled) {\n\t\t\treturn function retryMiddleware(ctx) {\n\t\t\t\tconst attempts = typeof ctx.options.retries === \"number\" ? ctx.options.retries : opts.retries;\n\t\t\t\tif (ctx._retryAttempts == null)\n\t\t\t\t\tctx._retryAttempts = 0;\n\n\t\t\t\t// Call the handler\n\t\t\t\treturn handler(ctx).catch(err => {\n\n\t\t\t\t\t// Skip retry if it is a remote call. The retry logic will run on the caller node\n\t\t\t\t\t// because the Retry middleware wrap the `remoteAction` hook, as well.\n\t\t\t\t\tif (ctx.nodeID != broker.nodeID && ctx.endpoint.local)\n\t\t\t\t\t\treturn Promise.reject(err);\n\n\t\t\t\t\t// Check the error's `retryable` property.\n\t\t\t\t\tif (opts.check(err)) {\n\t\t\t\t\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL, { service, action: action.name });\n\n\t\t\t\t\t\tif (ctx._retryAttempts < attempts) {\n\t\t\t\t\t\t\t// Retry call\n\t\t\t\t\t\t\tctx._retryAttempts++;\n\n\t\t\t\t\t\t\t// Correct tracing\n\t\t\t\t\t\t\tif (ctx.span) {\n\t\t\t\t\t\t\t\tctx.span.setError(err);\n\t\t\t\t\t\t\t\tctx.span.addTags({ retryAttempts: ctx._retryAttempts });\n\t\t\t\t\t\t\t\tctx.finishSpan(ctx.span);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Calculate next delay\n\t\t\t\t\t\t\tconst delay = Math.min(opts.delay * Math.pow(opts.factor, ctx._retryAttempts - 1), opts.maxDelay);\n\n\t\t\t\t\t\t\tbroker.logger.warn(`Retry to call '${actionName}' action after ${delay} ms...`, { requestID: ctx.requestID, attempts: ctx._retryAttempts });\n\n\t\t\t\t\t\t\t// Wait & recall\n\t\t\t\t\t\t\treturn broker.Promise.delay(delay)\n\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\tconst newCtx = ctx.copy();\n\t\t\t\t\t\t\t\t\tnewCtx._retryAttempts = ctx._retryAttempts;\n\n\t\t\t\t\t\t\t\t\tif (action.visibility == \"private\")\n\t\t\t\t\t\t\t\t\t\treturn ctx.service.actions[action.rawName](ctx.params, { ctx: newCtx });\n\n\t\t\t\t\t\t\t\t\treturn broker.call(actionName, ctx.params, { ctx: newCtx });\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Throw error\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t}\n\n\t\treturn handler;\n\t}\n\n\treturn {\n\t\tname: \"Retry\",\n\n\t\tcreated() {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_RETRY_ATTEMPTS_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\"], description: \"Number of retries\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapRetryMiddleware,\n\t\tremoteAction: wrapRetryMiddleware\n\t};\n};\n"],"names":["require$$0"],"mappings":"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"}