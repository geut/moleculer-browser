{"version":3,"file":"compression.js","sources":["../../../../../../src/moleculer/src/middlewares/transmit/compression.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { defaultsDeep } = require(\"lodash\");\nconst { parseByteString } = require(\"../../utils\");\nconst zlib = require(\"zlib\");\nconst { promisify } = require(\"util\");\n\n/**\n * This is a transmission compression middleware. It supports\n * the `deflate`, `deflateRaw` & `gzip` compression methods.\n *\n * @param {String?} opts.method\n * @param {String|Number} opts.threshold\n */\nmodule.exports = function CompressionMiddleware(opts) {\n\topts = defaultsDeep(opts, { method: \"deflate\", threshold: \"1kb\" });\n\n\tlet compress, decompress;\n\tconst threshold = parseByteString(opts.threshold);\n\n\tswitch(opts.method) {\n\t\tcase \"deflate\":\n\t\t\tcompress = promisify(zlib.deflate);\n\t\t\tdecompress = promisify(zlib.inflate);\n\t\t\tbreak;\n\t\tcase \"deflateRaw\":\n\t\t\tcompress = promisify(zlib.deflateRaw);\n\t\t\tdecompress = promisify(zlib.inflateRaw);\n\t\t\tbreak;\n\t\tcase \"gzip\":\n\t\t\tcompress = promisify(zlib.gzip);\n\t\t\tdecompress = promisify(zlib.gunzip);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t/* istanbul ignore next */\n\t\t\tthrow new Error(\"Unknow compression method: \" + opts.method);\n\t}\n\n\tlet logger;\n\n\treturn {\n\t\tname: \"Compression\",\n\n\t\tcreated(broker) {\n\t\t\tlogger = broker.getLogger(\"TX-COMPRESS\");\n\t\t\t/* istanbul ignore next */\n\t\t\tlogger.info(`The transmission is COMPRESSED by '${opts.method}'. Threshold: ${ threshold != null ? opts.threshold : \"none\"}`);\n\t\t},\n\n\t\ttransporterSend(next) {\n\t\t\treturn (topic, data, meta) => {\n\t\t\t\tif (threshold != null && data.length < threshold) {\n\t\t\t\t\tlogger.debug(`Packet '${topic}' is small and not compressed. Size: ${data.length}`);\n\t\t\t\t\treturn next(topic, Buffer.concat([Buffer.from([0x00]), data]), meta);\n\t\t\t\t}\n\t\t\t\treturn compress(data)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tlogger.debug(`Packet '${topic}' compressed. Saving: ${Number((1 - (res.length / data.length)) * 100).toFixed(0)}%`, data.length, res.length);\n\t\t\t\t\t\treturn next(topic, Buffer.concat([Buffer.from([0x01]), res]), meta);\n\t\t\t\t\t});\n\t\t\t};\n\t\t},\n\n\t\ttransporterReceive(next) {\n\t\t\treturn (cmd, data, s) => {\n\t\t\t\tconst isCompressed = data.readInt8(0);\n\t\t\t\tif (isCompressed == 0) {\n\t\t\t\t\tlogger.debug(`Packet '${cmd}' is small and not compressed. Size: ${data.length}`);\n\t\t\t\t\treturn next(cmd, data.slice(1), s);\n\t\t\t\t} else {\n\t\t\t\t\treturn decompress(data.slice(1))\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tlogger.debug(`Packet '${cmd}' decompressed. Saving: ${Number((1 - (data.length / res.length)) * 100).toFixed(0)}%`, res.length, data.length);\n\t\t\t\t\t\t\treturn next(cmd, res, s);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n};\n"],"names":["defaultsDeep","require$$0","parseByteString","require$$1","promisify","require$$2","opts","compress","decompress","method","threshold","zlib","deflate","inflate","deflateRaw","inflateRaw","gzip","gunzip","Error","logger","name","[object Object]","broker","getLogger","info","transporterSend","next","topic","data","meta","length","debug","Buffer","concat","from","then","res","Number","toFixed","transporterReceive","cmd","s","readInt8","slice"],"mappings":"8IAQA,MAAMA,aAAEA,GAAiBC,GACnBC,gBAAEA,GAAoBC,GAEtBC,UAAEA,GAAcC,iBASL,SAA+BC,GAG/C,IAAIC,EAAUC,EAFdF,EAAON,EAAaM,EAAM,CAAEG,OAAQ,UAAWC,UAAW,QAG1D,MAAMA,EAAYR,EAAgBI,EAAKI,WAEvC,OAAOJ,EAAKG,QACX,IAAK,UACJF,EAAWH,EAAUO,EAAKC,SAC1BJ,EAAaJ,EAAUO,EAAKE,SAC5B,MACD,IAAK,aACJN,EAAWH,EAAUO,EAAKG,YAC1BN,EAAaJ,EAAUO,EAAKI,YAC5B,MACD,IAAK,OACJR,EAAWH,EAAUO,EAAKK,MAC1BR,EAAaJ,EAAUO,EAAKM,QAC5B,MACD,QAEC,MAAM,IAAIC,MAAM,8BAAgCZ,EAAKG,QAGvD,IAAIU,EAEJ,MAAO,CACNC,KAAM,cAENC,QAAQC,GACPH,EAASG,EAAOC,UAAU,eAE1BJ,EAAOK,KAAK,sCAAsClB,EAAKG,uBAAqC,MAAbC,EAAoBJ,EAAKI,UAAY,WAGrHe,gBAAgBC,GACR,CAACC,EAAOC,EAAMC,IACH,MAAbnB,GAAqBkB,EAAKE,OAASpB,GACtCS,EAAOY,MAAM,WAAWJ,yCAA6CC,EAAKE,UACnEJ,EAAKC,EAAOK,EAAOC,OAAO,CAACD,EAAOE,KAAK,CAAC,IAAQN,IAAQC,IAEzDtB,EAASqB,GACdO,MAAKC,IACLjB,EAAOY,MAAM,WAAWJ,0BAA8BU,OAA0C,KAAlC,EAAKD,EAAIN,OAASF,EAAKE,SAAgBQ,QAAQ,MAAOV,EAAKE,OAAQM,EAAIN,QAC9HJ,EAAKC,EAAOK,EAAOC,OAAO,CAACD,EAAOE,KAAK,CAAC,IAAQE,IAAOP,MAKlEU,mBAAmBb,GACX,CAACc,EAAKZ,EAAMa,IAEE,GADCb,EAAKc,SAAS,IAElCvB,EAAOY,MAAM,WAAWS,yCAA2CZ,EAAKE,UACjEJ,EAAKc,EAAKZ,EAAKe,MAAM,GAAIF,IAEzBjC,EAAWoB,EAAKe,MAAM,IAC3BR,MAAKC,IACLjB,EAAOY,MAAM,WAAWS,4BAA8BH,OAA0C,KAAlC,EAAKT,EAAKE,OAASM,EAAIN,SAAgBQ,QAAQ,MAAOF,EAAIN,OAAQF,EAAKE,QAC9HJ,EAAKc,EAAKJ,EAAKK"}