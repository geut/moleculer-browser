{"version":3,"file":"timeout.js","sources":["../../../../../src/moleculer/src/middlewares/timeout.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { RequestTimeoutError } = require(\"../errors\");\nconst { METRIC }\t= require(\"../metrics\");\n\nmodule.exports = function(broker) {\n\n\tfunction wrapTimeoutMiddleware(handler, action) {\n\t\tconst actionTimeout = action.timeout;\n\t\tconst actionName = action.name;\n\t\tconst service = action.service ? action.service.fullName : null;\n\n\t\treturn function timeoutMiddleware(ctx) {\n\n\t\t\t// Load opts with default values\n\t\t\tif (ctx.options.timeout == null) {\n\t\t\t\tif (actionTimeout != null)\n\t\t\t\t\tctx.options.timeout = actionTimeout;\n\t\t\t\telse\n\t\t\t\t\tctx.options.timeout = broker.options.requestTimeout;\n\t\t\t}\n\n\t\t\tif (ctx.options.timeout > 0 && !ctx.startHrTime) {\n\t\t\t// For distributed timeout calculation need to be set\n\t\t\t\tctx.startHrTime = process.hrtime();\n\t\t\t}\n\n\t\t\t// Call the handler\n\t\t\tconst p = handler(ctx);\n\t\t\tif (ctx.options.timeout > 0 && p.timeout) {\n\t\t\t\treturn p.timeout(ctx.options.timeout)\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tif (err instanceof broker.Promise.TimeoutError) {\n\t\t\t\t\t\t\tconst nodeID = ctx.nodeID;\n\t\t\t\t\t\t\tthis.logger.warn(`Request '${actionName}' is timed out.`, { requestID: ctx.requestID, nodeID, timeout: ctx.options.timeout });\n\t\t\t\t\t\t\terr = new RequestTimeoutError({ action: actionName, nodeID });\n\n\t\t\t\t\t\t\tbroker.metrics.increment(METRIC.MOLECULER_REQUEST_TIMEOUT_TOTAL, { service, action: actionName });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t}.bind(this);\n\t}\n\n\treturn {\n\t\tname: \"Timeout\",\n\n\t\tcreated(broker) {\n\t\t\tif (broker.isMetricsEnabled()) {\n\t\t\t\tbroker.metrics.register({ name: METRIC.MOLECULER_REQUEST_TIMEOUT_TOTAL, type: METRIC.TYPE_COUNTER, labelNames: [\"service\", \"action\"], description: \"Number of timed out requests\", rate: true });\n\t\t\t}\n\t\t},\n\n\t\tlocalAction: wrapTimeoutMiddleware,\n\t\tremoteAction: wrapTimeoutMiddleware\n\t};\n};\n"],"names":["RequestTimeoutError","require$$0","METRIC","require$$1","broker","wrapTimeoutMiddleware","handler","action","actionTimeout","timeout","actionName","name","service","fullName","ctx","options","requestTimeout","startHrTime","process","hrtime","p","catch","err","Promise","TimeoutError","nodeID","this","logger","warn","requestID","metrics","increment","MOLECULER_REQUEST_TIMEOUT_TOTAL","bind","[object Object]","isMetricsEnabled","register","type","TYPE_COUNTER","labelNames","description","rate","localAction","remoteAction"],"mappings":"kGAQA,MAAMA,oBAAEA,GAAwBC,GAC1BC,OAAEA,GAAWC,iBAEF,SAASC,GAEzB,SAASC,EAAsBC,EAASC,GACvC,MAAMC,EAAgBD,EAAOE,QACvBC,EAAaH,EAAOI,KACpBC,EAAUL,EAAOK,QAAUL,EAAOK,QAAQC,SAAW,KAE3D,OAAO,SAA2BC,GAGN,MAAvBA,EAAIC,QAAQN,UAEdK,EAAIC,QAAQN,QADQ,MAAjBD,EACmBA,EAEAJ,EAAOW,QAAQC,gBAGnCF,EAAIC,QAAQN,QAAU,IAAMK,EAAIG,cAEnCH,EAAIG,YAAcC,EAAQC,UAI3B,MAAMC,EAAId,EAAQQ,GAClB,OAAIA,EAAIC,QAAQN,QAAU,GAAKW,EAAEX,QACzBW,EAAEX,QAAQK,EAAIC,QAAQN,SAC3BY,OAAMC,IACN,GAAIA,aAAelB,EAAOmB,QAAQC,aAAc,CAC/C,MAAMC,EAASX,EAAIW,OACnBC,KAAKC,OAAOC,KAAK,YAAYlB,mBAA6B,CAAEmB,UAAWf,EAAIe,UAAWJ,OAAAA,EAAQhB,QAASK,EAAIC,QAAQN,UACnHa,EAAM,IAAItB,EAAoB,CAAEO,OAAQG,EAAYe,OAAAA,IAEpDrB,EAAO0B,QAAQC,UAAU7B,EAAO8B,gCAAiC,CAAEpB,QAAAA,EAASL,OAAQG,IAErF,MAAMY,KAIFF,GAENa,KAAKP,MAGR,MAAO,CACNf,KAAM,UAENuB,QAAQ9B,GACHA,EAAO+B,oBACV/B,EAAO0B,QAAQM,SAAS,CAAEzB,KAAMT,EAAO8B,gCAAiCK,KAAMnC,EAAOoC,aAAcC,WAAY,CAAC,UAAW,UAAWC,YAAa,+BAAgCC,MAAM,KAI3LC,YAAarC,EACbsC,aAActC"}