import e from"../constants.js";import{setInterval as t,setTimeout as i}from"timers-browserify";import r from"../metrics/index.js";const{METRIC:c}=r;export default function(r){let n;const o=new Map;let a;function s(e){n||(n=t((()=>function(){if(!a)return;a.debug("Reset circuit-breaker endpoint states..."),o.forEach(((e,t)=>{if(0==e.count)return a.debug(`Remove '${t}' endpoint state because it is not used`),void o.delete(t);a.debug(`Clean '${t}' endpoint state.`),e.count=0,e.failures=0}))}()),1e3*(e||60)),n.unref())}function u(t,i,r){let c=o.get(t.name);return c||(c={ep:t,service:i,opts:r,count:0,failures:0,state:e.CIRCUIT_CLOSE,cbTimer:null},o.set(t.name,c)),c}function d(t,i){t.count++,t.state===e.CIRCUIT_HALF_OPEN_WAIT?function(t){t.state=e.CIRCUIT_CLOSE,t.ep.state=!0,t.failures=0,t.count=0;const i=t.ep.action,n=t.service.fullName;a.debug(`Circuit breaker has been closed on '${t.ep.name}' endpoint.`,{nodeID:t.ep.id,service:n,action:i.name}),r.broadcast("$circuit-breaker.closed",{nodeID:t.ep.id,service:n,action:i.name}),r.metrics.set(c.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE,0,{affectedNodeID:t.ep.id,service:n,action:i.name}),r.metrics.set(c.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE,0,{affectedNodeID:t.ep.id,service:n,action:i.name}),t.cbTimer&&(clearTimeout(t.cbTimer),t.cbTimer=null)}(t):E(t)}function E(t,n){if(t.count>=t.opts.minRequestCount){t.failures/t.count>=t.opts.threshold&&function(t,n){if(t.state==e.CIRCUIT_OPEN)return;t.state=e.CIRCUIT_OPEN,t.ep.state=!1,t.cbTimer&&(clearTimeout(t.cbTimer),t.cbTimer=null);t.cbTimer=i((()=>m(t)),t.opts.halfOpenTime),t.cbTimer.unref();const o=t.ep.action,s=t.service.fullName,u=t.count>0?t.failures/t.count:0;a.debug(`Circuit breaker has been opened on '${t.ep.name}' endpoint.`,{nodeID:t.ep.id,service:s,action:o.name,failures:t.failures,count:t.count,rate:u}),r.broadcast("$circuit-breaker.opened",{nodeID:t.ep.id,service:s,action:o.name,failures:t.failures,count:t.count,rate:u}),r.metrics.set(c.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE,1,{affectedNodeID:t.ep.id,service:s,action:o.name}),r.metrics.increment(c.MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL,{affectedNodeID:t.ep.id,service:s,action:o.name})}(t)}}function m(t){t.state=e.CIRCUIT_HALF_OPEN,t.ep.state=!0;const i=t.ep.action,n=t.service.fullName;a.debug(`Circuit breaker has been half-opened on '${t.ep.name}' endpoint.`,{nodeID:t.ep.id,service:n,action:i.name}),r.broadcast("$circuit-breaker.half-opened",{nodeID:t.ep.id,service:n,action:i.name}),r.metrics.set(c.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE,0,{affectedNodeID:t.ep.id,service:n,action:i.name}),r.metrics.set(c.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE,1,{affectedNodeID:t.ep.id,service:n,action:i.name}),t.cbTimer&&(clearTimeout(t.cbTimer),t.cbTimer=null)}function f(t,r){const c=r.service,n=Object.assign({},this.options.circuitBreaker||{},r.circuitBreaker||{});return n.enabled?function(r){const o=r.endpoint,a=u(o,c,n);return a.state==e.CIRCUIT_HALF_OPEN&&function(t,r){t.state=e.CIRCUIT_HALF_OPEN_WAIT,t.ep.state=!1,t.cbTimer=i((()=>m(t)),t.opts.halfOpenTime),t.cbTimer.unref()}(a),t(r).then((e=>(d(u(o,c,n)),e))).catch((e=>{if(n.check&&n.check(e)&&a&&(!e.nodeID||e.nodeID==r.nodeID)){!function(e,t,i){e.count++,e.failures++,E(e)}(u(o,c,n))}return this.Promise.reject(e)}))}.bind(this):t}return{name:"CircuitBreaker",created(e){a=e.getLogger("circuit-breaker"),e.CircuitBreakerStore=o;const t=e.options.circuitBreaker;t.enabled&&(s(t.windowTime),e.isMetricsEnabled()&&(e.metrics.register({name:c.MOLECULER_CIRCUIT_BREAKER_OPENED_ACTIVE,type:c.TYPE_GAUGE,labelNames:["affectedNodeID","service","action"],description:"Number of active opened circuit-breakers"}),e.metrics.register({name:c.MOLECULER_CIRCUIT_BREAKER_OPENED_TOTAL,type:c.TYPE_COUNTER,labelNames:["affectedNodeID","service","action"],description:"Number of opened circuit-breakers"}),e.metrics.register({name:c.MOLECULER_CIRCUIT_BREAKER_HALF_OPENED_ACTIVE,type:c.TYPE_GAUGE,labelNames:["affectedNodeID","service","action"],description:"Number of active half-opened circuit-breakers"})))},localAction:f,remoteAction:f,stopped(){n&&clearInterval(n),delete r.CircuitBreakerStore}}}
//# sourceMappingURL=circuit-breaker.js.map
