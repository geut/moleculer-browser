{"version":3,"file":"event.js","sources":["../../../../../../src/moleculer/src/tracing/exporters/event.js"],"sourcesContent":["\"use strict\";\n\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst BaseTraceExporter \t= require(\"./base\");\nconst { isFunction } \t\t= require(\"../../utils\");\n\n/**\n * Event Trace Exporter.\n *\n * @class EventTraceExporter\n */\nclass EventTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of EventTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof EventTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\t/** @type {String} Base URL for Zipkin server. */\n\t\t\teventName: \"$tracing.spans\",\n\n\t\t\tsendStartSpan: false,\n\t\t\tsendFinishSpan: true,\n\n\t\t\tbroadcast: false,\n\n\t\t\tgroups: null,\n\n\t\t\t/** @type {Number} Batch send time interval. */\n\t\t\tinterval: 5,\n\n\t\t\tspanConverter: null,\n\n\t\t\t/** @type {Object?} Default span tags */\n\t\t\tdefaultTags: null\n\t\t});\n\n\t\tthis.queue = [];\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof EventTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.flush(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\n\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, tracer) : this.opts.defaultTags;\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = null;\n\t\t}\n\t\treturn this.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof BaseTraceExporter\n\t */\n\tspanStarted(span) {\n\t\tif (this.opts.sendStartSpan) {\n\t\t\tthis.queue.push(span);\n\t\t\tif (!this.timer)\n\t\t\t\tthis.flush();\n\t\t}\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof EventTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tif (this.opts.sendFinishSpan) {\n\t\t\tthis.queue.push(span);\n\t\t\tif (!this.timer)\n\t\t\t\tthis.flush();\n\t\t}\n\t}\n\n\t/**\n\t * Flush tracing data to Datadog server\n\t *\n\t * @memberof EventTraceExporter\n\t */\n\tflush() {\n\t\tif (this.queue.length == 0) return;\n\n\t\tconst data = this.generateTracingData();\n\t\tthis.queue.length = 0;\n\n\t\tif (this.opts.broadcast) {\n\t\t\tthis.logger.debug(`Send tracing spans (${data.length} spans) broadcast events.`);\n\t\t\tthis.broker.broadcast(this.opts.eventName, data, { groups: this.opts.groups });\n\t\t} else {\n\t\t\tthis.logger.debug(`Send tracing spans (${data.length} spans) events.`);\n\t\t\tthis.broker.emit(this.opts.eventName, data, { groups: this.opts.groups });\n\t\t}\n\t}\n\n\t/**\n\t * Generate tracing data with custom converter\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof EventTraceExporter\n\t */\n\tgenerateTracingData() {\n\t\tif (isFunction(this.opts.spanConverter))\n\t\t\treturn this.queue.map(span => this.opts.spanConverter.call(this, span));\n\n\t\treturn Array.from(this.queue).map(span => {\n\t\t\tconst newSpan = Object.assign({}, span);\n\t\t\tif (newSpan.error)\n\t\t\t\tnewSpan.error = this.errorToObject(span.error);\n\n\t\t\treturn newSpan;\n\t\t});\n\t}\n\n}\n\nmodule.exports = EventTraceExporter;\n"],"names":["isFunction","require$$0","BaseTraceExporter","[object Object]","opts","super","this","_","defaultsDeep","eventName","sendStartSpan","sendFinishSpan","broadcast","groups","interval","spanConverter","defaultTags","queue","tracer","init","timer","setInterval","flush","unref","call","clearInterval","Promise","resolve","span","push","length","data","generateTracingData","logger","debug","broker","emit","map","Array","from","newSpan","Object","assign","error","errorToObject"],"mappings":"6HAIA,MAAMA,WAAEA,GAAiBC,QAOzB,cAAiCC,EAOhCC,YAAYC,GACXC,MAAMD,GAENE,KAAKF,KAAOG,EAAEC,aAAaF,KAAKF,KAAM,CAErCK,UAAW,iBAEXC,eAAe,EACfC,gBAAgB,EAEhBC,WAAW,EAEXC,OAAQ,KAGRC,SAAU,EAEVC,cAAe,KAGfC,YAAa,OAGdV,KAAKW,MAAQ,GASdd,KAAKe,GACJb,MAAMc,KAAKD,GAEPZ,KAAKF,KAAKU,SAAW,IACxBR,KAAKc,MAAQC,GAAY,IAAMf,KAAKgB,SAA8B,IAArBhB,KAAKF,KAAKU,UACvDR,KAAKc,MAAMG,SAGZjB,KAAKU,YAAchB,EAAWM,KAAKF,KAAKY,aAAeV,KAAKF,KAAKY,YAAYQ,KAAKlB,KAAMY,GAAUZ,KAAKF,KAAKY,YAM7Gb,OAKC,OAJIG,KAAKc,QACRK,cAAcnB,KAAKc,OACnBd,KAAKc,MAAQ,MAEPd,KAAKoB,QAAQC,UASrBxB,YAAYyB,GACPtB,KAAKF,KAAKM,gBACbJ,KAAKW,MAAMY,KAAKD,GACXtB,KAAKc,OACTd,KAAKgB,SAURnB,aAAayB,GACRtB,KAAKF,KAAKO,iBACbL,KAAKW,MAAMY,KAAKD,GACXtB,KAAKc,OACTd,KAAKgB,SASRnB,QACC,GAAyB,GAArBG,KAAKW,MAAMa,OAAa,OAE5B,MAAMC,EAAOzB,KAAK0B,sBAClB1B,KAAKW,MAAMa,OAAS,EAEhBxB,KAAKF,KAAKQ,WACbN,KAAK2B,OAAOC,MAAM,uBAAuBH,EAAKD,mCAC9CxB,KAAK6B,OAAOvB,UAAUN,KAAKF,KAAKK,UAAWsB,EAAM,CAAElB,OAAQP,KAAKF,KAAKS,WAErEP,KAAK2B,OAAOC,MAAM,uBAAuBH,EAAKD,yBAC9CxB,KAAK6B,OAAOC,KAAK9B,KAAKF,KAAKK,UAAWsB,EAAM,CAAElB,OAAQP,KAAKF,KAAKS,UAUlEV,sBACC,OAAIH,EAAWM,KAAKF,KAAKW,eACjBT,KAAKW,MAAMoB,KAAIT,GAAQtB,KAAKF,KAAKW,cAAcS,KAAKlB,KAAMsB,KAE3DU,MAAMC,KAAKjC,KAAKW,OAAOoB,KAAIT,IACjC,MAAMY,EAAUC,OAAOC,OAAO,GAAId,GAIlC,OAHIY,EAAQG,QACXH,EAAQG,MAAQrC,KAAKsC,cAAchB,EAAKe,QAElCH"}