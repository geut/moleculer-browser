{"version":3,"file":"console.js","sources":["../../../../../../src/moleculer/src/tracing/exporters/console.js"],"sourcesContent":["\"use strict\";\n\nconst _ \t\t\t\t\t\t= require(\"lodash\");\nconst r \t\t\t\t\t\t= _.repeat;\nconst kleur \t\t\t\t\t= require(\"kleur\");\nconst { humanize, isFunction }  = require(\"../../utils\");\n\nconst BaseTraceExporter = require(\"./base\");\n\n/**\n * Console Trace Exporter only for debugging\n *\n * @class ConsoleTraceExporter\n */\nclass ConsoleTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of ConsoleTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof ConsoleTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\tlogger: null,\n\t\t\tcolors: true,\n\t\t\twidth: 100,\n\t\t\tgaugeWidth: 40\n\t\t});\n\n\t\tif (!this.opts.colors)\n\t\t\tkleur.enabled = false;\n\n\t\tthis.spans = {};\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof ConsoleTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tthis.spans = {};\n\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is started.\n\t *\n\t * @param {Span} span\n\t * @memberof ConsoleTraceExporter\n\t */\n\tspanStarted(span) {\n\t\tthis.spans[span.id] = {\n\t\t\tspan,\n\t\t\tchildren: []\n\t\t};\n\n\t\tif (span.parentID) {\n\t\t\tconst parentItem = this.spans[span.parentID];\n\t\t\tif (parentItem)\n\t\t\t\tparentItem.children.push(span.id);\n\t\t}\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof ConsoleTraceExporter\n\t */\n\tspanFinished(span) {\n\t\t//this.log(span);\n\t\tif (!this.spans[span.parentID]) {\n\t\t\tthis.printRequest(span.id);\n\n\t\t\t// remove old printed requests\n\t\t\tthis.removeSpanWithChildren(span.id);\n\t\t}\n\t}\n\n\t/**\n\t * Remove a finished span with children.\n\t *\n\t * @param {String} spanID\n\t * @memberof ConsoleTraceExporter\n\t */\n\tremoveSpanWithChildren(spanID) {\n\t\tconst span = this.spans[spanID];\n\t\tif (span) {\n\t\t\tif (span.children && span.children.length > 0) {\n\t\t\t\tspan.children.forEach(child => this.removeSpanWithChildren(child));\n\t\t\t}\n\t\t\tdelete this.spans[spanID];\n\t\t}\n\t}\n\n\tdrawTableTop() {\n\t\tthis.log(kleur.grey(\"┌\" + r(\"─\", this.opts.width - 2) + \"┐\"));\n\t}\n\n\tdrawHorizonalLine() {\n\t\tthis.log(kleur.grey(\"├\" + r(\"─\", this.opts.width - 2) + \"┤\"));\n\t}\n\n\tdrawLine(text) {\n\t\tthis.log(kleur.grey(\"│ \") + text + kleur.grey(\" │\"));\n\t}\n\n\tdrawTableBottom() {\n\t\tthis.log(kleur.grey(\"└\" + r(\"─\", this.opts.width - 2) + \"┘\"));\n\t}\n\n\tgetAlignedTexts(str, space) {\n\t\tconst len = str.length;\n\n\t\tlet left;\n\t\tif (len <= space)\n\t\t\tleft = str + r(\" \", space - len);\n\t\telse {\n\t\t\tleft = str.slice(0, Math.max(space - 3, 0));\n\t\t\tleft += r(\".\", Math.min(3, space));\n\t\t}\n\n\t\treturn left;\n\t}\n\n\tdrawGauge(gstart, gstop) {\n\t\tconst gw = this.opts.gaugeWidth;\n\t\tconst p1 = Math.floor(gw * gstart / 100);\n\t\tconst p2 = Math.max(Math.floor(gw * gstop / 100) - p1, 1);\n\t\tconst p3 = Math.max(gw - (p1 + p2), 0);\n\n\t\treturn [\n\t\t\tkleur.grey(\"[\"),\n\t\t\tkleur.grey(r(\".\", p1)),\n\t\t\tr(\"■\", p2),\n\t\t\tkleur.grey(r(\".\", p3)),\n\t\t\tkleur.grey(\"]\")\n\t\t].join(\"\");\n\t}\n\n\tgetCaption(span) {\n\t\tlet caption = span.name;\n\n\t\tif (span.tags.fromCache)\n\t\t\tcaption += \" *\";\n\t\tif (span.tags.remoteCall)\n\t\t\tcaption += \" »\";\n\t\tif (span.error)\n\t\t\tcaption += \" ×\";\n\n\t\treturn caption;\n\t}\n\n\tgetColor(span) {\n\t\tlet c = kleur.bold;\n\t\tif (span.tags.fromCache)\n\t\t\tc = c().yellow;\n\t\tif (span.tags.remoteCall)\n\t\t\tc = c().cyan;\n\t\tif (span.duration == null)\n\t\t\tc = c().grey;\n\t\tif (span.error)\n\t\t\tc = c().red;\n\n\t\treturn c;\n\t}\n\n\tgetTraceInfo(main) {\n\t\tlet depth = 0;\n\t\tlet total = 0;\n\t\tlet check = (item, level, parents) => {\n\t\t\titem.level = level;\n\t\t\titem.parents = parents || [];\n\t\t\ttotal++;\n\t\t\tif (level > depth)\n\t\t\t\tdepth = level;\n\n\t\t\tif (item.children.length > 0) {\n\t\t\t\titem.children.forEach((spanID, idx) => {\n\t\t\t\t\tconst span = this.spans[spanID];\n\t\t\t\t\tspan.first = idx == 0;\n\t\t\t\t\tspan.last = idx == item.children.length - 1;\n\t\t\t\t\tcheck(span, item.level + 1, [].concat(item.parents, [item]));\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tcheck(main, 1);\n\n\t\treturn { depth, total };\n\t}\n\n\tgetSpanIndent(spanItem) {\n\t\tif (spanItem.level > 1) {\n\t\t\tlet s = spanItem.parents.map((item, idx) => {\n\t\t\t\tif (idx > 0)\n\t\t\t\t\treturn item.last ? \"  \" : \"│ \";\n\n\t\t\t\treturn \"\";\n\t\t\t}).join(\"\");\n\n\t\t\ts += spanItem.last ? \"└─\" : \"├─\";\n\n\t\t\treturn s + (spanItem.children.length > 0 ? \"┬─\" : \"──\") + \" \";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Print a span row\n\t *\n\t * @param {Object} span\n\t * @param {Object} main\n\t */\n\tprintSpanTime(spanItem, mainItem, level) {\n\t\tconst span = spanItem.span;\n\t\tconst mainSpan = mainItem.span;\n\t\tconst margin = 2 * 2;\n\t\tconst w = (this.opts.width || 80) - margin;\n\t\tconst gw = this.opts.gaugeWidth || 40;\n\n\t\tconst time = span.duration == null ? \"?\" : humanize(span.duration);\n\t\tconst indent = this.getSpanIndent(spanItem);\n\t\tconst caption = this.getCaption(span);\n\t\tconst info = kleur.grey(indent) + this.getAlignedTexts(caption, w - gw - 3 - time.length - 1 - indent.length) + \" \" + time;\n\n\t\tconst startTime = span.startTime || mainSpan.startTime;\n\t\tconst finishTime = span.finishTime || mainSpan.finishTime;\n\n\t\tlet gstart = (startTime - mainSpan.startTime) / (mainSpan.finishTime - mainSpan.startTime) * 100;\n\t\tlet gstop = (finishTime - mainSpan.startTime) / (mainSpan.finishTime - mainSpan.startTime) * 100;\n\n\t\tif (Number.isNaN(gstart) && Number.isNaN(gstop)) {\n\t\t\tgstart = 0;\n\t\t\tgstop = 100;\n\t\t}\n\t\tif (gstop > 100)\n\t\t\tgstop = 100;\n\n\t\tconst c = this.getColor(span);\n\t\tthis.drawLine(c(info + \" \" + this.drawGauge(gstart, gstop)));\n\n\t\tif (spanItem.children.length > 0)\n\t\t\tspanItem.children.forEach((spanID, idx) =>\n\t\t\t\tthis.printSpanTime(this.spans[spanID], mainItem, level + 1, spanItem, {\n\t\t\t\t\tfirst: idx == 0,\n\t\t\t\t\tlast: idx == spanItem.children.length - 1\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\t/**\n\t * Print request traces\n\t *\n\t * @param {String} id\n\t */\n\tprintRequest(id) {\n\t\tconst main = this.spans[id];\n\t\tif (!main) return ; // Async span\n\n\t\tconst margin = 2 * 2;\n\t\tconst w = this.opts.width - margin;\n\n\t\tthis.drawTableTop();\n\n\t\tconst { total, depth } = this.getTraceInfo(main);\n\n\t\tconst truncatedID = this.getAlignedTexts(id, w - \"ID: \".length - \"Depth: \".length - (\"\"+depth).length - \"Total: \".length - (\"\"+total).length - 2);\n\t\tconst line = kleur.grey(\"ID: \") + kleur.bold(truncatedID) + \" \" + kleur.grey(\"Depth: \") + kleur.bold(depth) + \" \" + kleur.grey(\"Total: \") + kleur.bold(total);\n\t\tthis.drawLine(line);\n\n\t\tthis.drawHorizonalLine();\n\n\t\tthis.printSpanTime(main, main, 1, null, {});\n\n\t\tthis.drawTableBottom();\n\t}\n\n\tlog(...args) {\n\t\tif (isFunction(this.opts.logger)) {\n\t\t\treturn this.opts.logger(...args);\n\t\t} else {\n\t\t\treturn this.logger.info(...args);\n\t\t}\n\t}\n}\n\nmodule.exports = ConsoleTraceExporter;\n"],"names":["r","_","repeat","humanize","isFunction","require$$0","BaseTraceExporter","[object Object]","opts","super","this","defaultsDeep","logger","colors","width","gaugeWidth","kleur","enabled","spans","tracer","init","broker","Promise","resolve","span","id","children","parentID","parentItem","push","printRequest","removeSpanWithChildren","spanID","length","forEach","child","log","grey","text","str","space","len","left","slice","Math","max","min","gstart","gstop","gw","p1","floor","p2","p3","join","caption","name","tags","fromCache","remoteCall","error","c","bold","yellow","cyan","duration","red","main","depth","total","check","item","level","parents","idx","first","last","concat","spanItem","s","map","mainItem","mainSpan","w","time","indent","getSpanIndent","getCaption","info","getAlignedTexts","startTime","finishTime","Number","isNaN","getColor","drawLine","drawGauge","printSpanTime","drawTableTop","getTraceInfo","truncatedID","line","drawHorizonalLine","drawTableBottom","args"],"mappings":"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"}