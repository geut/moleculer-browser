{"version":3,"file":"zipkin.js","sources":["../../../../../../src/moleculer/src/tracing/exporters/zipkin.js"],"sourcesContent":["\"use strict\";\n\nconst _ \t\t\t\t\t= require(\"lodash\");\nconst fetch \t\t\t\t= require(\"node-fetch\");\nconst BaseTraceExporter \t= require(\"./base\");\nconst { isFunction } \t\t= require(\"../../utils\");\n\n/**\n * Trace Exporter for Zipkin.\n *\n * API v2: https://zipkin.io/zipkin-api/#/\n * API v1: https://zipkin.io/pages/data_model.html\n *\n * Running Zipkin in Docker:\n *\n * \t docker run -d -p 9411:9411 --name=zipkin openzipkin/zipkin\n *\n * @class ZipkinTraceExporter\n */\nclass ZipkinTraceExporter extends BaseTraceExporter {\n\n\t/**\n\t * Creates an instance of ZipkinTraceExporter.\n\t * @param {Object?} opts\n\t * @memberof ZipkinTraceExporter\n\t */\n\tconstructor(opts) {\n\t\tsuper(opts);\n\n\t\tthis.opts = _.defaultsDeep(this.opts, {\n\t\t\t/** @type {String} Base URL for Zipkin server. */\n\t\t\tbaseURL: process.env.ZIPKIN_URL || \"http://localhost:9411\",\n\n\t\t\t/** @type {String} Zipkin REST API version. */\n\t\t\t//version: \"v2\",\n\n\t\t\t/** @type {Number} Batch send time interval in seconds. */\n\t\t\tinterval: 5,\n\n\t\t\t/** @type {Object} Additional payload options. */\n\t\t\tpayloadOptions: {\n\n\t\t\t\t/** @type {Boolean} Set `debug` property in v2 payload. */\n\t\t\t\tdebug: false,\n\n\t\t\t\t/** @type {Boolean} Set `shared` property in v2 payload. */\n\t\t\t\tshared: false\n\t\t\t},\n\n\t\t\t/** @type {Object?} Default span tags */\n\t\t\tdefaultTags: null\n\t\t});\n\n\t\tthis.queue = [];\n\t}\n\n\t/**\n\t * Initialize Trace Exporter.\n\t *\n\t * @param {Tracer} tracer\n\t * @memberof ZipkinTraceExporter\n\t */\n\tinit(tracer) {\n\t\tsuper.init(tracer);\n\n\t\tfetch.Promise = this.broker.Promise;\n\n\t\tif (this.opts.interval > 0) {\n\t\t\tthis.timer = setInterval(() => this.flush(), this.opts.interval * 1000);\n\t\t\tthis.timer.unref();\n\t\t}\n\n\t\tthis.defaultTags = isFunction(this.opts.defaultTags) ? this.opts.defaultTags.call(this, tracer) : this.opts.defaultTags;\n\t\tif (this.defaultTags) {\n\t\t\tthis.defaultTags = this.flattenTags(this.defaultTags, true);\n\t\t}\n\t}\n\n\t/**\n\t * Stop Trace exporter\n\t */\n\tstop() {\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = null;\n\t\t}\n\t\treturn this.broker.Promise.resolve();\n\t}\n\n\t/**\n\t * Span is finished.\n\t *\n\t * @param {Span} span\n\t * @memberof ZipkinTraceExporter\n\t */\n\tspanFinished(span) {\n\t\tthis.queue.push(span);\n\t}\n\n\t/**\n\t * Flush tracing data to Datadog server\n\t *\n\t * @memberof ZipkinTraceExporter\n\t */\n\tflush() {\n\t\tif (this.queue.length == 0) return;\n\n\t\tconst data = this.generateTracingData();\n\t\tthis.queue.length = 0;\n\n\t\tfetch(`${this.opts.baseURL}/api/v2/spans`, {\n\t\t\tmethod: \"post\",\n\t\t\tbody: JSON.stringify(data),\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t}\n\t\t}).then(res => {\n\t\t\tif (res.status >= 400) {\n\t\t\t\tthis.logger.warn(`Unable to upload tracing spans to Zipkin. Status: ${res.status} ${res.statusText}`);\n\t\t\t} else {\n\t\t\t\tthis.logger.debug(`Tracing spans (${data.length} spans) are uploaded to Zipkin. Status: ${res.statusText}`);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.logger.warn(\"Unable to upload tracing spans to Zipkin. Error:\" + err.message, err);\n\t\t});\n\t}\n\n\t/**\n\t * Generate tracing data for Zipkin\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof ZipkinTraceExporter\n\t */\n\tgenerateTracingData() {\n\t\treturn this.queue.map(span => this.makePayload(span));\n\t}\n\n\t/**\n\t * Create Zipkin v2 payload from metric event\n\t *\n\t * @param {Span} span\n\t * @returns {Object}\n\t */\n\tmakePayload(span) {\n\t\tconst serviceName = span.service ? span.service.fullName : null;\n\t\tconst payload = {\n\t\t\tname: span.name,\n\t\t\tkind: \"SERVER\",\n\n\t\t\t// Trace & span IDs\n\t\t\ttraceId: this.convertID(span.traceID),\n\t\t\tid: this.convertID(span.id),\n\t\t\tparentId: this.convertID(span.parentID),\n\n\t\t\tlocalEndpoint: { serviceName },\n\t\t\tremoteEndpoint: { serviceName },\n\n\t\t\tannotations: [],\n\n\t\t\ttimestamp: this.convertTime(span.startTime),\n\t\t\tduration: this.convertTime(span.duration),\n\n\t\t\ttags: {\n\t\t\t\tservice: serviceName,\n\t\t\t\t\"span.type\": span.type,\n\t\t\t},\n\n\t\t\tdebug: this.opts.payloadOptions.debug,\n\t\t\tshared: this.opts.payloadOptions.shared\n\t\t};\n\n\t\tif (span.error) {\n\t\t\tpayload.tags[\"error\"] = span.error.message;\n\n\t\t\tpayload.annotations.push({\n\t\t\t\tvalue: \"error\",\n\t\t\t\tendpoint: { serviceName: serviceName, ipv4: \"\", port: 0 },\n\t\t\t\ttimestamp: this.convertTime(span.finishTime)\n\t\t\t});\n\t\t}\n\n\t\tObject.assign(\n\t\t\tpayload.tags,\n\t\t\tthis.defaultTags || {},\n\t\t\tthis.flattenTags(span.tags, true),\n\t\t\tthis.flattenTags(this.errorToObject(span.error), true, \"error\") || {}\n\t\t);\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * Convert Context ID to Zipkin format\n\t *\n\t * @param {String} id\n\t * @returns {String}\n\t */\n\tconvertID(id) {\n\t\treturn id ? id.replace(/-/g, \"\").substring(0, 16) : null;\n\t}\n\n\t/**\n\t * Convert JS timestamp to microseconds\n\t *\n\t * @param {Number} ts\n\t * @returns {Number}\n\t */\n\tconvertTime(ts) {\n\t\treturn ts != null ? Math.round(ts * 1000) : null;\n\t}\n\n}\n\nmodule.exports = ZipkinTraceExporter;\n"],"names":["isFunction","require$$0","BaseTraceExporter","[object Object]","opts","super","this","_","defaultsDeep","baseURL","process","env","ZIPKIN_URL","interval","payloadOptions","debug","shared","defaultTags","queue","tracer","init","fetch","Promise","broker","timer","setInterval","flush","unref","call","flattenTags","clearInterval","resolve","span","push","length","data","generateTracingData","method","body","JSON","stringify","headers","Content-Type","then","res","status","logger","warn","statusText","catch","err","message","map","makePayload","serviceName","service","fullName","payload","name","kind","traceId","convertID","traceID","id","parentId","parentID","localEndpoint","remoteEndpoint","annotations","timestamp","convertTime","startTime","duration","tags","span.type","type","error","value","endpoint","ipv4","port","finishTime","Object","assign","errorToObject","replace","substring","ts","Math","round"],"mappings":"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"}