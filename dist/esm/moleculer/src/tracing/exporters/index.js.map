{"version":3,"file":"index.js","sources":["../../../../../../src/moleculer/src/tracing/exporters/index.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../../utils\");\nconst { BrokerOptionsError } = require(\"../../errors\");\n\nconst Exporters = {\n\tBase: require(\"./base\"),\n\tConsole: require(\"./console\"),\n\tDatadog: require(\"./datadog\"),\n\t//DatadogSimple: require(\"./datadog-simple\"),\n\tEvent: require(\"./event\"),\n\tEventLegacy: require(\"./event-legacy\"),\n\tJaeger: require(\"./jaeger\"),\n\tZipkin: require(\"./zipkin\"),\n\tNewRelic: require(\"./newrelic\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Exporters).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Exporters[n];\n}\n\n/**\n * Resolve exporter by name\n *\n * @param {object|string} opt\n * @returns {Exporters.Base}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Exporters.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet ExporterClass = getByName(opt);\n\t\tif (ExporterClass)\n\t\t\treturn new ExporterClass();\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid tracing exporter type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet ExporterClass = getByName(opt.type);\n\t\tif (ExporterClass)\n\t\t\treturn new ExporterClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid tracing exporter type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\tthrow new BrokerOptionsError(`Invalid tracing exporter type '${opt}'.`, { type: opt });\n}\n\nfunction register(name, value) {\n\tExporters[name] = value;\n}\n\nmodule.exports = Object.assign(Exporters, { resolve, register });\n\n"],"names":["isObject","isString","require$$0","BrokerOptionsError","require$$1","Exporters","Base","require$$2","Console","require$$3","Datadog","require$$4","Event","require$$5","EventLegacy","require$$6","Jaeger","require$$7","Zipkin","require$$8","NewRelic","require$$9","getByName","name","n","Object","keys","find","toLowerCase","assign","resolve","opt","ExporterClass","type","options","register","value"],"mappings":"2QAQA,MAAMA,SAAEA,EAAQC,SAAEA,GAAaC,GACzBC,mBAAEA,GAAuBC,EAEzBC,EAAY,CACjBC,KAAMC,EACNC,QAASC,EACTC,QAASC,EAETC,MAAOC,EACPC,YAAaC,EACbC,OAAQC,EACRC,OAAQC,EACRC,SAAUC,GAGX,SAASC,EAAUC,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIC,EAAIC,OAAOC,KAAKrB,GAAWsB,MAAKH,GAAKA,EAAEI,eAAiBL,EAAKK,gBACjE,OAAIJ,EACInB,EAAUmB,QADlB,QAoCgBC,OAAOI,OAAOxB,EAAW,CAAEyB,QAzB5C,SAAiBC,GAChB,GAAIA,aAAe1B,EAAUC,KAC5B,OAAOyB,EACD,GAAI9B,EAAS8B,GAAM,CACzB,IAAIC,EAAgBV,EAAUS,GAC9B,GAAIC,EACH,OAAO,IAAIA,EAEX,MAAM,IAAI7B,EAAmB,kCAAkC4B,MAAS,CAAEE,KAAMF,IAE3E,GAAI/B,EAAS+B,GAAM,CACzB,IAAIC,EAAgBV,EAAUS,EAAIE,MAClC,GAAID,EACH,OAAO,IAAIA,EAAcD,EAAIG,SAE7B,MAAM,IAAI/B,EAAmB,kCAAkC4B,EAAIE,SAAU,CAAEA,KAAMF,EAAIE,OAG3F,MAAM,IAAI9B,EAAmB,kCAAkC4B,MAAS,CAAEE,KAAMF,KAO5BI,SAJrD,SAAkBZ,EAAMa,GACvB/B,EAAUkB,GAAQa"}