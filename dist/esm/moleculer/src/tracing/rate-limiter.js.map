{"version":3,"file":"rate-limiter.js","sources":["../../../../../src/moleculer/src/tracing/rate-limiter.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\n/**\n * Rate Limiter class for Tracing.\n *\n * Inspired by\n * \thttps://github.com/jaegertracing/jaeger-client-node/blob/master/src/rate_limiter.js\n *\n * @class RateLimiter\n */\nclass RateLimiter {\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\ttracesPerSecond: 1\n\t\t});\n\n\t\tthis.lastTime = Date.now();\n\t\tthis.balance = 0;\n\t\tthis.maxBalance = this.opts.tracesPerSecond < 1 ? 1 : this.opts.tracesPerSecond;\n\t}\n\n\tcheck(cost = 1) {\n\t\tconst now = Date.now();\n\t\tconst elapsedTime = (now - this.lastTime) / 1000;\n\t\tthis.lastTime = now;\n\n\t\tthis.balance += elapsedTime * this.opts.tracesPerSecond;\n\t\tif (this.balance > this.maxBalance)\n\t\t\tthis.balance = this.maxBalance;\n\n\t\tif (this.balance >= cost) {\n\t\t\tthis.balance -= cost;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nmodule.exports = RateLimiter;\n"],"names":["[object Object]","opts","this","_","defaultsDeep","tracesPerSecond","lastTime","Date","now","balance","maxBalance","cost","elapsedTime"],"mappings":"4BAkBA,MACCA,YAAYC,GACXC,KAAKD,KAAOE,EAAEC,aAAaH,EAAM,CAChCI,gBAAiB,IAGlBH,KAAKI,SAAWC,KAAKC,MACrBN,KAAKO,QAAU,EACfP,KAAKQ,WAAaR,KAAKD,KAAKI,gBAAkB,EAAI,EAAIH,KAAKD,KAAKI,gBAGjEL,MAAMW,EAAO,GACZ,MAAMH,EAAMD,KAAKC,MACXI,GAAeJ,EAAMN,KAAKI,UAAY,IAO5C,OANAJ,KAAKI,SAAWE,EAEhBN,KAAKO,SAAWG,EAAcV,KAAKD,KAAKI,gBACpCH,KAAKO,QAAUP,KAAKQ,aACvBR,KAAKO,QAAUP,KAAKQ,YAEjBR,KAAKO,SAAWE,IACnBT,KAAKO,SAAWE,GACT"}