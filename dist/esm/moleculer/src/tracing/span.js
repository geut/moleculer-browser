import t from"./now.js";function s(t,s,i,e=!1){Object.defineProperty(t,s,{value:i,writable:!!e,enumerable:!1})}var i=class{constructor(t,i,e){s(this,"tracer",t,!0),s(this,"logger",this.tracer.logger,!0),s(this,"opts",e||{}),s(this,"meta",{}),this.name=i,this.type=this.opts.type||"custom",this.id=this.opts.id||this.tracer.broker.generateUid(),this.traceID=this.opts.traceID||this.id,this.parentID=this.opts.parentID,this.opts.service&&("string"==typeof this.opts.service?this.service={name:this.opts.service,fullName:this.opts.service}:this.service={name:this.opts.service.name,version:this.opts.service.version,fullName:this.opts.service.fullName}),this.priority=null!=this.opts.priority?this.opts.priority:5,this.sampled=null!=this.opts.sampled?this.opts.sampled:this.tracer.shouldSample(this),this.startTime=null,this.finishTime=null,this.duration=null,this.error=null,this.logs=[],this.tags={},this.opts.defaultTags&&this.addTags(this.opts.defaultTags),this.opts.tags&&this.addTags(this.opts.tags)}start(s){return this.logger.debug(`[${this.id}] Span '${this.name}' is started.`),this.startTime=s||t(),this.tracer.spanStarted(this),this}addTags(t){return Object.assign(this.tags,t),this}log(s,i,e){return e=e||t(),this.logs.push({name:s,fields:i||{},time:e,elapsed:e-this.startTime}),this.logger.debug(`[${this.id}] Span '${this.name}' has a new log event: ${s}.`),this}setError(t){return this.error=null==t||t,this}finish(s){return this.finishTime=s||t(),this.duration=this.finishTime-this.startTime,this.logger.debug(`[${this.id}] Span '${this.name}' is finished. Duration: ${Number(this.duration).toFixed(3)} ms`,this.tags),this.tracer.spanFinished(this),this}isActive(){return null==this.finishTime}startSpan(t,s){const i={traceID:this.traceID,parentID:this.id,sampled:this.sampled,service:this.service};return this.tracer.startSpan(t,s?Object.assign(i,s):i)}};export default i;
//# sourceMappingURL=span.js.map
