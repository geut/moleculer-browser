{"version":3,"file":"base.js","sources":["../../../../../src/moleculer/src/serializers/base.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst P = require(\"../packets\");\n\n/**\n * Abstract serializer class\n *\n * @class Serializer\n */\nclass Serializer {\n\n\t/**\n\t * Creates an instance of Serializer.\n\t *\n\t * @memberof Serializer\n\t */\n\tconstructor() {\n\t}\n\n\t/**\n\t * Initialize Serializer\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof Serializer\n\t */\n\tinit(broker) {\n\t\tthis.broker = broker;\n\t\t/*if (this.broker) {\n\t\t\tthis.logger = broker.getLogger(\"serializer\");\n\t\t}*/\n\t}\n\n\t/**\n\t * Serializer a JS object to Buffer\n\t *\n\t * @param {Object} obj\n\t * @param {String} type of packet\n\t * @returns {Buffer}\n\t *\n\t * @memberof Serializer\n\t */\n\tserialize(/*obj, type*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Deserialize Buffer to JS object\n\t *\n\t * @param {Buffer} buf\n\t * @param {String} type of packet\n\t * @returns {Object}\n\t *\n\t * @memberof Serializer\n\t */\n\tdeserialize(/*buf, type*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Serialize custom fields (stringify)\n\t *\n\t * @param {String} type\n\t * @param {Packet} obj\n\t * @returns {Packet}\n\t * @memberof Serializer\n\t */\n\tserializeCustomFields(type, obj) {\n\t\tswitch (type) {\n\t\t\tcase P.PACKET_INFO: {\n\t\t\t\tobj.services = JSON.stringify(obj.services);\n\t\t\t\tif (obj.config)\n\t\t\t\t\tobj.config = JSON.stringify(obj.config);\n\t\t\t\tif (obj.metadata)\n\t\t\t\t\tobj.metadata = JSON.stringify(obj.metadata);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_EVENT: {\n\t\t\t\tthis.convertDataToTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.stringify(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_REQUEST: {\n\t\t\t\tthis.convertDataToTransport(obj, \"params\", \"paramsType\");\n\t\t\t\tobj.meta = JSON.stringify(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_RESPONSE: {\n\t\t\t\tthis.convertDataToTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.stringify(obj.meta);\n\t\t\t\tif (obj.error)\n\t\t\t\t\tobj.error = JSON.stringify(obj.error);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_REQ: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.stringify(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.stringify(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_RES: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.stringify(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.stringify(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\t/**\n\t * Deserialize custom fields\n\t *\n\t * @param {String} type\n\t * @param {Packet} obj\n\t * @returns {Packet}\n\t * @memberof Serializer\n\t */\n\tdeserializeCustomFields(type, obj) {\n\t\tswitch (type) {\n\t\t\tcase P.PACKET_INFO: {\n\t\t\t\tobj.services = JSON.parse(obj.services);\n\t\t\t\tif (obj.config)\n\t\t\t\t\tobj.config = JSON.parse(obj.config);\n\t\t\t\tif (obj.metadata)\n\t\t\t\t\tobj.metadata = JSON.parse(obj.metadata);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_EVENT: {\n\t\t\t\tthis.convertDataFromTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.parse(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_REQUEST: {\n\t\t\t\tthis.convertDataFromTransport(obj, \"params\", \"paramsType\");\n\t\t\t\tobj.meta = JSON.parse(obj.meta);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_RESPONSE: {\n\t\t\t\tthis.convertDataFromTransport(obj, \"data\", \"dataType\");\n\t\t\t\tobj.meta = JSON.parse(obj.meta);\n\t\t\t\tif (obj.error)\n\t\t\t\t\tobj.error = JSON.parse(obj.error);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_REQ: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.parse(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.parse(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.PACKET_GOSSIP_RES: {\n\t\t\t\tif (obj.online)\n\t\t\t\t\tobj.online = JSON.parse(obj.online);\n\t\t\t\tif (obj.offline)\n\t\t\t\t\tobj.offline = JSON.parse(obj.offline);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\tconvertDataToTransport(obj, field, fieldType) {\n\t\tif (obj[field] === undefined) {\n\t\t\tobj[fieldType] = P.DATATYPE_UNDEFINED;\n\t\t} else if (obj[field] === null) {\n\t\t\tobj[fieldType] = P.DATATYPE_NULL;\n\t\t} else if (Buffer.isBuffer(obj[field])) {\n\t\t\tobj[fieldType] = P.DATATYPE_BUFFER;\n\t\t} else {\n\t\t\t// JSON\n\t\t\tobj[fieldType] = P.DATATYPE_JSON;\n\t\t\tobj[field] = Buffer.from(JSON.stringify(obj[field]));\n\t\t}\n\t}\n\n\tconvertDataFromTransport(obj, field, fieldType) {\n\t\tconst type = obj[fieldType];\n\t\tswitch(type) {\n\t\t\tcase P.DATATYPE_UNDEFINED: {\n\t\t\t\tobj[field] = undefined;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.DATATYPE_NULL: {\n\t\t\t\tobj[field] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase P.DATATYPE_BUFFER: {\n\t\t\t\tif (!Buffer.isBuffer(obj[field]))\n\t\t\t\t\tobj[field] = Buffer.from(obj[field]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// JSON\n\t\t\t\tobj[field] = JSON.parse(obj[field]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tdelete obj[fieldType];\n\t}\n}\n\nmodule.exports = Serializer;\n"],"names":["[object Object]","broker","this","Error","type","obj","P","PACKET_INFO","services","JSON","stringify","config","metadata","PACKET_EVENT","convertDataToTransport","meta","PACKET_REQUEST","PACKET_RESPONSE","error","PACKET_GOSSIP_REQ","PACKET_GOSSIP_RES","online","offline","parse","convertDataFromTransport","field","fieldType","undefined","DATATYPE_UNDEFINED","DATATYPE_NULL","Buffer","isBuffer","DATATYPE_BUFFER","DATATYPE_JSON","from"],"mappings":"mEAeA,MAOCA,eAUAA,KAAKC,GACJC,KAAKD,OAASA,EAefD,YAEC,MAAM,IAAIG,MAAM,2BAYjBH,cAEC,MAAM,IAAIG,MAAM,2BAWjBH,sBAAsBI,EAAMC,GAC3B,OAAQD,GACP,KAAKE,EAAEC,YACNF,EAAIG,SAAWC,KAAKC,UAAUL,EAAIG,UAC9BH,EAAIM,SACPN,EAAIM,OAASF,KAAKC,UAAUL,EAAIM,SAC7BN,EAAIO,WACPP,EAAIO,SAAWH,KAAKC,UAAUL,EAAIO,WACnC,MAED,KAAKN,EAAEO,aACNX,KAAKY,uBAAuBT,EAAK,OAAQ,YACzCA,EAAIU,KAAON,KAAKC,UAAUL,EAAIU,MAC9B,MAED,KAAKT,EAAEU,eACNd,KAAKY,uBAAuBT,EAAK,SAAU,cAC3CA,EAAIU,KAAON,KAAKC,UAAUL,EAAIU,MAC9B,MAED,KAAKT,EAAEW,gBACNf,KAAKY,uBAAuBT,EAAK,OAAQ,YACzCA,EAAIU,KAAON,KAAKC,UAAUL,EAAIU,MAC1BV,EAAIa,QACPb,EAAIa,MAAQT,KAAKC,UAAUL,EAAIa,QAChC,MAED,KAAKZ,EAAEa,kBAOP,KAAKb,EAAEc,kBACFf,EAAIgB,SACPhB,EAAIgB,OAASZ,KAAKC,UAAUL,EAAIgB,SAC7BhB,EAAIiB,UACPjB,EAAIiB,QAAUb,KAAKC,UAAUL,EAAIiB,UAKpC,OAAOjB,EAWRL,wBAAwBI,EAAMC,GAC7B,OAAQD,GACP,KAAKE,EAAEC,YACNF,EAAIG,SAAWC,KAAKc,MAAMlB,EAAIG,UAC1BH,EAAIM,SACPN,EAAIM,OAASF,KAAKc,MAAMlB,EAAIM,SACzBN,EAAIO,WACPP,EAAIO,SAAWH,KAAKc,MAAMlB,EAAIO,WAC/B,MAED,KAAKN,EAAEO,aACNX,KAAKsB,yBAAyBnB,EAAK,OAAQ,YAC3CA,EAAIU,KAAON,KAAKc,MAAMlB,EAAIU,MAC1B,MAED,KAAKT,EAAEU,eACNd,KAAKsB,yBAAyBnB,EAAK,SAAU,cAC7CA,EAAIU,KAAON,KAAKc,MAAMlB,EAAIU,MAC1B,MAED,KAAKT,EAAEW,gBACNf,KAAKsB,yBAAyBnB,EAAK,OAAQ,YAC3CA,EAAIU,KAAON,KAAKc,MAAMlB,EAAIU,MACtBV,EAAIa,QACPb,EAAIa,MAAQT,KAAKc,MAAMlB,EAAIa,QAC5B,MAED,KAAKZ,EAAEa,kBAOP,KAAKb,EAAEc,kBACFf,EAAIgB,SACPhB,EAAIgB,OAASZ,KAAKc,MAAMlB,EAAIgB,SACzBhB,EAAIiB,UACPjB,EAAIiB,QAAUb,KAAKc,MAAMlB,EAAIiB,UAKhC,OAAOjB,EAGRL,uBAAuBK,EAAKoB,EAAOC,QACfC,IAAftB,EAAIoB,GACPpB,EAAIqB,GAAapB,EAAEsB,mBACM,OAAfvB,EAAIoB,GACdpB,EAAIqB,GAAapB,EAAEuB,cACTC,EAAOC,SAAS1B,EAAIoB,IAC9BpB,EAAIqB,GAAapB,EAAE0B,iBAGnB3B,EAAIqB,GAAapB,EAAE2B,cACnB5B,EAAIoB,GAASK,EAAOI,KAAKzB,KAAKC,UAAUL,EAAIoB,MAI9CzB,yBAAyBK,EAAKoB,EAAOC,GAEpC,OADarB,EAAIqB,IAEhB,KAAKpB,EAAEsB,mBACNvB,EAAIoB,QAASE,EACb,MAED,KAAKrB,EAAEuB,cACNxB,EAAIoB,GAAS,KACb,MAED,KAAKnB,EAAE0B,gBACDF,EAAOC,SAAS1B,EAAIoB,MACxBpB,EAAIoB,GAASK,EAAOI,KAAK7B,EAAIoB,KAC9B,MAED,QAECpB,EAAIoB,GAAShB,KAAKc,MAAMlB,EAAIoB,WAKvBpB,EAAIqB"}