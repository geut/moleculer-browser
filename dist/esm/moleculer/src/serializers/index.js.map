{"version":3,"file":"index.js","sources":["../../../../../src/moleculer/src/serializers/index.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\n\nconst Serializers = {\n\tBase: require(\"./base\"),\n\tJSON: require(\"./json\"),\n\tAvro: require(\"./avro\"),\n\tMsgPack: require(\"./msgpack\"),\n\tProtoBuf: require(\"./protobuf\"),\n\tThrift: require(\"./thrift\"),\n\tNotepack: require(\"./notepack\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Serializers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Serializers[n];\n}\n\n/**\n * Resolve serializer by name\n *\n * @param {object|string} opt\n * @returns {Serializer}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Serializers.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet SerializerClass = getByName(opt);\n\t\tif (SerializerClass)\n\t\t\treturn new SerializerClass();\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid serializer type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet SerializerClass = getByName(opt.type || \"JSON\");\n\t\tif (SerializerClass)\n\t\t\treturn new SerializerClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid serializer type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn new Serializers.JSON();\n}\n\nfunction register(name, value) {\n\tSerializers[name] = value;\n}\n\nmodule.exports = Object.assign(Serializers, { resolve, register });\n"],"names":["require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8"],"mappings":";;;;;;AAQA,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAGA,OAAmB,CAAC;AACnD,MAAM,EAAE,kBAAkB,EAAE,GAAGC,MAAoB,CAAC;AACpD;AACA,MAAM,WAAW,GAAG;AACpB,CAAC,IAAI,EAAEC,IAAiB;AACxB,CAAC,IAAI,EAAEC,IAAiB;AACxB,CAAC,IAAI,EAAEC,WAAiB;AACxB,CAAC,OAAO,EAAEC,WAAoB;AAC9B,CAAC,QAAQ,EAAEC,WAAqB;AAChC,CAAC,MAAM,EAAEC,WAAmB;AAC5B,CAAC,QAAQ,EAAEC,WAAqB;AAChC,CAAC,CAAC;AACF;AACA,SAAS,SAAS,CAAC,IAAI,EAAE;AACzB;AACA,CAAC,IAAI,CAAC,IAAI;AACV,EAAE,OAAO,IAAI,CAAC;AACd;AACA,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AACnF,CAAC,IAAI,CAAC;AACN,EAAE,OAAO,WAAW,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,GAAG,EAAE;AACtB,CAAC,IAAI,GAAG,YAAY,WAAW,CAAC,IAAI,EAAE;AACtC,EAAE,OAAO,GAAG,CAAC;AACb,EAAE,MAAM,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;AAC3B,EAAE,IAAI,eAAe,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;AACvC,EAAE,IAAI,eAAe;AACrB,GAAG,OAAO,IAAI,eAAe,EAAE,CAAC;AAChC;AACA,GAAG,MAAM,IAAI,kBAAkB,CAAC,CAAC,yBAAyB,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;AACpF;AACA,EAAE,MAAM,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;AAC3B,EAAE,IAAI,eAAe,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;AACtD,EAAE,IAAI,eAAe;AACrB,GAAG,OAAO,IAAI,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC3C;AACA,GAAG,MAAM,IAAI,kBAAkB,CAAC,CAAC,yBAAyB,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAC9F,EAAE;AACF;AACA,CAAC,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,CAAC;AAC/B,CAAC;AACD;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE;AAC/B,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AAC3B,CAAC;AACD;eACc,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE;;;;"}