{"version":3,"file":"transit.js","sources":["../../../../src/moleculer/src/transit.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst P \t\t\t\t= require(\"./packets\");\nconst { Packet } \t\t= require(\"./packets\");\nconst E \t\t\t\t= require(\"./errors\");\n\nconst { Transform } \t= require(\"stream\");\nconst { METRIC }\t\t= require(\"./metrics\");\n\n/**\n * Transit class\n *\n * @class Transit\n */\nclass Transit {\n\n\t/**\n\t * Create an instance of Transit.\n\t *\n\t * @param {ServiceBroker} Broker instance\n\t * @param {Transporter} Transporter instance\n\t * @param {Object?} opts\n\t *\n\t * @memberof Transit\n\t */\n\tconstructor(broker, transporter, opts) {\n\t\tthis.broker = broker;\n\t\tthis.Promise = broker.Promise;\n\t\tthis.logger = broker.getLogger(\"transit\");\n\t\tthis.nodeID = broker.nodeID;\n\t\tthis.metrics = broker.metrics;\n\t\tthis.instanceID = broker.instanceID;\n\t\tthis.tx = transporter;\n\t\tthis.opts = opts;\n\t\tthis.discoverer = broker.registry.discoverer;\n\n\t\tthis.pendingRequests = new Map();\n\t\tthis.pendingReqStreams = new Map();\n\t\tthis.pendingResStreams = new Map();\n\n\t\t/* deprecated */\n\t\tthis.stat = {\n\t\t\tpackets: {\n\t\t\t\tsent: {\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tbytes: 0\n\t\t\t\t},\n\t\t\t\treceived: {\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tbytes: 0\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.connected = false;\n\t\tthis.disconnecting = false;\n\t\tthis.isReady = false;\n\n\t\tconst wrappedMessageHandler = (cmd, packet) => this.messageHandler(cmd, packet);\n\n\t\tthis.publish = this.broker.wrapMethod(\"transitPublish\", this.publish, this);\n\t\tthis.messageHandler = this.broker.wrapMethod(\"transitMessageHandler\", this.messageHandler, this);\n\n\n\t\tif (this.tx) {\n\t\t\tthis.tx.init(this, wrappedMessageHandler, this.afterConnect.bind(this));\n\n\t\t\tthis.tx.send = this.broker.wrapMethod(\"transporterSend\", this.tx.send, this.tx);\n\t\t\tthis.tx.receive = this.broker.wrapMethod(\"transporterReceive\", this.tx.receive, this.tx, { reverse: true });\n\t\t}\n\n\t\tthis.__connectResolve = null;\n\n\t\tthis.registerMoleculerMetrics();\n\t}\n\n\t/**\n\t * Register Moleculer Transit Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tif (!this.broker.isMetricsEnabled()) return;\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_READY, type: METRIC.TYPE_GAUGE, description: \"Transit is ready\" }).set(0);\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_CONNECTED, type: METRIC.TYPE_GAUGE, description: \"Transit is connected\" }).set(0);\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_PONG_TIME, type: METRIC.TYPE_GAUGE, labelNames: [\"targetNodeID\"], description: \"Ping time\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_PONG_SYSTIME_DIFF, type: METRIC.TYPE_GAUGE, labelNames: [\"targetNodeID\"], description: \"System time difference between nodes\" });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL, type: METRIC.TYPE_COUNTER, description: \"Number of orphan responses\" });\n\t}\n\n\t/**\n\t * It will be called after transporter connected or reconnected.\n\t *\n\t * @param {any} wasReconnect\n\t * @returns {Promise}\n\t *\n\t * @memberof Transit\n\t */\n\tafterConnect(wasReconnect) {\n\t\treturn this.Promise.resolve()\n\n\t\t\t.then(() => {\n\t\t\t\tif (wasReconnect) {\n\t\t\t\t\t// After reconnecting, we should send a broadcast INFO packet because there may new nodes.\n\t\t\t\t\t// In case of disabled balancer, it triggers the `makeBalancedSubscriptions` method.\n\t\t\t\t\treturn this.discoverer.sendLocalNodeInfo();\n\t\t\t\t} else {\n\t\t\t\t\t// After connecting we should subscribe to topics\n\t\t\t\t\treturn this.makeSubscriptions();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t.then(() => this.discoverer.discoverAllNodes())\n\t\t\t.delay(500) // Waiting for incoming INFO packets\n\n\t\t\t.then(() => {\n\t\t\t\tthis.connected = true;\n\t\t\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_CONNECTED, 1);\n\n\t\t\t\tthis.broker.broadcastLocal(\"$transporter.connected\", { wasReconnect: !!wasReconnect });\n\n\t\t\t\tif (this.__connectResolve) {\n\t\t\t\t\tthis.__connectResolve();\n\t\t\t\t\tthis.__connectResolve = null;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\t/**\n\t * Connect with transporter. If failed, try again after 5 sec.\n\t *\n\t * @memberof Transit\n\t */\n\tconnect() {\n\t\tthis.logger.info(\"Connecting to the transporter...\");\n\t\treturn new this.Promise(resolve => {\n\t\t\tthis.__connectResolve = resolve;\n\n\t\t\tconst doConnect = () => {\n\t\t\t\tlet reconnectStarted = false;\n\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tconst errorHandler = (err) => {\n\t\t\t\t\tif (this.disconnecting) return;\n\t\t\t\t\tif (reconnectStarted) return;\n\n\t\t\t\t\tthis.logger.warn(\"Connection is failed.\", err && err.message || \"Unknown error\");\n\t\t\t\t\tthis.logger.debug(err);\n\n\t\t\t\t\tif (this.opts.disableReconnect) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treconnectStarted = true;\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.logger.info(\"Reconnecting...\");\n\t\t\t\t\t\tdoConnect();\n\t\t\t\t\t}, 5 * 1000);\n\t\t\t\t};\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthis.tx.connect(errorHandler).catch(errorHandler);\n\t\t\t};\n\n\t\t\tdoConnect();\n\n\t\t});\n\t}\n\n\t/**\n\t * Disconnect with transporter\n\t *\n\t * @memberof Transit\n\t */\n\tdisconnect() {\n\t\tthis.connected = false;\n\t\tthis.isReady = false;\n\t\tthis.disconnecting = true;\n\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_CONNECTED, 0);\n\n\t\tthis.broker.broadcastLocal(\"$transporter.disconnected\", { graceFul: true });\n\n\t\treturn this.Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\tif (this.tx.connected) {\n\t\t\t\t\treturn this.discoverer.localNodeDisconnected()\n\t\t\t\t\t\t.then(() => this.tx.disconnect());\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(() => this.disconnecting = false);\n\t}\n\n\t/**\n\t * Local broker is ready (all services loaded).\n\t * Send INFO packet to all other nodes\n\t */\n\tready() {\n\t\tif (this.connected) {\n\t\t\tthis.isReady = true;\n\t\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_READY, 1);\n\t\t\treturn this.discoverer.localNodeReady();\n\t\t}\n\t}\n\n\t/**\n\t * Send DISCONNECT to remote nodes\n\t *\n\t * @returns {Promise}\n\t *\n\t * @memberof Transit\n\t */\n\tsendDisconnectPacket() {\n\t\treturn this.publish(new Packet(P.PACKET_DISCONNECT)).catch(/* istanbul ignore next */ err => this.logger.debug(\"Unable to send DISCONNECT packet.\", err));\n\t}\n\n\t/**\n\t * Subscribe to topics for transportation\n\t *\n\t * @memberof Transit\n\t */\n\tmakeSubscriptions() {\n\t\tthis.subscribing = this.tx.makeSubscriptions([\n\n\t\t\t// Subscribe to broadcast events\n\t\t\t{ cmd: P.PACKET_EVENT, nodeID: this.nodeID },\n\n\t\t\t// Subscribe to requests\n\t\t\t{ cmd: P.PACKET_REQUEST, nodeID: this.nodeID },\n\n\t\t\t// Subscribe to node responses of requests\n\t\t\t{ cmd: P.PACKET_RESPONSE, nodeID: this.nodeID },\n\n\t\t\t// Discover handler\n\t\t\t{ cmd: P.PACKET_DISCOVER },\n\t\t\t{ cmd: P.PACKET_DISCOVER, nodeID: this.nodeID },\n\n\t\t\t// NodeInfo handler\n\t\t\t{ cmd: P.PACKET_INFO }, // Broadcasted INFO. If a new node connected\n\t\t\t{ cmd: P.PACKET_INFO, nodeID: this.nodeID }, // Response INFO to DISCOVER packet\n\n\t\t\t// Disconnect handler\n\t\t\t{ cmd: P.PACKET_DISCONNECT },\n\n\t\t\t// Heartbeat handler\n\t\t\t{ cmd: P.PACKET_HEARTBEAT },\n\n\t\t\t// Ping handler\n\t\t\t{ cmd: P.PACKET_PING }, // Broadcasted\n\t\t\t{ cmd: P.PACKET_PING, nodeID: this.nodeID }, // Targeted\n\n\t\t\t// Pong handler\n\t\t\t{ cmd: P.PACKET_PONG, nodeID: this.nodeID }\n\n\t\t]).then(() => {\n\t\t\tthis.subscribing = null;\n\t\t});\n\n\t\treturn this.subscribing;\n\t}\n\n\t/**\n\t * Message handler for incoming packets\n\t *\n\t * @param {Array} topic\n\t * @param {String} msg\n\t * @returns {Boolean} If packet is processed return with `true`\n\t *\n\t * @memberof Transit\n\t */\n\tmessageHandler(cmd, packet) {\n\t\ttry {\n\t\t\tconst payload = packet.payload;\n\n\t\t\t// Check payload\n\t\t\tif (!payload) {\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tthrow new E.MoleculerServerError(\"Missing response payload.\", 500, \"MISSING_PAYLOAD\");\n\t\t\t}\n\n\t\t\t// Check protocol version\n\t\t\tif (payload.ver !== this.broker.PROTOCOL_VERSION && !this.opts.disableVersionCheck) {\n\t\t\t\tthrow new E.ProtocolVersionMismatchError({\n\t\t\t\t\tnodeID: payload.sender,\n\t\t\t\t\tactual: this.broker.PROTOCOL_VERSION,\n\t\t\t\t\treceived: payload.ver\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (payload.sender === this.nodeID) {\n\n\t\t\t\t// Detect nodeID conflict\n\t\t\t\tif (cmd === P.PACKET_INFO && payload.instanceID !== this.instanceID) {\n\t\t\t\t\treturn this.broker.fatal(\"ServiceBroker has detected a nodeID conflict, use unique nodeIDs. ServiceBroker stopped.\");\n\t\t\t\t}\n\n\t\t\t\t// Skip own packets (if only built-in balancer disabled)\n\t\t\t\tif (cmd !== P.PACKET_EVENT && cmd !== P.PACKET_REQUEST && cmd !== P.PACKET_RESPONSE)\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Request\n\t\t\tif (cmd === P.PACKET_REQUEST) {\n\t\t\t\treturn this.requestHandler(payload);\n\t\t\t}\n\n\t\t\t// Response\n\t\t\telse if (cmd === P.PACKET_RESPONSE) {\n\t\t\t\tthis.responseHandler(payload);\n\t\t\t}\n\n\t\t\t// Event\n\t\t\telse if (cmd === P.PACKET_EVENT) {\n\t\t\t\tthis.eventHandler(payload);\n\t\t\t}\n\n\t\t\t// Discover\n\t\t\telse if (cmd === P.PACKET_DISCOVER) {\n\t\t\t\tthis.discoverer.sendLocalNodeInfo(payload.sender);\n\t\t\t}\n\n\t\t\t// Node info\n\t\t\telse if (cmd === P.PACKET_INFO) {\n\t\t\t\tthis.discoverer.processRemoteNodeInfo(payload.sender, payload);\n\t\t\t}\n\n\t\t\t// Disconnect\n\t\t\telse if (cmd === P.PACKET_DISCONNECT) {\n\t\t\t\tthis.discoverer.remoteNodeDisconnected(payload.sender, false);\n\t\t\t}\n\n\t\t\t// Heartbeat\n\t\t\telse if (cmd === P.PACKET_HEARTBEAT) {\n\t\t\t\tthis.discoverer.heartbeatReceived(payload.sender, payload);\n\t\t\t}\n\n\t\t\t// Ping\n\t\t\telse if (cmd === P.PACKET_PING) {\n\t\t\t\tthis.sendPong(payload);\n\t\t\t}\n\n\t\t\t// Pong\n\t\t\telse if (cmd === P.PACKET_PONG) {\n\t\t\t\tthis.processPong(payload);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\tthis.logger.error(err, cmd, packet);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Handle incoming event\n\t *\n\t * @param {any} payload\n\t * @memberof Transit\n\t */\n\teventHandler(payload) {\n\t\tthis.logger.debug(`Event '${payload.event}' received from '${payload.sender}' node` + (payload.groups ? ` in '${payload.groups.join(\", \")}' group(s)` : \"\") + \".\");\n\n\t\tif (!this.broker.started) {\n\t\t\tthis.logger.warn(`Incoming '${payload.event}' event from '${payload.sender}' node is dropped, because broker is stopped.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Create caller context\n\t\tconst ctx = new this.broker.ContextFactory(this.broker);\n\t\tctx.id = payload.id;\n\t\tctx.eventName = payload.event;\n\t\tctx.setParams(payload.data, this.broker.options.contextParamsCloning);\n\t\tctx.eventGroups = payload.groups;\n\t\tctx.eventType = payload.broadcast ? \"broadcast\" : \"emit\";\n\t\tctx.meta = payload.meta || {};\n\t\tctx.level = payload.level;\n\t\tctx.tracing = !!payload.tracing;\n\t\tctx.parentID = payload.parentID;\n\t\tctx.requestID = payload.requestID;\n\t\tctx.caller = payload.caller;\n\t\tctx.nodeID = payload.sender;\n\n\t\tthis.broker.emitLocalServices(ctx);\n\t}\n\n\t/**\n\t * Handle incoming request\n\t *\n\t * @param {Object} payload\n\t *\n\t * @memberof Transit\n\t */\n\trequestHandler(payload) {\n\t\tthis.logger.debug(`<= Request '${payload.action}' received from '${payload.sender}' node.`);\n\n\t\ttry {\n\t\t\tif (!this.broker.started) {\n\t\t\t\tthis.logger.warn(`Incoming '${payload.action}' request from '${payload.sender}' node is dropped because broker is stopped.`);\n\t\t\t\tthrow new E.ServiceNotAvailableError({ action: payload.action, nodeID: this.nodeID });\n\t\t\t}\n\n\t\t\tlet pass;\n\t\t\tif (payload.stream !== undefined) {\n\t\t\t\tpass = this._handleIncomingRequestStream(payload);\n\t\t\t\tif (pass === null) // eslint-disable-line security/detect-possible-timing-attacks\n\t\t\t\t\treturn this.Promise.resolve();\n\t\t\t}\n\n\t\t\tconst endpoint = this.broker._getLocalActionEndpoint(payload.action);\n\n\t\t\t// Recreate caller context\n\t\t\tconst ctx = new this.broker.ContextFactory(this.broker);\n\t\t\tctx.setEndpoint(endpoint);\n\t\t\tctx.id = payload.id;\n\t\t\tctx.setParams(pass ? pass : payload.params, this.broker.options.contextParamsCloning);\n\t\t\tctx.parentID = payload.parentID;\n\t\t\tctx.requestID = payload.requestID;\n\t\t\tctx.caller = payload.caller;\n\t\t\tctx.meta = payload.meta || {};\n\t\t\tctx.level = payload.level;\n\t\t\tctx.tracing = payload.tracing;\n\t\t\tctx.nodeID = payload.sender;\n\n\t\t\tif (payload.timeout != null)\n\t\t\t\tctx.options.timeout = payload.timeout;\n\n\t\t\tconst p = endpoint.action.handler(ctx);\n\t\t\t// Pointer to Context\n\t\t\tp.ctx = ctx;\n\n\t\t\treturn p\n\t\t\t\t.then(res => this.sendResponse(payload.sender, payload.id, ctx.meta, res, null))\n\t\t\t\t.catch(err => this.sendResponse(payload.sender, payload.id, ctx.meta, null, err));\n\n\t\t} catch (err) {\n\t\t\treturn this.sendResponse(payload.sender, payload.id, payload.meta, null, err);\n\t\t}\n\t}\n\n\t/**\n\t * Handle incoming request stream.\n\t *\n\t * @param {Object} payload\n\t * @returns {Stream}\n\t */\n\t_handleIncomingRequestStream(payload) {\n\t\tlet pass = this.pendingReqStreams.get(payload.id);\n\t\tlet isNew = false;\n\n\t\tif (!payload.stream && !pass) {\n\t\t\t// It is not a stream data\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!pass) {\n\t\t\tisNew = true;\n\t\t\tthis.logger.debug(`<= New stream is received from '${payload.sender}'. Seq: ${payload.seq}`);\n\n\t\t\t// Create a new pass stream\n\t\t\tpass = new Transform({\n\t\t\t\tobjectMode: payload.meta && payload.meta[\"$streamObjectMode\"],\n\t\t\t\ttransform: function(chunk, encoding, done) {\n\t\t\t\t\tthis.push(chunk);\n\t\t\t\t\treturn done();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpass.$prevSeq = -1;\n\t\t\tpass.$pool = new Map();\n\n\t\t\tthis.pendingReqStreams.set(payload.id, pass);\n\t\t}\n\n\t\tif (payload.seq > pass.$prevSeq + 1) {\n\t\t\t// Some chunks are late. Store these chunks.\n\t\t\tthis.logger.info(`Put the chunk into pool (size: ${pass.$pool.size}). Seq: ${payload.seq}`);\n\n\t\t\tpass.$pool.set(payload.seq, payload);\n\n\t\t\t// TODO: start timer.\n\t\t\t// TODO: check length of pool.\n\t\t\t// TODO: reset seq\n\n\t\t\treturn isNew ? pass : null;\n\t\t}\n\n\t\t// the next stream chunk received\n\t\tpass.$prevSeq = payload.seq;\n\n\t\tif (pass.$prevSeq > 0) {\n\t\t\tif (!payload.stream) {\n\n\t\t\t\t// Check stream error\n\t\t\t\tif (payload.meta && payload.meta[\"$streamError\"]) {\n\t\t\t\t\tpass.emit(\"error\", this._createErrFromPayload(payload.meta[\"$streamError\"], payload.sender));\n\t\t\t\t}\n\n\t\t\t\tthis.logger.debug(`<= Stream closing is received from '${payload.sender}'. Seq: ${payload.seq}`);\n\n\t\t\t\t// End of stream\n\t\t\t\tpass.end();\n\n\t\t\t\t// Remove pending request stream\n\t\t\t\tthis.pendingReqStreams.delete(payload.id);\n\n\t\t\t\treturn null;\n\n\t\t\t} else {\n\t\t\t\tthis.logger.debug(`<= Stream chunk is received from '${payload.sender}'. Seq: ${payload.seq}`);\n\t\t\t\tpass.write(payload.params.type === \"Buffer\" ? Buffer.from(payload.params.data) : payload.params);\n\t\t\t}\n\t\t}\n\n\t\t// Check newer chunks in the pool\n\t\tif (pass.$pool.size > 0) {\n\t\t\tthis.logger.warn(`Has stored packets. Size: ${pass.$pool.size}`);\n\t\t\tconst nextSeq = pass.$prevSeq + 1;\n\t\t\tconst nextPacket = pass.$pool.get(nextSeq);\n\t\t\tif (nextPacket) {\n\t\t\t\tpass.$pool.delete(nextSeq);\n\t\t\t\tsetImmediate(() => this.requestHandler(nextPacket));\n\t\t\t}\n\t\t}\n\n\t\treturn isNew ? pass : null;\n\t}\n\n\t/**\n\t * Create an Error instance from payload ata\n\t * @param {Object} error\n\t * @param {String} sender\n\t */\n\t_createErrFromPayload(error, sender) {\n\t\tlet err = E.recreateError(error);\n\t\tif (!err) {\n\t\t\terr = new Error(error.message);\n\t\t\terr.name = error.name;\n\t\t\terr.code = error.code;\n\t\t\terr.type = error.type;\n\t\t\terr.data = error.data;\n\t\t}\n\t\terr.retryable = error.retryable;\n\t\terr.nodeID = error.nodeID || sender;\n\n\t\tif (error.stack)\n\t\t\terr.stack = error.stack;\n\n\t\treturn err;\n\t}\n\n\t/**\n\t * Process incoming response of request\n\t *\n\t * @param {Object} packet\n\t *\n\t * @memberof Transit\n\t */\n\tresponseHandler(packet) {\n\t\tconst id = packet.id;\n\t\tconst req = this.pendingRequests.get(id);\n\n\t\t// If not exists (timed out), we skip response processing\n\t\tif (req == null) {\n\t\t\tthis.logger.debug(\"Orphan response is received. Maybe the request is timed out earlier. ID:\", packet.id, \", Sender:\", packet.sender);\n\t\t\tthis.metrics.increment(METRIC.MOLECULER_TRANSIT_ORPHAN_RESPONSE_TOTAL);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logger.debug(`<= Response '${req.action.name}' is received from '${packet.sender}'.`);\n\n\t\t// Update nodeID in context (if it uses external balancer)\n\t\treq.ctx.nodeID = packet.sender;\n\n\t\t// Merge response meta with original meta\n\t\tObject.assign(req.ctx.meta || {}, packet.meta || {});\n\n\t\t// Handle stream response\n\t\tif (packet.stream != null) {\n\t\t\tif (this._handleIncomingResponseStream(packet, req))\n\t\t\t\treturn;\n\t\t}\n\n\t\t// Remove pending request\n\t\tthis.removePendingRequest(id);\n\n\t\tif (!packet.success) {\n\t\t\treq.reject(this._createErrFromPayload(packet.error, packet.sender));\n\t\t} else {\n\t\t\treq.resolve(packet.data);\n\t\t}\n\t}\n\n\t/**\n\t * Handle incoming response stream.\n\t *\n\t * @param {Object} packet\n\t * @param {Object} req\n\t */\n\t_handleIncomingResponseStream(packet, req) {\n\t\tlet pass = this.pendingResStreams.get(packet.id);\n\t\tif (!pass && !packet.stream)\n\t\t\treturn false;\n\n\t\tif (!pass) {\n\t\t\tthis.logger.debug(`<= New stream is received from '${packet.sender}'. Seq: ${packet.seq}`);\n\n\t\t\tpass = new Transform({\n\t\t\t\tobjectMode: packet.meta && packet.meta[\"$streamObjectMode\"],\n\t\t\t\ttransform: function(chunk, encoding, done) {\n\t\t\t\t\tthis.push(chunk);\n\t\t\t\t\treturn done();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpass.$prevSeq = -1;\n\t\t\tpass.$pool = new Map();\n\n\t\t\tthis.pendingResStreams.set(packet.id, pass);\n\n\t\t\treq.resolve(pass);\n\t\t}\n\n\t\tif (packet.seq > pass.$prevSeq + 1) {\n\t\t\t// Some chunks are late. Store these chunks.\n\t\t\tthis.logger.info(`Put the chunk into pool (size: ${pass.$pool.size}). Seq: ${packet.seq}`);\n\n\t\t\tpass.$pool.set(packet.seq, packet);\n\n\t\t\t// TODO: start timer.\n\t\t\t// TODO: check length of pool.\n\t\t\t// TODO: resetting seq.\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// the next stream chunk received\n\t\tpass.$prevSeq = packet.seq;\n\n\t\tif (pass.$prevSeq > 0) {\n\n\t\t\tif (!packet.stream) {\n\t\t\t\t// Received error?\n\t\t\t\tif (!packet.success)\n\t\t\t\t\tpass.emit(\"error\", this._createErrFromPayload(packet.error, packet.sender));\n\n\t\t\t\tthis.logger.debug(`<= Stream closing is received from '${packet.sender}'. Seq: ${packet.seq}`);\n\n\t\t\t\t// End of stream\n\t\t\t\tpass.end();\n\n\t\t\t\t// Remove pending request\n\t\t\t\tthis.removePendingRequest(packet.id);\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\t\t\t\t// stream chunk\n\t\t\t\tthis.logger.debug(`<= Stream chunk is received from '${packet.sender}'. Seq: ${packet.seq}`);\n\t\t\t\tpass.write(packet.data.type === \"Buffer\" ? Buffer.from(packet.data.data):packet.data);\n\t\t\t}\n\t\t}\n\n\t\t// Check newer chunks in the pool\n\t\tif (pass.$pool.size > 0) {\n\t\t\tthis.logger.warn(`Has stored packets. Size: ${pass.$pool.size}`);\n\t\t\tconst nextSeq = pass.$prevSeq + 1;\n\t\t\tconst nextPacket = pass.$pool.get(nextSeq);\n\t\t\tif (nextPacket) {\n\t\t\t\tpass.$pool.delete(nextSeq);\n\t\t\t\tsetImmediate(() => this.responseHandler(nextPacket));\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Send a request to a remote service. It returns a Promise\n\t * what will be resolved when the response received.\n\t *\n\t * @param {<Context>} ctx Context of request\n\t * @returns {Promise}\n\t *\n\t * @memberof Transit\n\t */\n\trequest(ctx) {\n\t\tif (this.opts.maxQueueSize && this.pendingRequests.size >= this.opts.maxQueueSize)\n\t\t\t/* istanbul ignore next */\n\t\t\treturn this.Promise.reject(new E.QueueIsFullError({\n\t\t\t\taction: ctx.action.name,\n\t\t\t\tnodeID: this.nodeID,\n\t\t\t\tsize: this.pendingRequests.size,\n\t\t\t\tlimit: this.opts.maxQueueSize\n\t\t\t}));\n\n\t\t// Expanded the code that v8 can optimize it.  (TryCatchStatement disable optimizing)\n\t\treturn new this.Promise((resolve, reject) => this._sendRequest(ctx, resolve, reject));\n\t}\n\n\t/**\n\t * Send a remote request\n\t *\n\t * @param {<Context>} ctx      Context of request\n\t * @param {Function} resolve   Resolve of Promise\n\t * @param {Function} reject    Reject of Promise\n\t *\n\t * @memberof Transit\n\t */\n\t_sendRequest(ctx, resolve, reject) {\n\t\tconst isStream = ctx.params && ctx.params.readable === true && typeof ctx.params.on === \"function\" && typeof ctx.params.pipe === \"function\";\n\n\t\tconst request = {\n\t\t\taction: ctx.action,\n\t\t\tnodeID: ctx.nodeID,\n\t\t\tctx,\n\t\t\tresolve,\n\t\t\treject,\n\t\t\tstream: isStream // ???\n\t\t};\n\n\t\tconst payload = {\n\t\t\tid: ctx.id,\n\t\t\taction: ctx.action.name,\n\t\t\tparams: isStream ? null : ctx.params,\n\t\t\tmeta: ctx.meta,\n\t\t\ttimeout: ctx.options.timeout,\n\t\t\tlevel: ctx.level,\n\t\t\ttracing: ctx.tracing,\n\t\t\tparentID: ctx.parentID,\n\t\t\trequestID: ctx.requestID,\n\t\t\tcaller: ctx.caller,\n\t\t\tstream: isStream,\n\t\t};\n\n\t\tif (payload.stream) {\n\t\t\tif (ctx.params.readableObjectMode === true || (ctx.params._readableState && ctx.params._readableState.objectMode === true)) {\n\t\t\t\tpayload.meta = payload.meta || {};\n\t\t\t\tpayload.meta[\"$streamObjectMode\"] = true;\n\t\t\t}\n\t\t\tpayload.seq = 0;\n\t\t}\n\n\t\tconst packet = new Packet(P.PACKET_REQUEST, ctx.nodeID, payload);\n\n\t\tconst nodeName = ctx.nodeID ? `'${ctx.nodeID}'` : \"someone\";\n\t\tthis.logger.debug(`=> Send '${ctx.action.name}' request to ${nodeName} node.`);\n\n\t\tconst publishCatch = /* istanbul ignore next */ err => this.logger.error(`Unable to send '${ctx.action.name}' request to ${nodeName} node.`, err);\n\n\t\t// Add to pendings\n\t\tthis.pendingRequests.set(ctx.id, request);\n\n\t\t// Publish request\n\t\treturn this.publish(packet)\n\t\t\t.then(() => {\n\t\t\t\tif (isStream) {\n\t\t\t\t\t// Skip to send ctx.meta with chunks because it doesn't appear on the remote side.\n\t\t\t\t\tpayload.meta = {};\n\t\t\t\t\t// Still send information about objectMode in case of packets are received in wrong order\n\t\t\t\t\tif (ctx.params.readableObjectMode === true || (ctx.params._readableState && ctx.params._readableState.objectMode === true)) {\n\t\t\t\t\t\tpayload.meta[\"$streamObjectMode\"] = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst stream = ctx.params;\n\t\t\t\t\tstream.on(\"data\", (chunk) => {\n\t\t\t\t\t\tstream.pause();\n\t\t\t\t\t\tconst chunks = [];\n\t\t\t\t\t\tif (chunk instanceof Buffer && this.opts.maxChunkSize > 0 && chunk.length > this.opts.maxChunkSize) {\n\t\t\t\t\t\t\tlet len = chunk.length;\n\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\twhile (i < len) {\n\t\t\t\t\t\t\t\tchunks.push(chunk.slice(i, i += this.opts.maxChunkSize));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const ch of chunks) {\n\t\t\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\t\t\tcopy.stream = true;\n\t\t\t\t\t\t\tcopy.params = ch;\n\n\t\t\t\t\t\t\tthis.logger.debug(`=> Send stream chunk to ${nodeName} node. Seq: ${copy.seq}`);\n\n\t\t\t\t\t\t\tthis.publish(new Packet(P.PACKET_REQUEST, ctx.nodeID, copy))\n\t\t\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstream.resume();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.on(\"end\", () => {\n\t\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\t\tcopy.params = null;\n\t\t\t\t\t\tcopy.stream = false;\n\n\t\t\t\t\t\tthis.logger.debug(`=> Send stream closing to ${nodeName} node. Seq: ${copy.seq}`);\n\n\t\t\t\t\t\treturn this.publish(new Packet(P.PACKET_REQUEST, ctx.nodeID, copy))\n\t\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.on(\"error\", err => {\n\t\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\t\tcopy.stream = false;\n\t\t\t\t\t\tcopy.meta[\"$streamError\"] = this._createPayloadErrorField(err);\n\t\t\t\t\t\tcopy.params = null;\n\n\t\t\t\t\t\tthis.logger.debug(`=> Send stream error to ${nodeName} node.`, copy.meta[\"$streamError\"]);\n\n\t\t\t\t\t\treturn this.publish(new Packet(P.PACKET_REQUEST, ctx.nodeID, copy))\n\t\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tpublishCatch(err);\n\t\t\t\treject(err);\n\t\t\t});\n\t}\n\n\t/**\n\t * Send an event to a remote node.\n\t * The event is balanced by transporter\n\t *\n\t * @param {Context} ctx\n\t *\n\t * @memberof Transit\n\t */\n\tsendEvent(ctx) {\n\t\tconst groups = ctx.eventGroups;\n\t\tif (ctx.endpoint)\n\t\t\tthis.logger.debug(`=> Send '${ctx.eventName}' event to '${ctx.nodeID}' node` + (groups ? ` in '${groups.join(\", \")}' group(s)` : \"\") + \".\");\n\t\telse\n\t\t\tthis.logger.debug(`=> Send '${ctx.eventName}' event to '${groups.join(\", \")}' group(s).`);\n\n\t\treturn this.publish(new Packet(P.PACKET_EVENT, ctx.endpoint ? ctx.nodeID : null, {\n\t\t\tid: ctx.id,\n\t\t\tevent: ctx.eventName,\n\t\t\tdata: ctx.params,\n\t\t\tgroups,\n\t\t\tbroadcast: ctx.eventType == \"broadcast\",\n\t\t\tmeta: ctx.meta,\n\t\t\tlevel: ctx.level,\n\t\t\ttracing: ctx.tracing,\n\t\t\tparentID: ctx.parentID,\n\t\t\trequestID: ctx.requestID,\n\t\t\tcaller: ctx.caller,\n\t\t\tneedAck: ctx.needAck\n\t\t})).catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send '${ctx.eventName}' event to groups.`, err));\n\t}\n\n\t/**\n\t * Remove a pending request\n\t *\n\t * @param {any} id\n\t *\n\t * @memberof Transit\n\t */\n\tremovePendingRequest(id) {\n\t\tthis.pendingRequests.delete(id);\n\n\t\tthis.pendingReqStreams.delete(id);\n\t\tthis.pendingResStreams.delete(id);\n\t}\n\n\t/**\n\t * Remove a pending request & streams\n\t *\n\t * @param {String} nodeID\n\t *\n\t * @memberof Transit\n\t */\n\tremovePendingRequestByNodeID(nodeID) {\n\t\tthis.logger.debug(`Remove pending requests of '${nodeID}' node.`);\n\t\tthis.pendingRequests.forEach((req, id) => {\n\t\t\tif (req.nodeID === nodeID) {\n\t\t\t\tthis.pendingRequests.delete(id);\n\n\t\t\t\t// Reject the request\n\t\t\t\treq.reject(new E.RequestRejectedError({\n\t\t\t\t\taction: req.action.name,\n\t\t\t\t\tnodeID: req.nodeID\n\t\t\t\t}));\n\n\t\t\t\tthis.pendingReqStreams.delete(id);\n\t\t\t\tthis.pendingResStreams.delete(id);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Create error field in outgoing payload\n\t *\n\t * @param {Error} err\n\t * @returns {Object}\n\t * @memberof Transit\n\t */\n\t_createPayloadErrorField(err) {\n\t\treturn {\n\t\t\tname: err.name,\n\t\t\tmessage: err.message,\n\t\t\tnodeID: err.nodeID || this.nodeID,\n\t\t\tcode: err.code,\n\t\t\ttype: err.type,\n\t\t\tretryable: err.retryable,\n\t\t\tstack: err.stack,\n\t\t\tdata: err.data\n\t\t};\n\t}\n\n\t/**\n\t * Send back the response of request\n\t *\n\t * @param {String} nodeID\n\t * @param {String} id\n\t * @param {any} meta\n\t * @param {any} data\n\t * @param {Error} err\n\t *\n\t * @memberof Transit\n\t */\n\tsendResponse(nodeID, id, meta, data, err) {\n\t\t// Publish the response\n\t\tconst payload = {\n\t\t\tid: id,\n\t\t\tmeta: meta,\n\t\t\tsuccess: err == null,\n\t\t\tdata: data\n\t\t};\n\n\t\tif (err)\n\t\t\tpayload.error = this._createPayloadErrorField(err);\n\n\t\tconst publishCatch = /* istanbul ignore next */ err => this.logger.error(`Unable to send '${id}' response to '${nodeID}' node.`, err);\n\n\t\tif (data && data.readable === true && typeof data.on === \"function\" && typeof data.pipe === \"function\") {\n\t\t\t// Streaming response\n\t\t\tpayload.stream = true;\n\t\t\tif (data.readableObjectMode === true || (data._readableState && data._readableState.objectMode === true)) {\n\t\t\t\tpayload.meta = payload.meta || {};\n\t\t\t\tpayload.meta[\"$streamObjectMode\"] = true;\n\t\t\t}\n\t\t\tpayload.seq = 0;\n\n\t\t\tconst stream = data;\n\t\t\tstream.pause();\n\n\t\t\tstream.on(\"data\", (chunk) => {\n\t\t\t\tstream.pause();\n\t\t\t\tconst chunks = [];\n\t\t\t\tif (chunk instanceof Buffer && this.opts.maxChunkSize > 0 && chunk.length > this.opts.maxChunkSize) {\n\t\t\t\t\tlet len = chunk.length;\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\twhile (i < len) {\n\t\t\t\t\t\tchunks.push(chunk.slice(i, i += this.opts.maxChunkSize));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t\tfor (const ch of chunks) {\n\t\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\t\tcopy.stream = true;\n\t\t\t\t\tcopy.data = ch;\n\n\t\t\t\t\tthis.logger.debug(`=> Send stream chunk to ${nodeID} node. Seq: ${copy.seq}`);\n\n\t\t\t\t\tthis.publish(new Packet(P.PACKET_RESPONSE, nodeID, copy))\n\t\t\t\t\t\t.catch(publishCatch);\n\t\t\t\t}\n\t\t\t\tstream.resume();\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tstream.on(\"end\", () => {\n\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\tcopy.stream = false;\n\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\tcopy.data = null;\n\n\t\t\t\tthis.logger.debug(`=> Send stream closing to ${nodeID} node. Seq: ${copy.seq}`);\n\n\t\t\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, copy))\n\t\t\t\t\t.catch(publishCatch);\n\t\t\t});\n\n\t\t\tstream.on(\"error\", err => {\n\t\t\t\tconst copy = Object.assign({}, payload);\n\t\t\t\tcopy.stream = false;\n\t\t\t\tcopy.seq = ++payload.seq;\n\t\t\t\tif (err) {\n\t\t\t\t\tcopy.success = false;\n\t\t\t\t\tcopy.error = this._createPayloadErrorField(err);\n\t\t\t\t}\n\n\t\t\t\tthis.logger.debug(`=> Send stream error to ${nodeID} node.`, copy.error);\n\n\t\t\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, copy))\n\t\t\t\t\t.catch(publishCatch);\n\t\t\t});\n\n\t\t\tpayload.data = null;\n\t\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, payload))\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (payload.stream)\n\t\t\t\t\t\tstream.resume();\n\t\t\t\t})\n\t\t\t\t.catch(publishCatch);\n\n\t\t}\n\n\t\treturn this.publish(new Packet(P.PACKET_RESPONSE, nodeID, payload))\n\t\t\t.catch(publishCatch);\n\t}\n\n\t/**\n\t * Discover other nodes. It will be called after success connect.\n\t *\n\t * @memberof Transit\n\t */\n\tdiscoverNodes() {\n\t\treturn this.publish(new Packet(P.PACKET_DISCOVER))\n\t\t\t.catch(/* istanbul ignore next */ err => this.logger.error(\"Unable to send DISCOVER packet.\", err));\n\t}\n\n\t/**\n\t * Discover a node. It will be called if we got message from an unknown node.\n\t *\n\t * @memberof Transit\n\t */\n\tdiscoverNode(nodeID) {\n\t\treturn this.publish(new Packet(P.PACKET_DISCOVER, nodeID))\n\t\t\t.catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send DISCOVER packet to '${nodeID}' node.`, err));\n\t}\n\n\t/**\n\t * Send node info package to other nodes.\n\t *\n\t * @memberof Transit\n\t */\n\tsendNodeInfo(info, nodeID) {\n\t\tif (!this.connected || !this.isReady) return this.Promise.resolve();\n\n\t\tconst p = !nodeID && this.broker.options.disableBalancer ? this.tx.makeBalancedSubscriptions() : this.Promise.resolve();\n\t\treturn p.then(() => this.publish(new Packet(P.PACKET_INFO, nodeID, {\n\t\t\tservices: info.services,\n\t\t\tipList: info.ipList,\n\t\t\thostname: info.hostname,\n\t\t\tclient: info.client,\n\t\t\tconfig: info.config,\n\t\t\tinstanceID: this.broker.instanceID,\n\t\t\tmetadata: info.metadata,\n\t\t\tseq: info.seq\n\t\t}))).catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send INFO packet to '${nodeID}' node.`, err));\n\n\t}\n\n\t/**\n\t * Send ping to a node (or all nodes if nodeID is null)\n\t *\n\t * @param {String} nodeID\n\t * @param {String} id\n\t * @returns\n\t * @memberof Transit\n\t */\n\tsendPing(nodeID, id) {\n\t\treturn this.publish(new Packet(P.PACKET_PING, nodeID, { time: Date.now(), id: id || this.broker.generateUid() }))\n\t\t\t.catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send PING packet to '${nodeID}' node.`, err));\n\t}\n\n\t/**\n\t * Send back pong response\n\t *\n\t * @param {Object} payload\n\t * @returns\n\t * @memberof Transit\n\t */\n\tsendPong(payload) {\n\t\treturn this.publish(new Packet(P.PACKET_PONG, payload.sender, {\n\t\t\ttime: payload.time,\n\t\t\tid: payload.id,\n\t\t\tarrived: Date.now()\n\t\t})).catch(/* istanbul ignore next */ err => this.logger.error(`Unable to send PONG packet to '${payload.sender}' node.`, err));\n\t}\n\n\t/**\n\t * Process incoming PONG packet.\n\t * Measure ping time & current time difference.\n\t *\n\t * @param {Object} payload\n\t * @memberof Transit\n\t */\n\tprocessPong(payload) {\n\t\tconst now = Date.now();\n\t\tconst elapsedTime = now - payload.time;\n\t\tconst timeDiff = Math.round(now - payload.arrived - elapsedTime / 2);\n\n\t\t// this.logger.debug(`PING-PONG from '${payload.sender}' - Time: ${elapsedTime}ms, Time difference: ${timeDiff}ms`);\n\n\t\tthis.broker.broadcastLocal(\"$node.pong\", { nodeID: payload.sender, elapsedTime, timeDiff, id: payload.id });\n\n\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_PONG_TIME, elapsedTime, { targetNodeID: payload.sender });\n\t\tthis.metrics.set(METRIC.MOLECULER_TRANSIT_PONG_SYSTIME_DIFF, timeDiff, { targetNodeID: payload.sender });\n\t}\n\n\t/**\n\t * Send a node heartbeat. It will be called with timer from local Discoverer.\n\t *\n\t * @params {Node} localNode\n\t * @memberof Transit\n\t */\n\tsendHeartbeat(localNode) {\n\t\treturn this.publish(new Packet(P.PACKET_HEARTBEAT, null, {\n\t\t\tcpu: localNode.cpu\n\t\t})).catch(/* istanbul ignore next */ err => this.logger.error(\"Unable to send HEARTBEAT packet.\", err));\n\n\t}\n\n\t/**\n\t * Subscribe via transporter\n\t *\n\t * @param {String} topic\n\t * @param {String=} nodeID\n\t *\n\t * @deprecated\n\t * @memberof Transit\n\t */\n\tsubscribe(topic, nodeID) {\n\t\treturn this.tx.subscribe(topic, nodeID);\n\t}\n\n\t/**\n\t * Publish via transporter\n\t *\n\t * @param {Packet} Packet\n\t *\n\t * @memberof Transit\n\t */\n\tpublish(packet) {\n\t\tif (this.subscribing) {\n\t\t\treturn this.subscribing\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn this.tx.prepublish(packet);\n\t\t\t\t});\n\t\t}\n\t\treturn this.tx.prepublish(packet);\n\t}\n\n}\n\nmodule.exports = Transit;\n"],"names":["P","require$$1","E"],"mappings":"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"}