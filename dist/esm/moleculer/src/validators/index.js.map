{"version":3,"file":"index.js","sources":["../../../../../src/moleculer/src/validators/index.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { BrokerOptionsError } = require(\"../errors\");\nconst { isObject, isString } = require(\"../utils\");\n\nconst Validators = {\n\tBase: require(\"./base\"),\n\tFastest: require(\"./fastest\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Validators).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Validators[n];\n}\n\n/**\n * Resolve validator by name\n *\n * @param {object|string} opt\n * @returns {Validator}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Validators.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet ValidatorClass = getByName(opt);\n\t\tif (ValidatorClass)\n\t\t\treturn new ValidatorClass();\n\n\t\tthrow new BrokerOptionsError(`Invalid Validator type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet ValidatorClass = getByName(opt.type || \"Fastest\");\n\t\tif (ValidatorClass)\n\t\t\treturn new ValidatorClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid Validator type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn new Validators.Fastest();\n}\n\nfunction register(name, value) {\n\tValidators[name] = value;\n}\n\nmodule.exports = Object.assign(Validators, { resolve, register });\n"],"names":["BrokerOptionsError","require$$0","isObject","isString","require$$1","Validators","Base","require$$2","Fastest","require$$3","getByName","name","n","Object","keys","find","toLowerCase","assign","resolve","opt","ValidatorClass","type","options","register","value"],"mappings":"4GAQA,MAAMA,mBAAEA,GAAuBC,GACzBC,SAAEA,EAAQC,SAAEA,GAAaC,EAEzBC,EAAa,CAClBC,KAAMC,EACNC,QAASC,GAGV,SAASC,EAAUC,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIC,EAAIC,OAAOC,KAAKT,GAAYU,MAAKH,GAAKA,EAAEI,eAAiBL,EAAKK,gBAClE,OAAIJ,EACIP,EAAWO,QADnB,QAoCgBC,OAAOI,OAAOZ,EAAY,CAAEa,QAzB7C,SAAiBC,GAChB,GAAIA,aAAed,EAAWC,KAC7B,OAAOa,EACD,GAAIhB,EAASgB,GAAM,CACzB,IAAIC,EAAiBV,EAAUS,GAC/B,GAAIC,EACH,OAAO,IAAIA,EAEZ,MAAM,IAAIpB,EAAmB,2BAA2BmB,MAAS,CAAEE,KAAMF,IAEnE,GAAIjB,EAASiB,GAAM,CACzB,IAAIC,EAAiBV,EAAUS,EAAIE,MAAQ,WAC3C,GAAID,EACH,OAAO,IAAIA,EAAeD,EAAIG,SAE9B,MAAM,IAAItB,EAAmB,2BAA2BmB,EAAIE,SAAU,CAAEA,KAAMF,EAAIE,OAGpF,OAAO,IAAIhB,EAAWG,SAO+Be,SAJtD,SAAkBZ,EAAMa,GACvBnB,EAAWM,GAAQa"}