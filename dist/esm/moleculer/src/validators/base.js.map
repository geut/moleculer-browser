{"version":3,"file":"base.js","sources":["../../../../../src/moleculer/src/validators/base.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { ValidationError } = require(\"../errors\");\nconst _ = require(\"lodash\");\n\nclass BaseValidator {\n\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tparamName: \"params\"\n\t\t});\n\t}\n\n\tinit(broker) {\n\t\tthis.broker = broker;\n\t}\n\n\t/**\n\t * Compile a validation schema to a checker function.\n\t * @param {any} schema\n\t * @returns {Function}\n\t */\n\tcompile(/*schema*/) {\n\t\tthrow new Error(\"Abstract method\");\n\t}\n\n\t/**\n\t * Validate params againt the schema\n\t * @param {any} params\n\t * @param {any} schema\n\t * @returns {boolean}\n\t */\n\tvalidate(/*params, schema*/) {\n\t\tthrow new Error(\"Abstract method\");\n\t}\n\n\t/**\n\t * Convert the specific validation schema to\n\t * the Moleculer (fastest-validator) validation schema format.\n\t *\n\t * @param {any} schema\n\t * @returns {Object}\n\t */\n\tconvertSchemaToMoleculer(/*schema*/) {\n\t\tthrow new Error(\"Abstract method\");\n\t}\n\n\t/**\n\t * Register validator as a middleware\n\t *\n\t * @memberof BaseValidator\n\t */\n\tmiddleware(broker) {\n\t\tconst self = this;\n\t\tconst paramName = this.opts.paramName;\n\n\t\treturn {\n\t\t\tname: \"Validator\",\n\t\t\tlocalAction: function validatorMiddleware(handler, action) {\n\t\t\t\t// Wrap a param validator\n\t\t\t\tif (action[paramName] && typeof action[paramName] === \"object\") {\n\t\t\t\t\tconst check = self.compile(action[paramName]);\n\t\t\t\t\treturn function validateContextParams(ctx) {\n\t\t\t\t\t\tlet res = check(ctx.params != null ? ctx.params : {});\n\t\t\t\t\t\tif (res === true)\n\t\t\t\t\t\t\treturn handler(ctx);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = res.map(data => Object.assign(data, { nodeID: ctx.nodeID, action: ctx.action.name }));\n\t\t\t\t\t\t\treturn broker.Promise.reject(new ValidationError(\"Parameters validation error!\", null, res));\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn handler;\n\t\t\t},\n\n\t\t\tlocalEvent: function validatorMiddleware(handler, event) {\n\t\t\t\t// Wrap a param validator\n\t\t\t\tif (event[paramName] && typeof event[paramName] === \"object\") {\n\t\t\t\t\tconst check = self.compile(event[paramName]);\n\t\t\t\t\treturn function validateContextParams(ctx) {\n\t\t\t\t\t\tlet res = check(ctx.params != null ? ctx.params : {});\n\t\t\t\t\t\tif (res === true)\n\t\t\t\t\t\t\treturn handler(ctx);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = res.map(data => Object.assign(data, { nodeID: ctx.nodeID, event: ctx.event.name }));\n\t\t\t\t\t\t\treturn broker.Promise.reject(new ValidationError(\"Parameters validation error!\", null, res));\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn handler;\n\t\t\t}\n\t\t};\n\t}\n}\n\n\nmodule.exports = BaseValidator;\n"],"names":["ValidationError","require$$0","[object Object]","opts","this","_","defaultsDeep","paramName","broker","Error","self","name","localAction","handler","action","check","compile","ctx","res","params","map","data","Object","assign","nodeID","Promise","reject","localEvent","event"],"mappings":"kDAQA,MAAMA,gBAAEA,GAAoBC,QAG5B,MAECC,YAAYC,GACXC,KAAKD,KAAOE,EAAEC,aAAaH,EAAM,CAChCI,UAAW,WAIbL,KAAKM,GACJJ,KAAKI,OAASA,EAQfN,UACC,MAAM,IAAIO,MAAM,mBASjBP,WACC,MAAM,IAAIO,MAAM,mBAUjBP,2BACC,MAAM,IAAIO,MAAM,mBAQjBP,WAAWM,GACV,MAAME,EAAON,KACPG,EAAYH,KAAKD,KAAKI,UAE5B,MAAO,CACNI,KAAM,YACNC,YAAa,SAA6BC,EAASC,GAElD,GAAIA,EAAOP,IAA2C,iBAAtBO,EAAOP,GAAyB,CAC/D,MAAMQ,EAAQL,EAAKM,QAAQF,EAAOP,IAClC,OAAO,SAA+BU,GACrC,IAAIC,EAAMH,EAAoB,MAAdE,EAAIE,OAAiBF,EAAIE,OAAS,IAClD,OAAY,IAARD,EACIL,EAAQI,IAEfC,EAAMA,EAAIE,KAAIC,GAAQC,OAAOC,OAAOF,EAAM,CAAEG,OAAQP,EAAIO,OAAQV,OAAQG,EAAIH,OAAOH,SAC5EH,EAAOiB,QAAQC,OAAO,IAAI1B,EAAgB,+BAAgC,KAAMkB,MAI1F,OAAOL,GAGRc,WAAY,SAA6Bd,EAASe,GAEjD,GAAIA,EAAMrB,IAA0C,iBAArBqB,EAAMrB,GAAyB,CAC7D,MAAMQ,EAAQL,EAAKM,QAAQY,EAAMrB,IACjC,OAAO,SAA+BU,GACrC,IAAIC,EAAMH,EAAoB,MAAdE,EAAIE,OAAiBF,EAAIE,OAAS,IAClD,OAAY,IAARD,EACIL,EAAQI,IAEfC,EAAMA,EAAIE,KAAIC,GAAQC,OAAOC,OAAOF,EAAM,CAAEG,OAAQP,EAAIO,OAAQI,MAAOX,EAAIW,MAAMjB,SAC1EH,EAAOiB,QAAQC,OAAO,IAAI1B,EAAgB,+BAAgC,KAAMkB,MAI1F,OAAOL"}