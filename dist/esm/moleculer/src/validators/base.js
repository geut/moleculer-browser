import r from"lodash";import e from"../errors.js";const{ValidationError:t}=e;var o=class{constructor(e){this.opts=r.defaultsDeep(e,{paramName:"params"})}init(r){this.broker=r}compile(){throw new Error("Abstract method")}validate(){throw new Error("Abstract method")}convertSchemaToMoleculer(){throw new Error("Abstract method")}middleware(r){const e=this,o=this.opts.paramName;return{name:"Validator",localAction:function(a,n){if(n[o]&&"object"==typeof n[o]){const i=e.compile(n[o]);return function(e){let o=i(null!=e.params?e.params:{});return!0===o?a(e):(o=o.map((r=>Object.assign(r,{nodeID:e.nodeID,action:e.action.name}))),r.Promise.reject(new t("Parameters validation error!",null,o)))}}return a},localEvent:function(a,n){if(n[o]&&"object"==typeof n[o]){const i=e.compile(n[o]);return function(e){let o=i(null!=e.params?e.params:{});return!0===o?a(e):(o=o.map((r=>Object.assign(r,{nodeID:e.nodeID,event:e.event.name}))),r.Promise.reject(new t("Parameters validation error!",null,o)))}}return a}}}};export default o;
//# sourceMappingURL=base.js.map
