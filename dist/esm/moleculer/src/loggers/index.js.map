{"version":3,"file":"index.js","sources":["../../../../../src/moleculer/src/loggers/index.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { isObject, isString } = require(\"../utils\");\nconst { BrokerOptionsError } = require(\"../errors\");\nconst Base = require(\"./base\");\n\nconst Loggers = {\n\tBase,\n\tFormatted: require(\"./formatted\"),\n\n\tBunyan: require(\"./bunyan\"),\n\tConsole: require(\"./console\"),\n\tDatadog: require(\"./datadog\"),\n\tDebug: require(\"./debug\"),\n\tFile: require(\"./file\"),\n\tLog4js: require(\"./log4js\"),\n\tPino: require(\"./pino\"),\n\tWinston: require(\"./winston\"),\n\n\tLEVELS: Base.LEVELS\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Loggers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Loggers[n];\n}\n\n/**\n * Resolve reporter by name\n *\n * @param {object|string} opt\n * @returns {Reporter}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Loggers.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet LoggerClass = getByName(opt);\n\t\tif (LoggerClass)\n\t\t\treturn new LoggerClass();\n\n\t} else if (isObject(opt)) {\n\t\tlet LoggerClass = getByName(opt.type);\n\t\tif (LoggerClass)\n\t\t\treturn new LoggerClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid logger configuration. Type: '${opt.type}'`, { type: opt.type });\n\t}\n\n\tthrow new BrokerOptionsError(`Invalid logger configuration: '${opt}'`, { type: opt });\n}\n\nfunction register(name, value) {\n\tLoggers[name] = value;\n}\n\nmodule.exports = Object.assign(Loggers, { resolve, register });\n\n"],"names":["isObject","isString","require$$0","BrokerOptionsError","require$$1","Loggers","Base","Formatted","require$$2","Bunyan","require$$3","Console","require$$4","Datadog","require$$5","Debug","require$$6","File","require$$7","Log4js","require$$8","Pino","require$$9","Winston","require$$10","LEVELS","getByName","name","n","Object","keys","find","toLowerCase","assign","resolve","opt","LoggerClass","type","options","register","value"],"mappings":"6KAQA,MAAMA,SAAEA,EAAQC,SAAEA,GAAaC,GACzBC,mBAAEA,GAAuBC,EAGzBC,EAAU,MACfC,EACAC,UAAWC,EAEXC,OAAQC,EACRC,QAASC,EACTC,QAASC,EACTC,MAAOC,EACPC,KAAMC,EACNC,OAAQC,EACRC,KAAMC,EACNC,QAASC,EAETC,OAAQnB,EAAKmB,QAGd,SAASC,EAAUC,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIC,EAAIC,OAAOC,KAAKzB,GAAS0B,MAAKH,GAAKA,EAAEI,eAAiBL,EAAKK,gBAC/D,OAAIJ,EACIvB,EAAQuB,QADhB,QAkCgBC,OAAOI,OAAO5B,EAAS,CAAE6B,QAvB1C,SAAiBC,GAChB,GAAIA,aAAe9B,EAAQC,KAC1B,OAAO6B,EACD,GAAIlC,EAASkC,GAAM,CACzB,IAAIC,EAAcV,EAAUS,GAC5B,GAAIC,EACH,OAAO,IAAIA,OAEN,GAAIpC,EAASmC,GAAM,CACzB,IAAIC,EAAcV,EAAUS,EAAIE,MAChC,GAAID,EACH,OAAO,IAAIA,EAAYD,EAAIG,SAE3B,MAAM,IAAInC,EAAmB,wCAAwCgC,EAAIE,QAAS,CAAEA,KAAMF,EAAIE,OAGhG,MAAM,IAAIlC,EAAmB,kCAAkCgC,KAAQ,CAAEE,KAAMF,KAO7BI,SAJnD,SAAkBZ,EAAMa,GACvBnC,EAAQsB,GAAQa"}