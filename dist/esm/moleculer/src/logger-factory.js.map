{"version":3,"file":"logger-factory.js","sources":["../../../../src/moleculer/src/logger-factory.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { isPlainObject, isString } = require(\"./utils\");\nconst Loggers = require(\"./loggers\");\n\nconst noop = () => {};\nconst cwd = process.cwd();\n\n/**\n * Log factory class.\n *\n * @class LoggerFactory\n */\nclass LoggerFactory {\n\n\t/**\n\t * Constructor of LoggerFactory\n\t */\n\tconstructor(broker) {\n\t\tthis.broker = broker;\n\t\tthis.appenders = [];\n\t\tthis.cache = new Map();\n\t}\n\n\t/**\n\t * Initialize module.\n\t */\n\tinit(opts) {\n\t\tthis.opts = opts;\n\n\t\tconst globalLogLevel = this.broker.options.logLevel || \"info\";\n\n\t\tif (opts === false || opts == null) {\n\t\t\t// No logger\n\t\t\tthis.appenders = [];\n\n\t\t} else if (opts === true || opts === console) {\n\t\t\t// Default console logger\n\t\t\tthis.appenders = [Loggers.resolve({\n\t\t\t\ttype: \"Console\",\n\t\t\t\toptions: {\n\t\t\t\t\tlevel: globalLogLevel\n\t\t\t\t}\n\t\t\t})];\n\n\t\t} else {\n\t\t\tif (!Array.isArray(opts)) {\n\t\t\t\topts = [opts];\n\t\t\t}\n\n\t\t\tthis.appenders = _.compact(opts).map(o => {\n\t\t\t\t// Built-in shorthand\n\t\t\t\tif (isString(o))\n\t\t\t\t\treturn Loggers.resolve({ type: o, options: { level: globalLogLevel } });\n\n\t\t\t\t// Build-in with options\n\t\t\t\tif (isPlainObject(o))\n\t\t\t\t\treturn Loggers.resolve(_.defaultsDeep({}, o, { options: { level: globalLogLevel } }));\n\n\t\t\t\t// Custom logger instance\n\t\t\t\treturn Loggers.resolve(o);\n\t\t\t});\n\t\t}\n\n\t\t// Initialize appenders\n\t\tthis.appenders.forEach(app => app.init(this));\n\t}\n\n\t/**\n\t * Stopping all appenders\n\t */\n\tstop() {\n\t\treturn this.broker.Promise.all(this.appenders.map(appender => appender.stop()));\n\t}\n\n\t/**\n\t * Get caller information from error stack trace.\n\t */\n\tgetCallerFromStack() {\n\t\tconst _prepareStackTrace = Error.prepareStackTrace;\n\t\tError.prepareStackTrace = (_, stack) => stack;\n\t\tconst stack = new Error().stack;\n\t\tError.prepareStackTrace = _prepareStackTrace;\n\n\t\tif (stack.length > 2) {\n\t\t\tconst site = stack[2];\n\t\t\treturn {\n\t\t\t\tfilename: site.getFileName().substring(cwd.length + 1),\n\t\t\t\tlineNumber: site.getLineNumber(),\n\t\t\t\tcolumnNumber: site.getColumnNumber(),\n\t\t\t\tmethodName: site.getMethodName(),\n\t\t\t\tfunctionName: site.getFunctionName(),\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Get a logger for a module (service, transporter, cacher, context...etc)\n\t *\n\t * @param {Object} bindings\n\t * @returns {ModuleLogger}\n\t *\n\t * @memberof ServiceBroker\n\t */\n\tgetLogger(bindings) {\n\t\tlet logger = this.cache.get(this.getBindingsKey(bindings));\n\t\tif (logger) return logger;\n\n\t\tlogger = {};\n\t\tconst broker = this.broker;\n\t\tconst appenders = this.appenders;\n\n\t\tconst logHandlers = _.compact(appenders.map(app => app.getLogHandler(bindings)));\n\n\t\tLoggers.LEVELS.forEach((type) => {\n\t\t\tif (logHandlers.length == 0)\n\t\t\t\treturn logger[type] = noop;\n\n\t\t\tlogger[type] = function(...args) {\n\t\t\t\tif (broker.middlewares && broker.middlewares.registeredHooks.newLogEntry)\n\t\t\t\t\tbroker.middlewares.callSyncHandlers(\"newLogEntry\", [type, args, bindings], {});\n\n\t\t\t\tif (logHandlers.length == 0) return;\n\n\t\t\t\tfor(let i = 0; i < logHandlers.length; i++)\n\t\t\t\t\tlogHandlers[i](type, args);\n\t\t\t};\n\t\t});\n\n\t\t/*logger.log = function(type, ...args) {\n\t\t\tif (broker.middlewares)\n\t\t\t\tbroker.middlewares.callSyncHandlers(\"newLogEntry\", [type, args, bindings], {});\n\n\t\t\tif (logHandlers.length == 0) return;\n\n\t\t\tlogHandlers.forEach(fn => fn(type, args));\n\t\t};*/\n\n\t\tlogger.appenders = appenders;\n\n\n\t\tthis.cache.set(this.getBindingsKey(bindings), logger);\n\n\t\treturn logger;\n\t}\n\n\t/**\n\t * Create a key from bindings for logger caching.\n\t *\n\t * @param {object} bindings\n\t * @returns {String}\n\t */\n\tgetBindingsKey(bindings) {\n\t\tif (!bindings) return \"\";\n\n\t\treturn [\"nodeID\", \"ns\", \"mod\"]\n\t\t\t.map(key => bindings[key])\n\t\t\t.join(\"|\");\n\t}\n\n}\n\nmodule.exports = LoggerFactory;\n"],"names":["isPlainObject","isString","require$$0","noop","cwd","process","[object Object]","broker","this","appenders","cache","Map","opts","globalLogLevel","options","logLevel","console","Loggers","resolve","type","level","Array","isArray","_","compact","map","o","defaultsDeep","forEach","app","init","Promise","all","appender","stop","_prepareStackTrace","Error","prepareStackTrace","stack","length","site","filename","getFileName","substring","lineNumber","getLineNumber","columnNumber","getColumnNumber","methodName","getMethodName","functionName","getFunctionName","bindings","logger","get","getBindingsKey","logHandlers","getLogHandler","LEVELS","args","middlewares","registeredHooks","newLogEntry","callSyncHandlers","i","set","key","join"],"mappings":"kHASA,MAAMA,cAAEA,EAAaC,SAAEA,GAAaC,EAG9BC,EAAO,OACPC,EAAMC,EAAQD,YAOpB,MAKCE,YAAYC,GACXC,KAAKD,OAASA,EACdC,KAAKC,UAAY,GACjBD,KAAKE,MAAQ,IAAIC,IAMlBL,KAAKM,GACJJ,KAAKI,KAAOA,EAEZ,MAAMC,EAAiBL,KAAKD,OAAOO,QAAQC,UAAY,QAE1C,IAATH,GAA0B,MAARA,EAErBJ,KAAKC,UAAY,IAEE,IAATG,GAAiBA,IAASI,QAEpCR,KAAKC,UAAY,CAACQ,EAAQC,QAAQ,CACjCC,KAAM,UACNL,QAAS,CACRM,MAAOP,OAKJQ,MAAMC,QAAQV,KAClBA,EAAO,CAACA,IAGTJ,KAAKC,UAAYc,EAAEC,QAAQZ,GAAMa,KAAIC,GAEhCzB,EAASyB,GACLT,EAAQC,QAAQ,CAAEC,KAAMO,EAAGZ,QAAS,CAAEM,MAAOP,KAGjDb,EAAc0B,GACVT,EAAQC,QAAQK,EAAEI,aAAa,GAAID,EAAG,CAAEZ,QAAS,CAAEM,MAAOP,MAG3DI,EAAQC,QAAQQ,MAKzBlB,KAAKC,UAAUmB,SAAQC,GAAOA,EAAIC,KAAKtB,QAMxCF,OACC,OAAOE,KAAKD,OAAOwB,QAAQC,IAAIxB,KAAKC,UAAUgB,KAAIQ,GAAYA,EAASC,UAMxE5B,qBACC,MAAM6B,EAAqBC,MAAMC,kBACjCD,MAAMC,kBAAoB,CAACd,EAAGe,IAAUA,EACxC,MAAMA,GAAQ,IAAIF,OAAQE,MAG1B,GAFAF,MAAMC,kBAAoBF,EAEtBG,EAAMC,OAAS,EAAG,CACrB,MAAMC,EAAOF,EAAM,GACnB,MAAO,CACNG,SAAUD,EAAKE,cAAcC,UAAUvC,EAAImC,OAAS,GACpDK,WAAYJ,EAAKK,gBACjBC,aAAcN,EAAKO,kBACnBC,WAAYR,EAAKS,gBACjBC,aAAcV,EAAKW,oBAatB7C,UAAU8C,GACT,IAAIC,EAAS7C,KAAKE,MAAM4C,IAAI9C,KAAK+C,eAAeH,IAChD,GAAIC,EAAQ,OAAOA,EAEnBA,EAAS,GACT,MAAM9C,EAASC,KAAKD,OACdE,EAAYD,KAAKC,UAEjB+C,EAAcjC,EAAEC,QAAQf,EAAUgB,KAAII,GAAOA,EAAI4B,cAAcL,MA+BrE,OA7BAnC,EAAQyC,OAAO9B,SAAST,IACvB,GAA0B,GAAtBqC,EAAYjB,OACf,OAAOc,EAAOlC,GAAQhB,EAEvBkD,EAAOlC,GAAQ,YAAYwC,GAI1B,GAHIpD,EAAOqD,aAAerD,EAAOqD,YAAYC,gBAAgBC,aAC5DvD,EAAOqD,YAAYG,iBAAiB,cAAe,CAAC5C,EAAMwC,EAAMP,GAAW,IAElD,GAAtBI,EAAYjB,OAEhB,IAAI,IAAIyB,EAAI,EAAGA,EAAIR,EAAYjB,OAAQyB,IACtCR,EAAYQ,GAAG7C,EAAMwC,OAaxBN,EAAO5C,UAAYA,EAGnBD,KAAKE,MAAMuD,IAAIzD,KAAK+C,eAAeH,GAAWC,GAEvCA,EASR/C,eAAe8C,GACd,OAAKA,EAEE,CAAC,SAAU,KAAM,OACtB3B,KAAIyC,GAAOd,EAASc,KACpBC,KAAK,KAJe"}