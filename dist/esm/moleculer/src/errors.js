import{createCommonjsModule as e}from"../../_virtual/_commonjsHelpers.js";import r from"es6-error";var s=e((function(e){class s extends r{constructor(e,r,s,o){super(e),this.code=r||500,this.type=s,this.data=o,this.retryable=!1}}class o extends s{constructor(e,r,s,o){super(e),this.code=r||500,this.type=s,this.data=o,this.retryable=!0}}class t extends s{constructor(e,r,s,o){super(e,r||400,s,o)}}e.exports={MoleculerError:s,MoleculerRetryableError:o,MoleculerServerError:class extends o{},MoleculerClientError:t,ServiceNotFoundError:class extends o{constructor(e={}){let r;e.nodeID&&e.action?r=`Service '${e.action}' is not found on '${e.nodeID}' node.`:e.action&&(r=`Service '${e.action}' is not found.`),e.service&&e.version?r=`Service '${e.version}.${e.service}' not found.`:e.service&&(r=`Service '${e.service}' not found.`),super(r,404,"SERVICE_NOT_FOUND",e)}},ServiceNotAvailableError:class extends o{constructor(e){let r;r=e.nodeID?`Service '${e.action}' is not available on '${e.nodeID}' node.`:`Service '${e.action}' is not available.`,super(r,404,"SERVICE_NOT_AVAILABLE",e)}},ValidationError:class extends t{constructor(e,r,s){super(e,422,r||"VALIDATION_ERROR",s)}},RequestTimeoutError:class extends o{constructor(e){super(`Request is timed out when call '${e.action}' action on '${e.nodeID}' node.`,504,"REQUEST_TIMEOUT",e)}},RequestSkippedError:class extends s{constructor(e){super(`Calling '${e.action}' is skipped because timeout reached on '${e.nodeID}' node.`,514,"REQUEST_SKIPPED",e),this.retryable=!1}},RequestRejectedError:class extends o{constructor(e){super(`Request is rejected when call '${e.action}' action on '${e.nodeID}' node.`,503,"REQUEST_REJECTED",e)}},QueueIsFullError:class extends o{constructor(e){super(`Queue is full. Request '${e.action}' action on '${e.nodeID}' node is rejected.`,429,"QUEUE_FULL",e)}},MaxCallLevelError:class extends s{constructor(e){super(`Request level is reached the limit (${e.level}) on '${e.nodeID}' node.`,500,"MAX_CALL_LEVEL",e),this.retryable=!1}},ServiceSchemaError:class extends s{constructor(e,r){super(e,500,"SERVICE_SCHEMA_ERROR",r)}},BrokerOptionsError:class extends s{constructor(e,r){super(e,500,"BROKER_OPTIONS_ERROR",r)}},GracefulStopTimeoutError:class extends s{constructor(e){e&&e.service?super(`Unable to stop '${e.service.name}' service gracefully.`,500,"GRACEFUL_STOP_TIMEOUT",e&&e.service?{name:e.service.name,version:e.service.version}:null):super("Unable to stop ServiceBroker gracefully.",500,"GRACEFUL_STOP_TIMEOUT")}},ProtocolVersionMismatchError:class extends s{constructor(e){super("Protocol version mismatch.",500,"PROTOCOL_VERSION_MISMATCH",e)}},InvalidPacketDataError:class extends s{constructor(e){super("Invalid packet data.",500,"INVALID_PACKET_DATA",e)}},BrokerDisconnectedError:class extends o{constructor(){super("The broker's transporter has disconnected. Please try again when a connection is reestablished.",502,"BAD_GATEWAY"),this.stack=""}},recreateError:function(r){const s=e.exports[r.name];if(s)switch(r.name){case"MoleculerError":case"MoleculerRetryableError":case"MoleculerServerError":case"MoleculerClientError":return new s(r.message,r.code,r.type,r.data);case"ValidationError":return new s(r.message,r.type,r.data);case"ServiceNotFoundError":case"ServiceNotAvailableError":case"RequestTimeoutError":case"RequestSkippedError":case"RequestRejectedError":case"QueueIsFullError":case"MaxCallLevelError":case"GracefulStopTimeoutError":case"ProtocolVersionMismatchError":case"InvalidPacketDataError":return new s(r.data);case"ServiceSchemaError":case"BrokerOptionsError":return new s(r.message,r.data)}}}}));export default s;
//# sourceMappingURL=errors.js.map
