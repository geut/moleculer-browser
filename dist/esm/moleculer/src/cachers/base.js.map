{"version":3,"file":"base.js","sources":["../../../../../src/moleculer/src/cachers/base.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2019 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst crypto\t\t= require(\"crypto\");\nconst { METRIC }\t= require(\"../metrics\");\nconst { isObject, isFunction }\t= require(\"../utils\");\n\n/**\n * Abstract cacher class\n *\n * @class Cacher\n */\nclass Cacher {\n\n\t/**\n\t * Creates an instance of Cacher.\n\t *\n\t * @param {object} opts\n\t *\n\t * @memberof Cacher\n\t */\n\tconstructor(opts) {\n\t\tthis.opts = _.defaultsDeep(opts, {\n\t\t\tttl: null,\n\t\t\tkeygen: null,\n\t\t\tmaxParamsLength: null\n\t\t});\n\t}\n\n\t/**\n\t * Initialize cacher\n\t *\n\t * @param {any} broker\n\t *\n\t * @memberof Cacher\n\t */\n\tinit(broker) {\n\t\tthis.broker = broker;\n\t\tthis.metrics = broker.metrics;\n\n\t\tif (this.broker) {\n\t\t\tthis.logger = broker.getLogger(\"cacher\");\n\n\t\t\tif (this.opts.prefix) {\n\t\t\t\tthis.prefix = this.opts.prefix + \"-\";\n\t\t\t} else {\n\t\t\t\tthis.prefix = \"MOL-\";\n\t\t\t\tif (this.broker.namespace)\n\t\t\t\t\tthis.prefix += this.broker.namespace + \"-\";\n\t\t\t}\n\n\t\t\tthis.registerMoleculerMetrics();\n\t\t}\n\t}\n\n\t/**\n\t * Register Moleculer Transit Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_GET_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_GET_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_FOUND_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_SET_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_SET_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_DEL_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_DEL_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_CLEAN_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_CLEAN_TIME, type: METRIC.TYPE_HISTOGRAM, quantiles: true, unit: METRIC.UNIT_MILLISECONDS });\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_CACHER_EXPIRED_TOTAL, type: METRIC.TYPE_COUNTER, rate: true });\n\t}\n\n\t/**\n\t * Close cacher\n\t *\n\t * @memberof Cacher\n\t */\n\tclose() {\n\t\t/* istanbul ignore next */\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Get a cached content by key\n\t *\n\t * @param {any} key\n\t *\n\t * @memberof Cacher\n\t */\n\tget(/*key*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Get a cached content and ttl by key\n\t *\n\t * @param {any} key\n\t *\n\t * @memberof Cacher\n\t */\n\tgetWithTTL(/*key*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Set a content by key to cache\n\t *\n\t * @param {any} key\n\t * @param {any} data\n\t * @param {Number?} ttl\n\t *\n\t * @memberof Cacher\n\t */\n\tset(/*key, data, ttl*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Delete a content by key from cache\n\t *\n\t * @param {string|Array<string>} key\n\t *\n\t * @memberof Cacher\n\t */\n\tdel(/*key*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\n\t/**\n\t * Clean cache. Remove every key by match\n\t * @param {string|Array<string>} match string. Default is \"**\"\n\t * @returns {Promise}\n\t *\n\t * @memberof Cacher\n\t */\n\tclean(/*match = \"**\"*/) {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented method!\");\n\t}\n\n\t/**\n\t * Get a value from params or meta by `key`.\n\t * If the key starts with `#` it reads from `meta`, otherwise from `params`.\n\t *\n\t * @param {String} key\n\t * @param {Object} params\n\t * @param {Object} meta\n\t * @returns {any}\n\t * @memberof Cacher\n\t */\n\tgetParamMetaValue(key, params, meta) {\n\t\tif (key.startsWith(\"#\") && meta != null)\n\t\t\treturn _.get(meta, key.slice(1));\n\t\telse if (params != null)\n\t\t\treturn _.get(params, key);\n\t}\n\n\t/**\n\t * Default cache key generator\n\t *\n\t * @param {String} actionName\n\t * @param {Object|null} params\n\t * @param {Object} meta\n\t * @param {Array|null} keys\n\t * @returns {String}\n\t * @memberof Cacher\n\t */\n\tdefaultKeygen(actionName, params, meta, keys) {\n\t\tif (params || meta) {\n\t\t\tconst keyPrefix = actionName + \":\";\n\t\t\tif (keys) {\n\t\t\t\tif (keys.length == 1) {\n\t\t\t\t\t// Fast solution for ['id'] key\n\t\t\t\t\tconst val = this.getParamMetaValue(keys[0], params, meta);\n\t\t\t\t\treturn keyPrefix + this._hashedKey(isObject(val) ? this._hashedKey(this._generateKeyFromObject(val)) : val);\n\t\t\t\t}\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\treturn keyPrefix + this._hashedKey(keys.reduce((a, key, i) => {\n\t\t\t\t\t\tconst val = this.getParamMetaValue(key, params, meta);\n\t\t\t\t\t\treturn a + (i ? \"|\" : \"\") + (isObject(val) || Array.isArray(val) ? this._hashedKey(this._generateKeyFromObject(val)) : val);\n\t\t\t\t\t}, \"\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn keyPrefix + this._hashedKey(this._generateKeyFromObject(params));\n\t\t\t}\n\t\t}\n\t\treturn actionName;\n\t}\n\n\t_hashedKey(key) {\n\t\tconst maxParamsLength = this.opts.maxParamsLength;\n\t\tif (!maxParamsLength || maxParamsLength < 44 || key.length <= maxParamsLength)\n\t\t\treturn key;\n\n\t\tconst prefixLength = maxParamsLength - 44;\n\n\t\tconst base64Hash = crypto.createHash(\"sha256\").update(key).digest(\"base64\");\n\t\tif (prefixLength < 1)\n\t\t\treturn base64Hash;\n\n\t\treturn key.substring(0, prefixLength) + base64Hash;\n\t}\n\n\t_generateKeyFromObject(obj) {\n\t\tif (Array.isArray(obj)) {\n\t\t\treturn obj.map(o => this._generateKeyFromObject(o)).join(\"|\");\n\t\t}\n\t\telse if (isObject(obj)) {\n\t\t\treturn Object.keys(obj).map(key => [key, this._generateKeyFromObject(obj[key])].join(\"|\")).join(\"|\");\n\t\t}\n\t\telse if (obj != null) {\n\t\t\treturn obj.toString();\n\t\t} else {\n\t\t\treturn \"null\";\n\t\t}\n\t}\n\n\t/**\n\t * Get a cache key by name and params.\n\t * Concatenate the name and the hashed params object\n\t *\n\t * @param {String} name\n\t * @param {Object} params\n\t * @param {Object} meta\n\t * @param {Array|null} keys\n\t * @returns {String}\n\t */\n\tgetCacheKey(actionName, params, meta, keys) {\n\t\tif (isFunction(this.opts.keygen))\n\t\t\treturn this.opts.keygen.call(this, actionName, params, meta, keys);\n\t\telse\n\t\t\treturn this.defaultKeygen(actionName, params, meta, keys);\n\t}\n\n\t/**\n\t * Register cacher as a middleware\n\t *\n\t * @memberof Cacher\n\t */\n\tmiddleware() {\n\t\treturn (handler, action) => {\n\t\t\tconst opts = _.defaultsDeep({}, isObject(action.cache) ? action.cache : { enabled: !!action.cache });\n\t\t\topts.lock = _.defaultsDeep({}, isObject(opts.lock) ? opts.lock : { enabled: !!opts.lock });\n\t\t\tif (opts.enabled !== false) {\n\t\t\t\tconst isEnabledFunction = isFunction(opts.enabled);\n\n\t\t\t\treturn function cacherMiddleware(ctx) {\n\t\t\t\t\tif (isEnabledFunction) {\n\t\t\t\t\t\tif (!opts.enabled.call(ctx.service, ctx)) {\n\t\t\t\t\t\t\t// Cache is disabled. Call the handler only.\n\t\t\t\t\t\t\treturn handler(ctx);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Disable caching with `ctx.meta.$cache = false`\n\t\t\t\t\tif (ctx.meta[\"$cache\"] === false)\n\t\t\t\t\t\treturn handler(ctx);\n\n\t\t\t\t\tconst cacheKey = this.getCacheKey(action.name, ctx.params, ctx.meta, opts.keys);\n\t\t\t\t\t// Using lock\n\t\t\t\t\tif(opts.lock.enabled !== false){\n\t\t\t\t\t\tlet cachePromise;\n\t\t\t\t\t\tif(opts.lock.staleTime && this.getWithTTL){ // If enable cache refresh\n\t\t\t\t\t\t\tcachePromise = this.getWithTTL(cacheKey).then(({ data, ttl }) => {\n\t\t\t\t\t\t\t\tif (data != null) {\n\t\t\t\t\t\t\t\t\tif(opts.lock.staleTime && ttl && ttl < opts.lock.staleTime){\n\t\t\t\t\t\t\t\t\t\t// Cache is stale, try to refresh it.\n\t\t\t\t\t\t\t\t\t\tthis.tryLock(cacheKey, opts.lock.ttl).then(unlock=>{\n\t\t\t\t\t\t\t\t\t\t\treturn handler(ctx).then(result => {\n\t\t\t\t\t\t\t\t\t\t\t\t// Save the result to the cache and realse the lock.\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.set(cacheKey, result, opts.ttl).then(()=>unlock());\n\t\t\t\t\t\t\t\t\t\t\t}).catch((/*err*/) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.del(cacheKey).then(()=>unlock());\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}).catch((/*err*/)=>{\n\t\t\t\t\t\t\t\t\t\t\t// The cache is refreshing on somewhere else.\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcachePromise = this.get(cacheKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn cachePromise.then(data=>{\n\t\t\t\t\t\t\tif (data != null) {\n\t\t\t\t\t\t\t\t// Found in the cache! Don't call handler, return with the content\n\t\t\t\t\t\t\t\tctx.cachedResult = true;\n\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Not found in the cache! Acquire a lock\n\t\t\t\t\t\t\treturn this.lock(cacheKey, opts.lock.ttl).then(unlock => {\n\t\t\t\t\t\t\t\treturn this.get(cacheKey).then(content => {\n\t\t\t\t\t\t\t\t\tif (content != null) {\n\t\t\t\t\t\t\t\t\t\t// Cache found. Realse the lock and return the value.\n\t\t\t\t\t\t\t\t\t\tctx.cachedResult = true;\n\t\t\t\t\t\t\t\t\t\treturn unlock().then(() => {\n\t\t\t\t\t\t\t\t\t\t\treturn content;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Call the handler\n\t\t\t\t\t\t\t\t\treturn handler(ctx).then(result => {\n\t\t\t\t\t\t\t\t\t\t// Save the result to the cache and realse the lock.\n\t\t\t\t\t\t\t\t\t\tthis.set(cacheKey, result, opts.ttl).then(()=>unlock());\n\t\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t\t}).catch(e => {\n\t\t\t\t\t\t\t\t\t\treturn unlock().then(() => {\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// Not using lock\n\t\t\t\t\treturn this.get(cacheKey).then(content => {\n\t\t\t\t\t\tif (content != null) {\n\t\t\t\t\t\t\t// Found in the cache! Don't call handler, return with the content\n\t\t\t\t\t\t\tctx.cachedResult = true;\n\t\t\t\t\t\t\treturn content;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Call the handler\n\t\t\t\t\t\treturn handler(ctx).then(result => {\n\t\t\t\t\t\t\t// Save the result to the cache\n\t\t\t\t\t\t\tthis.set(cacheKey, result, opts.ttl);\n\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}.bind(this);\n\t\t\t}\n\n\t\t\treturn handler;\n\t\t};\n\t}\n\n}\n\nmodule.exports = Cacher;\n"],"names":["METRIC","require$$0","isObject","isFunction","require$$1","[object Object]","opts","this","_","defaultsDeep","ttl","keygen","maxParamsLength","broker","metrics","logger","getLogger","prefix","namespace","registerMoleculerMetrics","register","name","MOLECULER_CACHER_GET_TOTAL","type","TYPE_COUNTER","rate","MOLECULER_CACHER_GET_TIME","TYPE_HISTOGRAM","quantiles","unit","UNIT_MILLISECONDS","MOLECULER_CACHER_FOUND_TOTAL","MOLECULER_CACHER_SET_TOTAL","MOLECULER_CACHER_SET_TIME","MOLECULER_CACHER_DEL_TOTAL","MOLECULER_CACHER_DEL_TIME","MOLECULER_CACHER_CLEAN_TOTAL","MOLECULER_CACHER_CLEAN_TIME","MOLECULER_CACHER_EXPIRED_TOTAL","Promise","resolve","Error","key","params","meta","startsWith","get","slice","actionName","keys","keyPrefix","_hashedKey","_generateKeyFromObject","length","val","getParamMetaValue","reduce","a","i","Array","isArray","prefixLength","base64Hash","crypto","createHash","update","digest","substring","obj","map","o","join","Object","toString","call","defaultKeygen","handler","action","cache","enabled","lock","isEnabledFunction","ctx","service","cacheKey","getCacheKey","cachePromise","staleTime","getWithTTL","then","data","tryLock","unlock","result","set","catch","del","cachedResult","content","e","reject","bind"],"mappings":"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"}