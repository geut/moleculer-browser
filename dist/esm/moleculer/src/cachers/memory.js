import{setInterval as e}from"timers-browserify";import t from"lodash";import r from"../utils.js";import s from"../metrics/index.js";import i from"./base.js";import o from"../lock.js";const{METRIC:c}=s;var h=class extends i{constructor(r){super(r),this.cache=new Map,this._lock=new o,this.timer=e((()=>{this.checkTTL()}),3e4),this.timer.unref(),this.clone=!0===this.opts.clone?t.cloneDeep:this.opts.clone}init(e){super.init(e),e.localBus.on("$transporter.connected",(()=>this.clean()))}close(){return clearInterval(this.timer),Promise.resolve()}get(e){this.logger.debug("GET "+e),this.metrics.increment(c.MOLECULER_CACHER_GET_TOTAL);const t=this.metrics.timer(c.MOLECULER_CACHER_GET_TIME);if(this.cache.has(e)){this.logger.debug("FOUND "+e),this.metrics.increment(c.MOLECULER_CACHER_FOUND_TOTAL);let r=this.cache.get(e);if(r.expire&&r.expire<Date.now())return this.logger.debug("EXPIRED "+e),this.metrics.increment(c.MOLECULER_CACHER_EXPIRED_TOTAL),this.cache.delete(e),t(),this.broker.Promise.resolve(null);const s=this.clone?this.clone(r.data):r.data;return t(),this.broker.Promise.resolve(s)}return t(),this.broker.Promise.resolve(null)}set(e,t,r){this.metrics.increment(c.MOLECULER_CACHER_SET_TOTAL);const s=this.metrics.timer(c.MOLECULER_CACHER_SET_TIME);return null==r&&(r=this.opts.ttl),this.cache.set(e,{data:t,expire:r?Date.now()+1e3*r:null}),s(),this.logger.debug("SET "+e),this.broker.Promise.resolve(t)}del(e){this.metrics.increment(c.MOLECULER_CACHER_DEL_TOTAL);const t=this.metrics.timer(c.MOLECULER_CACHER_DEL_TIME);return(e=Array.isArray(e)?e:[e]).forEach((e=>{this.cache.delete(e),this.logger.debug("REMOVE "+e)})),t(),this.broker.Promise.resolve()}clean(e="**"){this.metrics.increment(c.MOLECULER_CACHER_CLEAN_TOTAL);const t=this.metrics.timer(c.MOLECULER_CACHER_CLEAN_TIME),s=Array.isArray(e)?e:[e];return this.logger.debug("CLEAN "+s.join(", ")),this.cache.forEach(((e,t)=>{s.some((e=>r.match(t,e)))&&(this.logger.debug("REMOVE "+t),this.cache.delete(t))})),t(),this.broker.Promise.resolve()}getWithTTL(e){this.logger.debug("GET "+e);let t=null,r=null;if(this.cache.has(e)){this.logger.debug("FOUND "+e);let s=this.cache.get(e),i=Date.now();r=(s.expire-i)/1e3,r=r>0?r:null,this.opts.ttl&&(s.expire=i+1e3*this.opts.ttl),t=this.clone?this.clone(s.data):s.data}return this.broker.Promise.resolve({data:t,ttl:r})}lock(e,t){return this._lock.acquire(e,t).then((()=>()=>this._lock.release(e)))}tryLock(e,t){return this._lock.isLocked(e)?this.broker.Promise.reject(new Error("Locked.")):this._lock.acquire(e,t).then((()=>()=>this._lock.release(e)))}checkTTL(){let e=Date.now();this.cache.forEach(((t,r)=>{let s=this.cache.get(r);s.expire&&s.expire<e&&(this.logger.debug("EXPIRED "+r),this.metrics.increment(c.MOLECULER_CACHER_EXPIRED_TOTAL),this.cache.delete(r))}))}};export default h;
//# sourceMappingURL=memory.js.map
