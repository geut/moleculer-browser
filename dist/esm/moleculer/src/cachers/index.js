import r from"../errors.js";import e from"../utils.js";import t from"../../../no-impl.js";import o from"./base.js";import i from"./memory.js";import n from"./memory-lru.js";const{isObject:s,isString:m}=e,{BrokerOptionsError:f}=r,p={Base:o,Memory:i,MemoryLRU:n,Redis:t};function u(r){if(!r)return null;let e=Object.keys(p).find((e=>e.toLowerCase()==r.toLowerCase()));return e?p[e]:void 0}var a=Object.assign(p,{resolve:function(r){if(r instanceof p.Base)return r;if(!0===r)return new p.Memory;if(m(r)){let e=u(r);if(e)return new e;if(r.startsWith("redis://")&&(e=p.Redis),e)return new e(r);throw new f(`Invalid cacher type '${r}'.`,{type:r})}if(s(r)){let e=u(r.type||"Memory");if(e)return new e(r.options);throw new f(`Invalid cacher type '${r.type}'.`,{type:r.type})}return null},register:function(r,e){p[r]=e}});export default a;
//# sourceMappingURL=index.js.map
