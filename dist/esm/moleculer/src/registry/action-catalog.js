import t from"lodash";import e from"../strategies/index.js";import i from"./endpoint-list.js";import a from"./endpoint-action.js";var o=class{constructor(t,e,i){this.registry=t,this.broker=e,this.logger=t.logger,this.StrategyFactory=i,this.actions=new Map,this.EndpointFactory=a}add(t,a,o){let s=this.actions.get(o.name);if(!s){const t=o.strategy&&e.resolve(o.strategy)||this.StrategyFactory,a=o.strategyOptions?o.strategyOptions:this.registry.opts.strategyOptions;s=new i(this.registry,this.broker,o.name,null,this.EndpointFactory,t,a),this.actions.set(o.name,s)}return s.add(t,a,o),s}get(t){return this.actions.get(t)}isAvailable(t){const e=this.actions.get(t);return!!e&&e.hasAvailable()}removeByService(t){this.actions.forEach((e=>{e.removeByService(t)}))}remove(t,e){const i=this.actions.get(t);i&&i.removeByNodeID(e)}list({onlyLocal:e=!1,onlyAvailable:i=!1,skipInternal:a=!1,withEndpoints:o=!1}){let s=[];return this.actions.forEach(((n,r)=>{if(a&&/^\$/.test(r))return;if(e&&!n.hasLocal())return;if(i&&!n.hasAvailable())return;let c={name:r,count:n.count(),hasLocal:n.hasLocal(),available:n.hasAvailable()};if(c.count>0){const e=n.endpoints[0];e&&(c.action=t.omit(e.action,["handler","remoteHandler","service"]))}c.action&&!0===c.action.protected||(o&&c.count>0&&(c.endpoints=n.endpoints.map((t=>({nodeID:t.node.id,state:t.state,available:t.node.available})))),s.push(c))})),s}};export default o;
//# sourceMappingURL=action-catalog.js.map
