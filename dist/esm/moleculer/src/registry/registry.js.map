{"version":3,"file":"registry.js","sources":["../../../../../src/moleculer/src/registry/registry.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst utils = require(\"../utils\");\nconst Strategies = require(\"../strategies\");\nconst Discoverers = require(\"./discoverers\");\nconst NodeCatalog = require(\"./node-catalog\");\nconst ServiceCatalog = require(\"./service-catalog\");\nconst EventCatalog = require(\"./event-catalog\");\nconst ActionCatalog = require(\"./action-catalog\");\nconst ActionEndpoint = require(\"./endpoint-action\");\nconst { METRIC }\t\t= require(\"../metrics\");\n\n/**\n * Service Registry\n *\n * @class Registry\n */\nclass Registry {\n\n\t/**\n\t * Creates an instance of Registry.\n\t *\n\t * @param {any} broker\n\t * @memberof Registry\n\t */\n\tconstructor(broker) {\n\t\tthis.broker = broker;\n\t\tthis.metrics = broker.metrics;\n\t\tthis.logger = broker.getLogger(\"registry\");\n\n\t\tthis.opts = Object.assign({}, broker.options.registry);\n\n\t\tthis.StrategyFactory = Strategies.resolve(this.opts.strategy);\n\t\tthis.logger.info(`Strategy: ${this.StrategyFactory.name}`);\n\n\t\tthis.discoverer = Discoverers.resolve(this.opts.discoverer);\n\t\tthis.logger.info(`Discoverer: ${this.broker.getConstructorName(this.discoverer)}`);\n\n\t\tthis.nodes = new NodeCatalog(this, broker);\n\t\tthis.services = new ServiceCatalog(this, broker);\n\t\tthis.actions = new ActionCatalog(this, broker, this.StrategyFactory);\n\t\tthis.events = new EventCatalog(this, broker, this.StrategyFactory);\n\n\t\tthis.registerMoleculerMetrics();\n\t\tthis.updateMetrics();\n\t}\n\n\tinit(broker) {\n\t\tthis.discoverer.init(this);\n\t}\n\n\tstop() {\n\t\treturn this.discoverer.stop();\n\t}\n\n\t/**\n\t * Register Moleculer Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\tif (!this.broker.isMetricsEnabled()) return;\n\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_NODES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered nodes\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_NODES_ONLINE_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of online nodes\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_SERVICES_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered services\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"service\"], description: \"Number of service endpoints\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_ACTIONS_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered actions\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"action\"], description: \"Number of action endpoints\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_EVENTS_TOTAL, type: METRIC.TYPE_GAUGE, description: \"Number of registered events\" });\n\t\tthis.metrics.register({ name: METRIC.MOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL, type: METRIC.TYPE_GAUGE, labelNames: [\"event\"], description: \"Number of event endpoints\" });\n\t}\n\n\t/**\n\t * Update metrics.\n\t */\n\tupdateMetrics() {\n\t\tif (!this.broker.isMetricsEnabled()) return;\n\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_NODES_TOTAL, this.nodes.count());\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_NODES_ONLINE_TOTAL, this.nodes.onlineCount());\n\n\t\tconst services = this.services.list({ grouping: true, onlyLocal: false, onlyAvailable: false, skipInternal: false, withActions: false, withEvents: false });\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_SERVICES_TOTAL, services.length);\n\t\tservices.forEach(svc => this.metrics.set(METRIC.MOLECULER_REGISTRY_SERVICE_ENDPOINTS_TOTAL, svc.nodes ? svc.nodes.length : 0, { service: svc.fullName }));\n\n\t\tconst actions = this.actions.list({ withEndpoints: true });\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_ACTIONS_TOTAL, actions.length);\n\t\tactions.forEach(item => this.metrics.set(METRIC.MOLECULER_REGISTRY_ACTION_ENDPOINTS_TOTAL, item.endpoints ? item.endpoints.length : 0, { action: item.name }));\n\n\t\tconst events = this.events.list({ withEndpoints: true });\n\t\tthis.metrics.set(METRIC.MOLECULER_REGISTRY_EVENTS_TOTAL, events.length);\n\t\tevents.forEach(item => this.metrics.set(METRIC.MOLECULER_REGISTRY_EVENT_ENDPOINTS_TOTAL, item.endpoints ? item.endpoints.length : 0, { event: item.name }));\n\t}\n\n\t/**\n\t * Register local service\n\t *\n\t * @param {Service} svc\n\t * @memberof Registry\n\t */\n\tregisterLocalService(svc) {\n\t\tif (!this.services.has(svc.fullName, this.broker.nodeID)) {\n\t\t\tconst service = this.services.add(this.nodes.localNode, svc, true);\n\n\t\t\tif (svc.actions)\n\t\t\t\tthis.registerActions(this.nodes.localNode, service, svc.actions);\n\n\t\t\tif (svc.events)\n\t\t\t\tthis.registerEvents(this.nodes.localNode, service, svc.events);\n\n\t\t\tthis.nodes.localNode.services.push(service);\n\n\t\t\tthis.regenerateLocalRawInfo(this.broker.started);\n\n\t\t\tthis.logger.info(`'${svc.name}' service is registered.`);\n\n\t\t\tthis.broker.servicesChanged(true);\n\t\t\tthis.updateMetrics();\n\t\t}\n\t}\n\n\t/**\n\t * Register remote services\n\t *\n\t * @param {Nodeany} node\n\t * @param {Array} serviceList\n\t * @memberof Registry\n\t */\n\tregisterServices(node, serviceList) {\n\t\tserviceList.forEach(svc => {\n\t\t\tif (!svc.fullName)\n\t\t\t\tsvc.fullName = this.broker.ServiceFactory.getVersionedFullName(svc.name, svc.version);\n\n\t\t\tlet prevActions, prevEvents;\n\t\t\tlet service = this.services.get(svc.fullName, node.id);\n\t\t\tif (!service) {\n\t\t\t\tservice = this.services.add(node, svc, false);\n\t\t\t} else {\n\t\t\t\tprevActions = Object.assign({}, service.actions);\n\t\t\t\tprevEvents = Object.assign({}, service.events);\n\t\t\t\tservice.update(svc);\n\t\t\t}\n\n\t\t\t//Register actions\n\t\t\tif (svc.actions) {\n\t\t\t\tthis.registerActions(node, service, svc.actions);\n\t\t\t}\n\n\t\t\t// remove old actions which is not exist\n\t\t\tif (prevActions) {\n\t\t\t\t_.forIn(prevActions, (action, name) => {\n\t\t\t\t\tif (!svc.actions || !svc.actions[name]) {\n\t\t\t\t\t\tthis.unregisterAction(node, name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Register events\n\t\t\tif (svc.events) {\n\t\t\t\tthis.registerEvents(node, service, svc.events);\n\t\t\t}\n\n\t\t\t// remove old events which is not exist\n\t\t\tif (prevEvents) {\n\t\t\t\t_.forIn(prevEvents, (event, name) => {\n\t\t\t\t\tif (!svc.events || !svc.events[name]) {\n\t\t\t\t\t\tthis.unregisterEvent(node, name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// remove old services which is not exist in new serviceList\n\t\t// Please note! At first, copy the array because you can't remove items inside forEach\n\t\tconst prevServices = Array.from(this.services.services);\n\t\tprevServices.forEach(service => {\n\t\t\tif (service.node != node) return;\n\n\t\t\tlet exist = false;\n\t\t\tserviceList.forEach(svc => {\n\t\t\t\tif (service.equals(svc.fullName))\n\t\t\t\t\texist = true;\n\t\t\t});\n\n\t\t\t// This service is removed on remote node!\n\t\t\tif (!exist) {\n\t\t\t\tthis.unregisterService(service.fullName, node.id);\n\t\t\t}\n\t\t});\n\n\t\tthis.broker.servicesChanged(false);\n\t\tthis.updateMetrics();\n\t}\n\n\t/**\n\t * Check the action visiblity.\n\t *\n\t * \tAvailable values:\n\t * \t\t- \"published\" or `null`: public action and can be published via API Gateway\n\t * \t\t- \"public\": public action, can be called remotely but not published via API GW\n\t * \t\t- \"protected\": can be called from local services\n\t * \t\t- \"private\": can be called from internally via `this.actions.xy()` inside Service\n\t *\n\t * @param {*} action\n\t * @param {*} node\n\t * @returns\n\t * @memberof Registry\n\t */\n\tcheckActionVisibility(action, node) {\n\t\tif (action.visibility == null || action.visibility == \"published\" || action.visibility == \"public\")\n\t\t\treturn true;\n\n\t\tif (action.visibility == \"protected\" && node.local)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Register service actions\n\t *\n\t * @param {Node} node\n\t * @param {Service} service\n\t * @param {Object} actions\n\t * @memberof Registry\n\t */\n\tregisterActions(node, service, actions) {\n\t\t_.forIn(actions, action => {\n\n\t\t\tif (!this.checkActionVisibility(action, node))\n\t\t\t\treturn;\n\n\t\t\tif (node.local) {\n\t\t\t\taction.handler = this.broker.middlewares.wrapHandler(\"localAction\", action.handler, action);\n\t\t\t} else if (this.broker.transit) {\n\t\t\t\taction.handler = this.broker.middlewares.wrapHandler(\"remoteAction\", this.broker.transit.request.bind(this.broker.transit), { ...action, service });\n\t\t\t}\n\t\t\tif (this.broker.options.disableBalancer && this.broker.transit)\n\t\t\t\taction.remoteHandler = this.broker.middlewares.wrapHandler(\"remoteAction\", this.broker.transit.request.bind(this.broker.transit), { ...action, service });\n\n\t\t\tthis.actions.add(node, service, action);\n\t\t\tservice.addAction(action);\n\t\t});\n\t}\n\n\t/**\n\t * Create a local Endpoint for private actions\n\t *\n\t * @param {Action} action\n\t * @returns {ActionEndpoint}\n\t * @memberof Registry\n\t */\n\tcreatePrivateActionEndpoint(action) {\n\t\treturn new ActionEndpoint(this, this.broker, this.nodes.localNode, action.service, action);\n\t}\n\n\t/**\n\t * Check the service is exist\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns {Boolean}\n\t * @memberof Registry\n\t */\n\thasService(fullName, nodeID) {\n\t\treturn this.services.has(fullName, nodeID);\n\t}\n\n\t/**\n\t * Get endpoint list of action by name\n\t *\n\t * @param {String} actionName\n\t * @returns {EndpointList}\n\t * @memberof Registry\n\t */\n\tgetActionEndpoints(actionName) {\n\t\treturn this.actions.get(actionName);\n\t}\n\n\t/**\n\t * Get an endpoint of action on a specified node\n\t *\n\t * @param {String} actionName\n\t * @param {String} nodeID\n\t * @returns {Endpoint}\n\t * @memberof Registry\n\t */\n\tgetActionEndpointByNodeId(actionName, nodeID) {\n\t\tconst list = this.actions.get(actionName);\n\t\tif (list)\n\t\t\treturn list.getEndpointByNodeID(nodeID);\n\t}\n\n\t/**\n\t * Unregister service\n\t *\n\t * @param {String} fullName\n\t * @param {String?} nodeID\n\t * @memberof Registry\n\t */\n\tunregisterService(fullName, nodeID) {\n\t\tthis.services.remove(fullName, nodeID || this.broker.nodeID);\n\n\t\tif (!nodeID || nodeID == this.broker.nodeID) {\n\t\t\tthis.regenerateLocalRawInfo(true);\n\t\t}\n\t}\n\n\t/**\n\t * Unregister all services by nodeID\n\t *\n\t * @param {String} nodeID\n\t * @memberof Registry\n\t */\n\tunregisterServicesByNode(nodeID) {\n\t\tthis.services.removeAllByNodeID(nodeID);\n\t}\n\n\t/**\n\t * Unregister an action by node & name\n\t *\n\t * @param {Node} node\n\t * @param {String} actionName\n\t * @memberof Registry\n\t */\n\tunregisterAction(node, actionName) {\n\t\tthis.actions.remove(actionName, node.id);\n\t}\n\n\t/**\n\t * Register service events\n\t *\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {Object} events\n\t * @memberof Registry\n\t */\n\tregisterEvents(node, service, events) {\n\t\t_.forIn(events, event => {\n\n\t\t\tif (node.local)\n\t\t\t\tevent.handler = this.broker.middlewares.wrapHandler(\"localEvent\", event.handler, event);\n\n\t\t\tthis.events.add(node, service, event);\n\t\t\tservice.addEvent(event);\n\t\t});\n\t}\n\n\t/**\n\t * Unregister event by name & node\n\t *\n\t * @param {Node} node\n\t * @param {String} eventName\n\t * @memberof Registry\n\t */\n\tunregisterEvent(node, eventName) {\n\t\tthis.events.remove(eventName, node.id);\n\t}\n\n\t/**\n\t * Generate local raw info for INFO packet\n\t *\n\t * @memberof Registry\n\t */\n\tregenerateLocalRawInfo(incSeq) {\n\t\tlet node = this.nodes.localNode;\n\t\tif (incSeq)\n\t\t\tnode.seq++;\n\n\t\tconst rawInfo = _.pick(node, [\"ipList\", \"hostname\", \"instanceID\", \"client\", \"config\", \"port\", \"seq\", \"metadata\"]);\n\t\tif (this.broker.started)\n\t\t\trawInfo.services = this.services.getLocalNodeServices();\n\t\telse\n\t\t\trawInfo.services = [];\n\n\t\t// Make to be safety\n\t\tnode.rawInfo = utils.safetyObject(rawInfo, this.broker.options);\n\n\t\treturn node.rawInfo;\n\t}\n\n\t/**\n\t * Generate local node info for INFO packets\n\t *\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetLocalNodeInfo(force) {\n\t\tif (force || !this.nodes.localNode.rawInfo)\n\t\t\treturn this.regenerateLocalRawInfo();\n\n\t\treturn this.nodes.localNode.rawInfo;\n\t}\n\n\t/**\n\t * Generate node info for INFO packets\n\t *\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetNodeInfo(nodeID) {\n\t\tconst node = this.nodes.get(nodeID);\n\t\tif (!node)\n\t\t\treturn null;\n\n\t\tif (node.local)\n\t\t\treturn this.getLocalNodeInfo();\n\n\t\treturn node.rawInfo;\n\t}\n\n\t/**\n\t * Process an incoming node INFO packet\n\t *\n\t * @param {any} payload\n\t * @returns\n\t * @memberof Registry\n\t */\n\tprocessNodeInfo(payload) {\n\t\treturn this.nodes.processNodeInfo(payload);\n\t}\n\n\t/**\n\t * Get list of registered nodes\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetNodeList(opts) {\n\t\treturn this.nodes.list(opts);\n\t}\n\n\t/**\n\t * Get list of registered services\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetServiceList(opts) {\n\t\treturn this.services.list(opts);\n\t}\n\n\t/**\n\t * Get list of registered actions\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetActionList(opts) {\n\t\treturn this.actions.list(opts);\n\t}\n\n\t/**\n\t * Get list of registered events\n\t *\n\t * @param {object} opts\n\t * @returns\n\t * @memberof Registry\n\t */\n\tgetEventList(opts) {\n\t\treturn this.events.list(opts);\n\t}\n\n\t/**\n\t * Get a raw info list from nodes\n\t *\n\t * @returns {Array<Object>}\n\t * @memberof Registry\n\t */\n\tgetNodeRawList() {\n\t\treturn this.nodes.toArray().map(node => node.rawInfo);\n\t}\n}\n\nmodule.exports = Registry;\n"],"names":["require$$0","Strategies","Discoverers","NodeCatalog","ServiceCatalog","ActionCatalog","EventCatalog","ActionEndpoint","utils"],"mappings":"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"}