{"version":3,"file":"action-catalog.js","sources":["../../../../../src/moleculer/src/registry/action-catalog.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst Strategies = require(\"../strategies\");\nconst EndpointList = require(\"./endpoint-list\");\nconst ActionEndpoint = require(\"./endpoint-action\");\n\n/**\n * Catalog class to store service actions\n *\n * @class ActionCatalog\n */\nclass ActionCatalog {\n\n\t/**\n\t * Creates an instance of ActionCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {Strategy} StrategyFactory\n\t * @memberof ActionCatalog\n\t */\n\tconstructor(registry, broker, StrategyFactory) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\t\tthis.StrategyFactory = StrategyFactory;\n\n\t\tthis.actions = new Map();\n\n\t\tthis.EndpointFactory = ActionEndpoint;\n\t}\n\n\t/**\n\t * Add an action\n\t *\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {Action} action\n\t * @memberof ActionCatalog\n\t */\n\tadd(node, service, action) {\n\t\tlet list = this.actions.get(action.name);\n\t\tif (!list) {\n\t\t\tconst strategyFactory = action.strategy ? (Strategies.resolve(action.strategy) || this.StrategyFactory) : this.StrategyFactory;\n\t\t\tconst strategyOptions = action.strategyOptions ? action.strategyOptions : this.registry.opts.strategyOptions;\n\t\t\t// Create a new EndpointList\n\t\t\tlist = new EndpointList(this.registry, this.broker, action.name, null, this.EndpointFactory, strategyFactory, strategyOptions);\n\t\t\tthis.actions.set(action.name, list);\n\t\t}\n\n\t\tlist.add(node, service, action);\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * Get action by name\n\t *\n\t * @param {String} actionName\n\t * @returns\n\t * @memberof ActionCatalog\n\t */\n\tget(actionName) {\n\t\treturn this.actions.get(actionName);\n\t}\n\n\t/**\n\t * Check the action is available (there is live endpoint)\n\t *\n\t * @param {String} actionName\n\t * @returns {Boolean}\n\t * @memberof ActionCatalog\n\t */\n\tisAvailable(actionName) {\n\t\tconst list = this.actions.get(actionName);\n\t\tif (list)\n\t\t\treturn list.hasAvailable();\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Remove all actions by service\n\t *\n\t * @param {ServiceItem} service\n\t * @memberof ActionCatalog\n\t */\n\tremoveByService(service) {\n\t\tthis.actions.forEach(list => {\n\t\t\tlist.removeByService(service);\n\t\t});\n\t}\n\n\t/**\n\t * Remove action by name & nodeID\n\t *\n\t * @param {String} actionName\n\t * @param {String} nodeID\n\t * @memberof ActionCatalog\n\t */\n\tremove(actionName, nodeID) {\n\t\tconst list = this.actions.get(actionName);\n\t\tif (list)\n\t\t\tlist.removeByNodeID(nodeID);\n\t}\n\n\t/**\n\t * Get a filtered list of actions\n\t *\n\t * @param {Object} {onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false}\n\t * @returns {Array}\n\t *\n\t * @memberof ActionCatalog\n\t */\n\tlist({ onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false }) {\n\t\tlet res = [];\n\n\t\tthis.actions.forEach((list, key) => {\n\t\t\tif (skipInternal && /^\\$/.test(key))\n\t\t\t\treturn;\n\n\t\t\tif (onlyLocal && !list.hasLocal())\n\t\t\t\treturn;\n\n\t\t\tif (onlyAvailable && !list.hasAvailable())\n\t\t\t\treturn;\n\n\t\t\tlet item = {\n\t\t\t\tname: key,\n\t\t\t\tcount: list.count(),\n\t\t\t\thasLocal: list.hasLocal(),\n\t\t\t\tavailable: list.hasAvailable()\n\t\t\t};\n\n\t\t\tif (item.count > 0) {\n\t\t\t\tconst ep = list.endpoints[0];\n\t\t\t\tif (ep)\n\t\t\t\t\titem.action = _.omit(ep.action, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t}\n\t\t\tif (item.action && item.action.protected === true) return;\n\n\t\t\tif (withEndpoints) {\n\t\t\t\tif (item.count > 0) {\n\t\t\t\t\titem.endpoints = list.endpoints.map(ep => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnodeID: ep.node.id,\n\t\t\t\t\t\t\tstate: ep.state,\n\t\t\t\t\t\t\tavailable: ep.node.available,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tres.push(item);\n\t\t});\n\n\t\treturn res;\n\t}\n}\n\nmodule.exports = ActionCatalog;\n"],"names":["[object Object]","registry","broker","StrategyFactory","this","logger","actions","Map","EndpointFactory","ActionEndpoint","node","service","action","list","get","name","strategyFactory","strategy","Strategies","resolve","strategyOptions","opts","EndpointList","set","add","actionName","hasAvailable","forEach","removeByService","nodeID","removeByNodeID","onlyLocal","onlyAvailable","skipInternal","withEndpoints","res","key","test","hasLocal","item","count","available","ep","endpoints","_","omit","protected","map","id","state","push"],"mappings":"wIAkBA,MAUCA,YAAYC,EAAUC,EAAQC,GAC7BC,KAAKH,SAAWA,EAChBG,KAAKF,OAASA,EACdE,KAAKC,OAASJ,EAASI,OACvBD,KAAKD,gBAAkBA,EAEvBC,KAAKE,QAAU,IAAIC,IAEnBH,KAAKI,gBAAkBC,EAWxBT,IAAIU,EAAMC,EAASC,GAClB,IAAIC,EAAOT,KAAKE,QAAQQ,IAAIF,EAAOG,MACnC,IAAKF,EAAM,CACV,MAAMG,EAAkBJ,EAAOK,UAAYC,EAAWC,QAAQP,EAAOK,WAAqCb,KAAKD,gBACzGiB,EAAkBR,EAAOQ,gBAAkBR,EAAOQ,gBAAkBhB,KAAKH,SAASoB,KAAKD,gBAE7FP,EAAO,IAAIS,EAAalB,KAAKH,SAAUG,KAAKF,OAAQU,EAAOG,KAAM,KAAMX,KAAKI,gBAAiBQ,EAAiBI,GAC9GhB,KAAKE,QAAQiB,IAAIX,EAAOG,KAAMF,GAK/B,OAFAA,EAAKW,IAAId,EAAMC,EAASC,GAEjBC,EAURb,IAAIyB,GACH,OAAOrB,KAAKE,QAAQQ,IAAIW,GAUzBzB,YAAYyB,GACX,MAAMZ,EAAOT,KAAKE,QAAQQ,IAAIW,GAC9B,QAAIZ,GACIA,EAAKa,eAWd1B,gBAAgBW,GACfP,KAAKE,QAAQqB,SAAQd,IACpBA,EAAKe,gBAAgBjB,MAWvBX,OAAOyB,EAAYI,GAClB,MAAMhB,EAAOT,KAAKE,QAAQQ,IAAIW,GAC1BZ,GACHA,EAAKiB,eAAeD,GAWtB7B,MAAK+B,UAAEA,GAAY,EAAKC,cAAEA,GAAgB,EAAKC,aAAEA,GAAe,EAAKC,cAAEA,GAAgB,IACtF,IAAIC,EAAM,GAyCV,OAvCA/B,KAAKE,QAAQqB,SAAQ,CAACd,EAAMuB,KAC3B,GAAIH,GAAgB,MAAMI,KAAKD,GAC9B,OAED,GAAIL,IAAclB,EAAKyB,WACtB,OAED,GAAIN,IAAkBnB,EAAKa,eAC1B,OAED,IAAIa,EAAO,CACVxB,KAAMqB,EACNI,MAAO3B,EAAK2B,QACZF,SAAUzB,EAAKyB,WACfG,UAAW5B,EAAKa,gBAGjB,GAAIa,EAAKC,MAAQ,EAAG,CACnB,MAAME,EAAK7B,EAAK8B,UAAU,GACtBD,IACHH,EAAK3B,OAASgC,EAAEC,KAAKH,EAAG9B,OAAQ,CAAC,UAAW,gBAAiB,aAE3D2B,EAAK3B,SAAoC,IAA1B2B,EAAK3B,OAAOkC,YAE3BZ,GACCK,EAAKC,MAAQ,IAChBD,EAAKI,UAAY9B,EAAK8B,UAAUI,KAAIL,IAC5B,CACNb,OAAQa,EAAGhC,KAAKsC,GAChBC,MAAOP,EAAGO,MACVR,UAAWC,EAAGhC,KAAK+B,eAMvBN,EAAIe,KAAKX,OAGHJ"}