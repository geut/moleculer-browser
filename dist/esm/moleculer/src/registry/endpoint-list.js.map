{"version":3,"file":"endpoint-list.js","sources":["../../../../../src/moleculer/src/registry/endpoint-list.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst { MoleculerServerError } = require(\"../errors\");\n\n/**\n * Endpoint list class\n *\n * @class EndpointList\n */\nclass EndpointList {\n\n\t/**\n\t * Creates an instance of EndpointList.\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {String} name\n\t * @param {String} group\n\t * @param {EndPointClass} EndPointFactory\n\t * @param {StrategyClass} StrategyFactory\n\t * @param {Object?} strategyOptions\n\t * @memberof EndpointList\n\t */\n\tconstructor(registry, broker, name, group, EndPointFactory, StrategyFactory, strategyOptions) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\t\tthis.strategy = new StrategyFactory(registry, broker, strategyOptions);\n\t\tthis.name = name;\n\t\tthis.group = group;\n\t\tthis.internal = name.startsWith(\"$\");\n\n\t\tthis.EndPointFactory = EndPointFactory;\n\n\t\tthis.endpoints = [];\n\n\t\tthis.localEndpoints = [];\n\t}\n\n\t/**\n\t * Add a new endpoint\n\t *\n\t * @param {Node} node\n\t * @param {Service} service\n\t * @param {any} data\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tadd(node, service, data) {\n\t\tconst found = this.endpoints.find(ep => ep.node == node && ep.service.name == service.name);\n\t\tif (found) {\n\t\t\tfound.update(data);\n\t\t\treturn found;\n\t\t}\n\n\t\tconst ep = new this.EndPointFactory(this.registry, this.broker, node, service, data);\n\t\tthis.endpoints.push(ep);\n\n\t\tthis.setLocalEndpoints();\n\n\t\treturn ep;\n\t}\n\n\t/**\n\t * Get first endpoint\n\t *\n\t * @returns {Endpoint}\n\t * @memberof EndpointList\n\t */\n\tgetFirst() {\n\t\tif (this.endpoints.length > 0)\n\t\t\treturn this.endpoints[0];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Select next endpoint with balancer strategy\n\t *\n\t * @param {Array<Endpoint>} list\n\t * @param {Context} ctx\n\t * @returns {Endpoint}\n\t * @memberof EndpointList\n\t */\n\tselect(list, ctx) {\n\t\tconst ret = this.strategy.select(list, ctx);\n\t\tif (!ret) {\n\t\t\t/* istanbul ignore next */\n\t\t\tthrow new MoleculerServerError(\"Strategy returned an invalid endpoint.\", 500, \"INVALID_ENDPOINT\", { strategy: typeof(this.strategy) });\n\t\t}\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Get next endpoint\n\t *\n\t * @param {Context} ctx\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tnext(ctx) {\n\t\t// No items\n\t\tif (this.endpoints.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// If internal (service), return the local always\n\t\tif (this.internal && this.hasLocal()) {\n\t\t\treturn this.nextLocal();\n\t\t}\n\n\t\t// Only 1 item\n\t\tif (this.endpoints.length === 1) {\n\t\t\t// No need to select a node, return the only one\n\t\t\tconst item = this.endpoints[0];\n\t\t\tif (item.isAvailable)\n\t\t\t\treturn item;\n\n\t\t\treturn null;\n\t\t}\n\n\t\t// Search local item\n\t\tif (this.registry.opts.preferLocal === true && this.hasLocal()) {\n\t\t\tconst ep = this.nextLocal(ctx);\n\t\t\tif (ep && ep.isAvailable)\n\t\t\t\treturn ep;\n\t\t}\n\n\t\tconst epList = this.endpoints.filter(ep => ep.isAvailable);\n\t\tif (epList.length == 0)\n\t\t\treturn null;\n\n\t\treturn this.select(epList, ctx);\n\t}\n\n\t/**\n\t * Get next local endpoint\n\t *\n\t * @param {Context} ctx\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tnextLocal(ctx) {\n\t\t// No items\n\t\tif (this.localEndpoints.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Only 1 item\n\t\tif (this.localEndpoints.length === 1) {\n\t\t\t// No need to select a node, return the only one\n\t\t\tconst item = this.localEndpoints[0];\n\t\t\tif (item.isAvailable)\n\t\t\t\treturn item;\n\n\t\t\treturn null;\n\t\t}\n\n\t\tconst epList = this.localEndpoints.filter(ep => ep.isAvailable);\n\t\tif (epList.length == 0)\n\t\t\treturn null;\n\n\t\treturn this.select(epList, ctx);\n\t}\n\n\t/**\n\t * Check there is available endpoint\n\t *\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\thasAvailable() {\n\t\treturn this.endpoints.find(ep => ep.isAvailable) != null;\n\t}\n\n\t/**\n\t * Check there is local endpoint\n\t *\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\thasLocal() {\n\t\treturn this.localEndpoints.length > 0;\n\t}\n\n\t/**\n\t * Set local endpoint\n\t *\n\t * @memberof EndpointList\n\t */\n\tsetLocalEndpoints() {\n\t\tthis.localEndpoints = this.endpoints.filter(ep => ep.local);\n\t}\n\n\t/**\n\t * Get count of endpoints\n\t *\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tcount() {\n\t\treturn this.endpoints.length;\n\t}\n\n\t/**\n\t * Get endpoint on a specified node\n\t *\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\tgetEndpointByNodeID(nodeID) {\n\t\tconst ep = this.endpoints.find(ep => ep.id == nodeID);\n\t\tif (ep && ep.isAvailable)\n\t\t\treturn ep;\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Check nodeID in the endpoint list\n\t *\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof EndpointList\n\t */\n\thasNodeID(nodeID) {\n\t\treturn this.endpoints.find(ep => ep.id == nodeID) != null;\n\t}\n\n\t/**\n\t * Remove all endpoints by service\n\t *\n\t * @param {ServiceItem} service\n\t * @memberof EndpointList\n\t */\n\tremoveByService(service) {\n\t\t_.remove(this.endpoints, ep => {\n\t\t\tif (ep.service == service) {\n\t\t\t\tep.destroy();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tthis.setLocalEndpoints();\n\t}\n\n\t/**\n\t * Remove endpoints by node ID\n\t *\n\t * @param {String} nodeID\n\t * @memberof EndpointList\n\t */\n\tremoveByNodeID(nodeID) {\n\t\t_.remove(this.endpoints, ep => {\n\t\t\tif (ep.id == nodeID) {\n\t\t\t\tep.destroy();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tthis.setLocalEndpoints();\n\t}\n}\n\nmodule.exports = EndpointList;\n"],"names":["require$$0"],"mappings":"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"}