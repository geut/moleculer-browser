{"version":3,"file":"service-catalog.js","sources":["../../../../../src/moleculer/src/registry/service-catalog.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\nconst ServiceItem = require(\"./service-item\");\nconst { removeFromArray } = require(\"../utils\");\n\n/**\n * Catalog for services\n *\n * @class ServiceCatalog\n */\nclass ServiceCatalog {\n\n\t/**\n\t * Creates an instance of ServiceCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @memberof ServiceCatalog\n\t */\n\tconstructor(registry, broker) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\n\t\tthis.services = [];\n\t}\n\n\t/**\n\t * Add a new service\n\t *\n\t * @param {Node} node\n\t * @param {Object} service\n\t * @param {Boolean} local\n\t *\n\t * @returns {ServiceItem}\n\t *\n\t * @memberof ServiceCatalog\n\t */\n\tadd(node, service, local) {\n\t\tconst item = new ServiceItem(node, service, local);\n\t\tthis.services.push(item);\n\t\treturn item;\n\t}\n\n\t/**\n\t * Check the service is exist\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof ServiceCatalog\n\t */\n\thas(fullName, nodeID) {\n\t\treturn this.services.find(svc => svc.equals(fullName, nodeID)) != null;\n\t}\n\n\t/**\n\t * Get a service by fullName & nodeID\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @returns\n\t * @memberof ServiceCatalog\n\t */\n\tget(fullName, nodeID) {\n\t\treturn this.services.find(svc => svc.equals(fullName, nodeID));\n\t}\n\n\t/**\n\t * Get a filtered list of services with actions\n\t *\n\t * @param {Object} {onlyLocal = false,  onlyAvailable = false, skipInternal = false, withActions = false, withEvents = false, grouping = false}\n\t * @returns {Array}\n\t *\n\t * @memberof Registry\n\t */\n\tlist({ onlyLocal = false, onlyAvailable = false, skipInternal = false, withActions = false, withEvents = false, grouping = false }) {\n\t\tlet res = [];\n\t\tthis.services.forEach(service => {\n\t\t\tif (skipInternal && /^\\$/.test(service.name))\n\t\t\t\treturn;\n\n\t\t\tif (onlyLocal && !service.local)\n\t\t\t\treturn;\n\n\t\t\tif (onlyAvailable && !service.node.available)\n\t\t\t\treturn;\n\n\t\t\tlet item;\n\t\t\tif (grouping)\n\t\t\t\titem = res.find(svc => svc.fullName == service.fullName);\n\n\t\t\tif (!item) {\n\t\t\t\tlet item = {\n\t\t\t\t\tname: service.name,\n\t\t\t\t\tversion: service.version,\n\t\t\t\t\tfullName: service.fullName,\n\t\t\t\t\tsettings: service.settings,\n\t\t\t\t\tmetadata: service.metadata,\n\n\t\t\t\t\tlocal: service.local,\n\t\t\t\t\tavailable: service.node.available,\n\t\t\t\t};\n\n\t\t\t\tif (grouping)\n\t\t\t\t\titem.nodes = [service.node.id];\n\t\t\t\telse\n\t\t\t\t\titem.nodeID = service.node.id;\n\n\t\t\t\tif (withActions) {\n\t\t\t\t\titem.actions = {};\n\n\t\t\t\t\t_.forIn(service.actions, action => {\n\t\t\t\t\t\tif (action.protected) return;\n\n\t\t\t\t\t\titem.actions[action.name] = _.omit(action, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (withEvents) {\n\t\t\t\t\titem.events = {};\n\n\t\t\t\t\t_.forIn(service.events, event => {\n\t\t\t\t\t\t// Skip internal event handlers\n\t\t\t\t\t\tif (/^\\$/.test(event.name)) return;\n\n\t\t\t\t\t\titem.events[event.name] = _.omit(event, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tres.push(item);\n\n\t\t\t} else {\n\t\t\t\tif (item.nodes.indexOf(service.node.id) === -1)\n\t\t\t\t\titem.nodes.push(service.node.id);\n\t\t\t}\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Get local service list for INFO packet\n\t *\n\t * @returns {Object}\n\t * @memberof ServiceCatalog\n\t */\n\tgetLocalNodeServices() {\n\t\tlet res = [];\n\t\tthis.services.forEach(service => {\n\t\t\tif (!service.local)\n\t\t\t\treturn;\n\n\t\t\tlet item = {\n\t\t\t\tname: service.name,\n\t\t\t\tversion: service.version,\n\t\t\t\tfullName: service.fullName,\n\t\t\t\tsettings: service.settings,\n\t\t\t\tmetadata: service.metadata,\n\t\t\t\tdependencies: service.dependencies\n\t\t\t};\n\n\t\t\titem.actions = {};\n\n\t\t\t_.forIn(service.actions, action => {\n\t\t\t\tif (action.protected) return;\n\n\t\t\t\titem.actions[action.name] = _.omit(action, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t});\n\n\t\t\titem.events = {};\n\n\t\t\t_.forIn(service.events, event => {\n\t\t\t\t// Leave internal event handlers, because it can be used for internal events.\n\t\t\t\t//if (/^\\$/.test(event.name)) return;\n\n\t\t\t\titem.events[event.name] = _.omit(event, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t});\n\n\t\t\tres.push(item);\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Remove all endpoints by nodeID\n\t *\n\t * @param {String} nodeID\n\t * @memberof ServiceCatalog\n\t */\n\tremoveAllByNodeID(nodeID) {\n\t\t_.remove(this.services, service => {\n\t\t\tif (service.node.id == nodeID) {\n\t\t\t\tthis.registry.actions.removeByService(service);\n\t\t\t\tthis.registry.events.removeByService(service);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Remove endpoint by fullName & nodeID\n\t *\n\t * @param {String} fullName\n\t * @param {String} nodeID\n\t * @memberof ServiceCatalog\n\t */\n\tremove(fullName, nodeID) {\n\t\tlet service = this.get(fullName, nodeID);\n\t\tif (service) {\n\t\t\tthis.registry.actions.removeByService(service);\n\t\t\tthis.registry.events.removeByService(service);\n\n\t\t\tremoveFromArray(this.services, service);\n\t\t}\n\t}\n}\n\nmodule.exports = ServiceCatalog;\n"],"names":["removeFromArray","require$$0","[object Object]","registry","broker","this","logger","services","node","service","local","item","ServiceItem","push","fullName","nodeID","find","svc","equals","onlyLocal","onlyAvailable","skipInternal","withActions","withEvents","grouping","res","forEach","test","name","available","nodes","indexOf","id","version","settings","metadata","actions","_","forIn","action","protected","omit","events","event","dependencies","remove","removeByService","get"],"mappings":"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"}