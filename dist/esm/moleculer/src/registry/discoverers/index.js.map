{"version":3,"file":"index.js","sources":["../../../../../../src/moleculer/src/registry/discoverers/index.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst { BrokerOptionsError } = require(\"../../errors\");\nconst { isObject, isString } = require(\"../../utils\");\n\nconst Discoverers = {\n\tBase: require(\"./base\"),\n\tLocal: require(\"./local\"),\n\tEtcd3: require(\"./etcd3\"),\n\tRedis: require(\"./redis\")\n};\n\nfunction getByName(name) {\n\t/* istanbul ignore next */\n\tif (!name)\n\t\treturn null;\n\n\tlet n = Object.keys(Discoverers).find(n => n.toLowerCase() == name.toLowerCase());\n\tif (n)\n\t\treturn Discoverers[n];\n}\n\n/**\n * Resolve discoverer by name\n *\n * @param {object|string} opt\n * @returns {Discoverer}\n * @memberof ServiceBroker\n */\nfunction resolve(opt) {\n\tif (opt instanceof Discoverers.Base) {\n\t\treturn opt;\n\t} else if (isString(opt)) {\n\t\tlet DiscovererClass = getByName(opt);\n\t\tif (DiscovererClass)\n\t\t\treturn new DiscovererClass();\n\n\t\tif (opt.startsWith(\"redis://\"))\n\t\t\treturn new Discoverers.Redis(opt);\n\n\t\tif (opt.startsWith(\"etcd3://\"))\n\t\t\treturn new Discoverers.Etcd3(opt);\n\n\t\tthrow new BrokerOptionsError(`Invalid Discoverer type '${opt}'.`, { type: opt });\n\n\t} else if (isObject(opt)) {\n\t\tlet DiscovererClass = getByName(opt.type || \"Local\");\n\t\tif (DiscovererClass)\n\t\t\treturn new DiscovererClass(opt.options);\n\t\telse\n\t\t\tthrow new BrokerOptionsError(`Invalid Discoverer type '${opt.type}'.`, { type: opt.type });\n\t}\n\n\treturn new Discoverers.Local();\n}\n\nfunction register(name, value) {\n\tDiscoverers[name] = value;\n}\n\nmodule.exports = Object.assign(Discoverers, { resolve, register });\n"],"names":["BrokerOptionsError","require$$0","isObject","isString","require$$1","Discoverers","Base","require$$2","Local","require$$3","Etcd3","require$$4","Redis","require$$5","getByName","name","n","Object","keys","find","toLowerCase","assign","resolve","opt","DiscovererClass","startsWith","type","options","register","value"],"mappings":"sJAQA,MAAMA,mBAAEA,GAAuBC,GACzBC,SAAEA,EAAQC,SAAEA,GAAaC,EAEzBC,EAAc,CACnBC,KAAMC,EACNC,MAAOC,EACPC,MAAOC,EACPC,MAAOC,GAGR,SAASC,EAAUC,GAElB,IAAKA,EACJ,OAAO,KAER,IAAIC,EAAIC,OAAOC,KAAKb,GAAac,MAAKH,GAAKA,EAAEI,eAAiBL,EAAKK,gBACnE,OAAIJ,EACIX,EAAYW,QADpB,QA0CgBC,OAAOI,OAAOhB,EAAa,CAAEiB,QA/B9C,SAAiBC,GAChB,GAAIA,aAAelB,EAAYC,KAC9B,OAAOiB,EACD,GAAIpB,EAASoB,GAAM,CACzB,IAAIC,EAAkBV,EAAUS,GAChC,GAAIC,EACH,OAAO,IAAIA,EAEZ,GAAID,EAAIE,WAAW,YAClB,OAAO,IAAIpB,EAAYO,MAAMW,GAE9B,GAAIA,EAAIE,WAAW,YAClB,OAAO,IAAIpB,EAAYK,MAAMa,GAE9B,MAAM,IAAIvB,EAAmB,4BAA4BuB,MAAS,CAAEG,KAAMH,IAEpE,GAAIrB,EAASqB,GAAM,CACzB,IAAIC,EAAkBV,EAAUS,EAAIG,MAAQ,SAC5C,GAAIF,EACH,OAAO,IAAIA,EAAgBD,EAAII,SAE/B,MAAM,IAAI3B,EAAmB,4BAA4BuB,EAAIG,SAAU,CAAEA,KAAMH,EAAIG,OAGrF,OAAO,IAAIrB,EAAYG,OAO+BoB,SAJvD,SAAkBb,EAAMc,GACvBxB,EAAYU,GAAQc"}