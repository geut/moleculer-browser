{"version":3,"file":"base.js","sources":["../../../../../../src/moleculer/src/registry/discoverers/base.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ = require(\"lodash\");\n\n/**\n * Abstract Discoverer class\n *\n * @class BaseDiscoverer\n */\nclass BaseDiscoverer {\n\n\t/**\n\t * Creates an instance of Discoverer.\n\t *\n\t * @memberof BaseDiscoverer\n\t */\n\tconstructor(opts) {\n\t\tthis.Promise = Promise; // while `init` is not called\n\n\t\tthis.opts = _.defaultsDeep({}, opts, {\n\t\t\theartbeatInterval: null,\n\t\t\theartbeatTimeout: null,\n\n\t\t\tdisableHeartbeatChecks: false,\n\t\t\tdisableOfflineNodeRemoving: false,\n\t\t\tcleanOfflineNodesTimeout: 10 * 60, // 10 minutes\n\t\t});\n\n\t\t// Timer variables\n\t\tthis.heartbeatTimer = null;\n\t\tthis.checkNodesTimer = null;\n\t\tthis.offlineTimer = null;\n\n\t\t// Pointer for the local `Node` instance\n\t\tthis.localNode = null;\n\t}\n\n\t/**\n\t * Initialize Discoverer\n\t *\n\t * @param {ServiceRegistry} registry\n\t */\n\tinit(registry) {\n\t\tthis.registry = registry;\n\t\tthis.broker = registry.broker;\n\t\tthis.Promise = this.broker.Promise;\n\n\t\tif (this.broker) {\n\t\t\tthis.logger = this.broker.getLogger(\"Discovery\");\n\t\t\tthis.transit = this.broker.transit;\n\n\t\t\t// Get HB time settings from broker options. Backward compatibility\n\t\t\tif (this.opts.heartbeatInterval == null)\n\t\t\t\tthis.opts.heartbeatInterval = this.broker.options.heartbeatInterval;\n\t\t\tif (this.opts.heartbeatTimeout == null)\n\t\t\t\tthis.opts.heartbeatTimeout = this.broker.options.heartbeatTimeout;\n\t\t}\n\n\t\tif (this.transit) {\n\t\t\tthis.broker.localBus.on(\"$transporter.connected\", () => this.startHeartbeatTimers());\n\t\t\tthis.broker.localBus.on(\"$transporter.disconnected\", () => this.stopHeartbeatTimers());\n\t\t}\n\n\t\tthis.localNode = this.registry.nodes.localNode;\n\n\t\tthis.registerMoleculerMetrics();\n\t}\n\n\t/**\n\t * Stop discoverer clients.\n\t */\n\tstop() {\n\t\tthis.stopHeartbeatTimers();\n\t\treturn this.Promise.resolve();\n\t}\n\n\t/**\n\t * Register Moleculer Transit Core metrics.\n\t */\n\tregisterMoleculerMetrics() {\n\t\t// Not implemented\n\t}\n\n\t/**\n\t * Start heartbeat timers\n\t */\n\tstartHeartbeatTimers() {\n\t\tthis.stopHeartbeatTimers();\n\n\t\tif (this.opts.heartbeatInterval > 0) {\n\t\t\t// HB timer\n\t\t\tconst time = this.opts.heartbeatInterval * 1000 + (Math.round(Math.random() * 1000) - 500); // random +/- 500ms\n\t\t\tthis.heartbeatTimer = setInterval(() => this.beat(), time);\n\t\t\tthis.heartbeatTimer.unref();\n\n\t\t\t// Check expired heartbeats of remote nodes timer\n\t\t\tthis.checkNodesTimer = setInterval(() => this.checkRemoteNodes(), this.opts.heartbeatTimeout * 1000);\n\t\t\tthis.checkNodesTimer.unref();\n\n\t\t\t// Clean offline nodes timer\n\t\t\tthis.offlineTimer = setInterval(() => this.checkOfflineNodes(), 60 * 1000); // 1 min\n\t\t\tthis.offlineTimer.unref();\n\t\t}\n\t}\n\n\t/**\n\t * Stop heartbeat timers\n\t */\n\tstopHeartbeatTimers() {\n\t\tif (this.heartbeatTimer) {\n\t\t\tclearInterval(this.heartbeatTimer);\n\t\t\tthis.heartbeatTimer = null;\n\t\t}\n\n\t\tif (this.checkNodesTimer) {\n\t\t\tclearInterval(this.checkNodesTimer);\n\t\t\tthis.checkNodesTimer = null;\n\t\t}\n\n\t\tif (this.offlineTimer) {\n\t\t\tclearInterval(this.offlineTimer);\n\t\t\tthis.offlineTimer = null;\n\t\t}\n\t}\n\n\t/**\n\t * Disable built-in Heartbeat logic. Used by TCP transporter\n\t */\n\tdisableHeartbeat() {\n\t\tthis.opts.heartbeatInterval = 0;\n\t\tthis.stopHeartbeatTimers();\n\t}\n\n\t/**\n\t * Heartbeat method.\n\t */\n\tbeat() {\n\t\t// Update the local CPU usage before sending heartbeat.\n\t\treturn this.localNode.updateLocalInfo(this.broker.getCpuUsage)\n\t\t\t.then(() => this.sendHeartbeat());\n\t}\n\n\t/**\n\t * Check all registered remote nodes are available.\n\t */\n\tcheckRemoteNodes() {\n\t\tif (this.disableHeartbeatChecks) return;\n\n\t\tconst now = Math.round(process.uptime());\n\t\tthis.registry.nodes.toArray().forEach(node => {\n\t\t\tif (node.local || !node.available) return;\n\t\t\tif (!node.lastHeartbeatTime) {\n\t\t\t\t// Még nem jött be az első heartbeat.\n\t\t\t\tnode.lastHeartbeatTime = now;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (now - node.lastHeartbeatTime > this.broker.options.heartbeatTimeout) {\n\t\t\t\tthis.logger.warn(`Heartbeat is not received from '${node.id}' node.`);\n\t\t\t\tthis.registry.nodes.disconnected(node.id, true);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Check offline nodes. Remove which is older than 10 minutes.\n\t */\n\tcheckOfflineNodes() {\n\t\tif (this.disableOfflineNodeRemoving || !this.opts.cleanOfflineNodesTimeout) return;\n\n\t\tconst now = Math.round(process.uptime());\n\t\tthis.registry.nodes.toArray().forEach(node => {\n\t\t\tif (node.local || node.available) return;\n\t\t\tif (!node.lastHeartbeatTime) {\n\t\t\t\t// Még nem jött be az első heartbeat.\n\t\t\t\tnode.lastHeartbeatTime = now;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (now - node.lastHeartbeatTime > this.opts.cleanOfflineNodesTimeout) {\n\t\t\t\tthis.logger.warn(`Removing offline '${node.id}' node from registry because it hasn't submitted heartbeat signal for 10 minutes.`);\n\t\t\t\tthis.registry.nodes.delete(node.id);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Heartbeat received from a remote node.\n\t *\n\t * @param {String} nodeID\n\t * @param {Object} payload\n\t */\n\theartbeatReceived(nodeID, payload) {\n\t\tconst node = this.registry.nodes.get(nodeID);\n\t\tif (node) {\n\t\t\tif (!node.available) {\n\t\t\t\t// Reconnected node. Request a fresh INFO\n\t\t\t\tthis.discoverNode(nodeID);\n\t\t\t} else {\n\t\t\t\tif (payload.seq != null && node.seq !== payload.seq) {\n\t\t\t\t\t// Some services changed on the remote node. Request a new INFO\n\t\t\t\t\tthis.discoverNode(nodeID);\n\t\t\t\t} else if (payload.instanceID != null && !node.instanceID.startsWith(payload.instanceID)) {\n\t\t\t\t\t// The node has been restarted. Request a new INFO\n\t\t\t\t\tthis.discoverNode(nodeID);\n\t\t\t\t} else {\n\t\t\t\t\tnode.heartbeat(payload);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Unknow node. Request an INFO\n\t\t\tthis.discoverNode(nodeID);\n\t\t}\n\t}\n\n\t/**\n\t * Received an INFO from a remote node.\n\t *\n\t * @param {String} nodeID\n\t * @param {Object} payload\n\t */\n\tprocessRemoteNodeInfo(nodeID, payload) {\n\t\treturn this.broker.registry.processNodeInfo(payload);\n\t}\n\n\t/**\n\t * Sending a local heartbeat to remote nodes.\n\t */\n\tsendHeartbeat() {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.sendHeartbeat(this.localNode);\n\t}\n\n\t/**\n\t * Discover a new or old node by nodeID\n\t *\n\t * @param {String} nodeID\n\t */\n\tdiscoverNode() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Discover all nodes (after connected)\n\t */\n\tdiscoverAllNodes() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Called when the local node is ready (transporter connected)\n\t */\n\tlocalNodeReady() {\n\t\t// Local node has started all local services. We send a new INFO packet\n\t\t// which contains the local services because we are ready to accept incoming requests.\n\t\treturn this.sendLocalNodeInfo();\n\t}\n\n\t/**\n\t * Local service registry has been changed. We should notify remote nodes.\n\t *\n\t * @param {String} nodeID\n\t */\n\tsendLocalNodeInfo() {\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Not implemented\");\n\t}\n\n\t/**\n\t * Called when the local node disconnected.\n\t * You can clean it from the remote registry.\n\t */\n\tlocalNodeDisconnected() {\n\t\tif (!this.transit) return this.Promise.resolve();\n\t\treturn this.transit.sendDisconnectPacket();\n\t}\n\n\t/**\n\t * Called when a remote node disconnected (received DISCONNECT packet)\n\t * You can clean it from local registry.\n\t *\n\t * @param {String} nodeID\n\t * @param {Boolean} isUnexpected\n\t */\n\tremoteNodeDisconnected(nodeID, isUnexpected) {\n\t\treturn this.registry.nodes.disconnected(nodeID, isUnexpected);\n\t}\n\n}\n\nmodule.exports = BaseDiscoverer;\n"],"names":["process"],"mappings":"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"}