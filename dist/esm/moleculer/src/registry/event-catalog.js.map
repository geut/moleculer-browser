{"version":3,"file":"event-catalog.js","sources":["../../../../../src/moleculer/src/registry/event-catalog.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2018 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\nconst _ \t\t\t= require(\"lodash\");\nconst utils\t\t\t= require(\"../utils\");\nconst Strategies \t= require(\"../strategies\");\nconst EndpointList \t= require(\"./endpoint-list\");\nconst EventEndpoint = require(\"./endpoint-event\");\n\n/**\n * Catalog for events\n *\n * @class EventCatalog\n */\nclass EventCatalog {\n\n\t/**\n\t * Creates an instance of EventCatalog.\n\t *\n\t * @param {Registry} registry\n\t * @param {ServiceBroker} broker\n\t * @param {any} StrategyFactory\n\t * @memberof EventCatalog\n\t */\n\tconstructor(registry, broker, StrategyFactory) {\n\t\tthis.registry = registry;\n\t\tthis.broker = broker;\n\t\tthis.logger = registry.logger;\n\t\tthis.StrategyFactory = StrategyFactory;\n\n\t\tthis.events = [];\n\n\t\tthis.EndpointFactory = EventEndpoint;\n\t}\n\n\t/**\n\t * Add a new event\n\t *\n\t * @param {Node} node\n\t * @param {ServiceItem} service\n\t * @param {any} event\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tadd(node, service, event) {\n\t\tconst eventName = event.name;\n\t\tconst groupName = event.group || service.name;\n\t\tlet list = this.get(eventName, groupName);\n\t\tif (!list) {\n\t\t\tconst strategyFactory = event.strategy ? (Strategies.resolve(event.strategy) || this.StrategyFactory) : this.StrategyFactory;\n\t\t\tconst strategyOptions = event.strategyOptions ? event.strategyOptions : this.registry.opts.strategyOptions;\n\t\t\t// Create a new EndpointList\n\t\t\tlist = new EndpointList(this.registry, this.broker, eventName, groupName, this.EndpointFactory, strategyFactory, strategyOptions);\n\t\t\tthis.events.push(list);\n\t\t}\n\n\t\tlist.add(node, service, event);\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * Get an event by name (and group name)\n\t *\n\t * @param {String} eventName\n\t * @param {String} groupName\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tget(eventName, groupName) {\n\t\treturn this.events.find(list => list.name == eventName && list.group == groupName);\n\t}\n\n\t/**\n\t * Get balanced endpoint for event\n\t *\n\t * @param {String} eventName\n\t * @param {String|Array?} groups\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tgetBalancedEndpoints(eventName, groups) {\n\t\tconst res = [];\n\n\t\tthis.events.forEach(list => {\n\t\t\tif (!utils.match(eventName, list.name)) return;\n\t\t\tif (groups == null || groups.length == 0 || groups.indexOf(list.group) != -1) {\n\t\t\t\t// Use built-in balancer, get the next endpoint\n\t\t\t\tconst ep = list.next();\n\t\t\t\tif (ep && ep.isAvailable)\n\t\t\t\t\tres.push([ep, list.group]);\n\t\t\t}\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Get all groups for event\n\t *\n\t * @param {String} eventName\n\t * @returns Array<String>\n\t * @memberof EventCatalog\n\t */\n\tgetGroups(eventName) {\n\t\treturn _.uniq(this.events.filter(list => utils.match(eventName, list.name)).map(item => item.group));\n\t}\n\n\t/**\n\t * Get all endpoints for event\n\t *\n\t * @param {String} eventName\n\t * @param {Array<String>?} groupNames\n\t * @returns\n\t * @memberof EventCatalog\n\t */\n\tgetAllEndpoints(eventName, groupNames) {\n\t\tconst res = [];\n\t\tthis.events.forEach(list => {\n\t\t\tif (!utils.match(eventName, list.name)) return;\n\t\t\tif (groupNames == null || groupNames.length == 0 || groupNames.indexOf(list.group) !== -1) {\n\t\t\t\tlist.endpoints.forEach(ep => {\n\t\t\t\t\tif (ep.isAvailable)\n\t\t\t\t\t\tres.push(ep);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn _.uniqBy(res, \"id\");\n\t}\n\n\t/**\n\t * Call local service handlers\n\t *\n\t * @param {String} eventName\n\t * @param {any} payload\n\t * @param {Array<String>?} groupNames\n\t * @param {String} nodeID\n\t * @param {boolean} broadcast\n\t * @returns {Promise<any>}\n\t *\n\t * @memberof EventCatalog\n\t */\n\temitLocalServices(ctx) {\n\t\tconst isBroadcast = [\"broadcast\", \"broadcastLocal\"].indexOf(ctx.eventType) !== -1;\n\t\tconst sender = ctx.nodeID;\n\n\t\tconst promises = [];\n\n\t\tthis.events.forEach(list => {\n\t\t\tif (!utils.match(ctx.eventName, list.name)) return;\n\t\t\tif (ctx.eventGroups == null || ctx.eventGroups.length == 0 || ctx.eventGroups.indexOf(list.group) !== -1) {\n\t\t\t\tif (isBroadcast) {\n\t\t\t\t\tlist.endpoints.forEach(ep => {\n\t\t\t\t\t\tif (ep.local && ep.event.handler) {\n\t\t\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\t\t\tnewCtx.nodeID = sender;\n\t\t\t\t\t\t\tpromises.push(this.callEventHandler(newCtx));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst ep = list.nextLocal();\n\t\t\t\t\tif (ep && ep.event.handler) {\n\t\t\t\t\t\tconst newCtx = ctx.copy(ep);\n\t\t\t\t\t\tnewCtx.nodeID = sender;\n\t\t\t\t\t\tpromises.push(this.callEventHandler(newCtx));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn this.broker.Promise.all(promises);\n\t}\n\n\t/**\n\t * Call local event handler and handles unhandled promise rejections.\n\t *\n\t * @param {Context} ctx\n\t *\n\t * @memberof EventCatalog\n\t */\n\tcallEventHandler(ctx) {\n\t\treturn ctx.endpoint.event.handler(ctx);\n\t}\n\n\t/**\n\t * Remove endpoints by service\n\t *\n\t * @param {ServiceItem} service\n\t * @memberof EventCatalog\n\t */\n\tremoveByService(service) {\n\t\tthis.events.forEach(list => {\n\t\t\tlist.removeByService(service);\n\t\t});\n\t}\n\n\t/**\n\t * Remove endpoint by name & nodeId\n\t *\n\t * @param {String} eventName\n\t * @param {String} nodeID\n\t * @memberof EventCatalog\n\t */\n\tremove(eventName, nodeID) {\n\t\tthis.events.forEach(list => {\n\t\t\tif (list.name == eventName)\n\t\t\t\tlist.removeByNodeID(nodeID);\n\t\t});\n\t}\n\n\t/**\n\t * Get a filtered list of events\n\t *\n\t * @param {Object} {onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false}\n\t * @returns {Array}\n\t *\n\t * @memberof EventCatalog\n\t */\n\tlist({ onlyLocal = false, onlyAvailable = false, skipInternal = false, withEndpoints = false }) {\n\t\tlet res = [];\n\n\t\tthis.events.forEach(list => {\n\t\t\t/* istanbul ignore next */\n\t\t\tif (skipInternal && /^\\$/.test(list.name))\n\t\t\t\treturn;\n\n\t\t\tif (onlyLocal && !list.hasLocal())\n\t\t\t\treturn;\n\n\t\t\tif (onlyAvailable && !list.hasAvailable())\n\t\t\t\treturn;\n\n\t\t\tlet item = {\n\t\t\t\tname: list.name,\n\t\t\t\tgroup: list.group,\n\t\t\t\tcount: list.count(),\n\t\t\t\t//service: list.service,\n\t\t\t\thasLocal: list.hasLocal(),\n\t\t\t\tavailable: list.hasAvailable()\n\t\t\t};\n\n\t\t\tif (item.count > 0) {\n\t\t\t\tconst ep = list.endpoints[0];\n\t\t\t\tif (ep)\n\t\t\t\t\titem.event = _.omit(ep.event, [\"handler\", \"remoteHandler\", \"service\"]);\n\t\t\t}\n\n\t\t\tif (withEndpoints) {\n\t\t\t\tif (item.count > 0) {\n\t\t\t\t\titem.endpoints = list.endpoints.map(ep => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnodeID: ep.node.id,\n\t\t\t\t\t\t\tstate: ep.state,\n\t\t\t\t\t\t\tavailable: ep.node.available,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tres.push(item);\n\t\t});\n\n\t\treturn res;\n\t}\n}\n\nmodule.exports = EventCatalog;\n"],"names":["[object Object]","registry","broker","StrategyFactory","this","logger","events","EndpointFactory","EventEndpoint","node","service","event","eventName","name","groupName","group","list","get","strategyFactory","strategy","Strategies","resolve","strategyOptions","opts","EndpointList","push","add","find","groups","res","forEach","utils","match","length","indexOf","ep","next","isAvailable","_","uniq","filter","map","item","groupNames","endpoints","uniqBy","ctx","isBroadcast","eventType","sender","nodeID","promises","eventGroups","local","handler","newCtx","copy","callEventHandler","nextLocal","Promise","all","endpoint","removeByService","removeByNodeID","onlyLocal","onlyAvailable","skipInternal","withEndpoints","test","hasLocal","hasAvailable","count","available","omit","id","state"],"mappings":"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"}