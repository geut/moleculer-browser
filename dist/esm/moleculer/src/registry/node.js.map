{"version":3,"file":"node.js","sources":["../../../../../src/moleculer/src/registry/node.js"],"sourcesContent":["/*\n * moleculer\n * Copyright (c) 2020 MoleculerJS (https://github.com/moleculerjs/moleculer)\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Node class\n *\n * @class Node\n */\nclass Node {\n\t/**\n\t * Creates an instance of Node.\n\t *\n\t * @param {String} id\n\t *\n\t * @memberof Node\n\t */\n\tconstructor(id) {\n\t\tthis.id = id;\n\t\tthis.instanceID = null;\n\t\tthis.available = true;\n\t\tthis.local = false;\n\t\tthis.lastHeartbeatTime = Math.round(process.uptime());\n\t\tthis.config = {};\n\t\tthis.client = {};\n\t\tthis.metadata = null;\n\n\t\tthis.ipList = null;\n\t\tthis.port = null;\n\t\tthis.hostname = null;\n\t\tthis.udpAddress = null;\n\n\t\tthis.rawInfo = null;\n\t\tthis.services = [];\n\n\t\tthis.cpu = null;\n\t\tthis.cpuSeq = null;\n\n\t\tthis.seq = 0;\n\t\tthis.offlineSince = null;\n\t}\n\n\t/**\n\t * Update properties\n\t *\n\t * @param {object} payload\n\t * @param {boolean} isReconnected\n\t * @memberof Node\n\t */\n\tupdate(payload, isReconnected) {\n\t\t// Update properties\n\t\tthis.metadata = payload.metadata;\n\t\tthis.ipList = payload.ipList;\n\t\tthis.hostname = payload.hostname;\n\t\tthis.port = payload.port;\n\t\tthis.client = payload.client || {};\n\t\tthis.config = payload.config || {};\n\t\tthis.instanceID = payload.instanceID;\n\n\t\t// Process services & events\n\t\tthis.services = payload.services;\n\t\tthis.rawInfo = payload;\n\n\t\tconst newSeq = payload.seq || 1;\n\t\tif (newSeq > this.seq || isReconnected) {\n\t\t\tthis.seq = newSeq;\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Update local properties.\n\t *\n\t * @memberof Node\n\t * @param {Function} cpuUsage\n\t */\n\tupdateLocalInfo(cpuUsage) {\n\t\treturn cpuUsage().then(res => {\n\t\t\tconst newVal = Math.round(res.avg);\n\t\t\tif (this.cpu != newVal) {\n\t\t\t\tthis.cpu = newVal;\n\t\t\t\tthis.cpuSeq++;\n\t\t\t}\n\t\t}).catch(() => { /* silent */ });\n\t}\n\n\t/**\n\t * Update heartbeat properties\n\t *\n\t * @param {any} payload\n\t * @memberof Node\n\t */\n\theartbeat(payload) {\n\t\tif (!this.available) {\n\t\t\tthis.available = true;\n\t\t\tthis.offlineSince = null;\n\t\t}\n\n\t\tif (payload.cpu != null) {\n\t\t\tthis.cpu = payload.cpu;\n\t\t\tthis.cpuSeq = payload.cpuSeq || 1;\n\t\t}\n\n\t\tthis.lastHeartbeatTime = Math.round(process.uptime());\n\t}\n\n\t/**\n\t * Node disconnected\n\t *\n\t * @memberof Node\n\t */\n\tdisconnected() {\n\t\tif (this.available) {\n\t\t\tthis.offlineSince = Math.round(process.uptime());\n\t\t\tthis.seq++;\n\t\t}\n\n\t\tthis.available = false;\n\t}\n}\n\nmodule.exports = Node;\n"],"names":["[object Object]","id","this","instanceID","available","local","lastHeartbeatTime","Math","round","process","uptime","config","client","metadata","ipList","port","hostname","udpAddress","rawInfo","services","cpu","cpuSeq","seq","offlineSince","payload","isReconnected","newSeq","cpuUsage","then","res","newVal","avg","catch"],"mappings":"yCAaA,MAQCA,YAAYC,GACXC,KAAKD,GAAKA,EACVC,KAAKC,WAAa,KAClBD,KAAKE,WAAY,EACjBF,KAAKG,OAAQ,EACbH,KAAKI,kBAAoBC,KAAKC,MAAMC,EAAQC,UAC5CR,KAAKS,OAAS,GACdT,KAAKU,OAAS,GACdV,KAAKW,SAAW,KAEhBX,KAAKY,OAAS,KACdZ,KAAKa,KAAO,KACZb,KAAKc,SAAW,KAChBd,KAAKe,WAAa,KAElBf,KAAKgB,QAAU,KACfhB,KAAKiB,SAAW,GAEhBjB,KAAKkB,IAAM,KACXlB,KAAKmB,OAAS,KAEdnB,KAAKoB,IAAM,EACXpB,KAAKqB,aAAe,KAUrBvB,OAAOwB,EAASC,GAEfvB,KAAKW,SAAWW,EAAQX,SACxBX,KAAKY,OAASU,EAAQV,OACtBZ,KAAKc,SAAWQ,EAAQR,SACxBd,KAAKa,KAAOS,EAAQT,KACpBb,KAAKU,OAASY,EAAQZ,QAAU,GAChCV,KAAKS,OAASa,EAAQb,QAAU,GAChCT,KAAKC,WAAaqB,EAAQrB,WAG1BD,KAAKiB,SAAWK,EAAQL,SACxBjB,KAAKgB,QAAUM,EAEf,MAAME,EAASF,EAAQF,KAAO,EAC9B,GAAII,EAASxB,KAAKoB,KAAOG,EAExB,OADAvB,KAAKoB,IAAMI,GACJ,EAUT1B,gBAAgB2B,GACf,OAAOA,IAAWC,MAAKC,IACtB,MAAMC,EAASvB,KAAKC,MAAMqB,EAAIE,KAC1B7B,KAAKkB,KAAOU,IACf5B,KAAKkB,IAAMU,EACX5B,KAAKmB,aAEJW,OAAM,SASVhC,UAAUwB,GACJtB,KAAKE,YACTF,KAAKE,WAAY,EACjBF,KAAKqB,aAAe,MAGF,MAAfC,EAAQJ,MACXlB,KAAKkB,IAAMI,EAAQJ,IACnBlB,KAAKmB,OAASG,EAAQH,QAAU,GAGjCnB,KAAKI,kBAAoBC,KAAKC,MAAMC,EAAQC,UAQ7CV,eACKE,KAAKE,YACRF,KAAKqB,aAAehB,KAAKC,MAAMC,EAAQC,UACvCR,KAAKoB,OAGNpB,KAAKE,WAAY"}