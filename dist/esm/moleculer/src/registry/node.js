import t from"../../../process.js";var i=class{constructor(i){this.id=i,this.instanceID=null,this.available=!0,this.local=!1,this.lastHeartbeatTime=Math.round(t.uptime()),this.config={},this.client={},this.metadata=null,this.ipList=null,this.port=null,this.hostname=null,this.udpAddress=null,this.rawInfo=null,this.services=[],this.cpu=null,this.cpuSeq=null,this.seq=0,this.offlineSince=null}update(t,i){this.metadata=t.metadata,this.ipList=t.ipList,this.hostname=t.hostname,this.port=t.port,this.client=t.client||{},this.config=t.config||{},this.instanceID=t.instanceID,this.services=t.services,this.rawInfo=t;const s=t.seq||1;if(s>this.seq||i)return this.seq=s,!0}updateLocalInfo(t){return t().then((t=>{const i=Math.round(t.avg);this.cpu!=i&&(this.cpu=i,this.cpuSeq++)})).catch((()=>{}))}heartbeat(i){this.available||(this.available=!0,this.offlineSince=null),null!=i.cpu&&(this.cpu=i.cpu,this.cpuSeq=i.cpuSeq||1),this.lastHeartbeatTime=Math.round(t.uptime())}disconnected(){this.available&&(this.offlineSince=Math.round(t.uptime()),this.seq++),this.available=!1}};export default i;
//# sourceMappingURL=node.js.map
