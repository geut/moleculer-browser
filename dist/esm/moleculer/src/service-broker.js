import e from"eventemitter2";import t from"../../process.js";import{setTimeout as r}from"timers-browserify";import{commonjsRequire as i}from"../../_virtual/_commonjsHelpers.js";import s from"lodash";import o from"glob";import n from"path";import a from"./errors.js";import c from"../../cpu-usage.js";import l from"./utils.js";import h from"../../no-impl.js";import d from"./metrics/index.js";import g from"./transit.js";import m from"./registry/index.js";import p from"./logger-factory.js";import u from"./validators/index.js";import v from"./cachers/index.js";import f from"./transporters/index.js";import E from"./serializers/index.js";import y from"../package.json.js";import S from"./health.js";import w from"./middleware.js";import L from"./tracing/index.js";import b from"./service.js";import O from"./context.js";import I from"./internals.js";const _=e.EventEmitter2,{MetricRegistry:R,METRIC:N}=d,{Tracer:C}=L,P={namespace:"",nodeID:null,logger:!0,logLevel:null,transporter:null,requestTimeout:0,retryPolicy:{enabled:!1,retries:5,delay:100,maxDelay:1e3,factor:2,check:e=>e&&!!e.retryable},contextParamsCloning:!1,maxCallLevel:0,heartbeatInterval:10,heartbeatTimeout:30,tracking:{enabled:!1,shutdownTimeout:5e3},disableBalancer:!1,registry:{strategy:"RoundRobin",preferLocal:!0},circuitBreaker:{enabled:!1,threshold:.5,windowTime:60,minRequestCount:20,halfOpenTime:1e4,check:e=>e&&e.code>=500},bulkhead:{enabled:!1,concurrency:10,maxQueueSize:100},transit:{maxQueueSize:5e4,maxChunkSize:262144,disableReconnect:!1,disableVersionCheck:!1},uidGenerator:null,errorHandler:null,cacher:null,serializer:null,validator:!0,metrics:!1,tracing:!1,internalServices:!0,internalMiddlewares:!0,dependencyInterval:1e3,hotReload:!1,middlewares:null,replCommands:null,replDelimiter:null,metadata:{},skipProcessEventRegistration:!1,maxSafeObjectSize:null};class A{constructor(e){try{if(this.options=s.defaultsDeep(e,P),this.options.Promise?this.Promise=this.options.Promise:this.Promise=Promise,l.polyfillPromise(this.Promise),A.Promise=this.Promise,this.started=!1,this.ServiceFactory=this.options.ServiceFactory||b,this.ContextFactory=this.options.ContextFactory||O,this.namespace=this.options.namespace||"",this.metadata=this.options.metadata||{},this.nodeID=this.options.nodeID||l.getNodeID(),this.instanceID=l.generateToken(),this.services=[],this.localBus=new _({wildcard:!0,maxListeners:100}),this.loggerFactory=new p(this),this.loggerFactory.init(this.options.logger),this.logger=this.getLogger("broker"),this.logger.info(`Moleculer v${this.MOLECULER_VERSION} is starting...`),this.logger.info("Namespace: "+(this.namespace||"<not defined>")),this.logger.info("Node ID: "+this.nodeID),this.metrics=new R(this,this.options.metrics),this.metrics.init(),this.registerMoleculerMetrics(),this.middlewares=new w(this),this.registry=new m(this),this.cacher=v.resolve(this.options.cacher),this.cacher){this.cacher.init(this);const e=this.getConstructorName(this.cacher);this.logger.info("Cacher: "+e)}this.serializer=E.resolve(this.options.serializer),this.serializer.init(this);const r=this.getConstructorName(this.serializer);if(this.logger.info("Serializer: "+r),this.options.validator&&(this.validator=u.resolve(this.options.validator),this.validator)){const e=this.getConstructorName(this.validator);this.logger.info("Validator: "+e),this.validator.init(this)}if(this.tracer=new C(this,this.options.tracing),this.tracer.init(),this.registerMiddlewares(this.options.middlewares),this.options.transporter){const e=f.resolve(this.options.transporter);this.transit=new g(this,e,this.options.transit);const t=this.getConstructorName(e);this.logger.info("Transporter: "+t),this.options.disableBalancer&&(e.hasBuiltInBalancer?this.logger.info("The broker built-in balancer is DISABLED."):(this.logger.warn(`The ${t} has no built-in balancer. Broker balancer is ENABLED.`),this.options.disableBalancer=!1))}this.options.disableBalancer&&(this.call=this.callWithoutBalancer),this.registry.init(this),this.options.internalServices&&this.registerInternalServices(this.options.internalServices),this.callMiddlewareHookSync("created",[this]),l.isFunction(this.options.created)&&this.options.created(this),this._closeFn=()=>{this.stop().catch((e=>this.logger.error(e))).then((()=>t.exit(0)))},t.setMaxListeners(0),!1===this.options.skipProcessEventRegistration&&(t.on("beforeExit",this._closeFn),t.on("exit",this._closeFn),t.on("SIGINT",this._closeFn),t.on("SIGTERM",this._closeFn))}catch(e){this.logger?this.fatal("Unable to create ServiceBroker.",e,!0):(console.error("Unable to create ServiceBroker.",e),t.exit(1))}}registerMiddlewares(e){if(Array.isArray(e)&&e.length>0&&(s.compact(e).forEach((e=>this.middlewares.add(e))),this.logger.info(`Registered ${this.middlewares.count()} custom middleware(s).`)),this.options.internalMiddlewares){const e=this.middlewares.count();if(this.middlewares.add("ActionHook"),this.validator&&l.isFunction(this.validator.middleware)){const e=this.validator.middleware(this);l.isPlainObject(e)?this.middlewares.add(e):this.middlewares.add({localAction:e})}if(this.middlewares.add("Bulkhead"),this.cacher&&l.isFunction(this.cacher.middleware)){const e=this.cacher.middleware();l.isPlainObject(e)?this.middlewares.add(e):this.middlewares.add({localAction:e})}this.middlewares.add("ContextTracker"),this.middlewares.add("CircuitBreaker"),this.middlewares.add("Timeout"),this.middlewares.add("Retry"),this.middlewares.add("Fallback"),this.middlewares.add("ErrorHandler"),this.middlewares.add("Tracing"),this.middlewares.add("Metrics"),this.middlewares.add("Debounce"),this.middlewares.add("Throttle"),this.options.hotReload&&this.middlewares.add("HotReload"),this.logger.info(`Registered ${this.middlewares.count()-e} internal middleware(s).`)}this.createService=this.wrapMethod("createService",this.createService),this.registerLocalService=this.wrapMethod("registerLocalService",this.registerLocalService),this.destroyService=this.wrapMethod("destroyService",this.destroyService),this.call=this.wrapMethod("call",this.call),this.callWithoutBalancer=this.wrapMethod("call",this.callWithoutBalancer),this.mcall=this.wrapMethod("mcall",this.mcall),this.emit=this.wrapMethod("emit",this.emit),this.broadcast=this.wrapMethod("broadcast",this.broadcast),this.broadcastLocal=this.wrapMethod("broadcastLocal",this.broadcastLocal),this.metrics.set(N.MOLECULER_BROKER_MIDDLEWARES_TOTAL,this.middlewares.count())}registerMoleculerMetrics(){this.isMetricsEnabled()&&(this.metrics.register({name:N.MOLECULER_NODE_TYPE,type:N.TYPE_INFO,description:"Moleculer implementation type"}).set("nodejs"),this.metrics.register({name:N.MOLECULER_NODE_VERSIONS_MOLECULER,type:N.TYPE_INFO,description:"Moleculer version number"}).set(A.MOLECULER_VERSION),this.metrics.register({name:N.MOLECULER_NODE_VERSIONS_PROTOCOL,type:N.TYPE_INFO,description:"Moleculer protocol version"}).set(A.PROTOCOL_VERSION),this.metrics.register({name:N.MOLECULER_BROKER_NAMESPACE,type:N.TYPE_INFO,description:"Moleculer namespace"}).set(this.namespace),this.metrics.register({name:N.MOLECULER_BROKER_STARTED,type:N.TYPE_GAUGE,description:"ServiceBroker started"}).set(0),this.metrics.register({name:N.MOLECULER_BROKER_LOCAL_SERVICES_TOTAL,type:N.TYPE_GAUGE,description:"Number of local services"}).set(0),this.metrics.register({name:N.MOLECULER_BROKER_MIDDLEWARES_TOTAL,type:N.TYPE_GAUGE,description:"Number of local middlewares"}).set(0))}start(){const e=Date.now();return this.Promise.resolve().then((()=>{})).then((()=>this.callMiddlewareHook("starting",[this]))).then((()=>{if(this.transit)return this.transit.connect()})).then((()=>this.Promise.all(this.services.map((e=>e._start.call(e)))).catch((e=>{throw this.logger.error("Unable to start all services.",e),e})))).then((()=>{this.started=!0,this.metrics.set(N.MOLECULER_BROKER_STARTED,1),this.broadcastLocal("$broker.started"),this.registry.regenerateLocalRawInfo(!0)})).then((()=>{if(this.transit)return this.transit.ready()})).then((()=>this.callMiddlewareHook("started",[this]))).then((()=>{if(l.isFunction(this.options.started))return this.options.started(this)})).then((()=>{const t=Date.now()-e;this.logger.info(`âœ” ServiceBroker with ${this.services.length} service(s) is started successfully in ${l.humanize(t)}.`)}))}stop(){return this.started=!1,this.Promise.resolve().then((()=>{if(this.transit)return this.registry.regenerateLocalRawInfo(!0),this.registry.discoverer.sendLocalNodeInfo()})).then((()=>this.callMiddlewareHook("stopping",[this],{reverse:!0}))).then((()=>this.Promise.all(this.services.map((e=>e._stop.call(e)))).catch((e=>{this.logger.error("Unable to stop all services.",e)})))).then((()=>{if(this.transit)return this.transit.disconnect()})).then((()=>{if(this.cacher)return this.cacher.close()})).then((()=>{if(this.metrics)return this.metrics.stop()})).then((()=>{if(this.tracer)return this.tracer.stop()})).then((()=>this.registry.stop())).then((()=>this.callMiddlewareHook("stopped",[this],{reverse:!0}))).then((()=>{if(l.isFunction(this.options.stopped))return this.options.stopped(this)})).catch((e=>{this.logger.error(e)})).then((()=>{this.logger.info("ServiceBroker is stopped. Good bye."),this.metrics.set(N.MOLECULER_BROKER_STARTED,0),this.broadcastLocal("$broker.stopped"),!1===this.options.skipProcessEventRegistration&&(t.removeListener("beforeExit",this._closeFn),t.removeListener("exit",this._closeFn),t.removeListener("SIGINT",this._closeFn),t.removeListener("SIGTERM",this._closeFn))})).then((()=>this.loggerFactory.stop())).catch((()=>{}))}repl(){let e;try{e=h}catch(e){return console.error("The 'moleculer-repl' package is missing. Please install it with 'npm install moleculer-repl' command."),this.logger.error("The 'moleculer-repl' package is missing. Please install it with 'npm install moleculer-repl' command."),void this.logger.debug("ERROR",e)}if(e){let t=null;const r=this.options.replDelimiter,i=this.options.replCommands;return r&&(t={delimiter:r}),i&&(t={...t,customCommands:i}),e(this,t)}}errorHandler(e,t){if(this.options.errorHandler)return this.options.errorHandler.call(this,e,t);throw e}wrapMethod(e,t,r,i){return this.middlewares.wrapMethod(e,t,r,i)}callMiddlewareHook(e,t,r){return this.middlewares.callHandlers(e,t,r)}callMiddlewareHookSync(e,t,r){return this.middlewares.callSyncHandlers(e,t,r)}isMetricsEnabled(){return this.metrics.isEnabled()}isTracingEnabled(){return this.tracer.isEnabled()}getLogger(e,t){let r=Object.assign({nodeID:this.nodeID,ns:this.namespace,mod:e},t);return this.loggerFactory.getLogger(r)}fatal(e,r,i=!0){this.logger?this.logger.fatal(e,r):console.error(e,r),i&&t.exit(1)}loadServices(e="./services",t="**/*.service.js"){let r;return this.logger.debug(`Search services in '${e}/${t}'...`),r=Array.isArray(t)?t.map((t=>n.join(e,t))):o.sync(n.join(e,t)),r&&r.forEach((e=>this.loadService(e))),r.length}loadService(e){let t,r;try{t=require.resolve(n.resolve(e)),this.logger.debug(`Load service '${n.basename(t)}'...`);const s=i(t);let o;return r=null!=s.default?s.default:s,r=this.normalizeSchemaConstructor(r),Object.prototype.isPrototypeOf.call(this.ServiceFactory,r)?(o=new r(this),this.started&&this._restartService(o)):l.isFunction(r)?(o=r(this),o instanceof this.ServiceFactory?this.started&&this._restartService(o):o=this.createService(o)):r&&(o=this.createService(r)),o&&(o.__filename=t),o}catch(t){throw this.logger.error(`Failed to load service '${e}'`,t),t}}createService(e,t){let r;if(e=this.normalizeSchemaConstructor(e),Object.prototype.isPrototypeOf.call(this.ServiceFactory,e))r=new e(this,t);else{let i=e;t&&(i=this.ServiceFactory.mergeSchemas(e,t)),r=new this.ServiceFactory(this,i)}return this.started&&this._restartService(r),r}_restartService(e){return e._start.call(e).catch((e=>this.logger.error("Unable to start service.",e)))}addLocalService(e){this.services.push(e),this.metrics.set(N.MOLECULER_BROKER_LOCAL_SERVICES_TOTAL,this.services.length)}registerLocalService(e){this.registry.registerLocalService(e)}destroyService(e){let t,r;return l.isString(e)?(t=e,e=this.getLocalService(e)):l.isPlainObject(e)&&(t=e.name,r=e.version,e=this.getLocalService(e.name,e.version)),e?this.Promise.resolve().then((()=>e._stop())).catch((t=>{this.logger.error(`Unable to stop '${e.fullName}' service.`,t)})).then((()=>{l.removeFromArray(this.services,e),this.registry.unregisterService(e.fullName,this.nodeID),this.logger.info(`Service '${e.fullName}' is stopped.`),this.servicesChanged(!0),this.metrics.set(N.MOLECULER_BROKER_LOCAL_SERVICES_TOTAL,this.services.length)})):this.Promise.reject(new a.ServiceNotFoundError({service:t,version:r}))}servicesChanged(e=!1){this.broadcastLocal("$services.changed",{localService:e}),this.started&&e&&this.transit&&this.registry.discoverer.sendLocalNodeInfo()}registerInternalServices(e){e=l.isObject(e)?e:{},this.createService(I(),e.$node)}getLocalService(e,t){if(1==arguments.length){if(l.isString(e))return this.services.find((t=>t.fullName==e));if(l.isPlainObject(e))return this.services.find((t=>t.name==e.name&&t.version==e.version))}return this.services.find((r=>r.name==e&&r.version==t))}waitForServices(e,t,i,o=this.logger){if(Array.isArray(e)||(e=[e]),0==(e=s.uniq(s.compact(e.map((e=>l.isPlainObject(e)&&e.name?this.ServiceFactory.getVersionedFullName(e.name,e.version):l.isString(e)?e:void 0))))).length)return this.Promise.resolve();o.info(`Waiting for service(s) '${e.join(", ")}'...`);const n=Date.now();return new this.Promise(((s,c)=>{const l=()=>{const h=e.filter((e=>this.registry.hasService(e)));return h.length==e.length?(o.info(`Service(s) '${e.join(", ")}' are available.`),s()):(o.debug(`${h.length} of ${e.length} services are available. Waiting further...`),t&&Date.now()-n>t?c(new a.MoleculerServerError("Services waiting is timed out.",500,"WAITFOR_SERVICES",{services:e})):void r(l,i||this.options.dependencyInterval||1e3))};l()}))}findNextActionEndpoint(e,t,r){if("string"!=typeof e)return e;if(t&&t.nodeID){const r=t.nodeID,i=this.registry.getActionEndpointByNodeId(e,r);return i||(this.logger.warn(`Service '${e}' is not found on '${r}' node.`),new a.ServiceNotFoundError({action:e,nodeID:r}))}{const t=this.registry.getActionEndpoints(e);if(!t)return this.logger.warn(`Service '${e}' is not registered.`),new a.ServiceNotFoundError({action:e});const i=t.next(r);if(!i){const t=`Service '${e}' is not available.`;return this.logger.warn(t),new a.ServiceNotAvailableError({action:e})}return i}}call(e,t,r={}){let i;if(void 0===t&&(t={}),null!=r.ctx){const s=this.findNextActionEndpoint(e,r,r.ctx);if(s instanceof Error)return this.Promise.reject(s).catch((i=>this.errorHandler(i,{actionName:e,params:t,opts:r})));i=r.ctx,i.endpoint=s,i.nodeID=s.id,i.action=s.action,i.service=s.action.service}else{i=this.ContextFactory.create(this,null,t,r);const s=this.findNextActionEndpoint(e,r,i);if(s instanceof Error)return this.Promise.reject(s).catch((i=>this.errorHandler(i,{actionName:e,params:t,opts:r})));i.setEndpoint(s)}i.endpoint.local?this.logger.debug("Call action locally.",{action:i.action.name,requestID:i.requestID}):this.logger.debug("Call action on remote node.",{action:i.action.name,nodeID:i.nodeID,requestID:i.requestID});let s=i.endpoint.action.handler(i);return s.ctx=i,s}callWithoutBalancer(e,t,r={}){void 0===t&&(t={});let i,s=null,o=null;if("string"!=typeof e)o=e,e=o.action.name,s=o.id;else if(r.nodeID){if(s=r.nodeID,o=this.registry.getActionEndpointByNodeId(e,s),!o)return this.logger.warn(`Service '${e}' is not found on '${s}' node.`),this.Promise.reject(new a.ServiceNotFoundError({action:e,nodeID:s})).catch((i=>this.errorHandler(i,{nodeID:s,actionName:e,params:t,opts:r})))}else{const i=this.registry.getActionEndpoints(e);if(null==i)return this.logger.warn(`Service '${e}' is not registered.`),this.Promise.reject(new a.ServiceNotFoundError({action:e})).catch((i=>this.errorHandler(i,{actionName:e,params:t,opts:r})));if(o=i.getFirst(),null==o){const i=`Service '${e}' is not available.`;return this.logger.warn(i),this.Promise.reject(new a.ServiceNotAvailableError({action:e})).catch((i=>this.errorHandler(i,{actionName:e,params:t,opts:r})))}}null!=r.ctx?(i=r.ctx,o&&(i.endpoint=o,i.action=o.action)):i=this.ContextFactory.create(this,o,t,r),i.nodeID=s,this.logger.debug("Call action on a node.",{action:i.action.name,nodeID:i.nodeID,requestID:i.requestID});let n=o.action.remoteHandler(i);return n.ctx=i,n}_getLocalActionEndpoint(e,t){let r=this.registry.getActionEndpoints(e);if(null==r||!r.hasLocal())throw this.logger.warn(`Service '${e}' is not registered locally.`),new a.ServiceNotFoundError({action:e,nodeID:this.nodeID});let i=r.nextLocal(t);if(!i)throw this.logger.warn(`Service '${e}' is not available locally.`),new a.ServiceNotAvailableError({action:e,nodeID:this.nodeID});return i}mcall(e,t){if(Array.isArray(e))return this.Promise.all(e.map((e=>this.call(e.action,e.params,e.options||t))));if(l.isObject(e)){let r={},i=Object.keys(e).map((i=>{const s=e[i],o=s.options||t;return this.call(s.action,s.params,o).then((e=>r[i]=e))})),s=this.Promise.all(i);return s.ctx=i.map((e=>e.ctx)),s.then((()=>r))}return this.Promise.reject(new a.MoleculerServerError("Invalid calling definition.",500,"INVALID_PARAMETERS"))}emit(e,t,r){Array.isArray(r)||l.isString(r)?r={groups:r}:null==r&&(r={}),r.groups&&!Array.isArray(r.groups)&&(r.groups=[r.groups]);const i=[],o=this.ContextFactory.create(this,null,t,r);if(o.eventName=e,o.eventType="emit",o.eventGroups=r.groups,this.logger.debug(`Emit '${e}' event`+(r.groups?` to '${r.groups.join(", ")}' group(s)`:"")+"."),/^\$/.test(e)&&this.localBus.emit(e,t),!this.options.disableBalancer){const t=this.registry.events.getBalancedEndpoints(e,r.groups),n={};return t.forEach((([e,t])=>{if(e.id==this.nodeID){const t=o.copy(e);i.push(this.registry.events.callEventHandler(t))}else{const r=n[e.id];r?r.groups.push(t):n[e.id]={ep:e,groups:[t]}}})),this.transit&&s.forIn(n,(e=>{const t=o.copy(e.ep);t.eventGroups=e.groups,i.push(this.transit.sendEvent(t))})),this.Promise.all(i)}if(this.transit){let t=r.groups;return t&&0!=t.length||(t=this.getEventGroups(e)),0==t.length?this.Promise.resolve():(o.eventGroups=t,this.transit.sendEvent(o))}}broadcast(e,t,r){Array.isArray(r)||l.isString(r)?r={groups:r}:null==r&&(r={}),r.groups&&!Array.isArray(r.groups)&&(r.groups=[r.groups]);const i=[];if(this.logger.debug(`Broadcast '${e}' event`+(r.groups?` to '${r.groups.join(", ")}' group(s)`:"")+"."),this.transit){const s=this.ContextFactory.create(this,null,t,r);if(s.eventName=e,s.eventType="broadcast",s.eventGroups=r.groups,this.options.disableBalancer){let t=r.groups;if(t&&0!=t.length||(t=this.getEventGroups(e)),0==t.length)return;const i=this.registry.events.getAllEndpoints(e,t);return this.Promise.all(i.map((e=>{const r=s.copy(e);return r.eventGroups=t,this.transit.sendEvent(r)})))}this.registry.events.getAllEndpoints(e,r.groups).forEach((e=>{if(e.id!=this.nodeID){const t=s.copy(e);i.push(this.transit.sendEvent(t))}}))}return i.push(this.broadcastLocal(e,t,r)),this.Promise.all(i)}broadcastLocal(e,t,r){Array.isArray(r)||l.isString(r)?r={groups:r}:null==r&&(r={}),r.groups&&!Array.isArray(r.groups)&&(r.groups=[r.groups]),this.logger.debug(`Broadcast '${e}' local event`+(r.groups?` to '${r.groups.join(", ")}' group(s)`:"")+"."),/^\$/.test(e)&&this.localBus.emit(e,t);const i=this.ContextFactory.create(this,null,t,r);return i.eventName=e,i.eventType="broadcastLocal",i.eventGroups=r.groups,this.emitLocalServices(i)}ping(e,t=2e3){if(this.transit&&this.transit.connected){if(l.isString(e))return new this.Promise((i=>{const s=r((()=>{this.localBus.off("$node.pong",o),i(null)}),t),o=t=>{t.nodeID==e&&(clearTimeout(s),this.localBus.off("$node.pong",o),i(t))};this.localBus.on("$node.pong",o),this.transit.sendPing(e)}));{const i={};let s=e;s||(s=this.registry.getNodeList({onlyAvailable:!0}).filter((e=>e.id!=this.nodeID)).map((e=>e.id))),s.forEach((e=>i[e]=null));const o=new Set(s);return new this.Promise((e=>{const n=r((()=>{this.localBus.off("$node.pong",a),e(i)}),t),a=t=>{i[t.nodeID]=t,o.delete(t.nodeID),0==o.size&&(clearTimeout(n),this.localBus.off("$node.pong",a),e(i))};this.localBus.on("$node.pong",a),s.forEach((e=>this.transit.sendPing(e)))}))}}return this.Promise.resolve(e?null:[])}getHealthStatus(){return S.getHealthStatus(this)}getLocalNodeInfo(){return this.registry.getLocalNodeInfo()}getEventGroups(e){return this.registry.events.getGroups(e)}hasEventListener(e){return this.registry.events.getAllEndpoints(e).length>0}getEventListeners(e){return this.registry.events.getAllEndpoints(e)}emitLocalServices(e){return this.registry.events.emitLocalServices(e)}getCpuUsage(){return c()}generateUid(){return this.options.uidGenerator?this.options.uidGenerator.call(this,this):l.generateToken()}getConstructorName(e){let t=e.prototype;return t&&t.constructor&&t.constructor.name?t.constructor.name:e.constructor&&e.constructor.name?e.constructor.name:void 0}normalizeSchemaConstructor(e){if(Object.prototype.isPrototypeOf.call(this.ServiceFactory,e))return e;let t=this.getConstructorName(this.ServiceFactory),r=this.getConstructorName(e);return t===r?(Object.setPrototypeOf(e,this.ServiceFactory),e):(r=this.getConstructorName(e.__proto__),t===r?(Object.setPrototypeOf(e.__proto__,this.ServiceFactory),e):e._isMockFunction&&(r=this.getConstructorName(e.prototype.__proto__),t===r)?(Object.setPrototypeOf(e,this.ServiceFactory),e):e)}}A.MOLECULER_VERSION=y.version,A.prototype.MOLECULER_VERSION=A.MOLECULER_VERSION,A.PROTOCOL_VERSION="4",A.prototype.PROTOCOL_VERSION=A.PROTOCOL_VERSION,A.defaultOptions=P;var M=A;export default M;
//# sourceMappingURL=service-broker.js.map
