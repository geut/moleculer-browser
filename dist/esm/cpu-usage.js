import{EventEmitter as t}from"./events.js";import i from"cpus";class e extends t{constructor(t){super(),this.options={...e.defaultOptions,...t},this.reset(),this.tick=this.tick.bind(this),this.onVisibilityChange=this.onVisibilityChange.bind(this)}reset(){this.isVisible=!0,this.running=!1,this.prevTime=null,this.startTime=null,this.frameDuration=e.fpsToMs(this.options.fps),this.performance=void 0,this.perfSamples=[],this.requestID&&cancelAnimationFrame(this.requestID)}start(){this.running||(this.running=!0,this.prevTime=e.now(),this.startTime=this.prevTime,this.perfStartTime=this.prevTime,document.addEventListener("visibilitychange",this.onVisibilityChange,!1),this.requestID=requestAnimationFrame(this.tick))}tick(){if(!this.running||!this.isVisible)return;const{performances:t}=this.options,i=e.now(),s=i-this.prevTime,n=i-this.startTime;if(s>this.frameDuration){if(t.enabled){this.perfSamples.push(n);if(t.sampleDuration&&i-this.perfStartTime>t.sampleDuration||this.perfSamples.length>t.samplesCount){const t=this.perfSamples.reduce(((t,i)=>t+i))/this.perfSamples.length;this.performance=this.frameDuration/t,this.emit("perf",this.performance),this.perfSamples=[],this.perfStartTime=i}}this.prevTime=i-s%this.frameDuration,this.startTime=i,this.emit("tick",n)}this.requestID=requestAnimationFrame(this.tick)}stop(){document.removeEventListener("visibilitychange",this.onVisibilityChange,!1),this.reset()}onVisibilityChange(){this.isVisible=!document.hidden,this.isVisible&&(this.reset(),this.start())}}e.defaultOptions={fps:60,performances:{enabled:!0,samplesCount:200,sampleDuration:4e3}},e.now=()=>(performance||Date).now(),e.fpsToMs=t=>1/t*1e3;const s=[{time:Math.floor(Date.now()/1e3),init:!1,avg:0},{time:Math.floor(Date.now()/1e3),avg:0},{time:Math.floor(Date.now()/1e3),avg:0}];function n(t=100){const n=new e({performances:{enabled:!0,samplesCount:3,sampleDuration:t}});return new Promise(((t,e)=>{n.once("perf",(r=>{if(n.stop(),!r)return e(new Error("CpuUsage: ratio perf not found."));const a=100-100*r,o=a/i().length;!function(t){const i=Math.floor(Date.now()/1e3);(!s[0].init||i-s[0].time>60)&&(s[0].init=!0,s[0].time=i,s[0].avg=t),i-s[1].time>300&&(s[1].time=i,s[1].avg=t),i-s[2].time>900&&(s[2].time=i,s[2].avg=t)}(a),t({avg:a,usages:i().map((t=>o))})})),n.start()}))}n.loadavg=function(){return s.map((t=>t.avg))};export default n;
//# sourceMappingURL=cpu-usage.js.map
